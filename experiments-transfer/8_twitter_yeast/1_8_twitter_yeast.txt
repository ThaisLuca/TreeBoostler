Starting experiment #1 for 8_twitter_yeast

Start learning from source dataset

Source train facts examples: 3142
Source train pos examples: 282
Source train neg examples: 40776

WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then return 0.8581489350995098;  // std dev = 9.39e-07, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   | else if ( follows(E, A), follows(E, C) )
%   | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( follows(F, A), follows(A, F) )
%   | then if ( follows(F, G), recursion_accounttype(G, B) )
%   | | then return 0.8581489350995115;  // std dev = 2.38e-07, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.14185106490048768;  // std dev = 1.69e-07, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */
%   | else if ( follows(H, A), recursion_accounttype(H, B) )
%   | | then return 0.8581489350995116;  // std dev = 2.15e-07, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else if ( follows(I, A) )
%   | | | then return -0.11518439823382103;  // std dev = 1.395, 75.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=2 */
%   | | | else return 0.1779163769599785;  // std dev = 6.117, 172.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=55 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(A, D) )
%   | then return 0.7064264092044308;  // std dev = 0.116, 139.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=137 */
%   | else return 0.6588673516048946;  // std dev = 0.239, 33.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   else if ( follows(E, A) )
%   | then if ( follows(F, E), follows(F, A) )
%   | | then return -0.10825364049323244;  // std dev = 0.126, 312.000 (wgt'ed) examples reached here.  /* #neg=305 #pos=7 */
%   | | else if ( follows(E, G), recursion_accounttype(G, B) )
%   | | | then return 0.7299262211704298;  // std dev = 0.223, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return -0.12613276428521253;  // std dev = 0.015, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( recursion_accounttype(I, B) )
%   | | | then return 0.8068850000654144;  // std dev = 0.318, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return -0.15519912973057157;  // std dev = 0.880, 91.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=1 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.24133228647007787;  // std dev = 2.778, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return 0.13237958376737557;  // std dev = 2.780, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(A, D) )
%   | then return 0.5524972810845247;  // std dev = 0.085, 138.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=137 */
%   | else return 0.5096715080978167;  // std dev = 0.239, 33.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   else if ( follows(E, A) )
%   | then if ( follows(F, E), recursion_accounttype(F, B) )
%   | | then if ( follows(E, G), follows(G, A) )
%   | | | then return 0.7407950049847998;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5401291180831063;  // std dev = 1.045, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | | else return -0.11014800747144576;  // std dev = 0.060, 434.000 (wgt'ed) examples reached here.  /* #neg=431 #pos=3 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.6350752945396295;  // std dev = 1.449, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | | | else return -0.15869509145814917;  // std dev = 0.196, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( follows(A, J), recursion_accounttype(J, B) )
%   | | | then return 0.39169869158534487;  // std dev = 0.762, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.13847507149663169;  // std dev = 4.053, 86.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=29 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(A, D), follows(E, C) )
%   | then if ( follows(E, A) )
%   | | then return 0.41291476039958136;  // std dev = 0.092, 118.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=117 */
%   | | else return 0.36583378111521175;  // std dev = 0.229, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0.44647570238298834;  // std dev = 0.087, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), recursion_accounttype(G, B) )
%   | | then if ( follows(G, F), follows(A, G) )
%   | | | then return 0.22696892105127872;  // std dev = 1.380, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.4509197435176307;  // std dev = 1.168, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | else return -0.10325309109012337;  // std dev = 0.022, 405.000 (wgt'ed) examples reached here.  /* #neg=405 */
%   | else if ( follows(A, H), recursion_accounttype(H, B) )
%   | | then return 0.41471157611541737;  // std dev = 0.084, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.04396387064675775;  // std dev = 3.302, 103.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=26 */
%   | | | else return 0.08575213273243609;  // std dev = 4.111, 97.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=29 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(C, D) )
%   | then return 0.3087043489206991;  // std dev = 0.142, 140.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=137 */
%   | else if ( follows(A, E), tweets(A, F) )
%   | | then return 0.07780135459127308;  // std dev = 0.435, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.28915737007278985;  // std dev = 0.193, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then if ( follows(H, A), follows(H, G) )
%   | | then return 0.3970589730406162;  // std dev = 0.056, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.2002860643400141;  // std dev = 0.960, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.416166620191855;  // std dev = 0.191, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( follows(J, A) )
%   | | then return -0.06727496849487477;  // std dev = 0.118, 468.000 (wgt'ed) examples reached here.  /* #neg=438 #pos=30 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.035730457207257406;  // std dev = 3.280, 105.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=26 */
%   | | | else return 0.08952713318435084;  // std dev = 4.046, 90.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=29 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), follows(A, D) )
%   | then if ( follows(D, E), follows(C, E) )
%   | | then return 0.2428699368355163;  // std dev = 0.148, 134.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=131 */
%   | | else return 0.1253860698878643;  // std dev = 0.349, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.27601232755695265;  // std dev = 0.101, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then if ( tweets(F, G), follows(F, H) )
%   | | then if ( follows(H, A), tweets(A, G) )
%   | | | then return 0.13557899365648798;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.2895859380517583;  // std dev = 0.301, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.009877612348664059;  // std dev = 0.845, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( follows(I, A) )
%   | | then return -0.056258955746363304;  // std dev = 0.120, 430.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=30 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.022586057550166714;  // std dev = 3.549, 125.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=31 */
%   | | | else return 0.058380582907387034;  // std dev = 3.854, 83.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=24 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, C), tweets(A, D) )
%   | then if ( follows(A, E), follows(E, C) )
%   | | then return 0.19489060368329666;  // std dev = 0.150, 87.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=85 */
%   | | else return 0.23212326483012927;  // std dev = 0.057, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.2254576446464163;  // std dev = 0.103, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), recursion_accounttype(G, B) )
%   | | then if ( follows(A, H), recursion_accounttype(H, B) )
%   | | | then return 0.12852416102445813;  // std dev = 1.541, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | | | else return 0.3882838452805914;  // std dev = 0.435, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return -0.08413566706937595;  // std dev = 0.021, 449.000 (wgt'ed) examples reached here.  /* #neg=449 */
%   | else if ( follows(A, I), recursion_accounttype(I, B) )
%   | | then return 0.21610781267619694;  // std dev = 0.057, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.06035556978333437;  // std dev = 4.416, 140.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=44 */
%   | | | else return 0.09485226489470246;  // std dev = 2.563, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(C, D) )
%   | then return 0.16055306061421434;  // std dev = 0.161, 141.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=137 */
%   | else if ( tweets(A, E), follows(A, C) )
%   | | then return 0.017527227075439876;  // std dev = 0.892, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( tweets(A, F) )
%   | | | then return 0.1387831805731312;  // std dev = 0.982, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return 0.18788821081311544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( follows(G, A) )
%   | then return -0.04418342298418695;  // std dev = 0.118, 472.000 (wgt'ed) examples reached here.  /* #neg=424 #pos=48 */
%   | else if ( follows(A, H), recursion_accounttype(H, B) )
%   | | then if ( follows(H, I), follows(I, H) )
%   | | | then return 0.04105073188112737;  // std dev = 0.936, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.21062932762589023;  // std dev = 0.158, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.017101494006846147;  // std dev = 4.487, 166.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=44 */
%   | | | else return 0.05274600191815716;  // std dev = 2.604, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(D, C) )
%   | then return 0.14726564947609225;  // std dev = 0.128, 120.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=118 */
%   | else return 0.16914875684116687;  // std dev = 0.112, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   else if ( follows(E, A) )
%   | then if ( follows(F, E), follows(F, A) )
%   | | then return -0.06379837605542307;  // std dev = 0.073, 294.000 (wgt'ed) examples reached here.  /* #neg=287 #pos=7 */
%   | | else if ( follows(E, G), recursion_accounttype(G, B) )
%   | | | then return 0.24394010616578243;  // std dev = 1.087, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | | else return -0.07406724430597957;  // std dev = 0.009, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.48965880382001636;  // std dev = 1.519, 56.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=55 */
%   | | | else return -0.18935718541867783;  // std dev = 0.443, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.0067823202159873214;  // std dev = 1.459, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return -0.03350700169044877;  // std dev = 2.304, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, C), tweets(A, D) )
%   | then if ( follows(A, E), follows(C, E) )
%   | | then if ( recursion_accounttype(E, B), follows(E, C) )
%   | | | then return 0.14377655470298367;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0.0963532392511276;  // std dev = 1.381, 42.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   | | else return 0.18783787939041882;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.14492488831984898;  // std dev = 0.071, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   else if ( follows(F, A) )
%   | then return -0.040018766757065435;  // std dev = 0.106, 487.000 (wgt'ed) examples reached here.  /* #neg=439 #pos=48 */
%   | else if ( follows(A, G), follows(G, H) )
%   | | then if ( recursion_accounttype(H, B) )
%   | | | then return 0.3476336742385548;  // std dev = 0.940, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return -0.14559308090532672;  // std dev = 0.427, 90.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=1 */
%   | | else if ( follows(A, I), tweets(A, J) )
%   | | | then return 0.13827219268281887;  // std dev = 1.241, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.08450830802421816;  // std dev = 3.080, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */


Starting fold 1

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos	 examples: 282
Target test neg examples: 39912

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;false;true
0;true,false;follows(E, A), follows(E, C).;false;false
0;false;follows(F, A), follows(A, F).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(H, A), recursion_accounttype(H, B).;false;true
0;false,false,false;follows(I, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;tweets(A, D).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(F, E), follows(F, A).;false;true
1;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(E, G), follows(G, A).;false;false
2;false,false;tweets(A, H).;true;true
2;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), follows(E, C).;true;false
3;true,true;follows(E, A).;false;false
3;false;follows(F, A).;true;true
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false,true,true;follows(G, F), follows(A, G).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;tweets(A, I).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;true
4;true,false;follows(A, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,true;follows(H, A), follows(H, G).;false;true
4;false,true,false;tweets(A, I).;false;false
4;false,false;follows(J, A).;false;true
4;false,false,false;tweets(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), follows(A, D).;true;false
5;true,true;follows(D, E), follows(C, E).;false;false
5;false;follows(A, F), recursion_accounttype(F, B).;true;true
5;false,true;tweets(F, G), follows(F, H).;true;false
5;false,true,true;follows(H, A), tweets(A, G).;false;false
5;false,false;follows(I, A).;false;true
5;false,false,false;follows(A, J), follows(J, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, C), tweets(A, D).;true;false
6;true,true;follows(A, E), follows(E, C).;false;false
6;false;follows(F, A).;true;true
6;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
6;false,true,true;follows(A, H), recursion_accounttype(H, B).;false;false
6;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(C, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(H, I), follows(I, H).;false;false
7;false,false,false;follows(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(D, C).;false;false
8;false;follows(E, A).;true;true
8;false,true;follows(F, E), follows(F, A).;false;true
8;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(A, C), tweets(A, D).;true;false
9;true,true;follows(A, E), follows(C, E).;true;false
9;true,true,true;recursion_accounttype(E, B), follows(E, C).;false;false
9;false;follows(F, A).;false;true
9;false,false;follows(A, G), follows(G, H).;true;true
9;false,false,true;recursion_accounttype(H, B).;false;false
9;false,false,false;follows(A, I), tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return -0.1418510649004877;  // std dev = 3.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.15392358298683592;  // std dev = 3.846, 71.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
%   | | | else return 0.18335218713203175;  // std dev = 5.195, 123.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=40 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.11029507170790896;  // std dev = 3.167, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.7795365322082685;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.16163993837996693;  // std dev = 2.98e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3151891547365299;  // std dev = 1.182, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.16263839447323977;  // std dev = 4.949, 112.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=37 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.20933230324164498;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.5553664367462843;  // std dev = 2.11e-08, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5553664367462843;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.4533662851387051;  // std dev = 1.668, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return 0.7083570214748937;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.01651738978947537;  // std dev = 3.555, 110.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=20 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8008077701846503;  // std dev = 0.122, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.1945938924508412;  // std dev = 0.123, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.3296582509849375;  // std dev = 0.831, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11091059877055835;  // std dev = 4.176, 83.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=25 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(C, E) )
%   | then if ( interaction(A, E) )
%   | | then return 0.16751358415830997;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2661775868774453;  // std dev = 0.957, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6212250756367605;  // std dev = 1.474, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | else return -0.14562456556589648;  // std dev = 0.126, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5596148654465417;  // std dev = 0.084, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.1353301913271115;  // std dev = 2.526, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | | else return 0.08984421220346117;  // std dev = 4.185, 84.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=25 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.36216383130029745;  // std dev = 0.032, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(E, A), enzyme(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3545344381166141;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.3586542282348669;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.45361727717123196;  // std dev = 0.027, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, J) )
%   | | then return 0.04043949181376104;  // std dev = 3.358, 128.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=33 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.11350293493058942;  // std dev = 2.481, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | | else return 0.10083092588035517;  // std dev = 4.109, 77.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=25 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, C) )
%   | | then return 0.28333549729989843;  // std dev = 0.029, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2781411687656414;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( enzyme(F, G), interaction(H, F) )
%   | | then if ( interaction(A, H), enzyme(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.6717759633853365;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.32394958187646034;  // std dev = 0.058, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, I) )
%   | | then return 0.02976859966715346;  // std dev = 3.408, 129.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=33 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.07901900420440763;  // std dev = 4.616, 113.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=37 */
%   | | | else return -0.036736053608759534;  // std dev = 1.441, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then if ( interaction(E, A), interaction(C, E) )
%   | | then return 0.24122014703708794;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2241834728974499;  // std dev = 0.003, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5204671980234862;  // std dev = 0.521, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.14077797028476977;  // std dev = 0.171, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.11181221660982486;  // std dev = 0.508, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.060265238027055065;  // std dev = 4.816, 124.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.11071491800287894;  // std dev = 0.765, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( enzyme(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.18907597499377027;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.18907597499377016;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G) )
%   | then return 0.0027137482301359934;  // std dev = 2.653, 136.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=33 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, H), interaction(H, I) )
%   | | | then return -0.6805392461367852;  // std dev = 0.071, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.23696325782719133;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04725565540822472;  // std dev = 4.810, 125.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.17594703650750004;  // std dev = 0.016, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.10277925520893466;  // std dev = 0.932, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return -0.00924840014539898;  // std dev = 1.965, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.400357490626427;  // std dev = 0.147, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.12372996538124359;  // std dev = 0.213, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5895209068075326;  // std dev = 1.510, 45.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=43 */
%   | | | else return -0.26153626336073377;  // std dev = 0.178, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( recursion_proteinclass(E, B), interaction(C, E) )
%   | | | then return 0.1579070543793476;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16420458945198596;  // std dev = 0.049, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F) )
%   | then return 0.007627741743781685;  // std dev = 2.553, 114.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return -0.08707247920942106;  // std dev = 1.146, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.008286660652747186;  // std dev = 3.819, 124.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=37 */
%   | | else if ( interaction(I, A), enzyme(A, J) )
%   | | | then return 0.4249144070764532;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.008680689624757806;  // std dev = 1.010, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */


Results
   AUC ROC   = 0.989875
   AUC PR    = 0.32498
   CLL	      = -0.20215
   Precision = 0.284375 at threshold = 0.5
   Recall    = 0.64539
   F1        = 0.394794


Total learning time: 3.477 seconds
Total inference time: 13.976 seconds
AUC ROC: 0.989875


Results scoring model
   AUC ROC   = 0.989946
   AUC PR    = 0.349693
   CLL	      = -0.20338
   Precision = 0.333333 at threshold = 0.5
   Recall    = 0.655172
   F1        = 0.44186


Total scoring time: 6.95 seconds
Parameter learned model CLL: -0.20338


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F), interaction(F, A)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 2], 'false,true,true': [0.961, 1, 12], 'false,true,false': [3.49e-08, 35, 0], 'false,false,true': [2.11e-08, 0, 3], 'false,false,false,true': [3.846, 50, 21], 'false,false,false,false': [5.195, 83, 40]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 7], 'false,true,true': [3.167, 46, 17], 'false,true,false,true': [0.97, 1, 16], 'false,true,false,false': [2.98e-08, 34, 0], 'false,false,true,true': [1.182, 3, 3], 'false,false,true,false': [4.949, 75, 37], 'false,false,false,true': [1.369, 5, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, E), interaction(A, G)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [2.11e-08, 0, 4], 'true,false': [2.98e-08, 0, 7], 'false,true,true,true': [1.668, 4, 11], 'false,true,true,false': [0.006, 0, 2], 'false,true,false': [3.555, 90, 20], 'false,false,true,true': [0.122, 0, 16], 'false,false,true,false': [0.123, 31, 0], 'false,false,false,true': [0.831, 1, 2], 'false,false,false,false': [4.176, 58, 25]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D), interaction(C, E)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'enzyme(A, I)'}, {'true,true,true': [0.866, 1, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.957, 2, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.474, 2, 33], 'false,true,false': [0.126, 105, 0], 'false,false,true': [0.084, 0, 3], 'false,false,false,true': [2.526, 26, 15], 'false,false,false,false': [4.185, 59, 25]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'interaction(E, A), enzyme(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H), interaction(G, H)', 'false,true,false': 'enzyme(A, I)', 'false,false': 'interaction(A, J)', 'false,false,false': 'enzyme(A, K)'}, {'true,true': [0.032, 0, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.027, 0, 2], 'false,false,true': [3.358, 95, 33], 'false,false,false,true': [2.481, 26, 15], 'false,false,false,false': [4.109, 52, 25]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'interaction(E, D), interaction(E, C)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'enzyme(F, G), interaction(H, F)', 'false,true,true': 'interaction(A, H), enzyme(A, G)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.029, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false': [0.058, 0, 3], 'false,false,true': [3.408, 96, 33], 'false,false,false,true': [4.616, 76, 37], 'false,false,false,false': [1.441, 11, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), enzyme(A, D)', 'true,true': 'interaction(E, A), interaction(C, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.003, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.521, 0, 33], 'false,true,false': [0.171, 94, 0], 'false,false,true': [0.508, 1, 3], 'false,false,false,true': [4.816, 84, 40], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'enzyme(A, E), interaction(C, A)', 'true,false,false': 'enzyme(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, H), interaction(H, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.765, 1, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 1], 'true,false,false,false': [0.0, 0, 1], 'false,true': [2.653, 103, 33], 'false,false,true,true': [0.071, 2, 0], 'false,false,true,false': [0.048, 0, 3], 'false,false,false,true': [4.81, 85, 40], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true,true': [0.016, 0, 7], 'true,false': [0.932, 2, 4], 'false,true,true': [1.965, 56, 17], 'false,true,false,true': [0.147, 0, 16], 'false,true,false,false': [0.213, 43, 0], 'false,false,true,true': [1.51, 2, 43], 'false,false,true,false': [0.178, 70, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), enzyme(A, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'recursion_proteinclass(E, B), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), enzyme(A, J)'}, {'true,true,true,true': [0.0, 0, 3], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.049, 0, 8], 'false,true': [2.553, 81, 33], 'false,false,true,true': [1.146, 3, 3], 'false,false,true,false': [3.819, 87, 37], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [1.01, 6, 2]}]]
[{'': [-1.6148698540002277e-16, 0.21397750937109553], 'false': [0.18749999999999947, 0.21933056765183453], 'false,false': [1.4802973661668753e-16, 0.21556488468487708], 'false,false,false': [0.20829200555445368, 0.21944609689999467], 'false,true': [0.07100591715976314, 3.489272363107635e-17], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16], 'true,false': [0.0, 0.0]}, {'': [-8.074349270001139e-17, 0.20453228863153008], 'false': [0.1847584438816194, 0.22150846111715355], 'false,false': [0.22053989326849172, 0.23437500000000003], 'false,false,false': [0.23437500000000003, nan], 'false,false,true': [0.23268915216832933, 0.21870573158143608], 'false,true': [0.15925156021994488, 0.21530180699730897], 'false,true,false': [0.05536332179930808, 2.6122894697062506e-17], 'true': [-1.1102230246251565e-16, -1.9032394707859825e-16]}, {'': [0.0, 0.18335015906172694], 'false': [0.14759506687059332, 0.21633740821743136], 'false,false': [0.22311068040022614, 0.21240187715684553], 'false,false,true': [0.0009229433963506839, 0.00048627485326191433], 'false,false,false': [0.22998204321088744, 0.21009724474665792], 'false,true': [0.17046285189210444, 0.11488696369822526], 'false,true,true': [0.185539286009036, 1.876458811411741e-05], 'true': [1.1102230246251565e-16, 1.2688263138573217e-16]}, {'': [0.12099403315397465, 0.15863550142154756], 'false': [0.12588829208071703, 0.1919413660401362], 'false,false': [0.002339367053441103, 0.19164283757374695], 'false,false,false': [0.1556730236832639, 0.20852090887950098], 'false,true': [0.06205791773204733, 0.0001504904771121582], 'true': [0.1875, 0.09161033629197547], 'true,true': [0.1875, nan], 'false,true,true': [nan, 0.06205791773204753]}, {'': [0.00010390785385014115, 0.14034193222680405], 'false': [0.0022420186035878586, 0.14054643382630203], 'false,false': [0.08809016517837259, 0.19526365887702424], 'false,false,false': [0.15008620863708416, 0.2192633896485429], 'false,true': [nan, 0.0022420186035878586], 'false,true,false': [0.0, 0.0003570343509516072], 'true': [0.00011641528070244828, 0.0], 'true,false': [nan, 0.0]}, {'': [7.798741245991125e-05, 0.13849439057399818], 'false': [0.18674313128247466, 0.13772916604941074], 'false,true': [0.0, 0.0011235013382405734], 'false,false': [0.09005977370941613, 0.18547829601684326], 'false,false,false': [0.18859475944659895, 0.14840183148704414], 'true': [9.041230330364414e-05, 0.0], 'true,true': [9.041230330364414e-05, nan], 'false,true,true': [nan, 0.0]}, {'': [5.825064539137377e-05, 0.13529086377410854], 'false': [0.08645616505249079, 0.18327052428506213], 'false,false': [0.06446987689776597, 0.18701976913925777], 'false,false,false': [0.18701976913925777, nan], 'false,true': [0.00821320002167934, 0.0003095526387503495], 'false,true,true': [nan, 0.008213200021679178], 'true': [0.0, 9.360194839838631e-07], 'true,true': [0.0, nan]}, {'': [0.04965984378182641, 0.11818541557125017], 'false': [0.05175852880503026, 0.18695059982327514], 'false,false': [0.20350749211874772, 0.18507936453960788], 'false,false,true': [0.0025410795297756694, 0.0007607625993290475], 'false,false,false': [0.18507936453960788, nan], 'true': [0.0585684033294034, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [0.0, 0.0]}, {'': [0.08617353135156598, 0.1198194021938136], 'false': [0.054214002754917084, 0.19262427624460055], 'false,false': [0.19262427624460055, nan], 'false,false,true': [0.05068068624011575, 0.000452650350754537], 'true': [3.4541557180903636e-05, 0.14483683330209482], 'false,true': [0.052894849222690915, 0.05542355982653521], 'false,true,false': [0.0013511948084167225, 0.0010573640971007381]}, {'': [0.00022296486711471058, 0.09357925396346388], 'false': [0.05717705593302037, 0.12331572854170858], 'false,false': [0.1225560708885248, 0.1318157909475788], 'false,false,false': [0.0, 0.1274033528289892], 'false,false,true': [0.21889031267794576, 0.11760825021428485], 'true': [-4.625929269271485e-18, 0.00029576061555786765], 'true,true': [-4.625929269271485e-18, nan], 'true,true,true': [-4.625929269271485e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;true,false;interaction(A, E), interaction(C, E).;true;true
0;false;interaction(A, F), interaction(F, A).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;enzyme(A, D).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(E, F), interaction(A, F).;true;true
1;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;enzyme(A, D).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,true,true;interaction(G, E), interaction(A, G).;true;true
2;false,false;enzyme(A, H).;true;true
2;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false;interaction(A, F).;true;true
3;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;false,true;enzyme(A, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), interaction(D, A).;true;true
5;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
5;false,true;enzyme(F, G), interaction(H, F).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(C, A), enzyme(A, D).;true;true
6;false;interaction(A, F).;true;true
6;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, A), interaction(D, C).;true;true
7;true,false;enzyme(A, F).;true;true
7;false;interaction(A, G).;true;true
7;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;false,false,true;interaction(I, H), interaction(H, I).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), interaction(C, D).;true;true
8;false;interaction(A, E).;true;true
8;false,true;interaction(E, F), interaction(A, F).;true;true
8;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
8;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, A), enzyme(A, D).;true;true
9;false;interaction(A, F).;true;true
9;false,false;interaction(G, A), interaction(H, G).;true;true
9;false,false,false;interaction(I, A), enzyme(A, J).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.14185106490048768;  // std dev = 4.08e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, I), interaction(J, A) )
%   | | | then return 0.1352573688344515;  // std dev = 4.078, 83.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=23 */
%   | | | else return 0.2499015124190987;  // std dev = 4.808, 97.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=38 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6056318776577895;  // std dev = 0.336, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1254446385283914;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.19805853894413486;  // std dev = 2.907, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8319041831622471;  // std dev = 0.032, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.16899750605671027;  // std dev = 0.050, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( phenotype(A, J), location(H, K) )
%   | | | then return 0.10222717842735159;  // std dev = 3.239, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | | else return 0.18229860836111955;  // std dev = 4.012, 70.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=25 */
%   | | else return 0.43130622083809644;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5159372288706995;  // std dev = 0.227, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, D), interaction(A, F) )
%   | | | then return 0.5506467009184832;  // std dev = 1.075, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.269278920650572;  // std dev = 0.836, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.13864148842113752;  // std dev = 0.107, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0.1529997423736031;  // std dev = 3.131, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6895760445519824;  // std dev = 1.323, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.18557132298904067;  // std dev = 0.079, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.05440246550999956;  // std dev = 2.687, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | | else return 0.12696486365321946;  // std dev = 3.372, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4562790672340957;  // std dev = 0.136, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, F) )
%   | | | then return 0.5538297862125846;  // std dev = 0.065, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.6780806879131681;  // std dev = 0.257, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.15644563759988853;  // std dev = 0.332, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.3910316031020715;  // std dev = 0.861, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.0700690878054793;  // std dev = 2.767, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | | else return 0.18332212911049078;  // std dev = 3.877, 63.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=25 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.10010814919169964;  // std dev = 0.765, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.36613546972960725;  // std dev = 0.109, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.33350420935048947;  // std dev = 0.018, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( enzyme(A, G) )
%   | | then return 0.4400439325145652;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.5972909044578805;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( enzyme(A, I), complex(A, J) )
%   | | | then return 0.14164911413792855;  // std dev = 1.353, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.03926011283283301;  // std dev = 2.659, 94.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=27 */
%   | | else if ( phenotype(A, K), enzyme(A, L) )
%   | | | then return 0.06384523757911521;  // std dev = 1.786, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.11763733233010089;  // std dev = 4.450, 93.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=34 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( complex(A, E) )
%   | | then return 0.11192925695941491;  // std dev = 0.827, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.2870753465192045;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2639269227286168;  // std dev = 0.016, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( enzyme(F, G), interaction(H, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.4116096912591108;  // std dev = 0.093, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, A), complex(J, K) )
%   | | | then return -0.0025656258675277694;  // std dev = 2.242, 80.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=18 */
%   | | | else return 0.06401358463279938;  // std dev = 2.098, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.1665032878107459;  // std dev = 1.979, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.039110771597776026;  // std dev = 4.464, 107.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=32 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.24408653297668634;  // std dev = 0.037, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.4876218237912356;  // std dev = 0.344, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.350004310573688;  // std dev = 1.227, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.08994251332403498;  // std dev = 0.007, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.15686075327089227;  // std dev = 0.267, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else if ( interaction(G, A), location(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5727940575122127;  // std dev = 1.864, 45.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=41 */
%   | | | else return -0.24641115095312663;  // std dev = 0.399, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.08533381705339442;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.03889335968916152;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2021694707478676;  // std dev = 0.033, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then if ( phenotype(A, F), phenotype(E, G) )
%   | | | then return -0.06683609118831359;  // std dev = 1.320, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | | | else return -3.4373366847801815E-4;  // std dev = 0.788, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.210082105838068;  // std dev = 0.920, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.012044241623920945;  // std dev = 1.748, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, I), interaction(I, J) )
%   | | | then return -0.6003385552418838;  // std dev = 0.124, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.20881507300573499;  // std dev = 0.061, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.06114268483238257;  // std dev = 2.748, 60.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=21 */
%   | | | else return 0.01747109129638171;  // std dev = 2.965, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.16542532504998983;  // std dev = 0.026, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.1280920527372579;  // std dev = 1.091, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return -0.019560749215339367;  // std dev = 0.927, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | | | else return 0.04740152319532359;  // std dev = 1.404, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.3656489016085537;  // std dev = 0.108, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.14778169308951966;  // std dev = 0.247, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | then if ( enzyme(A, K) )
%   | | | then return 0.1475807468790739;  // std dev = 1.819, 30.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   | | | else return 0.3190308045173185;  // std dev = 2.473, 38.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=27 */
%   | | else return -0.2218312832781543;  // std dev = 0.047, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then return 0.14821080325390934;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then return -0.2482191813022543;  // std dev = 0.968, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.18624453185732975;  // std dev = 0.118, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, A), interaction(A, H) )
%   | | then return -0.03510390231370823;  // std dev = 0.221, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | else return 1.3124509796134078E-5;  // std dev = 0.218, 69.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.019891737562326095;  // std dev = 2.276, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | | | else return -0.03171733213230766;  // std dev = 2.947, 87.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=24 */
%   | | else if ( interaction(L, A), enzyme(A, M) )
%   | | | then return -0.1367485585078368;  // std dev = 0.589, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.11576648287958025;  // std dev = 0.920, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */


Results
   AUC ROC   = 0.990714
   AUC PR    = 0.33385
   CLL	      = -0.209913
   Precision = 0.25296 at threshold = 0.5
   Recall    = 0.833333
   F1        = 0.388109


Total learning time: 11.452 seconds
Total inference time: 78.598 seconds
AUC ROC: 0.990714


Results scoring model
   AUC ROC   = 0.989777
   AUC PR    = 0.402047
   CLL	      = -0.205727
   Precision = 0.239726 at threshold = 0.5
   Recall    = 0.804598
   F1        = 0.369393


Total scoring time: 20.353 seconds
Refined model CLL: -0.205727


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.989875
   AUC PR    = 0.32498
   CLL	      = -0.20215
   Precision = 0.284375 at threshold = 0.5
   Recall    = 0.64539
   F1        = 0.394794


Total learning time: 42.232 seconds
Total inference time: 13.976 seconds
AUC ROC: 0.989875
Total revision time: 42.232
Best scored revision CLL: -0.20338


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:03:24
{'AUC ROC': 0.989875, 'AUC PR': 0.32498, 'CLL': -0.20215, 'Precision': [0.284375, 0.5], 'Recall': 0.64539, 'F1': 0.394794, 'Learning time': 42.232, 'Inference time': 13.976, 'parameter': {'AUC ROC': 0.989875, 'AUC PR': 0.32498, 'CLL': -0.20215, 'Precision': [0.284375, 0.5], 'Recall': 0.64539, 'F1': 0.394794, 'Learning time': 3.477, 'Inference time': 13.976}}


Starting fold 2

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos	 examples: 265
Target test neg examples: 35157

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;false;true
0;true,false;follows(E, A), follows(E, C).;false;false
0;false;follows(F, A), follows(A, F).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(H, A), recursion_accounttype(H, B).;false;true
0;false,false,false;follows(I, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;tweets(A, D).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(F, E), follows(F, A).;false;true
1;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(E, G), follows(G, A).;false;false
2;false,false;tweets(A, H).;true;true
2;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), follows(E, C).;true;false
3;true,true;follows(E, A).;false;false
3;false;follows(F, A).;true;true
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false,true,true;follows(G, F), follows(A, G).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;tweets(A, I).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;true
4;true,false;follows(A, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,true;follows(H, A), follows(H, G).;false;true
4;false,true,false;tweets(A, I).;false;false
4;false,false;follows(J, A).;false;true
4;false,false,false;tweets(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), follows(A, D).;true;false
5;true,true;follows(D, E), follows(C, E).;false;false
5;false;follows(A, F), recursion_accounttype(F, B).;true;true
5;false,true;tweets(F, G), follows(F, H).;true;false
5;false,true,true;follows(H, A), tweets(A, G).;false;false
5;false,false;follows(I, A).;false;true
5;false,false,false;follows(A, J), follows(J, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, C), tweets(A, D).;true;false
6;true,true;follows(A, E), follows(E, C).;false;false
6;false;follows(F, A).;true;true
6;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
6;false,true,true;follows(A, H), recursion_accounttype(H, B).;false;false
6;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(C, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(H, I), follows(I, H).;false;false
7;false,false,false;follows(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(D, C).;false;false
8;false;follows(E, A).;true;true
8;false,true;follows(F, E), follows(F, A).;false;true
8;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(A, C), tweets(A, D).;true;false
9;true,true;follows(A, E), follows(C, E).;true;false
9;true,true,true;recursion_accounttype(E, B), follows(E, C).;false;false
9;false;follows(F, A).;false;true
9;false,false;follows(A, G), follows(G, H).;true;true
9;false,false,true;recursion_accounttype(H, B).;false;false
9;false,false,false;follows(A, I), tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.8081489350995122;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else return -0.14185106490048766;  // std dev = 6.32e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.14458109590353338;  // std dev = 6.378, 199.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=57 */
%   | | | else return 0.06867525088898598;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.7314024487125942;  // std dev = 0.036, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4761883841533398;  // std dev = 1.228, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.10259393323667537;  // std dev = 4.641, 126.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6676725984416948;  // std dev = 2.721, 57.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=48 */
%   | | | else return -0.15753450738723196;  // std dev = 0.089, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.18291512509470062;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.10757456645800642;  // std dev = 1.661, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.4827282447130166;  // std dev = 0.973, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.5072104730469308;  // std dev = 0.751, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.6146480482624537;  // std dev = 1.283, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.35171524676898325;  // std dev = 1.222, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else return 0.050255613586522904;  // std dev = 6.070, 259.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=58 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7892939220807188;  // std dev = 0.113, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.16468832332370528;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.23318612402686517;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, C) )
%   | then if ( interaction(E, A) )
%   | | then return 0.4475960498031381;  // std dev = 0.041, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.446071198360857;  // std dev = 0.019, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.4988709706182621;  // std dev = 0.032, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return -0.4440826141942587;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.4816616232983547;  // std dev = 4.155, 104.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=82 */
%   | | else return -0.1562766883665799;  // std dev = 0.283, 195.000 (wgt'ed) examples reached here.  /* #neg=195 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5112437482408775;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.00956493176519756;  // std dev = 1.075, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.46325015899006233;  // std dev = 0.812, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.34723513176979964;  // std dev = 0.061, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, E), complex(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.369190917922845;  // std dev = 0.046, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A), interaction(H, G) )
%   | | then return 0.4632051917893226;  // std dev = 0.215, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.13850264234748466;  // std dev = 0.668, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(J, A) )
%   | | then return 0.06739520551205158;  // std dev = 5.535, 264.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=76 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.0654867010238577;  // std dev = 1.028, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.2126427452327691;  // std dev = 0.992, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( interaction(D, E), interaction(C, E) )
%   | | then return 0.2710197411795311;  // std dev = 0.050, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.28463702730136686;  // std dev = 0.010, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.28817789129703014;  // std dev = 0.040, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(F, G), interaction(F, H) )
%   | | then if ( interaction(H, A), complex(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3223850919152661;  // std dev = 0.118, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.12777903852894304;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then return 0.04902372756936142;  // std dev = 5.530, 274.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=76 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.0031030807954345744;  // std dev = 1.604, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then if ( interaction(A, E), interaction(E, C) )
%   | | then return 0.007817656821701168;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10188144522169414;  // std dev = 1.276, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.31015071804746547;  // std dev = 0.230, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4565456310329832;  // std dev = 3.020, 85.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=76 */
%   | | else return -0.14918567257885879;  // std dev = 0.282, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.2835034974582179;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.033267126398384236;  // std dev = 1.538, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.21040597237860345;  // std dev = 0.029, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( complex(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.20302302631675348;  // std dev = 0.000201, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.0998163810360116;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(G, A) )
%   | then return 0.02727377016482185;  // std dev = 4.798, 267.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=82 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22958563601009074;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.13645828025402706;  // std dev = 1.381, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.053905231572325935;  // std dev = 0.941, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.04392436181781496;  // std dev = 1.135, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return -0.026826250519035033;  // std dev = 3.502, 132.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.32029797495467854;  // std dev = 2.304, 54.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   | | | else return -0.12422264835395734;  // std dev = 0.085, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3908744948767615;  // std dev = 0.937, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.24929751977077694;  // std dev = 0.270, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( recursion_proteinclass(E, B), interaction(E, C) )
%   | | | then return 0.16655260073921418;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1818621848866444;  // std dev = 0.098, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(F, A) )
%   | then return 0.017604630504939604;  // std dev = 4.429, 266.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=82 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.5204470342800176;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.016490020689625205;  // std dev = 1.222, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.987953
   AUC PR    = 0.282537
   CLL	      = -0.181962
   Precision = 0.213333 at threshold = 0.5
   Recall    = 0.724528
   F1        = 0.329614


Total learning time: 3.993 seconds
Total inference time: 14.756 seconds
AUC ROC: 0.987953


Results scoring model
   AUC ROC   = 0.974685
   AUC PR    = 0.171411
   CLL	      = -0.201103
   Precision = 0.088568 at threshold = 0.5
   Recall    = 0.826923
   F1        = 0.16


Total scoring time: 9.838 seconds
Parameter learned model CLL: -0.201103


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A), interaction(A, F)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.0, 0, 9], 'true,false,true': [0.0, 0, 6], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.975, 1, 19], 'false,true,false': [6.32e-08, 62, 0], 'false,false,true': [0.943, 1, 8], 'false,false,false,true': [6.378, 142, 57], 'false,false,false,false': [1.777, 15, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.036, 0, 11], 'true,false': [1.228, 2, 6], 'false,true,true': [4.641, 92, 34], 'false,true,false,true': [2.721, 9, 48], 'false,true,false,false': [0.089, 86, 0], 'false,false,true,true': [0.816, 2, 1], 'false,false,true,false': [1.661, 11, 4], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [0.973, 1, 11], 'true,false': [0.751, 1, 6], 'false,true,true,true': [1.283, 2, 17], 'false,true,true,false': [1.222, 3, 7], 'false,true,false': [6.07, 201, 58], 'false,false,true,true': [0.113, 0, 3], 'false,false,true,false': [0.0, 4, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.09, 3, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), interaction(E, C)', 'true,true': 'interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(G, F), interaction(A, G)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I)'}, {'true,true,true': [0.041, 0, 9], 'true,true,false': [0.019, 0, 2], 'true,false': [0.032, 0, 6], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [4.155, 22, 82], 'false,true,false': [0.283, 195, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [1.075, 9, 2], 'false,false,false,false': [0.812, 1, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'interaction(A, E), complex(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A), interaction(H, G)', 'false,true,false': 'complex(A, I)', 'false,false': 'interaction(J, A)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.061, 0, 12], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.046, 0, 5], 'false,true,true': [0.215, 0, 5], 'false,true,false,true': [0.668, 1, 2], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [5.535, 188, 76], 'false,false,false,true': [1.028, 6, 2], 'false,false,false,false': [0.992, 2, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,true': 'interaction(D, E), interaction(C, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'complex(F, G), interaction(F, H)', 'false,true,true': 'interaction(H, A), complex(A, G)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.05, 0, 10], 'true,true,false': [0.01, 0, 2], 'true,false': [0.04, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.118, 0, 5], 'false,true,false': [0.816, 1, 2], 'false,false,true': [5.53, 198, 76], 'false,false,false,true': [1.604, 11, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'true,true': 'interaction(A, E), interaction(E, C)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true': [0.894, 1, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [1.276, 2, 13], 'false,true,true,true': [0.23, 0, 6], 'false,true,true,false': [3.02, 9, 76], 'false,true,false': [0.282, 213, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [1.538, 10, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'complex(A, E), interaction(A, C)', 'true,false,false': 'complex(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(H, I), interaction(I, H)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.029, 0, 12], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.000201, 0, 3], 'true,false,false,false': [0.816, 1, 2], 'false,true': [4.798, 185, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.381, 6, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true,true': [0.941, 1, 7], 'true,false': [1.135, 2, 10], 'false,true,true': [3.502, 98, 34], 'false,true,false,true': [2.304, 6, 48], 'false,true,false,false': [0.085, 91, 0], 'false,false,true,true': [0.937, 1, 5], 'false,false,true,false': [0.27, 8, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'recursion_proteinclass(E, B), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)'}, {'true,true,true,true': [0.0, 0, 4], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.098, 0, 13], 'false,true': [4.429, 184, 82], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.222, 9, 4], 'false,false,false': [0.0, 0, 0]}]]
[{'': [-2.220446049250313e-16, 0.20368450267592603], 'false': [0.17801903628792332, 0.21157018378000758], 'false,false': [0.09876543209876527, 0.20151923238784664], 'false,false,false': [0.20438877806116063, 0.16620498614958432], 'false,true': [0.047499999999999785, 6.446456272017038e-17], 'true': [-2.9605947323337506e-16, 1.2688263138573217e-16], 'true,false': [-1.4802973661668753e-16, 0.0]}, {'': [0.09529337402085432, 0.19533847029386694], 'false': [0.19560171905592963, 0.19106469558329092], 'false,true': [0.17096866797224147, 0.21508919799322815], 'false,true,false': [0.12993961357015174, 9.124452890674206e-05], 'false,false': [0.19106469558329092, nan], 'false,false,true': [0.2222222222222222, 0.18388715695955643], 'true': [0.00011858492654770458, 0.18844942448671465]}, {'': [0.07962952590831761, 0.16428814084767848], 'false': [0.16074591481837947, 0.23004457923369126], 'false,false': [0.22469236962365682, 0.23746740871694666], 'false,false,false': [nan, 0.23746740871694666], 'false,false,true': [0.004235267476037086, 0.0], 'false,true': [0.12393544617996388, 0.14227007796295865], 'false,true,true': [0.08667827516042098, 0.14942960546458145], 'true': [0.07884880411568936, 0.08058935064791901]}, {'': [0.0007882720520504147, 0.15152819023360684], 'false': [0.15069711069724875, 0.163505577190923], 'false,false': [0.0, 0.16427865770116432], 'false,false,false': [0.10510544750427218, 0.21952329941670887], 'false,true': [0.1725323809116183, 0.0004117178642420919], 'false,true,true': [0.0, 0.1660294185579221], 'true': [0.00018678240555686736, 0.00017136279912403443], 'true,true': [0.00018601375368208927, 0.00018833892560313203]}, {'': [0.00044526390700430467, 0.1198061276644436], 'false': [0.08620189720323315, 0.11869615583827893], 'false,false': [0.11604002102286215, 0.17500524211278767], 'false,false,false': [0.13221053196443924, 0.246158061511341], 'false,true': [0.009215324371320398, 0.1486180109143196], 'false,true,false': [0.1486180109143196, nan], 'true': [0.0003139892025125583, 0.0004200479891270481], 'true,false': [nan, 0.0004200479891270481]}, {'': [0.0003124411716095043, 0.11535650048098764], 'false': [0.09396421624837019, 0.11483768720482508], 'false,false': [0.11159770149245475, 0.17144525342442915], 'false,false,false': [0.17144525342442915, nan], 'false,true': [0.002807594158583826, 0.2222222222222222], 'false,true,true': [nan, 0.002807594158583826], 'true': [0.00024090611918388868, 0.00032765201578330847], 'true,true': [0.00024850176126046676, 4.840250769766463e-05]}, {'': [0.12308662457721153, 0.10801832349254205], 'true': [0.16, 0.10857016703090906], 'true,true': [0.16, nan], 'false': [0.1053565456892183, 0.16155519888880931], 'false,false': [0.0, 0.16892030652554937], 'false,false,false': [0.16892030652554937, nan], 'false,true': [0.10213422864380581, 0.00037395939757808454], 'false,true,true': [0.00877846971471393, 0.1073109829289756]}, {'': [0.0503290428281762, 0.09023239752427098], 'false': [0.08622465540081196, 0.17421724957993517], 'false,false': [0.0, 0.19085054686609992], 'false,false,false': [0.19085054686609992, nan], 'true': [6.79481184078697e-05, 0.134039044538457], 'true,false': [nan, 0.134039044538457], 'true,false,false': [1.3531804810932671e-08, 0.2222222222222222], 'false,false,true': [nan, 0.0]}, {'': [0.10867817831514655, 0.09263111800788178], 'true': [0.11059606669449643, 0.10735973895782404], 'false': [0.088795675174767, 0.16826783605468051], 'false,false': [0.16826783605468051, nan], 'false,false,true': [0.14632266663989993, 0.009089480970956798], 'false,true': [0.09290201811629348, 0.08284431158854744], 'false,true,false': [0.09830745414811305, 7.994245600620728e-05]}, {'': [0.0006060843081047674, 0.07635462874183693], 'false': [0.07374991490802452, 0.12582696758415893], 'false,false': [0.12582696758415893, nan], 'false,false,true': [0.0, 0.1149130078763846], 'true': [0.0, 0.0007374227600469574], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
0;true,false;interaction(E, A), interaction(E, C).;true;true
0;false;interaction(F, A), interaction(A, F).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;complex(A, D).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(F, E), interaction(F, A).;true;true
1;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,false;complex(A, H).;true;true
2;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), interaction(E, C).;true;true
3;true,true;interaction(E, A).;true;true
3;false;interaction(F, A).;true;true
3;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
3;false,true,true;interaction(G, F), interaction(A, G).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(C, D).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, D), interaction(A, D).;true;true
5;true,true;interaction(D, E), interaction(C, E).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
6;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
6;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, D), interaction(C, D).;true;true
7;true,false;complex(A, F).;true;true
7;false;interaction(G, A).;true;true
7;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false;interaction(E, A).;true;true
8;false,true;interaction(F, E), interaction(F, A).;true;true
8;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(A, C), complex(A, D).;true;true
9;false;interaction(F, A).;true;true
9;false,false;recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return -0.14185106490048768;  // std dev = 4.94e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.13328121023178785;  // std dev = 6.139, 189.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=52 */
%   | | | else return 0.2867203636709409;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.7194734122109542;  // std dev = 1.49e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1254446385283914;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.15412813518612725;  // std dev = 4.488, 104.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.746797706767106;  // std dev = 1.906, 52.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=48 */
%   | | | else return -0.1569289813170132;  // std dev = 0.163, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, J) )
%   | | | then return 0.15288007360931774;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.01954674027598443;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.3995320746629784;  // std dev = 1.062, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.3053664367462845;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.11896368768438921;  // std dev = 0.024, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( location(A, F), complex(A, G) )
%   | | | then return 0.08070268146551456;  // std dev = 3.645, 92.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=26 */
%   | | | else return 0.13510911714868312;  // std dev = 5.511, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7339389067388105;  // std dev = 0.132, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2365377564847431;  // std dev = 0.058, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.0028271124389365465;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.12915796278608246;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, C) )
%   | then if ( interaction(E, A) )
%   | | then return 0.3418455855178776;  // std dev = 0.227, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.4792647031913866;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5449115293653662;  // std dev = 3.474, 97.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=82 */
%   | | else return -0.1652822329365298;  // std dev = 0.030, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.452241066664402;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.08451863405108408;  // std dev = 0.961, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.03248473186925222;  // std dev = 1.258, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.3353272731899257;  // std dev = 0.006, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.3630262067547152;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3443189286115878;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( phenotype(F, G) )
%   | | then return 0.3939924130783316;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.48803779382627777;  // std dev = 0.166, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H), complex(A, I) )
%   | | then if ( phenotype(H, J) )
%   | | | then return 0.015958962109456562;  // std dev = 2.322, 66.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=15 */
%   | | | else return -0.17752223795049488;  // std dev = 0.079, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.17047822971258692;  // std dev = 2.108, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0.050665125951112756;  // std dev = 4.764, 178.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=51 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( interaction(D, E), interaction(C, E) )
%   | | then return 0.19857268065985367;  // std dev = 0.228, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.27541578047640075;  // std dev = 0.012, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( complex(A, F) )
%   | | then return 0.2603654018699609;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.21229826126548135;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.34324481840494936;  // std dev = 0.065, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.11626713866938933;  // std dev = 0.253, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.05174180265221992;  // std dev = 2.205, 52.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.10504314690952407;  // std dev = 4.042, 115.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=42 */
%   | | | else return 0.04599949442589606;  // std dev = 2.918, 79.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=23 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then if ( interaction(A, F), complex(F, E) )
%   | | then return 0.2266442515415055;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.11170871583813687;  // std dev = 0.837, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.24729318588230076;  // std dev = 0.042, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.4973198057473934;  // std dev = 1.169, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | | else return 0.3815222603814163;  // std dev = 2.773, 66.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=56 */
%   | | else return -0.15637270726223623;  // std dev = 0.034, 197.000 (wgt'ed) examples reached here.  /* #neg=197 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.18616207139210972;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.061141087108648705;  // std dev = 1.479, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.19916088290864645;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.2018692141028122;  // std dev = 0.023, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.21714485231774794;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then if ( phenotype(A, F) )
%   | | | then return -0.1217137196793894;  // std dev = 0.332, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.07717845343527988;  // std dev = 0.019, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return -0.03548873523707956;  // std dev = 2.409, 61.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=16 */
%   | | | else return 0.029807001855433075;  // std dev = 4.075, 205.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=66 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.15958680456491492;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.09757041755400586;  // std dev = 1.426, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.16928430928620727;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.11785610759539959;  // std dev = 0.237, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.034795015527323385;  // std dev = 2.884, 86.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=27 */
%   | | | else return -0.062367690692443564;  // std dev = 1.436, 46.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=7 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2824352446829479;  // std dev = 2.284, 54.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   | | | else return -0.13010788660742334;  // std dev = 0.160, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4223027799482226;  // std dev = 0.353, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1984722429793618;  // std dev = 0.082, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return -0.07978175746436733;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.05375218805245785;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15853465954139245;  // std dev = 0.028, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.09778404631123774;  // std dev = 1.161, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return -0.04600002163764482;  // std dev = 2.972, 113.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=25 */
%   | | else if ( complex(A, H), location(A, I) )
%   | | | then return -0.026220359954505907;  // std dev = 1.903, 70.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=17 */
%   | | | else return 0.015160217579655794;  // std dev = 2.883, 101.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=34 */
%   | else if ( recursion_proteinclass(J, B) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.11310016257694908;  // std dev = 0.688, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.015207091169261366;  // std dev = 1.290, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.2202838970547299;  // std dev = 0.151, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.15736038070472888;  // std dev = 0.083, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.982239
   AUC PR    = 0.264223
   CLL	      = -0.175366
   Precision = 0.237064 at threshold = 0.5
   Recall    = 0.743396
   F1        = 0.359489


Total learning time: 8.819 seconds
Total inference time: 14.808 seconds
AUC ROC: 0.982239


Results scoring model
   AUC ROC   = 0.974221
   AUC PR    = 0.152435
   CLL	      = -0.204746
   Precision = 0.099068 at threshold = 0.5
   Recall    = 0.817308
   F1        = 0.176715


Total scoring time: 10.874 seconds
Refined model CLL: -0.204746


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.987953
   AUC PR    = 0.282537
   CLL	      = -0.181962
   Precision = 0.213333 at threshold = 0.5
   Recall    = 0.724528
   F1        = 0.329614


Total learning time: 33.524 seconds
Total inference time: 14.756 seconds
AUC ROC: 0.987953
Total revision time: 33.524
Best scored revision CLL: -0.201103


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:04:28
{'AUC ROC': 0.987953, 'AUC PR': 0.282537, 'CLL': -0.181962, 'Precision': [0.213333, 0.5], 'Recall': 0.724528, 'F1': 0.329614, 'Learning time': 33.524, 'Inference time': 14.756, 'parameter': {'AUC ROC': 0.987953, 'AUC PR': 0.282537, 'CLL': -0.181962, 'Precision': [0.213333, 0.5], 'Recall': 0.724528, 'F1': 0.329614, 'Learning time': 3.993, 'Inference time': 14.756}}


Starting fold 3

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos	 examples: 277
Target test neg examples: 38883

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;false;true
0;true,false;follows(E, A), follows(E, C).;false;false
0;false;follows(F, A), follows(A, F).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(H, A), recursion_accounttype(H, B).;false;true
0;false,false,false;follows(I, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;tweets(A, D).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(F, E), follows(F, A).;false;true
1;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(E, G), follows(G, A).;false;false
2;false,false;tweets(A, H).;true;true
2;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), follows(E, C).;true;false
3;true,true;follows(E, A).;false;false
3;false;follows(F, A).;true;true
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false,true,true;follows(G, F), follows(A, G).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;tweets(A, I).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;true
4;true,false;follows(A, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,true;follows(H, A), follows(H, G).;false;true
4;false,true,false;tweets(A, I).;false;false
4;false,false;follows(J, A).;false;true
4;false,false,false;tweets(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), follows(A, D).;true;false
5;true,true;follows(D, E), follows(C, E).;false;false
5;false;follows(A, F), recursion_accounttype(F, B).;true;true
5;false,true;tweets(F, G), follows(F, H).;true;false
5;false,true,true;follows(H, A), tweets(A, G).;false;false
5;false,false;follows(I, A).;false;true
5;false,false,false;follows(A, J), follows(J, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, C), tweets(A, D).;true;false
6;true,true;follows(A, E), follows(E, C).;false;false
6;false;follows(F, A).;true;true
6;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
6;false,true,true;follows(A, H), recursion_accounttype(H, B).;false;false
6;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(C, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(H, I), follows(I, H).;false;false
7;false,false,false;follows(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(D, C).;false;false
8;false;follows(E, A).;true;true
8;false,true;follows(F, E), follows(F, A).;false;true
8;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(A, C), tweets(A, D).;true;false
9;true,true;follows(A, E), follows(C, E).;true;false
9;true,true,true;recursion_accounttype(E, B), follows(E, C).;false;false
9;false;follows(F, A).;false;true
9;false,false;follows(A, G), follows(G, H).;true;true
9;false,false,true;recursion_accounttype(H, B).;false;false
9;false,false,false;follows(A, I), tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1418510649004877;  // std dev = 2.36e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.1724346493852252;  // std dev = 4.757, 105.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=33 */
%   | | | else return 0.20766349820630706;  // std dev = 4.839, 103.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=36 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.5194734122109546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.07902689045015666;  // std dev = 3.211, 59.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.7796238726499825;  // std dev = 0.982, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return -0.15882704870538536;  // std dev = 0.168, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.13365464493810167;  // std dev = 4.515, 98.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=30 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.22224892642925584;  // std dev = 2.341, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.6040520610480189;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.7032503674122612;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5404680848527915;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.09029494201852957;  // std dev = 4.470, 127.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=34 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7746971848897373;  // std dev = 0.349, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.19017568300936946;  // std dev = 0.026, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.6917250392213178;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.14090362649925214;  // std dev = 3.737, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(C, E) )
%   | then if ( interaction(A, E) )
%   | | then return 0.27465644130116706;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.4423084675761621;  // std dev = 0.043, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7036261701936211;  // std dev = 0.632, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return -0.1597470621395115;  // std dev = 0.318, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.4594393653269151;  // std dev = 0.173, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.11259478860513551;  // std dev = 2.606, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | | else return 0.11267979348058782;  // std dev = 3.752, 64.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=21 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.35110838500289915;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(E, A), complex(A, F) )
%   | | then return 0.3249377750015169;  // std dev = 0.031, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.1436559408334401;  // std dev = 0.926, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(G, H) )
%   | | then return 0.34712654587766034;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.30945591737293027;  // std dev = 0.105, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4150886987583513;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, J) )
%   | | then return 0.03943948264677097;  // std dev = 3.680, 137.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=36 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.061897490333678536;  // std dev = 2.648, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | | else return 0.09202430313496157;  // std dev = 3.758, 64.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=21 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, C) )
%   | | then return 0.27582343528593595;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2850653759531483;  // std dev = 0.095, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( complex(F, G), interaction(H, F) )
%   | | then if ( interaction(A, H), complex(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2673139857988884;  // std dev = 0.080, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.28046970061288184;  // std dev = 0.089, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I) )
%   | | then return 0.03197342796165332;  // std dev = 3.656, 139.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=36 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.03177743871317404;  // std dev = 4.047, 98.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=27 */
%   | | | else return 0.13874664525704566;  // std dev = 2.223, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then if ( interaction(E, A), interaction(C, E) )
%   | | then return 0.22538133982119013;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.20415815445765018;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.1343218637862126;  // std dev = 0.958, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.22109611031414622;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5383758251293014;  // std dev = 0.676, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return -0.15083226287149437;  // std dev = 0.212, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.22572301717970097;  // std dev = 0.104, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04676521903287765;  // std dev = 4.613, 117.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.19315193483356782;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, E), interaction(C, A) )
%   | | then return 0.17297845841649284;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.20760877908175965;  // std dev = 0.057, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.23379124507397842;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G) )
%   | then return 0.01867298426377653;  // std dev = 2.863, 131.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=37 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, H), interaction(H, I) )
%   | | | then return 0.18250159786157427;  // std dev = 0.062, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.19353717920861194;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.06175410924719235;  // std dev = 4.528, 107.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.16482294693936614;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.1740498702457974;  // std dev = 0.068, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.027055046873676318;  // std dev = 2.140, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.3344809040885899;  // std dev = 0.320, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.11826583584182503;  // std dev = 0.124, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5777128017999482;  // std dev = 1.410, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | | else return -0.2525173957848358;  // std dev = 0.397, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( recursion_proteinclass(E, B), interaction(C, E) )
%   | | | then return 0.13968204935066275;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12879088380191095;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.15497306815865453;  // std dev = 0.050, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, F) )
%   | then return 3.102182641490836E-5;  // std dev = 2.692, 138.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=37 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return -0.23111275306290138;  // std dev = 0.738, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.021223184351743102;  // std dev = 3.196, 92.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=30 */
%   | | else if ( interaction(I, A), complex(A, J) )
%   | | | then return 0.1005438630912046;  // std dev = 0.600, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.05932977351558832;  // std dev = 1.881, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */


Results
   AUC ROC   = 0.985711
   AUC PR    = 0.229333
   CLL	      = -0.220451
   Precision = 0.217335 at threshold = 0.5
   Recall    = 0.606498
   F1        = 0.32


Total learning time: 2.409 seconds
Total inference time: 15.762 seconds
AUC ROC: 0.985711


Results scoring model
   AUC ROC   = 0.996579
   AUC PR    = 0.565493
   CLL	      = -0.191534
   Precision = 0.552381 at threshold = 0.5
   Recall    = 0.630435
   F1        = 0.588832


Total scoring time: 4.172 seconds
Parameter learned model CLL: -0.191534


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F), interaction(F, A)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 4], 'false,true,false': [2.36e-08, 27, 0], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [4.757, 72, 33], 'false,false,false,false': [4.839, 67, 36]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [2.98e-08, 0, 10], 'true,false': [0.894, 1, 4], 'false,true,true': [3.211, 45, 14], 'false,true,false,true': [0.982, 1, 23], 'false,true,false,false': [0.168, 58, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [4.515, 68, 30], 'false,false,false,true': [2.341, 14, 9], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, E), interaction(A, G)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 4], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 2], 'false,true,false': [4.47, 93, 34], 'false,false,true,true': [0.349, 0, 18], 'false,false,true,false': [0.026, 37, 0], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [3.737, 42, 21]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D), interaction(C, E)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I)'}, {'true,true,true': [0.926, 1, 6], 'true,true,false': [0.0, 0, 2], 'true,false': [0.043, 0, 6], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.632, 0, 37], 'false,true,false': [0.318, 114, 0], 'false,false,true': [0.173, 0, 5], 'false,false,false,true': [2.606, 30, 15], 'false,false,false,false': [3.752, 43, 21]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'interaction(E, A), complex(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H), interaction(G, H)', 'false,true,false': 'complex(A, I)', 'false,false': 'interaction(A, J)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.004, 0, 5], 'true,false,true': [0.031, 0, 5], 'true,false,false': [0.926, 1, 4], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.105, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true': [3.68, 101, 36], 'false,false,false,true': [2.648, 36, 15], 'false,false,false,false': [3.758, 43, 21]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'interaction(E, D), interaction(E, C)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'complex(F, G), interaction(H, F)', 'false,true,true': 'interaction(A, H), complex(A, G)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.004, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.095, 0, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.08, 0, 2], 'false,true,false': [0.089, 0, 4], 'false,false,true': [3.656, 103, 36], 'false,false,false,true': [4.047, 71, 27], 'false,false,false,false': [2.223, 13, 9]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(A, D)', 'true,true': 'interaction(E, A), interaction(C, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false': [0.0, 0, 2], 'true,false': [0.958, 1, 9], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.676, 0, 36], 'false,true,false': [0.212, 101, 0], 'false,false,true': [0.104, 0, 5], 'false,false,false,true': [4.613, 81, 36], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'complex(A, E), interaction(C, A)', 'true,false,false': 'complex(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, H), interaction(H, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.013, 0, 5], 'true,false,true': [0.0, 0, 2], 'true,false,false,true': [0.057, 0, 5], 'true,false,false,false': [0.0, 0, 2], 'false,true': [2.863, 94, 37], 'false,false,true,true': [0.062, 0, 2], 'false,false,true,false': [0.065, 0, 3], 'false,false,false,true': [4.528, 71, 36], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true,true': [0.011, 0, 5], 'true,false': [0.068, 0, 9], 'false,true,true': [2.14, 38, 14], 'false,true,false,true': [0.32, 0, 23], 'false,true,false,false': [0.124, 72, 0], 'false,false,true,true': [1.41, 1, 41], 'false,false,true,false': [0.397, 78, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(A, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'recursion_proteinclass(E, B), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), complex(A, J)'}, {'true,true,true,true': [0.0, 0, 3], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 2], 'true,false': [0.05, 0, 9], 'false,true': [2.692, 101, 37], 'false,false,true,true': [0.738, 1, 2], 'false,false,true,false': [3.196, 62, 30], 'false,false,false,true': [0.6, 2, 2], 'false,false,false,false': [1.881, 20, 7]}]]
[{'': [-2.5376526277146434e-16, 0.2174818597151309], 'false': [0.11238293444328809, 0.22671868456435154], 'false,false': [0.0, 0.22168546597633282], 'false,false,false': [0.21551020408163402, 0.22735413328306303], 'false,true': [0.0, 2.05596856412066e-17], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, 1.4802973661668753e-16]}, {'': [0.06222222222222236, 0.20144028963926283], 'false': [0.18652025047947668, 0.21666500614125866], 'false,false': [0.21061018717982813, 0.238185255198488], 'false,false,false': [0.238185255198488, nan], 'false,false,true': [0.0, 0.20804468170334903], 'false,true': [0.17473617837162578, 0.1944319158255324], 'false,true,false': [0.04019940795268662, 0.00048929850809538], 'true': [8.881784197001253e-17, 0.16000000000000006]}, {'': [0.0004837326558466058, 0.1873298210559549], 'false': [0.15959166977178232, 0.2164996202195016], 'false,false': [0.20719242313713146, 0.22389821341800753], 'false,false,false': [0.0, 0.22167057847942054], 'false,false,true': [0.006754061602782555, 1.8727910880161752e-05], 'false,true': [0.005888460336726853, 0.15735044894225697], 'false,true,true': [0.0, 0.0], 'true': [-1.7763568394002506e-16, 0.0]}, {'': [0.0638151219517379, 0.1629181903627358], 'false': [0.141206611104248, 0.1883812060177456], 'false,false': [0.0059620225006045136, 0.1914742102230913], 'false,false,false': [0.1509213324309235, 0.21998794943756975], 'false,true': [0.010778583306636322, 0.0008875644164574471], 'true': [0.09876543209876552, 0.0003073931218524617], 'true,true': [0.12244897959183679, 0.0], 'false,true,true': [nan, 0.010778583306636322]}, {'': [0.06575349202520603, 0.13693671281764466], 'false': [0.00406813823231202, 0.13809549690601053], 'false,false': [0.09887009182663621, 0.1839884637430343], 'false,false,false': [0.13750509315736115, 0.2206273877886866], 'true': [3.3219114876859025e-06, 0.09408026612872249], 'true,false': [0.0001970353910766276, 0.1715319451666974], 'false,true': [0.0, 0.004878266018763888], 'false,true,false': [0.0036671295633184386, 0.0]}, {'': [0.0006597001153342909, 0.1330291347094876], 'false': [0.0024288623966562486, 0.13480301526188343], 'false,false': [0.09615727175784589, 0.17936537030955133], 'false,false,false': [0.16709161248474186, 0.22469474666686928], 'false,true': [0.0032146331382925664, 0.0019782860817490616], 'false,true,true': [nan, 0.0032146331382925664], 'true': [2.5520988252369926e-06, 0.000994277536979535], 'true,true': [2.5520988252369926e-06, nan]}, {'': [0.06270648401839717, 0.13316719988795253], 'false': [0.09524943845972252, 0.17579043381831425], 'false,false': [0.002176960082406254, 0.18189727641822542], 'false,false,false': [0.18189727641822542, nan], 'false,true': [0.01498544508961843, 0.0004453593076409319], 'true': [0.00010810166327405169, 0.09173306244926446], 'false,true,true': [0.0, 0.012680993468538274], 'true,true': [0.0, 0.0]}, {'': [0.0005492367337179441, 0.11904777108632172], 'false': [0.0625498340924496, 0.18384808140661546], 'false,false': [0.001657873783440944, 0.19163740944146707], 'false,false,false': [0.19163740944146707, nan], 'false,false,true': [0.0019319715505325963, 0.0014264283164463348], 'true': [3.282896025260662e-05, 0.0007796139028538348], 'true,false': [0.0, 0.0006082855219521344], 'true,false,false': [0.0006557364377519248, 0.0]}, {'': [0.0003561880347899758, 0.10992930037572375], 'false': [0.05653817645742746, 0.1746937893589477], 'false,false': [0.1746937893589477, nan], 'false,false,true': [0.04733831441650803, 0.0020210509843704514], 'false,true': [0.08803410224811135, 0.038847246220287915], 'false,true,false': [0.004439278000860211, 0.00021203796623415268], 'true': [2.5633979912159655e-05, 0.0005094234214949034]}, {'': [0.00027786822105409025, 0.08424652835476024], 'false': [0.0525275424049939, 0.11898626847977574], 'false,false': [0.1151797290543109, 0.1286162199612065], 'false,false,false': [0.08987311445134821, 0.1310579290144673], 'false,false,true': [0.18134781742525655, 0.11101133425207572], 'true': [2.846819688247515e-05, 0.00027855819435777346], 'true,true': [-2.3129646346357427e-18, 0.0], 'true,true,true': [-2.3129646346357427e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;true,false;interaction(A, E), interaction(C, E).;true;true
0;false;interaction(A, F), interaction(F, A).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;complex(A, D).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(E, F), interaction(A, F).;true;true
1;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
1;false,false;interaction(H, A), interaction(I, H).;true;true
1;false,false,true;recursion_proteinclass(I, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;complex(A, D).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,true,true;interaction(G, E), interaction(A, G).;true;true
2;false,false;complex(A, H).;true;true
2;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
2;false,false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), interaction(C, E).;true;true
3;true,true;interaction(A, E).;true;true
3;false;interaction(A, F).;true;true
3;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;true,false;interaction(E, A), complex(A, F).;true;true
4;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;false,true;interaction(A, H), interaction(G, H).;true;true
4;false,true,false;complex(A, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), interaction(D, A).;true;true
5;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
5;false,true;complex(F, G), interaction(H, F).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(C, A), complex(A, D).;true;true
6;true,true;interaction(E, A), interaction(C, E).;true;true
6;false;interaction(A, F).;true;true
6;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
6;false,true,true;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, A), interaction(D, C).;true;true
7;true,false;complex(A, E), interaction(C, A).;true;true
7;true,false,false;complex(A, F).;true;true
7;false;interaction(A, G).;true;true
7;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;false,false,true;interaction(I, H), interaction(H, I).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), interaction(C, D).;true;true
8;false;interaction(A, E).;true;true
8;false,true;interaction(E, F), interaction(A, F).;true;true
8;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
8;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, A), complex(A, D).;true;true
9;true,true;interaction(E, A), interaction(E, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, I), interaction(A, J) )
%   | | | then return 0.09029179224236951;  // std dev = 3.159, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | | | else return 0.16754120029288191;  // std dev = 6.219, 181.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=56 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109543;  // std dev = 1.05e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.11029380869025807;  // std dev = 3.167, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.823925978996071;  // std dev = 0.195, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.1522852327065221;  // std dev = 0.110, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.16388748048021004;  // std dev = 4.455, 91.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=30 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.2482708972117734;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.16983952466275362;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, D), interaction(A, F) )
%   | | | then return 0.2643103130771614;  // std dev = 0.611, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.5294471542391381;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.11511024288416774;  // std dev = 0.043, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0.09407060671755899;  // std dev = 4.468, 122.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=34 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7785278365854211;  // std dev = 0.343, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.18838566659105468;  // std dev = 0.025, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.736520903766058;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.16367879898381063;  // std dev = 3.690, 59.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=21 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(C, E) )
%   | then return 0.41751358415830986;  // std dev = 1.05e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.6545178534403605;  // std dev = 0.489, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.7336849428870273;  // std dev = 0.328, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.15248472044939804;  // std dev = 0.328, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(K, K), phenotype(K, L) )
%   | | | then return 0.24156799694273728;  // std dev = 1.350, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.08369181212733999;  // std dev = 3.872, 88.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=27 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.15250637605691103;  // std dev = 1.639, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.2210987352622353;  // std dev = 1.488, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then return 0.3473601349292381;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.39904582571549;  // std dev = 0.176, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5517517153934959;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( enzyme(A, J), enzyme(H, J) )
%   | | | then return -0.11621324328935266;  // std dev = 0.049, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.1091651072451321;  // std dev = 3.546, 79.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=28 */
%   | | else if ( interaction(A, K), interaction(K, A) )
%   | | | then return -0.03916055560153862;  // std dev = 0.630, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.049314594361738025;  // std dev = 4.598, 149.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=42 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( complex(F, G), interaction(H, F) )
%   | | then return 0.3516511477004304;  // std dev = 0.128, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.33375285616475264;  // std dev = 0.165, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( phenotype(A, J), interaction(I, K) )
%   | | | then return -0.045818971741141024;  // std dev = 1.130, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | | else return 0.07282676263193222;  // std dev = 2.581, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.1552648796292398;  // std dev = 2.552, 44.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=19 */
%   | | | else return 0.08405549213849067;  // std dev = 4.135, 90.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=31 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.20975771563253556;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.21218974573648208;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.493978464020175;  // std dev = 1.236, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | else if ( location(A, H) )
%   | | | then return -0.1487736252153009;  // std dev = 0.286, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | | else return -0.12935080174054642;  // std dev = 0.101, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.28171183490822804;  // std dev = 0.171, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.019572481015484793;  // std dev = 2.682, 61.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | | else return 0.0840210021185814;  // std dev = 3.685, 59.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=21 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1770964977452774;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D) )
%   | then if ( phenotype(A, E), enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.37474904482997784;  // std dev = 0.413, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.12148763101079928;  // std dev = 0.134, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return -0.042196514086717186;  // std dev = 1.370, 51.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=8 */
%   | | | else return 0.02054514971880599;  // std dev = 2.161, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, J), interaction(J, K) )
%   | | | then return 0.21815886466884238;  // std dev = 0.110, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.23736491685040498;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.008242603960691089;  // std dev = 2.646, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return 0.05305632089844764;  // std dev = 3.739, 69.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1527438580936708;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( phenotype(A, F), complex(A, G) )
%   | | | then return -0.0490014045279892;  // std dev = 0.853, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | | else return 0.08711720269067583;  // std dev = 1.795, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.2714845544869793;  // std dev = 1.017, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return -0.12819341910912785;  // std dev = 0.246, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.30927822517743575;  // std dev = 1.770, 25.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | | else return 0.2284195109426445;  // std dev = 3.158, 42.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=23 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.2120855307137448;  // std dev = 0.071, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.3003329303023072;  // std dev = 0.128, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.06734036334134451;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( phenotype(D, F), enzyme(A, G) )
%   | | then if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.40249739278674995;  // std dev = 0.591, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1576471050285045;  // std dev = 0.320, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( complex(A, E), phenotype(A, I) )
%   | | | then return 0.028586923443375455;  // std dev = 0.952, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return -0.04331603497237088;  // std dev = 2.707, 80.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=18 */
%   | else if ( enzyme(A, J), location(A, K) )
%   | | then if ( enzyme(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.41050832883770894;  // std dev = 1.124, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return -0.14622855315623015;  // std dev = 0.344, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return -0.009374842646430253;  // std dev = 1.306, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.039697099098014915;  // std dev = 2.728, 55.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */


Results
   AUC ROC   = 0.977436
   AUC PR    = 0.222772
   CLL	      = -0.223141
   Precision = 0.22093 at threshold = 0.5
   Recall    = 0.617329
   F1        = 0.325404


Total learning time: 7.085 seconds
Total inference time: 122.825 seconds
AUC ROC: 0.977436


Results scoring model
   AUC ROC   = 0.991501
   AUC PR    = 0.506881
   CLL	      = -0.199646
   Precision = 0.529915 at threshold = 0.5
   Recall    = 0.673913
   F1        = 0.593301


Total scoring time: 9.259 seconds
Refined model CLL: -0.199646


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.985711
   AUC PR    = 0.229333
   CLL	      = -0.220451
   Precision = 0.217335 at threshold = 0.5
   Recall    = 0.606498
   F1        = 0.32


Total learning time: 22.925 seconds
Total inference time: 15.762 seconds
AUC ROC: 0.985711
Total revision time: 22.925
Best scored revision CLL: -0.191534


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:07:10
{'AUC ROC': 0.985711, 'AUC PR': 0.229333, 'CLL': -0.220451, 'Precision': [0.217335, 0.5], 'Recall': 0.606498, 'F1': 0.32, 'Learning time': 22.925, 'Inference time': 15.762, 'parameter': {'AUC ROC': 0.985711, 'AUC PR': 0.229333, 'CLL': -0.220451, 'Precision': [0.217335, 0.5], 'Recall': 0.606498, 'F1': 0.32, 'Learning time': 2.409, 'Inference time': 15.762}}


Starting fold 4

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos	 examples: 283
Target test neg examples: 40479

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;false;true
0;true,false;follows(E, A), follows(E, C).;false;false
0;false;follows(F, A), follows(A, F).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(H, A), recursion_accounttype(H, B).;false;true
0;false,false,false;follows(I, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;tweets(A, D).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(F, E), follows(F, A).;false;true
1;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(E, G), follows(G, A).;false;false
2;false,false;tweets(A, H).;true;true
2;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), follows(E, C).;true;false
3;true,true;follows(E, A).;false;false
3;false;follows(F, A).;true;true
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false,true,true;follows(G, F), follows(A, G).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;tweets(A, I).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;true
4;true,false;follows(A, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,true;follows(H, A), follows(H, G).;false;true
4;false,true,false;tweets(A, I).;false;false
4;false,false;follows(J, A).;false;true
4;false,false,false;tweets(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), follows(A, D).;true;false
5;true,true;follows(D, E), follows(C, E).;false;false
5;false;follows(A, F), recursion_accounttype(F, B).;true;true
5;false,true;tweets(F, G), follows(F, H).;true;false
5;false,true,true;follows(H, A), tweets(A, G).;false;false
5;false,false;follows(I, A).;false;true
5;false,false,false;follows(A, J), follows(J, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, C), tweets(A, D).;true;false
6;true,true;follows(A, E), follows(E, C).;false;false
6;false;follows(F, A).;true;true
6;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
6;false,true,true;follows(A, H), recursion_accounttype(H, B).;false;false
6;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(C, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(H, I), follows(I, H).;false;false
7;false,false,false;follows(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(D, C).;false;false
8;false;follows(E, A).;true;true
8;false,true;follows(F, E), follows(F, A).;false;true
8;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(A, C), tweets(A, D).;true;false
9;true,true;follows(A, E), follows(C, E).;true;false
9;true,true,true;recursion_accounttype(E, B), follows(E, C).;false;false
9;false;follows(F, A).;false;true
9;false,false;follows(A, G), follows(G, H).;true;true
9;false,false,true;recursion_accounttype(H, B).;false;false
9;false,false,false;follows(A, I), tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995121;  // std dev = 4.21e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.11478610324110418;  // std dev = 4.643, 113.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=29 */
%   | | | else return 0.206463541841084;  // std dev = 4.495, 89.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=31 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.744498398695033;  // std dev = 0.059, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7353395955528769;  // std dev = 0.067, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.048146350216517815;  // std dev = 3.387, 75.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=15 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8186668609217629;  // std dev = 0.207, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.1555538522844462;  // std dev = 0.142, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.27529324428684054;  // std dev = 0.628, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.13356753013628808;  // std dev = 3.872, 72.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=22 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.13356753013628808;  // std dev = 2.778, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.5810825537553042;  // std dev = 0.075, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.4757416088855388;  // std dev = 0.914, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4672034240727764;  // std dev = 1.049, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0.06310441578404542;  // std dev = 4.261, 126.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=29 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7119293987543718;  // std dev = 1.347, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | | else return -0.1884720776377424;  // std dev = 2.58e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return -0.33926803030823227;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.13585224668658194;  // std dev = 2.847, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(C, E) )
%   | then if ( interaction(A, E) )
%   | | then return 0.4205750230464835;  // std dev = 0.053, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4562817635471188;  // std dev = 0.015, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.4550771730051027;  // std dev = 0.089, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7027843427432047;  // std dev = 0.715, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return -0.14826697974969177;  // std dev = 0.149, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.2652171986445542;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.07567256766793942;  // std dev = 3.123, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | | | else return 0.09755810735294294;  // std dev = 2.882, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3206652631987126;  // std dev = 0.025, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(E, A), phenotype(A, F) )
%   | | then return 0.10396970617819146;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.37692510557119774;  // std dev = 0.023, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(G, H) )
%   | | then return 0.25983937672579294;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.3097679520626491;  // std dev = 0.743, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, J) )
%   | | then return 0.02332548818562975;  // std dev = 3.648, 145.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=33 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.06680800464728667;  // std dev = 3.093, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.12615685316643932;  // std dev = 2.787, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, C) )
%   | | then return 0.25515795868650076;  // std dev = 0.021, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3089184825240117;  // std dev = 0.055, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( phenotype(F, G), interaction(H, F) )
%   | | then if ( interaction(A, H), phenotype(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.31535802654598316;  // std dev = 0.177, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.37161706995017313;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, I) )
%   | | then return 0.04230515874837966;  // std dev = 3.539, 129.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=33 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.061959579553970225;  // std dev = 3.388, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   | | | else return 0.08159290100849206;  // std dev = 2.403, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(E, A), interaction(C, E) )
%   | | then return 0.20098842190092114;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23195233251372877;  // std dev = 0.076, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.25424366133347465;  // std dev = 0.157, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.524341410403502;  // std dev = 1.182, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | else return -0.14285763388223005;  // std dev = 0.173, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.28976134305382034;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.052910031360435636;  // std dev = 4.143, 103.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=31 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.17533856418020383;  // std dev = 0.010, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( phenotype(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.21238092456736316;  // std dev = 0.039, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.19907219992533354;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G) )
%   | then return 0.011200509597741357;  // std dev = 2.895, 143.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=36 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, H), interaction(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08346835932225857;  // std dev = 0.870, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.056737033036670735;  // std dev = 4.108, 96.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=31 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.15141060055094688;  // std dev = 0.009, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.17485569351552432;  // std dev = 0.036, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return -0.003475485461691963;  // std dev = 2.378, 72.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=15 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.3244828993313435;  // std dev = 0.400, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.11147586436274204;  // std dev = 0.077, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5418276119519514;  // std dev = 1.622, 37.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   | | | else return -0.24027319427179458;  // std dev = 0.386, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( recursion_proteinclass(E, B), interaction(C, E) )
%   | | | then return 0.1292208174159145;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14357857783058495;  // std dev = 0.043, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, F) )
%   | then return 0.002313577618913244;  // std dev = 2.886, 135.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=36 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.14930094507452485;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.04785872098081747;  // std dev = 2.668, 63.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   | | else if ( interaction(I, A), phenotype(A, J) )
%   | | | then return 0.0368199925071828;  // std dev = 1.522, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return -9.217715298627496E-4;  // std dev = 1.270, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */


Results
   AUC ROC   = 0.988214
   AUC PR    = 0.263294
   CLL	      = -0.208894
   Precision = 0.246173 at threshold = 0.5
   Recall    = 0.681979
   F1        = 0.361762


Total learning time: 2.712 seconds
Total inference time: 15.766 seconds
AUC ROC: 0.988214


Results scoring model
   AUC ROC   = 0.992194
   AUC PR    = 0.354335
   CLL	      = -0.188951
   Precision = 0.350282 at threshold = 0.5
   Recall    = 0.72093
   F1        = 0.471483


Total scoring time: 4.408 seconds
Parameter learned model CLL: -0.188951


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F), interaction(F, A)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [4.21e-08, 0, 5], 'false,true,true': [0.913, 1, 5], 'false,true,false': [1.49e-08, 23, 0], 'false,false,true': [1.225, 2, 6], 'false,false,false,true': [4.643, 84, 29], 'false,false,false,false': [4.495, 58, 31]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.059, 0, 7], 'true,false': [0.067, 0, 9], 'false,true,true': [3.387, 60, 15], 'false,true,false,true': [0.207, 0, 21], 'false,true,false,false': [0.142, 36, 0], 'false,false,true,true': [0.628, 1, 1], 'false,false,true,false': [3.872, 50, 22], 'false,false,false,true': [2.778, 25, 11], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, E), interaction(A, G)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.075, 0, 7], 'true,false': [0.914, 1, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.049, 2, 7], 'false,true,false': [4.261, 97, 29], 'false,false,true,true': [1.347, 2, 22], 'false,false,true,false': [2.58e-08, 50, 0], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [2.847, 25, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D), interaction(C, E)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true,true,true': [0.053, 0, 4], 'true,true,false': [0.015, 0, 2], 'true,false': [0.089, 0, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.715, 0, 36], 'false,true,false': [0.149, 91, 0], 'false,false,true': [0.856, 1, 3], 'false,false,false,true': [3.123, 47, 19], 'false,false,false,false': [2.882, 27, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'interaction(E, A), phenotype(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H), interaction(G, H)', 'false,true,false': 'phenotype(A, I)', 'false,false': 'interaction(A, J)', 'false,false,false': 'phenotype(A, K)'}, {'true,true': [0.025, 0, 9], 'true,false,true': [0.863, 1, 3], 'true,false,false': [0.023, 0, 4], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.743, 1, 5], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.648, 112, 33], 'false,false,false,true': [3.093, 46, 19], 'false,false,false,false': [2.787, 22, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'interaction(E, D), interaction(E, C)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'phenotype(F, G), interaction(H, F)', 'false,true,true': 'interaction(A, H), phenotype(A, G)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.021, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.055, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.177, 0, 3], 'false,true,false': [0.027, 0, 3], 'false,false,true': [3.539, 96, 33], 'false,false,false,true': [3.388, 47, 20], 'false,false,false,false': [2.403, 23, 11]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'true,true': 'interaction(E, A), interaction(C, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.076, 0, 13], 'false,true,true,true': [0.157, 0, 3], 'false,true,true,false': [1.182, 1, 33], 'false,true,false': [0.173, 92, 0], 'false,false,true': [0.024, 0, 3], 'false,false,false,true': [4.143, 72, 31], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'phenotype(A, E), interaction(C, A)', 'true,false,false': 'phenotype(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, H), interaction(H, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.01, 0, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.039, 0, 4], 'true,false,false,false': [3.73e-09, 0, 3], 'false,true': [2.895, 107, 36], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.87, 2, 3], 'false,false,false,true': [4.108, 65, 31], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true,true': [0.009, 0, 9], 'true,false': [0.036, 0, 7], 'false,true,true': [2.378, 57, 15], 'false,true,false,true': [0.4, 0, 21], 'false,true,false,false': [0.077, 43, 0], 'false,false,true,true': [1.622, 3, 34], 'false,false,true,false': [0.386, 83, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'recursion_proteinclass(E, B), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), phenotype(A, J)'}, {'true,true,true,true': [0.0, 0, 3], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.043, 0, 13], 'false,true': [2.886, 99, 36], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [2.668, 41, 22], 'false,false,false,true': [1.522, 15, 8], 'false,false,false,false': [1.27, 6, 3]}]]
[{'': [-2.3684757858670006e-16, 0.20881987360165288], 'false': [0.14268727705112955, 0.21551020408163402], 'false,false': [0.1874999999999999, 0.2088030585236754], 'false,false,false': [0.19077453206985784, 0.22699154147203773], 'false,true': [0.1388888888888887, 9.654113257610057e-18], 'true': [-2.9605947323337506e-16, 1.4802973661668753e-16], 'true,false': [0.0, 3.552713678800501e-16]}, {'': [0.0005201917704931169, 0.19865464660390147], 'false': [0.18865813767307715, 0.21041060314913693], 'false,false': [0.20845379292949132, 0.2144230649095344], 'false,false,false': [0.2144230649095344, nan], 'false,false,true': [0.19729602157709406, 0.20822086134554682], 'false,true': [0.15294961259747317, 0.22195312576217138], 'false,true,false': [0.0020482213984224914, 0.0005603557841768809], 'true': [0.0004945046326397648, 0.0005034715476789723]}, {'': [0.05219420223681743, 0.17795406625172341], 'false': [0.15282706866476947, 0.20801754164397437], 'false,false': [0.2021650772607436, 0.2191554441687936], 'false,false,false': [0.0, 0.21913805697589456], 'false,false,true': [0.07555663325051547, 1.3322676295501878e-17], 'false,true': [0.1221998958946777, 0.14412832329597042], 'false,true,true': [nan, 0.1221998958946777], 'true': [0.0008062366458394214, 0.08359654269977383]}, {'': [0.0009072113318907837, 0.16164766728065974], 'false': [0.1513077327138243, 0.1736917048012062], 'false,false': [0.183308753782624, 0.17211757361406016], 'false,false,false': [0.14777138100755627, 0.21301775147929], 'false,true': [0.014182907921155063, 0.0002448316868021075], 'false,true,true': [nan, 0.014182907921154866], 'true': [0.0007900206890028757, 0.0007859923596498231], 'true,true': [0.000706629311578777, 0.00010682256573132931]}, {'': [0.05426292119451103, 0.12726540702317507], 'false': [0.07907737422366153, 0.1268571268062028], 'false,false': [0.09175894126002244, 0.17583972369271397], 'false,false,false': [0.14715073782376487, 0.2283737024221455], 'false,true': [0.0, 0.09190081336067633], 'false,true,false': [0.09190081336067633, nan], 'true': [6.681509535890997e-05, 0.11182682633823904], 'true,false': [0.18626777437329045, 0.00013355327428982156]}, {'': [0.0009301659469873463, 0.1285912897024716], 'false': [0.006116782050306653, 0.12965331068428687], 'false,false': [0.09706825204004557, 0.17088497448267687], 'false,false,false': [0.17128788641621576, 0.16983529492837296], 'false,true': [0.01041085222784871, 0.00024017189038731215], 'false,true,true': [nan, 0.01041085222784871], 'true': [5.067654437765048e-05, 0.00043520395420999184], 'true,true': [5.067654437765048e-05, nan]}, {'': [0.0005118072244061703, 0.1275924778616504], 'false': [0.09798889601199955, 0.16345356549449777], 'false,false': [0.0001850686233829668, 0.16662126396995972], 'false,false,false': [0.16662126396995972, nan], 'false,true': [0.04385090018004099, 0.0003260460453878023], 'false,true,true': [0.008177921638745663, 0.04108342452400628], 'true': [-4.625929269271485e-18, 0.0004501483788023747], 'true,true': [-4.625929269271485e-18, nan]}, {'': [0.00036044319379949924, 0.10736562608862714], 'false': [0.05861592177660115, 0.17551446664580547], 'false,false': [0.1512287974986099, 0.17580619910630504], 'false,false,false': [0.17580619910630504, nan], 'false,false,true': [nan, 0.1512287974986099], 'true': [1.1050430886733804e-05, 0.0002572260454390407], 'true,false': [nan, 0.0002572260454390486], 'true,false,false': [0.00037423608597662167, 4.625929269271485e-18]}, {'': [0.00022244032441836106, 0.10543048407502638], 'false': [0.06283564242494018, 0.15362629848303813], 'false,false': [0.15362629848303813, nan], 'false,false,true': [0.07113079853079488, 0.0017995522835055886], 'false,true': [0.07855744807290857, 0.04449827970485776], 'false,true,false': [0.007636219436774093, 0.00013722941120639033], 'true': [8.718374168949063e-06, 0.0001880349729585348]}, {'': [0.00014958749408544927, 0.08440961313705914], 'false': [0.0617009956384644, 0.1154371213341472], 'false,false': [0.1114159272197312, 0.12311948681168532], 'false,false,false': [0.10074030760719793, 0.17928690576553521], 'false,false,true': [0.0, 0.11302364455054244], 'true': [0.0, 0.00014545544425479908], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;true,false;interaction(A, E), interaction(C, E).;true;true
0;false;interaction(A, F), interaction(F, A).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;phenotype(A, D).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(E, F), interaction(A, F).;true;true
1;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;phenotype(A, D).;true;true
2;false;interaction(A, E).;true;true
2;false,false;phenotype(A, H).;true;true
2;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
2;false,false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;phenotype(A, D), interaction(C, E).;true;true
3;true,true;interaction(A, E).;true;true
3;false;interaction(A, F).;true;true
3;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;true,false;interaction(E, A), phenotype(A, F).;true;true
4;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;false,true;interaction(A, H), interaction(G, H).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), interaction(D, A).;true;true
5;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
5;false,true;phenotype(F, G), interaction(H, F).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(C, A), phenotype(A, D).;true;true
6;false;interaction(A, F).;true;true
6;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
6;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, A), interaction(D, C).;true;true
7;true,false;phenotype(A, F).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), interaction(C, D).;true;true
8;false;interaction(A, E).;true;true
8;false,true;interaction(E, F), interaction(A, F).;true;true
8;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
8;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, A), phenotype(A, D).;true;true
9;false;interaction(A, F).;true;true
9;false,false;interaction(G, A), interaction(H, G).;true;true
9;false,false,true;recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995121;  // std dev = 4.21e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1418510649004877;  // std dev = 2.58e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.14185106490048768;  // std dev = 3.94e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.10814893509951236;  // std dev = 5.268, 148.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=37 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109543;  // std dev = 1.05e-08, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(A, F), interaction(F, A) )
%   | | | then return -0.07850474682064995;  // std dev = 0.821, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.129485164077225;  // std dev = 2.924, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7849464732525165;  // std dev = 0.286, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.14109035881903495;  // std dev = 0.106, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8266111484607838;  // std dev = 0.116, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.15553256216424446;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.3194734122109545;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.11804538466369478;  // std dev = 3.875, 86.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=24 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( enzyme(A, E), phenotype(A, F) )
%   | | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.594952256750643;  // std dev = 0.245, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.12186085680892184;  // std dev = 0.057, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.04818504799317093;  // std dev = 3.468, 89.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=20 */
%   | | | else return 0.21638449790557815;  // std dev = 1.452, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.598128150983248;  // std dev = 1.645, 26.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=22 */
%   | | | else return -0.148255134103281;  // std dev = 0.142, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1177599052118125;  // std dev = 2.634, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(C, E) )
%   | then return 0.4175135841583099;  // std dev = 9.13e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, F), interaction(F, F) )
%   | | then return 0.41751358415830986;  // std dev = 1.05e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.16528692202353568;  // std dev = 0.618, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.6277313925902696;  // std dev = 0.145, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return -0.14037135038280601;  // std dev = 0.030, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5624969077050509;  // std dev = 1.101, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.14311329830256816;  // std dev = 0.166, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.05873559773816735;  // std dev = 2.878, 63.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   | | | else return 0.16000019050565012;  // std dev = 1.181, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3270711941147402;  // std dev = 0.018, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(E, A), phenotype(A, F) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.01599557512247372;  // std dev = 1.106, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(G, H) )
%   | | then return 0.3730833254707647;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.33874643698403145;  // std dev = 0.637, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( enzyme(J, K), complex(J, L) )
%   | | | then return -0.0482865537074788;  // std dev = 1.155, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | | | else return 0.049387846251387396;  // std dev = 2.723, 86.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=23 */
%   | | else if ( phenotype(A, M), interaction(N, A) )
%   | | | then return 0.036567113415387445;  // std dev = 2.704, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | | | else return 0.14122523757123534;  // std dev = 2.585, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( complex(A, E) )
%   | | then return 0.26409834595862636;  // std dev = 0.045, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.25396547204069664;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(F, A), phenotype(A, G) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3314760615328888;  // std dev = 0.049, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then if ( phenotype(H, I), interaction(J, H) )
%   | | then return 0.0707824645020799;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.3996909021329196;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1115541614961016;  // std dev = 0.003, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( location(A, K), interaction(A, L) )
%   | | | then return 0.03133944445512972;  // std dev = 3.088, 115.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=31 */
%   | | | else return 0.085490080483643;  // std dev = 3.533, 98.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=33 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.20779180048030735;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, E) )
%   | | then return -0.10280854876639839;  // std dev = 1.118, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.232608119102376;  // std dev = 0.031, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.0601671600972985;  // std dev = 0.843, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.455337501559327;  // std dev = 1.144, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | else return -0.13585358373367853;  // std dev = 0.041, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.032219618156274256;  // std dev = 0.934, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.030938534015038214;  // std dev = 1.875, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0.09584292523610015;  // std dev = 2.844, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( complex(A, E) )
%   | | then return 0.18080370776975216;  // std dev = 0.033, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1280949240056531;  // std dev = 1.055, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( phenotype(A, F) )
%   | | then return 0.23795381638131755;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.22398117971627732;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3009834223357614;  // std dev = 0.177, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( complex(A, I), location(A, J) )
%   | | | then return -0.045985053760815874;  // std dev = 0.805, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | | else return 0.014236804961507043;  // std dev = 1.512, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | else if ( interaction(K, A), interaction(A, L) )
%   | | | then return 0.11021542023841807;  // std dev = 1.360, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.0331236004381783;  // std dev = 3.732, 118.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=36 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.18146225520308354;  // std dev = 0.022, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, A), interaction(A, F) )
%   | | | then return -0.07121669257878459;  // std dev = 0.509, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | | else return 0.012309000219964939;  // std dev = 1.974, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.2863581650171404;  // std dev = 0.459, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.1148558817528306;  // std dev = 0.198, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.1654653388326433;  // std dev = 2.222, 40.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   | | | else return 0.27916005041863284;  // std dev = 1.866, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.1694341220004386;  // std dev = 0.193, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.22406870077389818;  // std dev = 0.169, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return -0.1123150253623357;  // std dev = 0.882, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.15933859333048359;  // std dev = 0.019, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.08439613628349486;  // std dev = 0.005, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.20573457228884462;  // std dev = 0.174, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.010210744825658138;  // std dev = 2.401, 114.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.23020525716446183;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.018227398580294235;  // std dev = 2.549, 68.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.07806563223503328;  // std dev = 1.575, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return -0.0197052455710187;  // std dev = 1.184, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */


Results
   AUC ROC   = 0.989843
   AUC PR    = 0.332823
   CLL	      = -0.182864
   Precision = 0.299443 at threshold = 0.5
   Recall    = 0.759717
   F1        = 0.42957


Total learning time: 7.521 seconds
Total inference time: 102.712 seconds
AUC ROC: 0.989843


Results scoring model
   AUC ROC   = 0.99246
   AUC PR    = 0.404037
   CLL	      = -0.171901
   Precision = 0.362637 at threshold = 0.5
   Recall    = 0.767442
   F1        = 0.492537


Total scoring time: 8.439 seconds
Refined model CLL: -0.171901


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.989843
   AUC PR    = 0.332823
   CLL	      = -0.182864
   Precision = 0.299443 at threshold = 0.5
   Recall    = 0.759717
   F1        = 0.42957


Total learning time: 23.080000000000002 seconds
Total inference time: 102.712 seconds
AUC ROC: 0.989843
Total revision time: 23.080000000000002
Best scored revision CLL: -0.171901


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:09:32
{'AUC ROC': 0.989843, 'AUC PR': 0.332823, 'CLL': -0.182864, 'Precision': [0.299443, 0.5], 'Recall': 0.759717, 'F1': 0.42957, 'Learning time': 23.080000000000002, 'Inference time': 102.712, 'parameter': {'AUC ROC': 0.988214, 'AUC PR': 0.263294, 'CLL': -0.208894, 'Precision': [0.246173, 0.5], 'Recall': 0.681979, 'F1': 0.361762, 'Learning time': 2.712, 'Inference time': 15.766}}


Starting fold 1

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos	 examples: 282
Target test neg examples: 39912

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;false;true
0;true,false;follows(E, A), follows(E, C).;false;false
0;false;follows(F, A), follows(A, F).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(H, A), recursion_accounttype(H, B).;false;true
0;false,false,false;follows(I, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;tweets(A, D).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(F, E), follows(F, A).;false;true
1;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(E, G), follows(G, A).;false;false
2;false,false;tweets(A, H).;true;true
2;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), follows(E, C).;true;false
3;true,true;follows(E, A).;false;false
3;false;follows(F, A).;true;true
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false,true,true;follows(G, F), follows(A, G).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;tweets(A, I).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;true
4;true,false;follows(A, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,true;follows(H, A), follows(H, G).;false;true
4;false,true,false;tweets(A, I).;false;false
4;false,false;follows(J, A).;false;true
4;false,false,false;tweets(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), follows(A, D).;true;false
5;true,true;follows(D, E), follows(C, E).;false;false
5;false;follows(A, F), recursion_accounttype(F, B).;true;true
5;false,true;tweets(F, G), follows(F, H).;true;false
5;false,true,true;follows(H, A), tweets(A, G).;false;false
5;false,false;follows(I, A).;false;true
5;false,false,false;follows(A, J), follows(J, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, C), tweets(A, D).;true;false
6;true,true;follows(A, E), follows(E, C).;false;false
6;false;follows(F, A).;true;true
6;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
6;false,true,true;follows(A, H), recursion_accounttype(H, B).;false;false
6;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(C, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(H, I), follows(I, H).;false;false
7;false,false,false;follows(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(D, C).;false;false
8;false;follows(E, A).;true;true
8;false,true;follows(F, E), follows(F, A).;false;true
8;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(A, C), tweets(A, D).;true;false
9;true,true;follows(A, E), follows(C, E).;true;false
9;true,true,true;recursion_accounttype(E, B), follows(E, C).;false;false
9;false;follows(F, A).;false;true
9;false,false;follows(A, G), follows(G, H).;true;true
9;false,false,true;recursion_accounttype(H, B).;false;false
9;false,false,false;follows(A, I), tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.14185106490048768;  // std dev = 4.47e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.11424649607512179;  // std dev = 3.952, 82.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=21 */
%   | | | else return 0.15665639778607854;  // std dev = 5.297, 134.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=40 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7194734122109544;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.11552481188173976;  // std dev = 3.136, 60.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8436648876596938;  // std dev = 5.96e-08, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.1563351123403062;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7984840631493696;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12520007648720852;  // std dev = 5.099, 128.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=37 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.2129893886185772;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.4731098212376625;  // std dev = 1.429, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return 0.6972412478847064;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.006735434649463763;  // std dev = 3.569, 117.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=20 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8039633395773524;  // std dev = 0.163, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.20402282035510952;  // std dev = 0.314, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.25502864869167413;  // std dev = 0.888, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1553915927144593;  // std dev = 4.051, 74.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=25 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(C, E) )
%   | then if ( interaction(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.3391664022460129;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5898528210767106;  // std dev = 1.688, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | | else return -0.14479012287728968;  // std dev = 0.149, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5373710872991263;  // std dev = 0.124, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.10180334219975591;  // std dev = 2.609, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | | else return 0.07091200431057158;  // std dev = 4.232, 90.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=25 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.1982482644119486;  // std dev = 0.870, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( interaction(E, A), enzyme(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.004857398319474793;  // std dev = 0.533, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.4246350287647416;  // std dev = 0.115, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, J) )
%   | | then return 0.03177269769595229;  // std dev = 3.440, 132.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=33 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.06402074790693825;  // std dev = 2.667, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | | else return 0.08695328397804897;  // std dev = 4.146, 82.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=25 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, C) )
%   | | then return 0.27913614924578867;  // std dev = 1.49e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12555295882191123;  // std dev = 0.833, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( enzyme(F, G), interaction(H, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.019360327362290874;  // std dev = 1.031, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, I) )
%   | | then return 0.0516411238695022;  // std dev = 3.314, 115.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=33 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.10883516698144598;  // std dev = 4.550, 107.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=37 */
%   | | | else return 0.07779281083834731;  // std dev = 1.340, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then if ( interaction(E, A), interaction(C, E) )
%   | | then return 0.22655150233036736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12726410511533123;  // std dev = 0.958, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5156539873546198;  // std dev = 0.582, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.13599663938916468;  // std dev = 0.102, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.34723670711447774;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.042846368844193364;  // std dev = 4.903, 134.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.19979284350037493;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( enzyme(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.2548471594527445;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2548471594527445;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G) )
%   | then return 0.007268200447866402;  // std dev = 2.643, 131.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=33 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, H), interaction(H, I) )
%   | | | then return -0.8054801696307824;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.2743542944194534;  // std dev = 0.096, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.08221735999071966;  // std dev = 4.710, 115.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.16844390092070796;  // std dev = 0.018, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.19195072073815433;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return -0.012870802642878309;  // std dev = 2.060, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.4012704372681079;  // std dev = 0.147, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.11655580841354587;  // std dev = 2.89e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.569739586706714;  // std dev = 1.811, 46.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=43 */
%   | | | else return -0.2535773394035859;  // std dev = 0.245, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( recursion_proteinclass(E, B), interaction(C, E) )
%   | | | then return 0.1391132002329729;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15770306583735968;  // std dev = 0.036, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F) )
%   | then return 0.011084395799812378;  // std dev = 2.372, 119.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=33 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.27044980434090654;  // std dev = 0.239, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.04118840691372703;  // std dev = 3.683, 106.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=37 */
%   | | else if ( interaction(I, A), enzyme(A, J) )
%   | | | then return 0.4226194768349324;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.03161631921467799;  // std dev = 1.007, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */


Results
   AUC ROC   = 0.987785
   AUC PR    = 0.306877
   CLL	      = -0.206243
   Precision = 0.252427 at threshold = 0.5
   Recall    = 0.64539
   F1        = 0.362911


Total learning time: 3.429 seconds
Total inference time: 13.41 seconds
AUC ROC: 0.987785


Results scoring model
   AUC ROC   = 0.987065
   AUC PR    = 0.322869
   CLL	      = -0.208439
   Precision = 0.26009 at threshold = 0.5
   Recall    = 0.666667
   F1        = 0.374194


Total scoring time: 7.482 seconds
Parameter learned model CLL: -0.208439


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F), interaction(F, A)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 12], 'false,true,false': [4.47e-08, 42, 0], 'false,false,true': [2.11e-08, 0, 3], 'false,false,false,true': [3.952, 61, 21], 'false,false,false,false': [5.297, 94, 40]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.0, 0, 4], 'true,false': [2.11e-08, 0, 7], 'false,true,true': [3.136, 43, 17], 'false,true,false,true': [5.96e-08, 0, 16], 'false,true,false,false': [0.0, 38, 0], 'false,false,true,true': [0.097, 0, 3], 'false,false,true,false': [5.099, 91, 37], 'false,false,false,true': [1.369, 5, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, E), interaction(A, G)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 7], 'false,true,true,true': [1.429, 4, 11], 'false,true,true,false': [0.002, 0, 2], 'false,true,false': [3.569, 97, 20], 'false,false,true,true': [0.163, 0, 16], 'false,false,true,false': [0.314, 23, 0], 'false,false,false,true': [0.888, 1, 2], 'false,false,false,false': [4.051, 49, 25]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D), interaction(C, E)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'enzyme(A, I)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false': [0.0, 1, 0], 'true,false': [2.98e-08, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.688, 3, 33], 'false,true,false': [0.149, 84, 0], 'false,false,true': [0.124, 0, 3], 'false,false,false,true': [2.609, 33, 15], 'false,false,false,false': [4.232, 65, 25]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'interaction(E, A), enzyme(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H), interaction(G, H)', 'false,true,false': 'enzyme(A, I)', 'false,false': 'interaction(A, J)', 'false,false,false': 'enzyme(A, K)'}, {'true,true': [0.87, 2, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.533, 1, 1], 'false,true,false,false': [0.115, 0, 2], 'false,false,true': [3.44, 99, 33], 'false,false,false,true': [2.667, 35, 15], 'false,false,false,false': [4.146, 57, 25]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'interaction(E, D), interaction(E, C)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'enzyme(F, G), interaction(H, F)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [1.49e-08, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.833, 2, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false': [1.031, 2, 3], 'false,false,true': [3.314, 82, 33], 'false,false,false,true': [4.55, 70, 37], 'false,false,false,false': [1.34, 6, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), enzyme(A, D)', 'true,true': 'interaction(E, A), interaction(C, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.958, 1, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.582, 0, 33], 'false,true,false': [0.102, 78, 0], 'false,false,true': [0.111, 0, 3], 'false,false,false,true': [4.903, 94, 40], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'enzyme(A, E), interaction(C, A)', 'true,false,false': 'enzyme(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, H), interaction(H, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.022, 0, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 1], 'true,false,false,false': [0.0, 0, 1], 'false,true': [2.643, 98, 33], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.096, 0, 3], 'false,false,false,true': [4.71, 75, 40], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true,true': [0.018, 0, 7], 'true,false': [0.035, 0, 4], 'false,true,true': [2.06, 51, 17], 'false,true,false,true': [0.147, 0, 16], 'false,true,false,false': [2.89e-08, 33, 0], 'false,false,true,true': [1.811, 3, 43], 'false,false,true,false': [0.245, 65, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), enzyme(A, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'recursion_proteinclass(E, B), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), enzyme(A, J)'}, {'true,true,true,true': [0.0, 0, 3], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.036, 0, 8], 'false,true': [2.372, 86, 33], 'false,false,true,true': [0.239, 0, 3], 'false,false,true,false': [3.683, 69, 37], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [1.007, 6, 2]}]]
[{'': [-1.6148698540002277e-16, 0.20088824484428908], 'false': [0.172839506172839, 0.20683471987656754], 'false,false': [1.4802973661668753e-16, 0.20265346364883488], 'false,false,false': [0.19051160023795388, 0.20940075740699615], 'false,true': [-1.4802973661668753e-16, 4.7580986769649563e-17], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16], 'true,false': [0.0, 0.0]}, {'': [2.4223047810003414e-16, 0.19911889112720924], 'false': [0.18517139323642065, 0.21041693393447897], 'false,false': [0.20865240690870956, 0.23437500000000003], 'false,false,false': [0.23437500000000003, nan], 'false,false,true': [0.003121341480855966, 0.2030883658341628], 'false,true': [0.16388847213410268, 0.2085048010973937], 'false,true,false': [2.220446049250313e-16, -2.921639538487254e-17], 'true': [0.0, 6.344131569286608e-17]}, {'': [-2.0185873175002846e-16, 0.18473964213456473], 'false': [0.13783370277615217, 0.23279707926848076], 'false,false': [0.24902964150497459, 0.22372690769495676], 'false,false,true': [0.0016609624533550083, 0.004276878336353948], 'false,false,false': [0.2628061811215146, 0.22175582543967065], 'false,true': [0.12530566451504885, 0.10885160732619477], 'false,true,true': [0.1361027295965602, 2.7678059161817536e-06], 'true': [0.0, -6.344131569286608e-17]}, {'': [0.04373757375050922, 0.16037104991767814], 'false': [0.13727376948298436, 0.17991425661039603], 'false,false': [0.00510659215158249, 0.1792957956608064], 'false,false,false': [0.1417639833045226, 0.19898084059635984], 'false,true': [0.0791738922133021, 0.00026364035385589054], 'false,true,true': [nan, 0.07917389221330223], 'true': [0.10735586284215864, 1.1102230246251565e-16], 'true,true': [-3.700743415417188e-17, 0.0]}, {'': [0.06017192846173013, 0.13757377732775172], 'false': [0.12035063636273413, 0.13747675728471334], 'false,false': [0.08964958027342229, 0.18422308736725787], 'false,false,false': [0.1423065312531321, 0.20958275804256718], 'false,true': [nan, 0.12035063636273413], 'false,true,false': [0.1418389645894456, 0.006630435674677193], 'true': [0.06880499769120864, 0.0], 'true,false': [nan, 0.0]}, {'': [0.08824188666337608, 0.14733854612374403], 'false': [0.212627880314112, 0.14571974738815327], 'false,true': [nan, 0.212627880314112], 'false,false': [0.09551843978842771, 0.19399405163048739], 'false,false,false': [0.19345314343328537, 0.1995359854428714], 'true': [2.4671622769447922e-17, 0.17340463414076646], 'true,true': [2.4671622769447922e-17, nan]}, {'': [0.07826004121735643, 0.1392267008996806], 'false': [0.09185573897067563, 0.17757727062078854], 'false,false': [0.004080975177319553, 0.17943260776308523], 'false,false,false': [0.17943260776308523, nan], 'false,true': [0.010249957277640274, 0.0001343989489428886], 'true': [0.0, 0.10188222481170779], 'false,true,true': [nan, 0.01024995727764022], 'true,true': [0.0, nan]}, {'': [0.0004957632389477732, 0.12160829667257683], 'false': [0.0533146240359113, 0.19404710216213958], 'false,false': [0.22092614444610795, 0.19290860872958895], 'false,false,true': [0.0, 0.003057575157145618], 'false,false,false': [0.19290860872958895, nan], 'true': [5.484599215129412e-05, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [0.0, 0.0]}, {'': [0.00027004934542168064, 0.12797654853305737], 'false': [0.062188019727527376, 0.19457927434689873], 'false,false': [0.19457927434689873, nan], 'false,false,true': [0.0712863391038282, 0.0009216101057594218], 'false,true': [0.06239996686061723, 0.05940793345900166], 'false,true,false': [0.001350006755887534, 2.5232341468753557e-17], 'true': [4.6878398017155144e-05, 0.00030896268106058583]}, {'': [0.00018483477304030084, 0.0872448303894461], 'false': [0.04727046942596471, 0.12696966474261404], 'false,false': [0.12639774034825854, 0.13313840325422416], 'false,false,false': [0.0, 0.12685513050402178], 'false,false,true': [0.018973831311169486, 0.12799141245832818], 'true': [0.0, 0.00015989787569700709], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;true,false;interaction(A, E), interaction(C, E).;true;true
0;false;interaction(A, F), interaction(F, A).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;enzyme(A, D).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(E, F), interaction(A, F).;true;true
1;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;enzyme(A, D).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,true,true;interaction(G, E), interaction(A, G).;true;true
2;false,false;enzyme(A, H).;true;true
2;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;enzyme(A, D), interaction(C, E).;true;true
3;true,true;interaction(A, E).;true;true
3;false;interaction(A, F).;true;true
3;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), interaction(D, A).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(C, A), enzyme(A, D).;true;true
6;false;interaction(A, F).;true;true
6;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, A), interaction(D, C).;true;true
7;true,false;enzyme(A, F).;true;true
7;false;interaction(A, G).;true;true
7;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;false,false,true;interaction(I, H), interaction(H, I).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), interaction(C, D).;true;true
8;false;interaction(A, E).;true;true
8;false,true;interaction(E, F), interaction(A, F).;true;true
8;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
8;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, A), enzyme(A, D).;true;true
9;false;interaction(A, F).;true;true
9;false,false;interaction(G, A), interaction(H, G).;true;true
9;false,false,false;interaction(I, A), enzyme(A, J).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.1418510649004877;  // std dev = 3.33e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, J), interaction(A, K) )
%   | | | then return 0.2812258581764354;  // std dev = 2.519, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.17866175561233197;  // std dev = 5.829, 156.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=50 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.45048980206308525;  // std dev = 0.413, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.050091802282510214;  // std dev = 0.364, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.827668751597583;  // std dev = 0.029, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.175316292587864;  // std dev = 0.113, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( complex(A, H), phenotype(A, I) )
%   | | then if ( complex(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8061030585913112;  // std dev = 0.141, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.17052068762351322;  // std dev = 0.113, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.2264616764898372;  // std dev = 4.462, 84.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=33 */
%   | | | else return 0.33497960738476334;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.3553664367462845;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.49542705860962893;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.5666567982606237;  // std dev = 1.320, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.4148072869306738;  // std dev = 0.669, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.012681974254781644;  // std dev = 0.313, 129.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=20 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.714088680860617;  // std dev = 0.983, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.1891349914217006;  // std dev = 0.144, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.0799113021542954;  // std dev = 4.075, 88.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=25 */
%   | | | else return 0.4680362850402004;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4872810673271228;  // std dev = 0.015, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.6578553228279378;  // std dev = 0.388, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return 0.7474788878200305;  // std dev = 0.136, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.13988635616935943;  // std dev = 0.107, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | | else return -0.1694021270852342;  // std dev = 0.045, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.10710893578632778;  // std dev = 2.509, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return 0.192442493460604;  // std dev = 3.671, 62.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=26 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.0033995733822185237;  // std dev = 0.746, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.049767141265919156;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.2676338316696419;  // std dev = 0.306, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.36464820646304663;  // std dev = 0.021, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then return -0.021854236579272143;  // std dev = 0.239, 54.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=10 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.438155168767245;  // std dev = 0.071, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.031411466162845396;  // std dev = 2.569, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | else if ( enzyme(A, H), complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5593674942561839;  // std dev = 0.297, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.18256663325710848;  // std dev = 0.251, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.0653335563192703;  // std dev = 1.880, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.1263027123962487;  // std dev = 4.000, 78.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=30 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.30526611982431356;  // std dev = 0.016, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.42569754593769715;  // std dev = 0.253, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.13595066507973236;  // std dev = 0.746, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, H), interaction(D, H) )
%   | | | then return -0.07286664573853771;  // std dev = 1.143, 35.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=2 */
%   | | | else return 0.0637328157962626;  // std dev = 3.858, 115.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=37 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then if ( location(I, J), interaction(K, A) )
%   | | | then return -0.07785353732146894;  // std dev = 0.615, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.06973869766146823;  // std dev = 1.460, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return -0.017812944220842262;  // std dev = 3.359, 74.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=18 */
%   | | | else return -0.1487271120056042;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.24466633165282206;  // std dev = 0.014, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.3695780843733593;  // std dev = 1.384, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | | else return 0.5061659686263669;  // std dev = 0.075, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( enzyme(A, H), location(A, I) )
%   | | | then return -0.14009021611180908;  // std dev = 0.136, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.11684212242900052;  // std dev = 0.080, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.01456319052835933;  // std dev = 2.628, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | | else return 0.12191192196034178;  // std dev = 3.520, 60.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=24 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.01357821191169599;  // std dev = 0.579, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.06678563068094537;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20234699068271952;  // std dev = 0.012, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.024887846980253592;  // std dev = 1.576, 70.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=14 */
%   | | | else return 0.08502549077744806;  // std dev = 0.786, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.10572780536215752;  // std dev = 1.217, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.01652201988982;  // std dev = 1.205, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then if ( interaction(L, K), interaction(K, L) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3733010256011649;  // std dev = 0.248, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return -0.023440333190488345;  // std dev = 3.496, 91.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=23 */
%   | | | else return 0.039067778122552035;  // std dev = 3.177, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17166642741842775;  // std dev = 0.011, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, A), interaction(A, F) )
%   | | | then return -0.00575788342325124;  // std dev = 1.093, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return 0.09536758194462111;  // std dev = 1.356, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.3188587590174277;  // std dev = 0.948, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.1288994490530414;  // std dev = 0.056, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.3918252676455806;  // std dev = 1.314, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.20219324575391368;  // std dev = 3.515, 65.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=35 */
%   | | else if ( enzyme(A, K), complex(A, L) )
%   | | | then return -0.14585788125168844;  // std dev = 0.099, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.27534549338366204;  // std dev = 0.212, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then return 0.14041473911202018;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.15670833230897885;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.10639056894372148;  // std dev = 0.865, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then return 0.005702692362158658;  // std dev = 0.203, 87.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=24 */
%   | | else return -0.04415643663218802;  // std dev = 0.242, 43.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(K, A), location(K, L) )
%   | | | then return 0.032007789992657854;  // std dev = 3.974, 109.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=38 */
%   | | | else return 0.20461330940319886;  // std dev = 0.906, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(M, A), enzyme(A, N) )
%   | | | then return -0.04948425157017125;  // std dev = 0.568, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.10466883049634439;  // std dev = 0.985, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */


Results
   AUC ROC   = 0.981145
   AUC PR    = 0.268149
   CLL	      = -0.214725
   Precision = 0.251095 at threshold = 0.5
   Recall    = 0.609929
   F1        = 0.355739


Total learning time: 14.607 seconds
Total inference time: 77.239 seconds
AUC ROC: 0.981145


Results scoring model
   AUC ROC   = 0.981477
   AUC PR    = 0.292928
   CLL	      = -0.216633
   Precision = 0.318182 at threshold = 0.5
   Recall    = 0.643678
   F1        = 0.425856


Total scoring time: 23.906 seconds
Refined model CLL: -0.216633


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.987785
   AUC PR    = 0.306877
   CLL	      = -0.206243
   Precision = 0.252427 at threshold = 0.5
   Recall    = 0.64539
   F1        = 0.362911


Total learning time: 49.424 seconds
Total inference time: 13.41 seconds
AUC ROC: 0.987785
Total revision time: 49.424
Best scored revision CLL: -0.208439


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:11:53
{'AUC ROC': 0.987785, 'AUC PR': 0.306877, 'CLL': -0.206243, 'Precision': [0.252427, 0.5], 'Recall': 0.64539, 'F1': 0.362911, 'Learning time': 49.424, 'Inference time': 13.41, 'parameter': {'AUC ROC': 0.987785, 'AUC PR': 0.306877, 'CLL': -0.206243, 'Precision': [0.252427, 0.5], 'Recall': 0.64539, 'F1': 0.362911, 'Learning time': 3.429, 'Inference time': 13.41}}


Starting fold 2

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos	 examples: 265
Target test neg examples: 35157

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;false;true
0;true,false;follows(E, A), follows(E, C).;false;false
0;false;follows(F, A), follows(A, F).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(H, A), recursion_accounttype(H, B).;false;true
0;false,false,false;follows(I, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;tweets(A, D).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(F, E), follows(F, A).;false;true
1;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(E, G), follows(G, A).;false;false
2;false,false;tweets(A, H).;true;true
2;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), follows(E, C).;true;false
3;true,true;follows(E, A).;false;false
3;false;follows(F, A).;true;true
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false,true,true;follows(G, F), follows(A, G).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;tweets(A, I).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;true
4;true,false;follows(A, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,true;follows(H, A), follows(H, G).;false;true
4;false,true,false;tweets(A, I).;false;false
4;false,false;follows(J, A).;false;true
4;false,false,false;tweets(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), follows(A, D).;true;false
5;true,true;follows(D, E), follows(C, E).;false;false
5;false;follows(A, F), recursion_accounttype(F, B).;true;true
5;false,true;tweets(F, G), follows(F, H).;true;false
5;false,true,true;follows(H, A), tweets(A, G).;false;false
5;false,false;follows(I, A).;false;true
5;false,false,false;follows(A, J), follows(J, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, C), tweets(A, D).;true;false
6;true,true;follows(A, E), follows(E, C).;false;false
6;false;follows(F, A).;true;true
6;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
6;false,true,true;follows(A, H), recursion_accounttype(H, B).;false;false
6;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(C, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(H, I), follows(I, H).;false;false
7;false,false,false;follows(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(D, C).;false;false
8;false;follows(E, A).;true;true
8;false,true;follows(F, E), follows(F, A).;false;true
8;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(A, C), tweets(A, D).;true;false
9;true,true;follows(A, E), follows(C, E).;true;false
9;true,true,true;recursion_accounttype(E, B), follows(E, C).;false;false
9;false;follows(F, A).;false;true
9;false,false;follows(A, G), follows(G, H).;true;true
9;false,false,true;recursion_accounttype(H, B).;false;false
9;false,false,false;follows(A, I), tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7672398441904213;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.1418510649004877;  // std dev = 3.16e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.11740819435877163;  // std dev = 3.220, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | | else return 0.14473430095317083;  // std dev = 5.791, 164.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=47 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.7407284363937193;  // std dev = 0.040, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5725884543298089;  // std dev = 0.935, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.031306264110703697;  // std dev = 3.688, 107.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=21 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.7404032799285906;  // std dev = 0.950, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.15327391631133394;  // std dev = 0.051, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.49294710813219694;  // std dev = 1.098, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.14982272908498187;  // std dev = 5.365, 135.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=42 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.1967443124731676;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.5768019061861495;  // std dev = 0.050, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6201789273476501;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.6121658561156522;  // std dev = 1.246, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.49131342889042023;  // std dev = 0.702, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.013459275553325769;  // std dev = 3.221, 110.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=16 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7758491621707146;  // std dev = 0.255, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.1827211351622653;  // std dev = 0.015, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.2841753811109307;  // std dev = 0.825, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11901711759703461;  // std dev = 5.143, 126.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=38 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(C, E) )
%   | then if ( interaction(A, E) )
%   | | then return 0.43058737322597523;  // std dev = 0.045, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.36065289042183923;  // std dev = 0.759, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.489027058729511;  // std dev = 2.306, 43.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=36 */
%   | | else return -0.13526116958990045;  // std dev = 0.174, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.338718952696573;  // std dev = 0.881, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.18250006330334978;  // std dev = 1.916, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.12512293112133274;  // std dev = 5.057, 116.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=38 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.19159141470593605;  // std dev = 1.422, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | else if ( interaction(E, A), complex(A, F) )
%   | | then return 0.34533696909985745;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.34533696909985745;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(G, H) )
%   | | then return 0.4731624847988439;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.38011253205926127;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.46792671217337;  // std dev = 0.016, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, J) )
%   | | then return 0.052602109554400825;  // std dev = 3.419, 115.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=33 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.15038119559499988;  // std dev = 1.881, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.05087882187035798;  // std dev = 5.250, 139.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=38 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, C) )
%   | | then return 0.2200817912883961;  // std dev = 0.981, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.2938680989672261;  // std dev = 0.049, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2719132833084582;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( complex(F, G), interaction(H, F) )
%   | | then if ( interaction(A, H), complex(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1530327713014579;  // std dev = 1.024, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0.365630577314249;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, I) )
%   | | then return 0.040080154195855366;  // std dev = 3.333, 122.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=33 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.07108738059926716;  // std dev = 5.204, 136.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=42 */
%   | | | else return 0.08697781281385185;  // std dev = 1.760, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then if ( interaction(E, A), interaction(C, E) )
%   | | then return 0.24470947869361148;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1996040483982649;  // std dev = 0.734, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.32439458118973974;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4804634210295285;  // std dev = 1.165, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | else return -0.13118292535363718;  // std dev = 0.148, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2783033673298442;  // std dev = 0.058, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.06882702574710847;  // std dev = 5.443, 147.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=47 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.17292436860101645;  // std dev = 0.699, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( complex(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.18901023220039737;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G) )
%   | then return -0.013321761373331666;  // std dev = 2.955, 154.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=36 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, H), interaction(H, I) )
%   | | | then return 0.20001450011251165;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2326503598144661;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03468880781951353;  // std dev = 5.524, 158.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=47 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.06710262912916463;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.18616678892271346;  // std dev = 0.078, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return -0.01276549231359277;  // std dev = 2.183, 101.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=21 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.37962187683015325;  // std dev = 0.465, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.11184035504845828;  // std dev = 0.038, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.586272964318057;  // std dev = 2.116, 56.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=52 */
%   | | | else return -0.25717868571283203;  // std dev = 0.141, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( recursion_proteinclass(E, B), interaction(C, E) )
%   | | | then return 0.16634339975844692;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10732112219008537;  // std dev = 0.793, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( interaction(A, F) )
%   | then return 0.018553469023676415;  // std dev = 2.667, 118.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=36 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.036103455364693726;  // std dev = 0.779, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.00564809634178187;  // std dev = 4.334, 146.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=42 */
%   | | else if ( interaction(I, A), complex(A, J) )
%   | | | then return 0.3948487503375516;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1025095149381342;  // std dev = 1.273, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */


Results
   AUC ROC   = 0.990839
   AUC PR    = 0.330368
   CLL	      = -0.193414
   Precision = 0.374713 at threshold = 0.5
   Recall    = 0.615094
   F1        = 0.465714


Total learning time: 3.86 seconds
Total inference time: 12.522 seconds
AUC ROC: 0.990839


Results scoring model
   AUC ROC   = 0.978624
   AUC PR    = 0.200341
   CLL	      = -0.217796
   Precision = 0.16273 at threshold = 0.5
   Recall    = 0.596154
   F1        = 0.25567


Total scoring time: 8.106 seconds
Parameter learned model CLL: -0.217796


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F), interaction(F, A)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.953, 1, 10], 'true,false,true': [0.913, 1, 5], 'true,false,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 21], 'false,true,false': [3.16e-08, 33, 0], 'false,false,true': [0.913, 1, 5], 'false,false,false,true': [3.22, 40, 14], 'false,false,false,false': [5.791, 117, 47]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.04, 0, 11], 'true,false': [0.935, 1, 5], 'false,true,true': [3.688, 86, 21], 'false,true,false,true': [0.95, 1, 15], 'false,true,false,false': [0.051, 27, 0], 'false,false,true,true': [1.098, 2, 5], 'false,false,true,false': [5.365, 93, 42], 'false,false,false,true': [1.793, 9, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, E), interaction(A, G)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.05, 0, 11], 'true,false': [0.02, 0, 5], 'false,true,true,true': [1.246, 2, 15], 'false,true,true,false': [0.702, 1, 5], 'false,true,false': [3.221, 94, 16], 'false,false,true,true': [0.255, 0, 12], 'false,false,true,false': [0.015, 32, 0], 'false,false,false,true': [0.825, 1, 2], 'false,false,false,false': [5.143, 88, 38]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D), interaction(C, E)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I)'}, {'true,true,true': [0.045, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.759, 1, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.306, 7, 36], 'false,true,false': [0.174, 88, 0], 'false,false,true': [0.881, 1, 5], 'false,false,false,true': [1.916, 13, 9], 'false,false,false,false': [5.057, 78, 38]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'interaction(E, A), complex(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H), interaction(G, H)', 'false,true,false': 'complex(A, I)', 'false,false': 'interaction(A, J)', 'false,false,false': 'complex(A, K)'}, {'true,true': [1.422, 3, 14], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true,true': [1.05e-08, 0, 3], 'false,true,false,true': [0.049, 0, 3], 'false,true,false,false': [0.016, 0, 2], 'false,false,true': [3.419, 82, 33], 'false,false,false,true': [1.881, 13, 9], 'false,false,false,false': [5.25, 101, 38]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'interaction(E, D), interaction(E, C)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'complex(F, G), interaction(H, F)', 'false,true,true': 'interaction(A, H), complex(A, G)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.981, 1, 10], 'true,true,false': [0.049, 0, 4], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.024, 2, 7], 'false,true,false': [0.0, 0, 1], 'false,false,true': [3.333, 89, 33], 'false,false,false,true': [5.204, 94, 42], 'false,false,false,false': [1.76, 10, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(A, D)', 'true,true': 'interaction(E, A), interaction(C, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [0.734, 1, 12], 'false,true,true,true': [0.0, 0, 3], 'false,true,true,false': [1.165, 1, 33], 'false,true,false': [0.148, 89, 0], 'false,false,true': [0.058, 0, 5], 'false,false,false,true': [5.443, 100, 47], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'complex(A, E), interaction(C, A)', 'true,false,false': 'complex(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, H), interaction(H, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.699, 1, 14], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 2], 'true,false,false,false': [0.0, 0, 0], 'false,true': [2.955, 118, 36], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.041, 0, 4], 'false,false,false,true': [5.524, 111, 47], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true,true': [0.935, 1, 7], 'true,false': [0.078, 0, 9], 'false,true,true': [2.183, 80, 21], 'false,true,false,true': [0.465, 0, 15], 'false,true,false,false': [0.038, 20, 0], 'false,false,true,true': [2.116, 4, 52], 'false,false,true,false': [0.141, 94, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(A, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'recursion_proteinclass(E, B), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), complex(A, J)'}, {'true,true,true,true': [0.0, 0, 4], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.793, 1, 12], 'false,true': [2.667, 82, 36], 'false,false,true,true': [0.779, 2, 5], 'false,false,true,false': [4.334, 104, 42], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [1.273, 6, 4]}]]
[{'': [0.09418282548476423, 0.21501216293152575], 'false': [0.2376543209876543, 0.2078284438775516], 'false,true': [0.0, 3.027880976250427e-17], 'false,false': [0.1388888888888887, 0.20151923238784675], 'false,false,false': [0.19204389574759892, 0.20445419393218417], 'true': [0.0826446280991734, 0.10937499999999978], 'true,false': [0.1388888888888887, 0.0]}, {'': [0.05793757114464855, 0.1892142270314398], 'false': [0.15468706372854832, 0.21792289693269895], 'false,false': [0.21669163114438417, 0.22959183673469385], 'false,false,false': [0.22959183673469385, nan], 'false,false,true': [0.17207863527783887, 0.2132010921285844], 'false,true': [0.12713549962116238, 0.20763112569205452], 'false,true,false': [0.05636177094186812, 9.68085877400456e-05], 'true': [0.00014229727095700767, 0.14560253858447603]}, {'': [0.0005840471258061197, 0.17839726686600124], 'false': [0.1443362558343732, 0.20436579983362127], 'false,false': [0.1837328994100421, 0.2109076025047997], 'false,false,false': [0.22707730316536287, 0.20988825493409372], 'false,false,true': [0.005410035755994302, 6.605572390690206e-06], 'false,true': [0.09173476270605162, 0.09429777827908606], 'false,true,true': [0.09127353111919417, 0.08224635702131056], 'true': [0.00022693032641103855, 7.612748364369538e-05]}, {'': [0.03523103804549487, 0.1719720712015514], 'false': [0.12675971710588457, 0.2105551040439253], 'false,false': [0.1293475540222065, 0.2123442266674163], 'false,false,false': [0.16695327533295123, 0.22042802220542132], 'false,true': [0.12366685430014394, 0.0003424599223233788], 'false,true,true': [nan, 0.12366685430014403], 'true': [0.0002229487833804722, 0.07202587452621262], 'true,true': [0.0002229487833804722, nan]}, {'': [0.10866073522577419, 0.15530237599599478], 'false': [0.002274252767917373, 0.1557251677302415], 'false,false': [0.1016258316370566, 0.19430881086661603], 'false,false,false': [0.16075767580732495, 0.19826616871779945], 'true': [0.11895617266143678, 0.0], 'false,true': [3.700743415417188e-17, 0.002380596068451535], 'false,true,false': [0.0007977766342419645, 0.0001280270822980878], 'true,false': [0.0, 0.0]}, {'': [0.057779348891645745, 0.15045781663786859], 'false': [0.10895423468940538, 0.1515010684791546], 'false,false': [0.09106063582093861, 0.19985921810786697], 'false,false,false': [0.1991070313222478, 0.20645162248936993], 'false,true': [0.11654047805386074, 0.0], 'false,true,true': [nan, 0.11654047805386074], 'true': [0.06536162051943253, 0.0], 'true,true': [0.08745926953072841, 0.0006005116577271624]}, {'': [0.032061605311613006, 0.14653247892250268], 'false': [0.08589866938164975, 0.19635898291700424], 'false,false': [0.0006664760274782356, 0.20157175847371378], 'false,false,false': [0.20157175847371378, nan], 'false,true': [0.03849408536394427, 0.00024676814031050564], 'false,true,true': [0.0, 0.039915691272502336], 'true': [0.0, 0.04144800879305653], 'true,true': [0.0, nan]}, {'': [0.028789254738951737, 0.12508853569466785], 'false': [0.05668244845522238, 0.18830713703197136], 'false,false': [0.0005046604008264732, 0.19312610853851603], 'false,false,false': [0.19312610853851603, nan], 'true': [0.0325973802718624, 0.0], 'false,false,true': [0.0, 0.0004178056333359742], 'true,false': [nan, 0.0], 'true,false,false': [0.0, nan]}, {'': [0.05535382117302383, 0.12924824249166839], 'false': [0.05424274163943132, 0.19642367650268713], 'false,false': [0.19642367650268713, nan], 'false,false,true': [0.07996134109167682, 0.00021217059241861386], 'true': [0.10936594215524016, 0.0006718591325651841], 'false,true': [0.047183667713407956, 0.06537185627153771], 'false,true,false': [0.014416742725991197, 7.313770365212635e-05]}, {'': [0.0375979836829895, 0.1005833397837352], 'false': [0.06029380188003363, 0.12956752449501657], 'false,false': [0.12678617772370152, 0.1543577537402551], 'false,false,false': [0.0, 0.16202423560937915], 'false,false,true': [0.08664185835548584, 0.12866846940220872], 'true': [0.0, 0.04834691657654939], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;true,false;interaction(A, E), interaction(C, E).;true;true
0;false;interaction(A, F), interaction(F, A).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;complex(A, D).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(E, F), interaction(A, F).;true;true
1;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;complex(A, D).;true;true
2;false;interaction(A, E).;true;true
2;false,false;complex(A, H).;true;true
2;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), interaction(C, E).;true;true
3;false;interaction(A, F).;true;true
3;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;true,false;interaction(E, A), complex(A, F).;true;true
4;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;false,true;interaction(A, H), interaction(G, H).;true;true
4;false,true,false;complex(A, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), interaction(D, A).;true;true
5;true,true;interaction(E, D), interaction(E, C).;true;true
5;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
5;false,true;complex(F, G), interaction(H, F).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(C, A), complex(A, D).;true;true
6;false;interaction(A, F).;true;true
6;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
6;false,true,true;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, A), interaction(D, C).;true;true
7;false;interaction(A, G).;true;true
7;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;false,false,true;interaction(I, H), interaction(H, I).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), interaction(C, D).;true;true
8;false;interaction(A, E).;true;true
8;false,true;interaction(E, F), interaction(A, F).;true;true
8;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
8;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, A), complex(A, D).;true;true
9;false;interaction(A, F).;true;true
9;false,false;interaction(G, A), interaction(H, G).;true;true
9;false,false,false;interaction(I, A), complex(A, J).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.7711924133603816;  // std dev = 0.282, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | else return -0.14185106490048768;  // std dev = 4.47e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( enzyme(A, H), phenotype(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.1418510649004877;  // std dev = 2.58e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( complex(A, K), interaction(L, A) )
%   | | | then return 0.053270886319024574;  // std dev = 2.538, 41.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
%   | | | else return 0.1581489350995114;  // std dev = 5.422, 140.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=42 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.6060705486578322;  // std dev = 0.344, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.09636130758652933;  // std dev = 3.244, 69.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
%   | | | else return -0.055068801990041126;  // std dev = 1.445, 31.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7720747070933618;  // std dev = 0.224, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.1452291328760271;  // std dev = 0.102, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( complex(A, I) )
%   | | | then return -0.0038046208807372417;  // std dev = 1.120, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.12578120129763914;  // std dev = 4.887, 125.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=36 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.32697899469347813;  // std dev = 1.481, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.135218191802373;  // std dev = 2.480, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.4889874240214249;  // std dev = 0.346, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else return 0.6141391644752608;  // std dev = 0.139, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6141084423712531;  // std dev = 1.172, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return -0.005386302005115082;  // std dev = 3.154, 99.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=17 */
%   | | else return -0.04745338451708077;  // std dev = 0.227, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.744356825930467;  // std dev = 0.243, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.16641691459633737;  // std dev = 0.075, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( location(A, K), phenotype(A, L) )
%   | | | then return 0.2184859415261376;  // std dev = 3.434, 52.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=21 */
%   | | | else return 0.11059453115661529;  // std dev = 3.600, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(C, E) )
%   | then return 0.5291271258680988;  // std dev = 0.086, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.3688426063304022;  // std dev = 0.259, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.44267395488726263;  // std dev = 1.580, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return 0.6299536078948558;  // std dev = 0.538, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.135865354633284;  // std dev = 0.160, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( phenotype(A, J), location(A, K) )
%   | | then if ( phenotype(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.5718033555379903;  // std dev = 1.944, 33.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=28 */
%   | | | else return -0.18680506828056453;  // std dev = 0.212, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | | then return 0.6432522859627116;  // std dev = 0.197, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.06450426245796703;  // std dev = 3.635, 73.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.3430670785241362;  // std dev = 0.033, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.010287171736926429;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.40203034016629147;  // std dev = 0.076, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5175070497518357;  // std dev = 0.013, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3938336505720269;  // std dev = 0.206, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then if ( location(A, J), location(I, J) )
%   | | | then return 0.005927419895106463;  // std dev = 2.382, 85.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=19 */
%   | | | else return 0.11233020190964396;  // std dev = 0.867, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(A, K), location(A, L) )
%   | | | then return 0.04266425108983768;  // std dev = 2.436, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | | | else return 0.13733168677316762;  // std dev = 4.461, 106.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=39 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.3014792923092417;  // std dev = 0.056, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.3900505698835002;  // std dev = 0.018, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( complex(E, F), interaction(G, E) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.13568137948439274;  // std dev = 0.402, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.38622967282061066;  // std dev = 0.220, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.4155550262782167;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A), complex(A, J) )
%   | | then if ( complex(I, J), interaction(I, I) )
%   | | | then return -0.12402023976843839;  // std dev = 0.044, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.019021015863097495;  // std dev = 2.550, 88.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=22 */
%   | | else if ( location(A, K), interaction(L, A) )
%   | | | then return 0.08689073908956739;  // std dev = 4.665, 143.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=49 */
%   | | | else return 0.17446110086947478;  // std dev = 1.837, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then return 0.2096758510811959;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then return -0.018774773154080094;  // std dev = 0.922, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.27273139326505996;  // std dev = 0.058, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.2706454640260825;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4230555331827776;  // std dev = 1.353, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | else return -0.1273427940700136;  // std dev = 0.185, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.31311879621444333;  // std dev = 0.199, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return -0.009771500407828223;  // std dev = 2.869, 61.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | | else return 0.07659548394913836;  // std dev = 3.856, 94.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( interaction(A, E), phenotype(E, F) )
%   | | then if ( interaction(E, E), recursion_proteinclass(E, B) )
%   | | | then return 0.17703645165695991;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.16722333583324372;  // std dev = 1.397, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0.24223752061316767;  // std dev = 0.126, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11827441112465002;  // std dev = 0.897, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.22063139151256453;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.019974596733747494;  // std dev = 0.225, 150.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=33 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.25204974113971224;  // std dev = 0.079, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.005949192666631455;  // std dev = 4.653, 163.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=42 */
%   | | | else return 0.17539551868065975;  // std dev = 1.562, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.07609550408028766;  // std dev = 0.314, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.2251454664257509;  // std dev = 0.047, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.004526883560314529;  // std dev = 2.208, 81.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=21 */
%   | | | else return -0.12217573232299646;  // std dev = 0.045, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.2488080963622267;  // std dev = 1.196, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.10839004132227062;  // std dev = 0.086, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | then if ( complex(A, L), enzyme(A, M) )
%   | | | then return 0.11103684218052805;  // std dev = 0.978, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.26618737248171015;  // std dev = 3.725, 74.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=45 */
%   | | else return -0.2147014863583193;  // std dev = 0.058, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.18558707230025612;  // std dev = 0.048, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(G, E), complex(A, H) )
%   | | | then return 0.06202872565882873;  // std dev = 1.144, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return -0.008944825562428982;  // std dev = 1.042, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return -0.07558754352604892;  // std dev = 1.566, 40.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=6 */
%   | | | else return -0.0024638354498826695;  // std dev = 1.484, 52.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( location(A, L) )
%   | | | then return 0.053592807082360305;  // std dev = 3.967, 121.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=44 */
%   | | | else return -0.05147722877012282;  // std dev = 1.074, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(M, A), complex(A, N) )
%   | | | then return 0.13502099994789202;  // std dev = 0.392, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.07097187367793921;  // std dev = 1.698, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */


Results
   AUC ROC   = 0.984658
   AUC PR    = 0.355208
   CLL	      = -0.190452
   Precision = 0.371882 at threshold = 0.5
   Recall    = 0.618868
   F1        = 0.464589


Total learning time: 15.932 seconds
Total inference time: 105.247 seconds
AUC ROC: 0.984658


Results scoring model
   AUC ROC   = 0.980727
   AUC PR    = 0.248133
   CLL	      = -0.211783
   Precision = 0.174387 at threshold = 0.5
   Recall    = 0.615385
   F1        = 0.271762


Total scoring time: 35.847 seconds
Refined model CLL: -0.211783


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.984658
   AUC PR    = 0.355208
   CLL	      = -0.190452
   Precision = 0.371882 at threshold = 0.5
   Recall    = 0.618868
   F1        = 0.464589


Total learning time: 63.745000000000005 seconds
Total inference time: 105.247 seconds
AUC ROC: 0.984658
Total revision time: 63.745000000000005
Best scored revision CLL: -0.211783


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:14:56
{'AUC ROC': 0.984658, 'AUC PR': 0.355208, 'CLL': -0.190452, 'Precision': [0.371882, 0.5], 'Recall': 0.618868, 'F1': 0.464589, 'Learning time': 63.745000000000005, 'Inference time': 105.247, 'parameter': {'AUC ROC': 0.990839, 'AUC PR': 0.330368, 'CLL': -0.193414, 'Precision': [0.374713, 0.5], 'Recall': 0.615094, 'F1': 0.465714, 'Learning time': 3.86, 'Inference time': 12.522}}


Starting fold 3

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos	 examples: 277
Target test neg examples: 38883

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;false;true
0;true,false;follows(E, A), follows(E, C).;false;false
0;false;follows(F, A), follows(A, F).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(H, A), recursion_accounttype(H, B).;false;true
0;false,false,false;follows(I, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;tweets(A, D).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(F, E), follows(F, A).;false;true
1;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(E, G), follows(G, A).;false;false
2;false,false;tweets(A, H).;true;true
2;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), follows(E, C).;true;false
3;true,true;follows(E, A).;false;false
3;false;follows(F, A).;true;true
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false,true,true;follows(G, F), follows(A, G).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;tweets(A, I).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;true
4;true,false;follows(A, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,true;follows(H, A), follows(H, G).;false;true
4;false,true,false;tweets(A, I).;false;false
4;false,false;follows(J, A).;false;true
4;false,false,false;tweets(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), follows(A, D).;true;false
5;true,true;follows(D, E), follows(C, E).;false;false
5;false;follows(A, F), recursion_accounttype(F, B).;true;true
5;false,true;tweets(F, G), follows(F, H).;true;false
5;false,true,true;follows(H, A), tweets(A, G).;false;false
5;false,false;follows(I, A).;false;true
5;false,false,false;follows(A, J), follows(J, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, C), tweets(A, D).;true;false
6;true,true;follows(A, E), follows(E, C).;false;false
6;false;follows(F, A).;true;true
6;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
6;false,true,true;follows(A, H), recursion_accounttype(H, B).;false;false
6;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(C, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(H, I), follows(I, H).;false;false
7;false,false,false;follows(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(D, C).;false;false
8;false;follows(E, A).;true;true
8;false,true;follows(F, E), follows(F, A).;false;true
8;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(A, C), tweets(A, D).;true;false
9;true,true;follows(A, E), follows(C, E).;true;false
9;true,true,true;recursion_accounttype(E, B), follows(E, C).;false;false
9;false;follows(F, A).;false;true
9;false,false;follows(A, G), follows(G, H).;true;true
9;false,false,true;recursion_accounttype(H, B).;false;false
9;false,false,false;follows(A, I), tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.14020021715079295;  // std dev = 4.867, 117.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=33 */
%   | | | else return 0.14847151574467218;  // std dev = 5.055, 124.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=36 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.04486451544050828;  // std dev = 3.295, 70.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=14 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8244627272059895;  // std dev = 0.195, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.15238129501181363;  // std dev = 0.101, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.16128369276366963;  // std dev = 4.447, 92.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=30 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.18525136859906727;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.4303664367462843;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.5553664367462843;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.7103298441736539;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5293134305093723;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.06385415114896896;  // std dev = 4.565, 145.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=34 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7980151653675817;  // std dev = 0.171, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.18479102471383532;  // std dev = 0.007, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.5988450854107304;  // std dev = 0.107, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12476050549271893;  // std dev = 3.990, 74.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=23 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(C, E) )
%   | then if ( interaction(A, E) )
%   | | then return 0.4481894436436951;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.42134806659398305;  // std dev = 0.029, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7097175732643439;  // std dev = 0.667, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return -0.15148088370276283;  // std dev = 0.194, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.4701081337836802;  // std dev = 0.122, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.0705878635872075;  // std dev = 2.537, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return 0.10253418780047487;  // std dev = 3.992, 75.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=23 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.33725432479389195;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(E, A), phenotype(A, F) )
%   | | then return 0.34462978080103684;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.32298014135855013;  // std dev = 0.020, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(G, H) )
%   | | then return 0.34159748118284117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.3804694975706936;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.3429008305082535;  // std dev = 0.105, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, J) )
%   | | then return 0.06381881191519281;  // std dev = 3.608, 128.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=36 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.07347508836325913;  // std dev = 2.474, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 0.07344839859888189;  // std dev = 4.026, 78.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=23 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, C) )
%   | | then return 0.2664514477455114;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.26000183284803524;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( phenotype(F, G), interaction(H, F) )
%   | | then if ( interaction(A, H), phenotype(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.26450896547135483;  // std dev = 0.044, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.09856671470234916;  // std dev = 0.844, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, I) )
%   | | then return 0.04413728860707614;  // std dev = 3.620, 133.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=36 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.024347161081960143;  // std dev = 4.198, 105.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=27 */
%   | | | else return 0.06850156286657547;  // std dev = 2.355, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(E, A), interaction(C, E) )
%   | | then return 0.2209938615792406;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21231708662728305;  // std dev = 0.024, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.25042487275840386;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5375292741536725;  // std dev = 0.725, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return -0.14825075276848498;  // std dev = 0.171, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.25001081298899325;  // std dev = 0.106, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.06601705334772977;  // std dev = 4.670, 117.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.18266891171390173;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.18893866572574217;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17513886007765522;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, G) )
%   | then return 0.019031714287119406;  // std dev = 2.865, 134.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=37 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, H), interaction(H, I) )
%   | | | then return 0.19123944114949049;  // std dev = 0.053, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.21677920804743386;  // std dev = 0.071, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.05353716510784307;  // std dev = 4.655, 118.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.15696228879822943;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.08392861764400884;  // std dev = 0.672, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.005010564907168688;  // std dev = 2.216, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.32889890141954575;  // std dev = 0.311, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.1239726473199566;  // std dev = 0.074, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6234178492942405;  // std dev = 1.148, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return -0.24574113122955646;  // std dev = 0.386, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( recursion_proteinclass(E, B), interaction(C, E) )
%   | | | then return 0.13937280073093483;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1425597183943814;  // std dev = 0.020, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, F) )
%   | then return 0.013303260079551724;  // std dev = 2.651, 128.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=37 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.07970353932016211;  // std dev = 0.007, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.00868889382079066;  // std dev = 3.332, 102.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=30 */
%   | | else if ( interaction(I, A), phenotype(A, J) )
%   | | | then return 0.02757399406748709;  // std dev = 0.851, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.12190343012902792;  // std dev = 1.509, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */


Results
   AUC ROC   = 0.986236
   AUC PR    = 0.241507
   CLL	      = -0.209049
   Precision = 0.199207 at threshold = 0.5
   Recall    = 0.725632
   F1        = 0.312597


Total learning time: 2.717 seconds
Total inference time: 16.355 seconds
AUC ROC: 0.986236


Results scoring model
   AUC ROC   = 0.996592
   AUC PR    = 0.5771
   CLL	      = -0.186736
   Precision = 0.543689 at threshold = 0.5
   Recall    = 0.608696
   F1        = 0.574359


Total scoring time: 4.191 seconds
Parameter learned model CLL: -0.186736


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F), interaction(F, A)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 4], 'false,true,false': [1.83e-08, 25, 0], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [4.867, 84, 33], 'false,false,false,false': [5.055, 88, 36]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.0, 0, 7], 'false,true,true': [3.295, 56, 14], 'false,true,false,true': [0.195, 0, 23], 'false,true,false,false': [0.101, 51, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [4.447, 62, 30], 'false,false,false,true': [2.426, 17, 9], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, E), interaction(A, G)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.935, 1, 7], 'true,false': [0.0, 0, 7], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 2], 'false,true,false': [4.565, 111, 34], 'false,false,true,true': [0.171, 0, 15], 'false,false,true,false': [0.007, 20, 0], 'false,false,false,true': [0.107, 0, 3], 'false,false,false,false': [3.99, 51, 23]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D), interaction(C, E)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true,true,true': [0.0, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.029, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.667, 0, 37], 'false,true,false': [0.194, 116, 0], 'false,false,true': [0.122, 0, 5], 'false,false,false,true': [2.537, 33, 13], 'false,false,false,false': [3.992, 52, 23]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'interaction(E, A), phenotype(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H), interaction(G, H)', 'false,true,false': 'phenotype(A, I)', 'false,false': 'interaction(A, J)', 'false,false,false': 'phenotype(A, K)'}, {'true,true': [0.019, 0, 5], 'true,false,true': [0.004, 0, 2], 'true,false,false': [0.02, 0, 7], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.105, 0, 3], 'false,false,true': [3.608, 92, 36], 'false,false,false,true': [2.474, 31, 13], 'false,false,false,false': [4.026, 55, 23]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'interaction(E, D), interaction(E, C)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'phenotype(F, G), interaction(H, F)', 'false,true,true': 'interaction(A, H), phenotype(A, G)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.017, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.026, 0, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.044, 0, 2], 'false,true,false': [0.844, 1, 4], 'false,false,true': [3.62, 97, 36], 'false,false,false,true': [4.198, 78, 27], 'false,false,false,false': [2.355, 20, 9]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'true,true': 'interaction(E, A), interaction(C, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [0.024, 0, 10], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.725, 0, 36], 'false,true,false': [0.171, 101, 0], 'false,false,true': [0.106, 0, 5], 'false,false,false,true': [4.67, 81, 36], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'phenotype(A, E), interaction(C, A)', 'true,false,false': 'phenotype(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, H), interaction(H, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.012, 0, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.003, 0, 3], 'true,false,false,false': [0.0, 0, 6], 'false,true': [2.865, 97, 37], 'false,false,true,true': [0.053, 0, 2], 'false,false,true,false': [0.071, 0, 3], 'false,false,false,true': [4.655, 82, 36], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true,true': [0.01, 0, 5], 'true,false': [0.672, 1, 9], 'false,true,true': [2.216, 49, 14], 'false,true,false,true': [0.311, 0, 23], 'false,true,false,false': [0.074, 60, 0], 'false,false,true,true': [1.148, 0, 41], 'false,false,true,false': [0.386, 86, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'recursion_proteinclass(E, B), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), phenotype(A, J)'}, {'true,true,true,true': [0.0, 0, 4], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.02, 0, 10], 'false,true': [2.651, 91, 37], 'false,false,true,true': [0.007, 0, 2], 'false,false,true,false': [3.332, 72, 30], 'false,false,false,true': [0.851, 6, 3], 'false,false,false,false': [1.509, 8, 6]}]]
[{'': [-2.5376526277146434e-16, 0.20318677685950484], 'false': [0.11890606420927453, 0.21032454226981434], 'false,false': [0.0, 0.20433532480501507], 'false,false,false': [0.20249835634451155, 0.20603537981269648], 'false,true': [0.0, 1.3322676295501878e-17], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, 1.4802973661668753e-16]}, {'': [1.2688263138573217e-16, 0.20110179982509502], 'false': [0.18359422256391927, 0.21893924731741565], 'false,false': [0.21686294358343164, 0.22633136094674539], 'false,false,false': [0.22633136094674539, nan], 'false,false,true': [0.0, 0.21494808384947045], 'false,true': [0.1550946469393829, 0.2050533590907005], 'false,true,false': [0.0016534134394693375, 0.0001995354521891403], 'true': [-6.344131569286608e-17, -6.344131569286608e-17]}, {'': [0.062222222222222, 0.1822066844814792], 'false': [0.14641747552108555, 0.22405073972952935], 'false,false': [0.23738139554832313, 0.21527804842192685], 'false,false,true': [0.0019392066175319893, 2.4627054087345003e-06], 'false,false,false': [0.0037807857793726494, 0.21509552713920874], 'false,true': [0.0072815426701951695, 0.1436921575942234], 'true': [0.10937499999999997, 0.0], 'false,true,true': [0.0, 0.0]}, {'': [0.00023525208879179464, 0.1597195840346906], 'false': [0.13913933511747012, 0.18341063222276993], 'false,false': [0.002985760981242702, 0.18514452329040956], 'false,false,false': [0.1399453766732325, 0.21247868216039897], 'false,true': [0.012035788676209355, 0.0003246244372461314], 'false,true,true': [nan, 0.012035788676209452], 'true': [-7.401486830834377e-17, 0.00010292278884646566], 'true,true': [-7.401486830834377e-17, nan]}, {'': [0.00012980025630653685, 0.1400359952242603], 'false': [0.002146809847832387, 0.14141906448246014], 'false,false': [0.10170057634044126, 0.18304334871193317], 'false,false,false': [0.13906462030238076, 0.20785186191682006], 'false,true': [0.0, 0.0025317225580425927], 'false,true,false': [0.0, 0.0036549756987981907], 'true': [7.549235028010415e-05, 0.00012798872440421426], 'true,false': [9.18780551319165e-06, 5.7774757867437975e-05]}, {'': [7.722510749054643e-05, 0.13561368218317643], 'false': [0.10768897868126721, 0.13605341903430831], 'false,false': [0.0985453543797575, 0.17322939820808486], 'false,false,false': [0.16783027750932075, 0.1912502582536009], 'false,true': [0.0009707194316599665, 0.14250861649817193], 'false,true,true': [nan, 0.0009707194316599665], 'true': [5.7249498185019124e-05, 7.346640667090416e-05], 'true,true': [5.7249498185019124e-05, nan]}, {'': [5.6149965089029905e-05, 0.13525446469784053], 'false': [0.09481358469677312, 0.18014896764654706], 'false,false': [0.002233877441910603, 0.18636472976133453], 'false,false,false': [0.18636472976133453, nan], 'false,true': [0.016378539285903757, 0.0002911720205071847], 'false,true,true': [0.0, 0.014605689594281854], 'true': [0.0, 5.709954439121478e-05], 'true,true': [0.0, nan]}, {'': [3.970394931975184e-05, 0.1171436553043639], 'false': [0.0612361855772422, 0.1771861799462029], 'false,false': [0.0017149782304116457, 0.18366948985568138], 'false,false,false': [0.18366948985568138, nan], 'false,false,true': [0.0013909453073399497, 0.0016700883018456087], 'true': [2.758241901243408e-05, 4.337185345384039e-05], 'true,false': [nan, 4.337185345384039e-05], 'true,false,false': [3.1591364115235443e-06, 0.0]}, {'': [0.03128281334789933, 0.1132986248671433], 'false': [0.057685648239309925, 0.17668995091742437], 'false,false': [0.17668995091742437, nan], 'false,false,true': [0.032126361195268086, 0.001728457969808085], 'false,true': [0.07792616892062686, 0.04231710961541922], 'false,true,false': [0.0042088843344001035, 9.236249369597068e-05], 'true': [2.1607071320789428e-05, 0.045135444112100985]}, {'': [3.095300735184159e-05, 0.08352478022212952], 'false': [0.05488860572832248, 0.11233294911070293], 'false,false': [0.10683295694941473, 0.13260387185212913], 'false,false,false': [0.08043948941383752, 0.1626562749849169], 'false,false,true': [2.6447718187440697e-05, 0.10883021992316223], 'true': [0.0, 4.0432369094398066e-05], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;true,false;interaction(A, E), interaction(C, E).;true;true
0;false;interaction(A, F), interaction(F, A).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;phenotype(A, D).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(E, F), interaction(A, F).;true;true
1;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
1;false,false;interaction(H, A), interaction(I, H).;true;true
1;false,false,true;recursion_proteinclass(I, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;phenotype(A, D).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,true,true;interaction(G, E), interaction(A, G).;true;true
2;false,false;phenotype(A, H).;true;true
2;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;phenotype(A, D), interaction(C, E).;true;true
3;false;interaction(A, F).;true;true
3;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;true,false;interaction(E, A), phenotype(A, F).;true;true
4;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;false,true;interaction(A, H), interaction(G, H).;true;true
4;false,true,false;phenotype(A, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), interaction(D, A).;true;true
5;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
5;false,true;phenotype(F, G), interaction(H, F).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(C, A), phenotype(A, D).;true;true
6;false;interaction(A, F).;true;true
6;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
6;false,true,true;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, A), interaction(D, C).;true;true
7;true,false;phenotype(A, F).;true;true
7;false;interaction(A, G).;true;true
7;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;false,false,true;interaction(I, H), interaction(H, I).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), interaction(C, D).;true;true
8;false;interaction(A, E).;true;true
8;false,true;interaction(E, F), interaction(A, F).;true;true
8;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
8;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, A), phenotype(A, D).;true;true
9;false;interaction(A, F).;true;true
9;false,false;interaction(G, A), interaction(H, G).;true;true
9;false,false,true;recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.11689019384076958;  // std dev = 5.237, 143.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=37 */
%   | | | else return 0.18804584231600704;  // std dev = 4.631, 97.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=32 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109543;  // std dev = 1.05e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, A), enzyme(A, G) )
%   | | | then return 0.2209879125818679;  // std dev = 1.702, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.0957717968837277;  // std dev = 2.570, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.8255987772343703;  // std dev = 0.161, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.15702002208097354;  // std dev = 0.102, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.15851239865585393;  // std dev = 4.468, 94.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=30 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.12780016583610954;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.4051110902058575;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, D), interaction(A, F) )
%   | | | then return 0.672797060767321;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5290303847887619;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.0064969789803829316;  // std dev = 2.634, 65.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=11 */
%   | | | else return 0.13042085238168072;  // std dev = 3.582, 72.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=23 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.737893497483691;  // std dev = 0.963, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.18650827762015257;  // std dev = 0.106, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.5990440333277368;  // std dev = 0.107, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11960970232803249;  // std dev = 4.001, 75.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=23 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(C, E) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.26617758687744536;  // std dev = 0.677, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.6981431280273582;  // std dev = 0.101, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return -0.16355047458930763;  // std dev = 0.302, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6774335817751829;  // std dev = 0.503, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.16774323794807944;  // std dev = 0.138, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.14656257488995889;  // std dev = 2.385, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.08765716408851695;  // std dev = 2.908, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3274763653514426;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(E, A), phenotype(A, F) )
%   | | then return -0.012621486173183668;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3352072432843487;  // std dev = 0.044, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(G, H) )
%   | | then return 0.4779174198009791;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3755052210166322;  // std dev = 0.113, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.13906491486611414;  // std dev = 0.135, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.02702084786791882;  // std dev = 0.595, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.11512084647604448;  // std dev = 2.175, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | | else return 0.05708645327389862;  // std dev = 5.198, 186.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=53 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.25983223581529236;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, E) )
%   | | then return 0.2752662271070467;  // std dev = 0.063, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.05722606516299703;  // std dev = 0.847, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( phenotype(F, G), interaction(H, F) )
%   | | then return 0.2951116688649989;  // std dev = 0.144, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.31336300929802907;  // std dev = 0.181, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I) )
%   | | then if ( enzyme(I, J), complex(A, K) )
%   | | | then return -0.045161243086337316;  // std dev = 1.507, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | | else return 0.05921639237557533;  // std dev = 3.177, 104.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=32 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.07782385298254374;  // std dev = 3.736, 85.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=27 */
%   | | | else return 0.17875815958800495;  // std dev = 2.012, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.20787027433526617;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then return 0.21761079820329235;  // std dev = 0.033, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.27390564180682586;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.2932465306969687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.49942185681911033;  // std dev = 0.994, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | else return -0.1471428098271104;  // std dev = 0.035, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.2391947913515998;  // std dev = 0.196, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return -0.006742495381742363;  // std dev = 3.127, 71.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=17 */
%   | | | else return 0.046880691233071536;  // std dev = 3.177, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.19235933136378147;  // std dev = 0.028, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( phenotype(E, F) )
%   | | | then return -0.09897430163529582;  // std dev = 0.011, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.04953241516492475;  // std dev = 0.451, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | else if ( enzyme(A, G), location(A, H) )
%   | | | then return 0.07500532331186859;  // std dev = 1.707, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | | else return 0.01706454491473293;  // std dev = 2.124, 72.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=21 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, I), interaction(I, J) )
%   | | | then return 0.14834180386746043;  // std dev = 0.036, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.23430340223325766;  // std dev = 0.140, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.016090500229855708;  // std dev = 2.678, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | | else return 0.06899033354286513;  // std dev = 3.404, 65.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.153345400675846;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then return -0.16118093252645585;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.17189535806560702;  // std dev = 0.031, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G), interaction(A, G) )
%   | | then if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.060457556521926616;  // std dev = 2.069, 68.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=11 */
%   | | | else return 0.08438639939144271;  // std dev = 0.941, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0.011124642787588715;  // std dev = 0.213, 75.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=23 */
%   | else if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | then if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.2117316530589169;  // std dev = 2.523, 35.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   | | | else return 0.2463035260827483;  // std dev = 2.537, 36.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=22 */
%   | | else return -0.23657716277458865;  // std dev = 0.051, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.14947295149789533;  // std dev = 0.028, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.30111695508497294;  // std dev = 0.964, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.1460959504669943;  // std dev = 0.209, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( location(A, G) )
%   | | | then return -0.010016209320354973;  // std dev = 2.083, 76.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=18 */
%   | | | else return 0.09681146041258178;  // std dev = 0.476, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.08371779575155425;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.046524634657678685;  // std dev = 3.462, 91.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=30 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.0787890937099323;  // std dev = 1.377, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.5608036225062155;  // std dev = 0.133, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */


Results
   AUC ROC   = 0.973323
   AUC PR    = 0.238771
   CLL	      = -0.2207
   Precision = 0.156197 at threshold = 0.5
   Recall    = 0.66426
   F1        = 0.252921


Total learning time: 6.314 seconds
Total inference time: 114.309 seconds
AUC ROC: 0.973323


Results scoring model
   AUC ROC   = 0.982516
   AUC PR    = 0.478433
   CLL	      = -0.206677
   Precision = 0.26556 at threshold = 0.5
   Recall    = 0.695652
   F1        = 0.384384


Total scoring time: 9.502 seconds
Refined model CLL: -0.206677


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.986236
   AUC PR    = 0.241507
   CLL	      = -0.209049
   Precision = 0.199207 at threshold = 0.5
   Recall    = 0.725632
   F1        = 0.312597


Total learning time: 22.724 seconds
Total inference time: 16.355 seconds
AUC ROC: 0.986236
Total revision time: 22.724
Best scored revision CLL: -0.186736


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:17:30
{'AUC ROC': 0.986236, 'AUC PR': 0.241507, 'CLL': -0.209049, 'Precision': [0.199207, 0.5], 'Recall': 0.725632, 'F1': 0.312597, 'Learning time': 22.724, 'Inference time': 16.355, 'parameter': {'AUC ROC': 0.986236, 'AUC PR': 0.241507, 'CLL': -0.209049, 'Precision': [0.199207, 0.5], 'Recall': 0.725632, 'F1': 0.312597, 'Learning time': 2.717, 'Inference time': 16.355}}


Starting fold 4

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos	 examples: 283
Target test neg examples: 40479

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;false;true
0;true,false;follows(E, A), follows(E, C).;false;false
0;false;follows(F, A), follows(A, F).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(H, A), recursion_accounttype(H, B).;false;true
0;false,false,false;follows(I, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;tweets(A, D).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(F, E), follows(F, A).;false;true
1;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(E, G), follows(G, A).;false;false
2;false,false;tweets(A, H).;true;true
2;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), follows(E, C).;true;false
3;true,true;follows(E, A).;false;false
3;false;follows(F, A).;true;true
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false,true,true;follows(G, F), follows(A, G).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;tweets(A, I).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;true
4;true,false;follows(A, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,true;follows(H, A), follows(H, G).;false;true
4;false,true,false;tweets(A, I).;false;false
4;false,false;follows(J, A).;false;true
4;false,false,false;tweets(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), follows(A, D).;true;false
5;true,true;follows(D, E), follows(C, E).;false;false
5;false;follows(A, F), recursion_accounttype(F, B).;true;true
5;false,true;tweets(F, G), follows(F, H).;true;false
5;false,true,true;follows(H, A), tweets(A, G).;false;false
5;false,false;follows(I, A).;false;true
5;false,false,false;follows(A, J), follows(J, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, C), tweets(A, D).;true;false
6;true,true;follows(A, E), follows(E, C).;false;false
6;false;follows(F, A).;true;true
6;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
6;false,true,true;follows(A, H), recursion_accounttype(H, B).;false;false
6;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(C, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(H, I), follows(I, H).;false;false
7;false,false,false;follows(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(D, C).;false;false
8;false;follows(E, A).;true;true
8;false,true;follows(F, E), follows(F, A).;false;true
8;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(A, C), tweets(A, D).;true;false
9;true,true;follows(A, E), follows(C, E).;true;false
9;true,true,true;recursion_accounttype(E, B), follows(E, C).;false;false
9;false;follows(F, A).;false;true
9;false,false;follows(A, G), follows(G, H).;true;true
9;false,false,true;recursion_accounttype(H, B).;false;false
9;false,false,false;follows(A, I), tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7672398441904213;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995121;  // std dev = 4.21e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.1473055616055365;  // std dev = 5.841, 166.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=48 */
%   | | | else return 0.10814893509951236;  // std dev = 3.000, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.7396295416326016;  // std dev = 0.057, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.554337877755315;  // std dev = 1.322, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.018817695368645197;  // std dev = 3.281, 81.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7596786548785514;  // std dev = 1.668, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | | else return -0.1599046332948569;  // std dev = 0.049, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5364647368642408;  // std dev = 0.805, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.13075795313818153;  // std dev = 2.495, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.11719471056302823;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.44782859648303297;  // std dev = 0.962, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.5421107359465767;  // std dev = 0.917, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.2940680421903237;  // std dev = 0.596, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.6568631570231359;  // std dev = 0.193, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.09228009360215972;  // std dev = 5.243, 181.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=49 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7926792246936096;  // std dev = 0.187, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.17284443383477033;  // std dev = 0.003, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6461617417486869;  // std dev = 0.065, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.12824023654032113;  // std dev = 2.188, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, C) )
%   | then if ( interaction(E, A) )
%   | | then return 0.4569029670811915;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.48560410815930477;  // std dev = 0.066, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.32656048895603956;  // std dev = 1.224, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6363520420416315;  // std dev = 1.832, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.15300478595277642;  // std dev = 0.132, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.28389135983219005;  // std dev = 0.648, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.09546865682470035;  // std dev = 1.566, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.011757937615923829;  // std dev = 2.335, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.3677590791120529;  // std dev = 0.097, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), complex(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.4611637172902955;  // std dev = 0.055, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A), interaction(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, I) )
%   | | | then return 0.4150214921697897;  // std dev = 0.104, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.39385724957045953;  // std dev = 0.088, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(J, A) )
%   | | then return 0.03978226843585545;  // std dev = 4.386, 204.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=52 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.0803197074535747;  // std dev = 1.550, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.08324504055859773;  // std dev = 2.223, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( interaction(D, E), interaction(C, E) )
%   | | then return 0.28736755464809355;  // std dev = 0.085, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06804760402768761;  // std dev = 1.184, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(F, G), interaction(F, H) )
%   | | then if ( interaction(H, A), complex(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.28250121358209784;  // std dev = 0.018, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.32348106637718327;  // std dev = 0.114, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A) )
%   | | then return 0.07237638404731243;  // std dev = 4.221, 165.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=52 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.09822038100532157;  // std dev = 2.268, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return 0.20670018933945628;  // std dev = 1.240, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then if ( interaction(A, E), interaction(E, C) )
%   | | then return 0.21981795050659758;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20571664648848062;  // std dev = 0.915, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.25057184653024867;  // std dev = 0.084, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4740710890627646;  // std dev = 1.862, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | else return -0.1484277094316839;  // std dev = 0.168, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.04172179348818775;  // std dev = 0.718, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.07356429723042857;  // std dev = 2.639, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.19700687046894383;  // std dev = 0.068, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( complex(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.2514038298745699;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.301306107983616;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then return 0.008653197209690636;  // std dev = 3.576, 210.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=56 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), interaction(I, H) )
%   | | | then return 0.21089821983493506;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.0643620843996315;  // std dev = 0.785, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.0757701158086098;  // std dev = 2.600, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.17049166334345753;  // std dev = 0.054, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.21963429507010743;  // std dev = 0.089, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.005260655461489381;  // std dev = 2.194, 65.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3391945580241136;  // std dev = 1.072, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.12968304724759963;  // std dev = 0.029, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.582386855052695;  // std dev = 0.725, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.24643836724621682;  // std dev = 0.072, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( recursion_proteinclass(E, B), interaction(E, C) )
%   | | | then return 0.13539877598761518;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17232050875429;  // std dev = 0.096, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(F, A) )
%   | then return -0.0023940016305830946;  // std dev = 3.319, 204.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=56 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.25834153470341614;  // std dev = 0.328, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.018276764225644896;  // std dev = 1.849, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | else if ( interaction(A, I), complex(A, J) )
%   | | | then return -0.03668353622589573;  // std dev = 0.525, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.6018050107042604;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */


Results
   AUC ROC   = 0.980622
   AUC PR    = 0.205708
   CLL	      = -0.186159
   Precision = 0.146904 at threshold = 0.5
   Recall    = 0.787986
   F1        = 0.24764


Total learning time: 2.93 seconds
Total inference time: 20.106 seconds
AUC ROC: 0.980622


Results scoring model
   AUC ROC   = 0.989278
   AUC PR    = 0.359567
   CLL	      = -0.176045
   Precision = 0.259124 at threshold = 0.5
   Recall    = 0.825581
   F1        = 0.394444


Total scoring time: 4.143 seconds
Parameter learned model CLL: -0.176045


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A), interaction(A, F)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.953, 1, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [4.21e-08, 0, 5], 'false,true,true': [0.0, 0, 5], 'false,true,false': [1.49e-08, 23, 0], 'false,false,true': [1.369, 3, 5], 'false,false,false,true': [5.841, 118, 48], 'false,false,false,false': [3.0, 36, 12]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.057, 0, 7], 'true,false': [1.322, 2, 8], 'false,true,true': [3.281, 67, 14], 'false,true,false,true': [1.668, 3, 42], 'false,true,false,false': [0.049, 84, 0], 'false,false,true,true': [0.805, 1, 3], 'false,false,true,false': [2.495, 22, 9], 'false,false,false,true': [1.477, 8, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [0.962, 1, 7], 'true,false': [0.917, 1, 8], 'false,true,true,true': [0.596, 1, 1], 'false,true,true,false': [0.193, 0, 6], 'false,true,false': [5.243, 132, 49], 'false,false,true,true': [0.187, 0, 6], 'false,false,true,false': [0.003, 12, 0], 'false,false,false,true': [0.065, 0, 2], 'false,false,false,false': [2.188, 16, 7]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), interaction(E, C)', 'true,true': 'interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(G, F), interaction(A, G)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I)'}, {'true,true,true': [0.02, 0, 5], 'true,true,false': [0.066, 0, 2], 'true,false': [1.224, 2, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.832, 3, 56], 'false,true,false': [0.132, 116, 0], 'false,false,true': [0.648, 1, 3], 'false,false,false,true': [1.566, 12, 5], 'false,false,false,false': [2.335, 27, 7]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'interaction(A, E), complex(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A), interaction(H, G)', 'false,true,false': 'complex(A, I)', 'false,false': 'interaction(J, A)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.097, 0, 10], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.055, 0, 5], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.104, 0, 3], 'false,true,false,false': [0.088, 0, 4], 'false,false,true': [4.386, 152, 52], 'false,false,false,true': [1.55, 12, 5], 'false,false,false,false': [2.223, 18, 7]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,true': 'interaction(D, E), interaction(C, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'complex(F, G), interaction(F, H)', 'false,true,true': 'interaction(H, A), complex(A, G)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.085, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [1.184, 2, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.018, 0, 2], 'false,true,false': [0.114, 0, 5], 'false,false,true': [4.221, 113, 52], 'false,false,false,true': [2.268, 19, 9], 'false,false,false,false': [1.24, 4, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'true,true': 'interaction(A, E), interaction(E, C)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [0.915, 1, 11], 'false,true,true,true': [0.084, 0, 4], 'false,true,true,false': [1.862, 3, 52], 'false,true,false': [0.168, 155, 0], 'false,false,true': [0.718, 1, 3], 'false,false,false,true': [2.639, 26, 12], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'complex(A, E), interaction(A, C)', 'true,false,false': 'complex(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(H, I), interaction(I, H)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.068, 0, 10], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 1], 'true,false,false,false': [0.0, 0, 4], 'false,true': [3.576, 154, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.785, 1, 2], 'false,false,false,true': [2.6, 24, 12], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true,true': [0.054, 0, 9], 'true,false': [0.089, 0, 6], 'false,true,true': [2.194, 51, 14], 'false,true,false,true': [1.072, 1, 42], 'false,true,false,false': [0.029, 92, 0], 'false,false,true,true': [0.725, 0, 15], 'false,false,true,false': [0.072, 26, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'recursion_proteinclass(E, B), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), complex(A, J)'}, {'true,true,true,true': [0.0, 0, 4], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.096, 0, 11], 'false,true': [3.319, 148, 56], 'false,false,true,true': [0.328, 0, 3], 'false,false,true,false': [1.849, 25, 9], 'false,false,false,true': [0.525, 3, 1], 'false,false,false,false': [0.0, 0, 2]}]]
[{'': [0.055363321799307655, 0.20160000000000136], 'false': [0.1466836734693877, 0.20706517328138987], 'false,false': [0.23437499999999983, 0.20176434623111245], 'false,false,false': [0.20554507185368068, 0.18749999999999947], 'false,true': [0.0, 9.654113257610057e-18], 'true': [0.0826446280991734, 1.4802973661668753e-16], 'true,false': [0.0, 3.552713678800501e-16]}, {'': [0.11131455105778099, 0.19187659670689636], 'false': [0.18729340656709592, 0.2101618288718525], 'false,false': [0.21301617267279047, 0.19834710743801667], 'false,false,true': [0.16190336051207982, 0.20080017488633223], 'false,false,false': [0.19834710743801667, nan], 'false,true': [0.13287866654372849, 0.21367640636571406], 'false,true,false': [0.06183994673390379, 2.8963200958613083e-05], 'true': [0.0004621790171655934, 0.17477409354992351]}, {'': [0.10614145865224109, 0.1678195746595224], 'false': [0.15766456907818638, 0.21052386679285073], 'false,false': [0.20911573575559464, 0.2113587486415294], 'false,false,false': [0.002132652352672515, 0.2080929073872808], 'false,false,true': [0.005854917574145209, 8.331203102488841e-07], 'false,true': [0.07377597113464807, 0.15186689991333244], 'true': [0.11574632165711485, 0.0934206864964623], 'false,true,true': [0.1777395868737498, 0.006216358718309205]}, {'': [0.09316082574682734, 0.15867716031077367], 'false': [0.15853082599107823, 0.1567823870528432], 'false,true': [0.05690830972945822, 0.00014975222694507876], 'false,false': [0.10500894331897154, 0.15650499699999232], 'false,false,false': [0.14420523843074237, 0.16031904811446696], 'true': [0.0008490436876521988, 0.14987561671370225], 'false,true,true': [nan, 0.0569083097294581], 'true,true': [8.098132870792973e-05, 0.0021808027998800605]}, {'': [0.0027647914707765214, 0.1087981645772173], 'false': [0.0027667471636425895, 0.10831022593341635], 'false,false': [0.09429735912303981, 0.1748904137430964], 'false,false,false': [0.14135318070748493, 0.1976922684274508], 'false,true': [nan, 0.0027667471636425895], 'false,true,false': [0.0035972911671152317, 0.0019518712332652066], 'true': [0.0009353979982560379, 0.0006072941270121035], 'true,false': [nan, 0.0006072941270121035]}, {'': [0.09449401735231883, 0.12082204705553808], 'false': [0.0022390179832464225, 0.12316677693671069], 'false,false': [0.10800313078023267, 0.19278799806418886], 'false,false,false': [0.18369997210811248, 0.2197258068355257], 'true': [0.0007272342662623555, 0.20015171712391547], 'false,true': [0.0001596193372327276, 0.0025909636316214122], 'true,true': [0.0007272342662623555, nan], 'false,true,true': [nan, 0.0001596193372327276]}, {'': [0.052348526542745674, 0.10557348471690552], 'false': [0.09089458755704923, 0.17814768790123767], 'false,false': [0.1288938196180659, 0.1832357394205343], 'false,false,false': [0.1832357394205343, nan], 'false,true': [0.062037136718533115, 0.00018136044090961916], 'false,true,true': [0.001751317586854581, 0.06303498966284846], 'true': [0.0, 0.06974832369657473], 'true,true': [0.0, nan]}, {'': [0.002415105541742964, 0.08143624999388496], 'false': [0.06087937698012827, 0.18633732434892453], 'false,false': [0.16817145520742066, 0.18784714103383915], 'false,false,false': [0.18784714103383915, nan], 'false,false,true': [0.0, 0.20528654817140102], 'true': [0.00045809511785880886, 0.00039843797767562527], 'true,false': [nan, 0.00039843797767562527], 'true,false,false': [0.0, 0.0]}, {'': [0.0013051089384101674, 0.08106972136206808], 'false': [0.06206332951372376, 0.17233327898864326], 'false,false': [0.17233327898864326, nan], 'false,false,true': [0.03507355520086429, 0.00019795344749500116], 'false,true': [0.07402449823045294, 0.05623683290122257], 'false,true,false': [0.026716551431023874, 9.267057186684133e-06], 'true': [0.0003223927480316043, 0.0013301842721653023]}, {'': [0.0008791648052451917, 0.06380166892761124], 'false': [0.05400456146125573, 0.10951039987870703], 'false,false': [0.101010318938788, 0.1364732727021856], 'false,false,false': [0.06882070086628429, 0.0], 'false,false,true': [0.035884519191330566, 0.1005525765501729], 'true': [0.0, 0.0008353372712633013], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
0;true,false;interaction(E, A), interaction(E, C).;true;true
0;false;interaction(F, A), interaction(A, F).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;complex(A, D).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(F, E), interaction(F, A).;true;true
1;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,false;complex(A, H).;true;true
2;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
2;false,false,false;interaction(A, J), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), interaction(E, C).;true;true
3;true,true;interaction(E, A).;true;true
3;false;interaction(F, A).;true;true
3;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(C, D).;true;true
4;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;false,true;complex(A, I).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, D), interaction(A, D).;true;true
5;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;false,true;complex(F, G), interaction(F, H).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(A, C), complex(A, D).;true;true
6;false;interaction(F, A).;true;true
6;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
6;false,true,true;interaction(A, H), recursion_proteinclass(H, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, D), interaction(C, D).;true;true
7;true,false;complex(A, F).;true;true
7;false;interaction(G, A).;true;true
7;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
7;false,false,true;interaction(H, I), interaction(I, H).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), interaction(D, C).;true;true
8;false;interaction(E, A).;true;true
8;false,true;interaction(F, E), interaction(F, A).;true;true
8;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
8;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(A, C), complex(A, D).;true;true
9;false;interaction(F, A).;true;true
9;false,false;interaction(A, G), interaction(G, H).;true;true
9;false,false,false;interaction(A, I), complex(A, J).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.4831489350995122;  // std dev = 0.484, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(H, J), enzyme(J, K) )
%   | | | then return 0.01943925768015746;  // std dev = 2.048, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | | | else return 0.2331489350995123;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.10814893509951236;  // std dev = 2.121, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.20698614440183719;  // std dev = 5.413, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.6918378799621402;  // std dev = 0.256, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, G) )
%   | | | then return -0.03913535700333344;  // std dev = 1.723, 38.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=4 */
%   | | | else return 0.18327569732978713;  // std dev = 2.562, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.821877024171683;  // std dev = 0.197, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.16587288166852882;  // std dev = 0.114, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.11111369634745616;  // std dev = 2.057, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.2165570218688753;  // std dev = 1.679, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.5801133415655888;  // std dev = 0.865, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.16066757255144135;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then return 0.5787365639092924;  // std dev = 0.140, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.40531184606524173;  // std dev = 0.449, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then return 0.020904653994640462;  // std dev = 0.307, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.18238825283410867;  // std dev = 2.633, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return 0.10516555954050652;  // std dev = 4.323, 120.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=36 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7730259915971347;  // std dev = 0.128, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1933198299111862;  // std dev = 0.084, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4054566243200653;  // std dev = 0.868, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.05357324802414222;  // std dev = 2.282, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, C) )
%   | then return 0.4597426225221695;  // std dev = 0.069, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5148230542604978;  // std dev = 0.097, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.7933693819879568;  // std dev = 0.100, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.6183265449835094;  // std dev = 1.550, 50.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=48 */
%   | | else return -0.16329527602767352;  // std dev = 0.300, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.4483403588462667;  // std dev = 0.763, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.041315701294165584;  // std dev = 2.310, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.11823114205918084;  // std dev = 0.676, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.06908187020486017;  // std dev = 1.318, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.31549662800858863;  // std dev = 0.058, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.48937250229122425;  // std dev = 0.043, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F) )
%   | | then return 0.44997263616722405;  // std dev = 0.229, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3946295653478006;  // std dev = 0.666, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3142624253722165;  // std dev = 3.440, 93.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=61 */
%   | | | else return -0.15579242070850616;  // std dev = 0.431, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | | else return 0.26512443842732436;  // std dev = 1.015, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.2516988645025676;  // std dev = 0.051, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.3702423663179689;  // std dev = 0.040, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(E, F), interaction(E, G) )
%   | | then return 0.261855190834825;  // std dev = 0.025, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.29332856181507583;  // std dev = 0.932, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then if ( interaction(A, I) )
%   | | | then return -0.10533117675398289;  // std dev = 0.075, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.003957018551283402;  // std dev = 2.072, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return -0.006675263275701497;  // std dev = 1.803, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | | else return 0.10416179939089408;  // std dev = 3.387, 107.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=42 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.20494632801565726;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.26786452679353706;  // std dev = 0.037, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.027475620406688515;  // std dev = 0.798, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.3993104137069571;  // std dev = 0.203, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return -0.1467969069216681;  // std dev = 0.041, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5086729194653427;  // std dev = 0.844, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.2292827265244352;  // std dev = 0.199, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.021821998180085303;  // std dev = 1.408, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.09486242617164141;  // std dev = 1.089, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20215632159899757;  // std dev = 0.030, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( phenotype(A, E), enzyme(A, F) )
%   | | then if ( phenotype(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.3239433719080536;  // std dev = 0.476, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.13352049047215736;  // std dev = 0.193, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.06105744283409245;  // std dev = 1.095, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | | | else return 0.008444495193671554;  // std dev = 2.482, 123.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=37 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(J, K), interaction(K, J) )
%   | | | then return 0.23396109162759293;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.09524893801215402;  // std dev = 0.733, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.02823153254926567;  // std dev = 1.569, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.07004183136059028;  // std dev = 1.621, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.15179176511289905;  // std dev = 0.030, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then return -0.13395969162209387;  // std dev = 0.800, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.20584962934495077;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(H, G), interaction(H, A) )
%   | | then if ( complex(A, I), location(A, J) )
%   | | | then return -0.04831001787971309;  // std dev = 1.130, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return 0.018192268996876534;  // std dev = 1.559, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else return -0.0027860791364078467;  // std dev = 0.190, 148.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=42 */
%   | else if ( interaction(K, L), recursion_proteinclass(K, B) )
%   | | then if ( phenotype(A, M) )
%   | | | then return 0.3853203972742747;  // std dev = 0.803, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.19662189452373416;  // std dev = 1.542, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else return -0.20087546936117856;  // std dev = 0.071, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.12846988411581428;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.032601931738015066;  // std dev = 0.930, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.18758841474057095;  // std dev = 0.052, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, H) )
%   | | then return -0.02647683542090482;  // std dev = 0.210, 94.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=23 */
%   | | else return 0.017693197688806245;  // std dev = 0.244, 99.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=33 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.07383915281889561;  // std dev = 1.272, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return -0.05396764249411563;  // std dev = 1.292, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( interaction(A, M), complex(A, N) )
%   | | | then return -0.01394885234434786;  // std dev = 0.376, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.037042849141920804;  // std dev = 1.123, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */


Results
   AUC ROC   = 0.983568
   AUC PR    = 0.208969
   CLL	      = -0.189045
   Precision = 0.143614 at threshold = 0.5
   Recall    = 0.957597
   F1        = 0.24977


Total learning time: 6.725 seconds
Total inference time: 53.644 seconds
AUC ROC: 0.983568


Results scoring model
   AUC ROC   = 0.991083
   AUC PR    = 0.362882
   CLL	      = -0.170431
   Precision = 0.259136 at threshold = 0.5
   Recall    = 0.906977
   F1        = 0.403101


Total scoring time: 7.203 seconds
Refined model CLL: -0.170431


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.983568
   AUC PR    = 0.208969
   CLL	      = -0.189045
   Precision = 0.143614 at threshold = 0.5
   Recall    = 0.957597
   F1        = 0.24977


Total learning time: 21.001 seconds
Total inference time: 53.644 seconds
AUC ROC: 0.983568
Total revision time: 21.001
Best scored revision CLL: -0.170431


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:19:05
{'AUC ROC': 0.983568, 'AUC PR': 0.208969, 'CLL': -0.189045, 'Precision': [0.143614, 0.5], 'Recall': 0.957597, 'F1': 0.24977, 'Learning time': 21.001, 'Inference time': 53.644, 'parameter': {'AUC ROC': 0.980622, 'AUC PR': 0.205708, 'CLL': -0.186159, 'Precision': [0.146904, 0.5], 'Recall': 0.787986, 'F1': 0.24764, 'Learning time': 2.93, 'Inference time': 20.106}}


Starting fold 1

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos	 examples: 282
Target test neg examples: 39912

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;false;true
0;true,false;follows(E, A), follows(E, C).;false;false
0;false;follows(F, A), follows(A, F).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(H, A), recursion_accounttype(H, B).;false;true
0;false,false,false;follows(I, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;tweets(A, D).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(F, E), follows(F, A).;false;true
1;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(E, G), follows(G, A).;false;false
2;false,false;tweets(A, H).;true;true
2;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), follows(E, C).;true;false
3;true,true;follows(E, A).;false;false
3;false;follows(F, A).;true;true
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false,true,true;follows(G, F), follows(A, G).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;tweets(A, I).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;true
4;true,false;follows(A, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,true;follows(H, A), follows(H, G).;false;true
4;false,true,false;tweets(A, I).;false;false
4;false,false;follows(J, A).;false;true
4;false,false,false;tweets(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), follows(A, D).;true;false
5;true,true;follows(D, E), follows(C, E).;false;false
5;false;follows(A, F), recursion_accounttype(F, B).;true;true
5;false,true;tweets(F, G), follows(F, H).;true;false
5;false,true,true;follows(H, A), tweets(A, G).;false;false
5;false,false;follows(I, A).;false;true
5;false,false,false;follows(A, J), follows(J, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, C), tweets(A, D).;true;false
6;true,true;follows(A, E), follows(E, C).;false;false
6;false;follows(F, A).;true;true
6;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
6;false,true,true;follows(A, H), recursion_accounttype(H, B).;false;false
6;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(C, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(H, I), follows(I, H).;false;false
7;false,false,false;follows(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(D, C).;false;false
8;false;follows(E, A).;true;true
8;false,true;follows(F, E), follows(F, A).;false;true
8;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(A, C), tweets(A, D).;true;false
9;true,true;follows(A, E), follows(C, E).;true;false
9;true,true,true;recursion_accounttype(E, B), follows(E, C).;false;false
9;false;follows(F, A).;false;true
9;false,false;follows(A, G), follows(G, H).;true;true
9;false,false,true;recursion_accounttype(H, B).;false;false
9;false,false,false;follows(A, I), tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.14185106490048768;  // std dev = 4.08e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.18627393509951193;  // std dev = 3.756, 64.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=21 */
%   | | | else return 0.12660531093843747;  // std dev = 5.409, 149.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=40 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5144825176843604;  // std dev = 1.156, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.11345365848921476;  // std dev = 3.128, 60.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.7751045296501481;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.16607194093808736;  // std dev = 2.58e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8011764018650996;  // std dev = 0.100, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15089252720509344;  // std dev = 5.019, 119.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=37 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.1420278966921721;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.3553664367462845;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.60524512705502;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.6960159632441915;  // std dev = 2.98e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.6970953896186187;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.0028871417972351717;  // std dev = 3.575, 116.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=20 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8054522948318932;  // std dev = 0.165, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.18158031557629095;  // std dev = 0.114, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.6115739466661597;  // std dev = 0.108, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.09622883403399797;  // std dev = 4.240, 90.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=25 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(C, E) )
%   | then if ( interaction(A, E) )
%   | | then return 0.46680171834956075;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.45704198365581095;  // std dev = 0.010, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6058138054081129;  // std dev = 1.236, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | else return -0.14976693431533367;  // std dev = 0.175, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.03886263031313697;  // std dev = 1.201, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.08057318997581894;  // std dev = 2.691, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | | else return 0.11738747018384688;  // std dev = 4.127, 80.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=25 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3490612793752008;  // std dev = 0.011, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(E, A), enzyme(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3515119506826691;  // std dev = 0.007, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.4866640668310296;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.09519049196182756;  // std dev = 0.889, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, J) )
%   | | then return 0.025763391399538538;  // std dev = 3.380, 129.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=33 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.11730638778364849;  // std dev = 2.531, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return 0.08709175466862046;  // std dev = 4.160, 83.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=25 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, C) )
%   | | then return 0.11327927393575243;  // std dev = 1.146, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.276103260100422;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( enzyme(F, G), interaction(H, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14648417793749868;  // std dev = 0.924, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, I) )
%   | | then return 0.019268891569165704;  // std dev = 3.340, 132.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=33 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.10066378719484749;  // std dev = 4.589, 109.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=37 */
%   | | | else return 0.14228948864725288;  // std dev = 1.284, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then if ( interaction(E, A), interaction(C, E) )
%   | | then return 0.2569024178492726;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.24380147983434106;  // std dev = 0.032, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5013394674114959;  // std dev = 0.663, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.13458450579965592;  // std dev = 0.131, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.3766842685142346;  // std dev = 0.121, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.05133807084353736;  // std dev = 4.873, 132.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.2085501797019028;  // std dev = 0.005, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( enzyme(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.18824604005931078;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.18148254348274007;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G) )
%   | then return 0.012534369825312822;  // std dev = 2.653, 119.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=33 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, H), interaction(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2946572008065933;  // std dev = 0.108, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.028660682949360677;  // std dev = 4.918, 138.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.17651606698084915;  // std dev = 0.004, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.02360607677393478;  // std dev = 0.852, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.0018732530094101422;  // std dev = 1.816, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.4088573716821733;  // std dev = 0.149, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.11881544806567126;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5749815657448047;  // std dev = 2.005, 46.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=43 */
%   | | | else return -0.24389644798090743;  // std dev = 0.234, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( recursion_proteinclass(E, B), interaction(C, E) )
%   | | | then return 0.1539305762448674;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07294515204399771;  // std dev = 0.745, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, F) )
%   | then return 0.011155202849975548;  // std dev = 2.311, 116.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=33 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.04674955242830253;  // std dev = 0.704, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.042480517404182745;  // std dev = 3.721, 110.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=37 */
%   | | else if ( interaction(I, A), enzyme(A, J) )
%   | | | then return 0.052608407333452956;  // std dev = 0.538, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.10928826807597714;  // std dev = 0.908, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */


Results
   AUC ROC   = 0.989102
   AUC PR    = 0.307296
   CLL	      = -0.202176
   Precision = 0.25 at threshold = 0.5
   Recall    = 0.64539
   F1        = 0.360396


Total learning time: 3.321 seconds
Total inference time: 12.886 seconds
AUC ROC: 0.989102


Results scoring model
   AUC ROC   = 0.989133
   AUC PR    = 0.342835
   CLL	      = -0.204339
   Precision = 0.281553 at threshold = 0.5
   Recall    = 0.666667
   F1        = 0.395904


Total scoring time: 7.245 seconds
Parameter learned model CLL: -0.204339


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F), interaction(F, A)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 12], 'false,true,false': [4.08e-08, 39, 0], 'false,false,true': [2.11e-08, 0, 3], 'false,false,false,true': [3.756, 43, 21], 'false,false,false,false': [5.409, 109, 40]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.156, 2, 7], 'false,true,true': [3.128, 43, 17], 'false,true,false,true': [0.97, 1, 16], 'false,true,false,false': [2.58e-08, 36, 0], 'false,false,true,true': [0.1, 0, 3], 'false,false,true,false': [5.019, 82, 37], 'false,false,false,true': [1.449, 7, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, E), interaction(A, G)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.894, 1, 4], 'true,false': [2.98e-08, 0, 7], 'false,true,true,true': [2.98e-08, 0, 11], 'false,true,true,false': [0.002, 0, 2], 'false,true,false': [3.575, 96, 20], 'false,false,true,true': [0.165, 0, 16], 'false,false,true,false': [0.114, 46, 0], 'false,false,false,true': [0.108, 0, 2], 'false,false,false,false': [4.24, 65, 25]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D), interaction(C, E)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'enzyme(A, I)'}, {'true,true,true': [1.05e-08, 0, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.01, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.236, 2, 33], 'false,true,false': [0.175, 89, 0], 'false,false,true': [1.201, 2, 3], 'false,false,false,true': [2.691, 36, 15], 'false,false,false,false': [4.127, 55, 25]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'interaction(E, A), enzyme(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H), interaction(G, H)', 'false,true,false': 'enzyme(A, I)', 'false,false': 'interaction(A, J)', 'false,false,false': 'enzyme(A, K)'}, {'true,true': [0.011, 0, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.007, 0, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.889, 1, 2], 'false,false,true': [3.38, 96, 33], 'false,false,false,true': [2.531, 28, 15], 'false,false,false,false': [4.16, 58, 25]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'interaction(E, D), interaction(E, C)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'enzyme(F, G), interaction(H, F)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [1.146, 2, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.006, 0, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.924, 1, 3], 'false,false,true': [3.34, 99, 33], 'false,false,false,true': [4.589, 72, 37], 'false,false,false,false': [1.284, 5, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), enzyme(A, D)', 'true,true': 'interaction(E, A), interaction(C, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.032, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.663, 0, 33], 'false,true,false': [0.131, 97, 0], 'false,false,true': [0.121, 0, 3], 'false,false,false,true': [4.873, 92, 40], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'enzyme(A, E), interaction(C, A)', 'true,false,false': 'enzyme(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, H), interaction(H, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.005, 0, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 1], 'true,false,false,false': [0.0, 0, 1], 'false,true': [2.653, 86, 33], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.108, 0, 3], 'false,false,false,true': [4.918, 98, 40], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true,true': [0.004, 0, 7], 'true,false': [0.852, 1, 4], 'false,true,true': [1.816, 47, 17], 'false,true,false,true': [0.149, 0, 16], 'false,true,false,false': [0.0, 42, 0], 'false,false,true,true': [2.005, 3, 43], 'false,false,true,false': [0.234, 91, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), enzyme(A, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'recursion_proteinclass(E, B), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), enzyme(A, J)'}, {'true,true,true,true': [0.0, 0, 3], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.745, 1, 8], 'false,true': [2.311, 83, 33], 'false,false,true,true': [0.704, 2, 3], 'false,false,true,false': [3.721, 73, 37], 'false,false,false,true': [0.538, 1, 1], 'false,false,false,false': [0.908, 3, 2]}]]
[{'': [-1.6148698540002277e-16, 0.20362187714794736], 'false': [0.17993079584775032, 0.20850480109739492], 'false,false': [1.4802973661668753e-16, 0.20436862174612713], 'false,false,false': [0.2204589843750001, 0.19638755011035663], 'false,true': [-1.4802973661668753e-16, 4.2700885562506023e-17], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16], 'true,false': [0.0, 0.0]}, {'': [0.11169705353907346, 0.20250476894315875], 'false': [0.18557844038741625, 0.2162171999042657], 'false,false': [0.21668000479912283, 0.21000000000000005], 'false,false,true': [0.0033376892592126652, 0.2116599615761663], 'false,false,false': [0.21000000000000005, nan], 'false,true': [0.1631080166769049, 0.2107511569953721], 'false,true,false': [0.05536332179930745, 1.850371707708594e-17], 'true': [0.0, 0.14841056787953985]}, {'': [0.08184289996850214, 0.1716991447309881], 'false': [0.1426481834829563, 0.19583547870113424], 'false,false': [0.1871841537351976, 0.2011922274828386], 'false,false,false': [0.005846615369692942, 0.19975975010461697], 'false,false,true': [0.0017013127069290812, 0.00028486026720199513], 'false,true': [3.309333865403757e-07, 0.11019619776539552], 'true': [0.16, 1.2688263138573217e-16], 'false,true,true': [8.074349270001139e-17, 1.1651612977781056e-06]}, {'': [2.8789397698761572e-05, 0.1606439242982605], 'false': [0.12821986682071582, 0.1895472862526193], 'false,false': [0.28824984808087156, 0.1856285171237646], 'false,false,false': [0.14193877509079303, 0.2129530952072724], 'false,true': [0.04362955461554324, 0.00034395462514103344], 'false,true,true': [nan, 0.043629554615543395], 'true': [3.700743415417188e-17, 1.3607488756034458e-05], 'true,true': [3.700743415417188e-17, nan]}, {'': [1.727527340943492e-05, 0.14077464653831065], 'false': [0.22629583287718513, 0.13916446078929892], 'false,true': [nan, 0.22629583287718513], 'false,true,false': [0.0, 0.263414887214362], 'false,false': [0.08855010722311547, 0.1883876045599781], 'false,false,false': [0.14892161549953717, 0.20852228640925677], 'true': [1.4206292157265605e-05, 2.617186097940427e-05], 'true,false': [nan, 2.617186097940427e-05]}, {'': [0.10442722321880699, 0.13912140020142136], 'false': [0.21357029754606432, 0.13780402072251297], 'false,true': [nan, 0.2135702975460643], 'false,false': [0.08450069329928697, 0.1941790749408795], 'false,false,false': [0.19317555285367893, 0.2062378395043444], 'true': [0.11933161738311583, 2.0120301563897325e-05], 'true,true': [0.11933161738311583, nan]}, {'': [0.00012765243083942305, 0.13037572366037864], 'false': [0.08011250954409205, 0.17828357465395653], 'false,false': [0.00484090711795454, 0.17987322794295338], 'false,false,false': [0.17987322794295338, nan], 'false,true': [0.013333125006406054, 0.00017606238406513454], 'false,true,true': [nan, 0.013333125006406108], 'true': [0.0, 0.00012871266234848466], 'true,true': [0.0, nan]}, {'': [8.795060578687346e-05, 0.1210522780393399], 'false': [0.059151804817047036, 0.17307729070972444], 'false,false': [0.0039060938455415806, 0.1752495180302872], 'false,false,false': [0.1752495180302872, nan], 'false,false,true': [nan, 0.0039060938455415806], 'true': [2.9499319212305467e-06, 1.1436221485319753e-05], 'true,false': [nan, 1.1436221485319753e-05], 'true,false,false': [0.0, 0.0]}, {'': [0.07023091275198405, 0.12026086238433362], 'false': [0.05382379978962911, 0.17928190739377636], 'false,false': [0.17928190739377636, nan], 'false,false,true': [0.0873535434208678, 0.000599254056985641], 'true': [2.515613674905096e-06, 0.14518882650002746], 'false,true': [0.0515526624267006, 0.056005252333435104], 'false,true,false': [0.0013910845806519856, -2.6433881538694202e-17]}, {'': [0.04744920376633388, 0.08776322032469763], 'false': [0.046045142818980304, 0.12685268024549548], 'false,false': [0.124699544567231, 0.15982855924571174], 'false,false,false': [0.14477000036011334, 0.16493409519601057], 'false,false,true': [0.09919869583394426, 0.1258578816785843], 'true': [0.0, 0.0616259452885298], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;true,false;interaction(A, E), interaction(C, E).;true;true
0;false;interaction(A, F), interaction(F, A).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;enzyme(A, D).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(E, F), interaction(A, F).;true;true
1;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;enzyme(A, D).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,true,true;interaction(G, E), interaction(A, G).;true;true
2;false,false;enzyme(A, H).;true;true
2;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;enzyme(A, D), interaction(C, E).;true;true
3;false;interaction(A, F).;true;true
3;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;false,true;enzyme(A, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), interaction(D, A).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(C, A), enzyme(A, D).;true;true
6;false;interaction(A, F).;true;true
6;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, A), interaction(D, C).;true;true
7;true,false;enzyme(A, F).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), interaction(C, D).;true;true
8;false;interaction(A, E).;true;true
8;false,true;interaction(E, F), interaction(A, F).;true;true
8;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
8;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, A), enzyme(A, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995121;  // std dev = 1.83e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G), phenotype(A, H) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.14185106490048768;  // std dev = 4.71e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.09952824544433996;  // std dev = 3.259, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | | | else return 0.19627843150238902;  // std dev = 5.577, 139.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=47 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7251239146986218;  // std dev = 0.018, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.13416206690219795;  // std dev = 2.877, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | | else return -0.007409515164432509;  // std dev = 1.304, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.8358024970468377;  // std dev = 0.023, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.16335803080892872;  // std dev = 0.036, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( location(A, K), location(I, K) )
%   | | | then return 0.04698294134013383;  // std dev = 2.128, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return 0.4992045498192638;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.3159661865840414;  // std dev = 2.379, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.15975617807120435;  // std dev = 3.996, 73.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=24 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5612596925704405;  // std dev = 0.023, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, D), interaction(A, F) )
%   | | | then return 0.563252884207435;  // std dev = 1.219, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.6976260486495327;  // std dev = 0.008, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.13877507687593296;  // std dev = 0.034, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return 0.1354575402180551;  // std dev = 3.221, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7330153934307401;  // std dev = 0.959, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.20199559645348802;  // std dev = 0.148, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.14553436564786487;  // std dev = 3.112, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | | else return 0.05138419430357106;  // std dev = 3.013, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(C, E) )
%   | then return 0.16470889019784754;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.425020307298611;  // std dev = 0.077, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), interaction(H, A) )
%   | | | then return 0.5085230559718753;  // std dev = 0.825, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.648682170243544;  // std dev = 0.926, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else return -0.14963657161360125;  // std dev = 0.314, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5468876310297867;  // std dev = 1.645, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | | | else return -0.1935486060333186;  // std dev = 0.151, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.2621950370824014;  // std dev = 1.587, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.12159529869464938;  // std dev = 3.462, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.34462616271071833;  // std dev = 0.095, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.31657584179679377;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.4049131164379425;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.5443547120451979;  // std dev = 0.031, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), interaction(A, H) )
%   | | | then return -0.11378611716109861;  // std dev = 0.053, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.03668377551558105;  // std dev = 3.323, 102.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=29 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.03283829860529389;  // std dev = 3.307, 86.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=23 */
%   | | | else return 0.08645404210881436;  // std dev = 3.330, 64.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=21 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.26819665193530806;  // std dev = 0.026, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), location(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( location(A, E) )
%   | | | then return 0.44451276755513885;  // std dev = 0.082, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.15239477834623838;  // std dev = 0.673, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.11052638138344548;  // std dev = 0.035, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0.01348420573830901;  // std dev = 2.621, 74.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=18 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4089962126603965;  // std dev = 1.640, 23.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | | | else return -0.16362388439643477;  // std dev = 0.164, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.047843451448653145;  // std dev = 1.832, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.1203615557837542;  // std dev = 3.378, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then return 0.2456285876706258;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then return -0.020983978746369147;  // std dev = 0.842, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.20153500905515326;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.41376730839353565;  // std dev = 0.197, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | else return -0.1376368397668633;  // std dev = 0.032, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5373800075235161;  // std dev = 0.524, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.2088398177449996;  // std dev = 0.310, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return -0.018052887025337395;  // std dev = 1.644, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return 0.09763964691599611;  // std dev = 3.338, 60.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=22 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.20241974153570513;  // std dev = 0.029, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.31312705857726414;  // std dev = 0.967, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.19142433182886104;  // std dev = 0.017, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), phenotype(F, G) )
%   | then if ( interaction(H, A), interaction(F, I) )
%   | | then return -0.035707710110308884;  // std dev = 0.235, 71.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | else return 0.020607422635907043;  // std dev = 0.260, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( enzyme(J, L) )
%   | | | then return -0.014853959096151068;  // std dev = 0.768, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.09873953039547942;  // std dev = 2.715, 53.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
%   | | else if ( location(A, M), interaction(N, A) )
%   | | | then return 0.043015575808568664;  // std dev = 3.135, 72.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=24 */
%   | | | else return 0.12835133363279125;  // std dev = 0.520, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then if ( location(A, E), interaction(A, A) )
%   | | then return 0.16090950584260283;  // std dev = 0.032, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.11404780598579523;  // std dev = 0.768, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.19134927588091083;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G), interaction(A, G) )
%   | | then return 0.03349694185036059;  // std dev = 0.223, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.3590801414694309;  // std dev = 0.181, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.13216880308095957;  // std dev = 0.051, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.16657929200959345;  // std dev = 3.509, 76.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=40 */
%   | | | else return 0.5596395075064114;  // std dev = 0.216, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.22191487951379207;  // std dev = 0.069, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.16291672713930633;  // std dev = 0.035, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(D, E), interaction(D, F) )
%   | | | then return 0.2545919399114322;  // std dev = 0.088, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.17766937441799135;  // std dev = 0.692, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.08972862666064878;  // std dev = 0.050, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.003357848032917933;  // std dev = 1.693, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | else if ( interaction(G, A), complex(A, H) )
%   | | then if ( phenotype(G, I) )
%   | | | then return -0.01845815949350704;  // std dev = 1.670, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | | else return 0.252142073854792;  // std dev = 0.526, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.058911813415438295;  // std dev = 3.230, 75.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=26 */
%   | | | else return 0.08510731342925913;  // std dev = 1.321, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */


Results
   AUC ROC   = 0.98543
   AUC PR    = 0.311445
   CLL	      = -0.209288
   Precision = 0.220232 at threshold = 0.5
   Recall    = 0.741135
   F1        = 0.339561


Total learning time: 14.219 seconds
Total inference time: 73.908 seconds
AUC ROC: 0.98543


Results scoring model
   AUC ROC   = 0.986873
   AUC PR    = 0.401085
   CLL	      = -0.200123
   Precision = 0.333333 at threshold = 0.5
   Recall    = 0.701149
   F1        = 0.451852


Total scoring time: 26.12 seconds
Refined model CLL: -0.200123


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.98543
   AUC PR    = 0.311445
   CLL	      = -0.209288
   Precision = 0.220232 at threshold = 0.5
   Recall    = 0.741135
   F1        = 0.339561


Total learning time: 50.905 seconds
Total inference time: 73.908 seconds
AUC ROC: 0.98543
Total revision time: 50.905
Best scored revision CLL: -0.200123


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:21:24
{'AUC ROC': 0.98543, 'AUC PR': 0.311445, 'CLL': -0.209288, 'Precision': [0.220232, 0.5], 'Recall': 0.741135, 'F1': 0.339561, 'Learning time': 50.905, 'Inference time': 73.908, 'parameter': {'AUC ROC': 0.989102, 'AUC PR': 0.307296, 'CLL': -0.202176, 'Precision': [0.25, 0.5], 'Recall': 0.64539, 'F1': 0.360396, 'Learning time': 3.321, 'Inference time': 12.886}}


Starting fold 2

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos	 examples: 265
Target test neg examples: 35157

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;false;true
0;true,false;follows(E, A), follows(E, C).;false;false
0;false;follows(F, A), follows(A, F).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(H, A), recursion_accounttype(H, B).;false;true
0;false,false,false;follows(I, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;tweets(A, D).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(F, E), follows(F, A).;false;true
1;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(E, G), follows(G, A).;false;false
2;false,false;tweets(A, H).;true;true
2;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), follows(E, C).;true;false
3;true,true;follows(E, A).;false;false
3;false;follows(F, A).;true;true
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false,true,true;follows(G, F), follows(A, G).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;tweets(A, I).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;true
4;true,false;follows(A, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,true;follows(H, A), follows(H, G).;false;true
4;false,true,false;tweets(A, I).;false;false
4;false,false;follows(J, A).;false;true
4;false,false,false;tweets(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), follows(A, D).;true;false
5;true,true;follows(D, E), follows(C, E).;false;false
5;false;follows(A, F), recursion_accounttype(F, B).;true;true
5;false,true;tweets(F, G), follows(F, H).;true;false
5;false,true,true;follows(H, A), tweets(A, G).;false;false
5;false,false;follows(I, A).;false;true
5;false,false,false;follows(A, J), follows(J, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, C), tweets(A, D).;true;false
6;true,true;follows(A, E), follows(E, C).;false;false
6;false;follows(F, A).;true;true
6;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
6;false,true,true;follows(A, H), recursion_accounttype(H, B).;false;false
6;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(C, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(H, I), follows(I, H).;false;false
7;false,false,false;follows(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(D, C).;false;false
8;false;follows(E, A).;true;true
8;false,true;follows(F, E), follows(F, A).;false;true
8;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(A, C), tweets(A, D).;true;false
9;true,true;follows(A, E), follows(C, E).;true;false
9;true,true,true;recursion_accounttype(E, B), follows(E, C).;false;false
9;false;follows(F, A).;false;true
9;false,false;follows(A, G), follows(G, H).;true;true
9;false,false,true;recursion_accounttype(H, B).;false;false
9;false,false,false;follows(A, I), tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.7217852987358758;  // std dev = 1.610, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | else return -0.14185106490048768;  // std dev = 5.16e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.14748903662235593;  // std dev = 6.365, 197.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=57 */
%   | | | else return 0.124815601766179;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6194734122109542;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.08002536428785041;  // std dev = 4.776, 137.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6986561854277508;  // std dev = 2.448, 55.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=48 */
%   | | | else return -0.15903747895146342;  // std dev = 0.155, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8422658125911008;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.08459128756734165;  // std dev = 1.682, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5799035947890409;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.6342397992363924;  // std dev = 1.284, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.3765222701398928;  // std dev = 1.101, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else return 0.05244025270076816;  // std dev = 6.021, 259.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=58 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.47507822693464;  // std dev = 1.122, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.16930046678195712;  // std dev = 1.05e-08, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7020878255434636;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.16930046678195715;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(E, C) )
%   | then if ( interaction(E, A) )
%   | | then return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.03917359095614853;  // std dev = 0.535, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.33597198339016165;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return -0.5332825591677416;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5486551439918016;  // std dev = 3.410, 96.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=82 */
%   | | else return -0.1535094921196178;  // std dev = 0.274, 191.000 (wgt'ed) examples reached here.  /* #neg=191 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.06655724706425353;  // std dev = 0.668, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.10808079375311556;  // std dev = 1.463, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.1468036689752147;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.3396943527205194;  // std dev = 0.091, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, E), phenotype(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3558326708694517;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A), interaction(H, G) )
%   | | then return 0.31720449838331205;  // std dev = 0.734, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.6087474489563677;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.46680353849003386;  // std dev = 0.078, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(J, A) )
%   | | then return 0.048170368224543875;  // std dev = 5.536, 278.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=76 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.09271348683486212;  // std dev = 1.447, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.12935235420483435;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( interaction(D, E), interaction(C, E) )
%   | | then return 0.26548123946899294;  // std dev = 0.077, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.2822775194983136;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.2790194643809012;  // std dev = 7.45e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( phenotype(F, G), interaction(F, H) )
%   | | then if ( interaction(H, A), phenotype(A, G) )
%   | | | then return -0.47932412959169324;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.167746557840814;  // std dev = 0.393, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.3103977384441111;  // std dev = 0.552, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(I, A) )
%   | | then return 0.03655707657193447;  // std dev = 5.557, 280.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=76 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.059076931469242235;  // std dev = 1.437, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then if ( interaction(A, E), interaction(E, C) )
%   | | then return 0.20494364493858397;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1132899229077327;  // std dev = 1.078, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.30716565996412043;  // std dev = 0.181, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4204211774073;  // std dev = 3.222, 89.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=76 */
%   | | else return -0.14493241579360536;  // std dev = 0.242, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.3343475710213676;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.014341774774115234;  // std dev = 1.469, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.11891517118551402;  // std dev = 0.950, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F) )
%   | | | then return -0.8173722101530143;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.20724049321391788;  // std dev = 7.45e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then return 0.044841047873762516;  // std dev = 4.519, 259.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=82 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.26445625918072524;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.0328148842990655;  // std dev = 1.446, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.04110806860267423;  // std dev = 0.946, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.107319141184019;  // std dev = 0.792, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return -0.009938028868659009;  // std dev = 3.379, 130.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2946000012433005;  // std dev = 2.427, 55.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=48 */
%   | | | else return -0.12438822963209945;  // std dev = 0.078, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5608712471519237;  // std dev = 0.415, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.19576782263626175;  // std dev = 0.133, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( recursion_proteinclass(E, B), interaction(E, C) )
%   | | | then return 0.15178812217742876;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.18154521115590458;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09270596186677003;  // std dev = 0.972, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( interaction(F, A) )
%   | then return -0.007472590784331958;  // std dev = 4.679, 297.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=82 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.37517975101670886;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.006918616134536656;  // std dev = 1.119, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.986706
   AUC PR    = 0.272081
   CLL	      = -0.158542
   Precision = 0.212695 at threshold = 0.5
   Recall    = 0.720755
   F1        = 0.328461


Total learning time: 3.641 seconds
Total inference time: 14.88 seconds
AUC ROC: 0.986706


Results scoring model
   AUC ROC   = 0.97586
   AUC PR    = 0.192006
   CLL	      = -0.192035
   Precision = 0.089397 at threshold = 0.5
   Recall    = 0.826923
   F1        = 0.161351


Total scoring time: 9.634 seconds
Parameter learned model CLL: -0.192035


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A), interaction(A, F)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.0, 0, 9], 'true,false,true': [0.0, 0, 6], 'true,false,false': [0.0, 0, 1], 'false,true,true': [1.61, 3, 19], 'false,true,false': [5.16e-08, 49, 0], 'false,false,true': [0.0, 0, 8], 'false,false,false,true': [6.365, 140, 57], 'false,false,false,false': [1.713, 11, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [0.949, 1, 9], 'false,true,true': [4.776, 103, 34], 'false,true,false,true': [2.448, 7, 48], 'false,true,false,false': [0.155, 94, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.682, 12, 4], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.0, 0, 9], 'false,true,true,true': [1.284, 2, 17], 'false,true,true,false': [1.101, 3, 7], 'false,true,false': [6.021, 201, 58], 'false,false,true,true': [1.122, 2, 4], 'false,false,true,false': [1.05e-08, 9, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D), interaction(E, C)', 'true,true': 'interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(G, F), interaction(A, G)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true,true,true': [2.58e-08, 0, 7], 'true,true,false': [0.535, 1, 1], 'true,false': [0.949, 1, 9], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [3.41, 14, 82], 'false,true,false': [0.274, 191, 0], 'false,false,true': [0.668, 1, 1], 'false,false,false,true': [1.463, 9, 4], 'false,false,false,false': [0.0, 5, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'interaction(A, E), phenotype(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A), interaction(H, G)', 'false,true,false': 'phenotype(A, I)', 'false,false': 'interaction(J, A)', 'false,false,false': 'phenotype(A, K)'}, {'true,true': [0.091, 0, 12], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 5], 'false,true,true': [0.734, 1, 5], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.078, 0, 2], 'false,false,true': [5.536, 202, 76], 'false,false,false,true': [1.447, 9, 4], 'false,false,false,false': [0.0, 4, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,true': 'interaction(D, E), interaction(C, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'phenotype(F, G), interaction(F, H)', 'false,true,true': 'interaction(H, A), phenotype(A, G)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.077, 0, 10], 'true,true,false': [0.0, 0, 2], 'true,false': [7.45e-09, 0, 5], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.393, 1, 3], 'false,true,false': [0.552, 1, 4], 'false,false,true': [5.557, 204, 76], 'false,false,false,true': [1.437, 11, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'true,true': 'interaction(A, E), interaction(E, C)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true': [5.27e-09, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [1.078, 2, 12], 'false,true,true,true': [0.181, 0, 6], 'false,true,true,false': [3.222, 13, 76], 'false,true,false': [0.242, 177, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [1.469, 14, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'true,false,false': 'phenotype(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(H, I), interaction(I, H)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.95, 1, 12], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 1, 0], 'true,false,false,false': [7.45e-09, 0, 5], 'false,true': [4.519, 177, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.446, 12, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true,true': [0.946, 1, 7], 'true,false': [0.792, 1, 10], 'false,true,true': [3.379, 96, 34], 'false,true,false,true': [2.427, 7, 48], 'false,true,false,false': [0.078, 89, 0], 'false,false,true,true': [0.415, 0, 5], 'false,false,true,false': [0.133, 9, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'recursion_proteinclass(E, B), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)'}, {'true,true,true,true': [0.0, 0, 3], 'true,true,true,false': [0.816, 1, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.972, 1, 12], 'false,true': [4.679, 215, 82], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.119, 11, 4], 'false,false,false': [0.0, 0, 0]}]]
[{'': [-2.220446049250313e-16, 0.21095641289073205], 'false': [0.19599285855980905, 0.2152685950413225], 'false,false': [-2.220446049250313e-16, 0.2049439302242796], 'false,false,false': [0.20562240717359428, 0.1955555555555554], 'false,true': [0.11776859504132219, 5.437827059388522e-17], 'true': [-2.9605947323337506e-16, 1.2688263138573217e-16], 'true,false': [-1.4802973661668753e-16, 0.0]}, {'': [0.0524691358024694, 0.19192040120383025], 'false': [0.1915398840202531, 0.1982499306862782], 'false,false': [0.1982499306862782, nan], 'false,false,true': [0.0, 0.17687168747946597], 'false,true': [0.16650576098003605, 0.21167808070405708], 'false,true,false': [0.10892398907480069, 0.0002557716646994472], 'true': [1.1102230246251565e-16, 0.09000000000000008]}, {'': [0.0001499972075663854, 0.16060754055981313], 'false': [0.1593124963702235, 0.1812653817588537], 'false,false': [0.1835926731318012, 0.16873723466706955], 'false,false,true': [0.2098473422799579, 1.2335811384723961e-17], 'false,false,false': [0.0, 0.0], 'false,true': [0.11366170475426424, 0.13995709811714385], 'false,true,true': [0.08674137582258289, 0.12129487554278648], 'true': [-1.1102230246251565e-16, -4.9343245538895844e-17]}, {'': [0.07415666987440321, 0.15075090002687075], 'false': [0.15131966768817728, 0.14113699615678957], 'false,true': [0.13183534637399694, 0.0003916409001572288], 'false,false': [0.22293326066762456, 0.13196280399175866], 'false,false,false': [0.16467159267610973, 0.0], 'false,true,true': [0.0, 0.12114070140197519], 'true': [0.056549590303688585, 0.08999999999999997], 'true,true': [9.516197353929913e-17, 0.14314115045621156]}, {'': [0.0005383267054045002, 0.11394099972440698], 'false': [0.15585097350807484, 0.11148008584988334], 'false,true': [0.08967244176874417, 0.259110228841722], 'false,true,false': [0.0, 0.003062034396939861], 'false,false': [0.11022406877689055, 0.13196367454247787], 'false,false,false': [0.16096476732773474, 0.0], 'true': [0.0006860279367711941, 0.0], 'true,false': [nan, 0.0]}, {'': [0.00040309144911011103, 0.11183367570793232], 'false': [0.09795168647635691, 0.11169189898473722], 'false,false': [0.11027084644844107, 0.13773685610716668], 'false,false,false': [0.13773685610716668, nan], 'false,true': [0.09793920649800542, 0.060954397801056784], 'false,true,true': [0.0, 0.03868391321563129], 'true': [0.0005371277519441257, 1.1102230246251566e-17], 'true,true': [0.0005975341318623983, 0.0]}, {'': [0.06276424689178911, 0.11020629526781597], 'false': [0.1095865378412276, 0.11874672992449131], 'false,false': [0.0, 0.11995410154786046], 'false,false,false': [0.11995410154786046, nan], 'false,true': [0.11038329930694617, 0.00033223269146226203], 'false,true,true': [0.005454639903916758, 0.11664702705717653], 'true': [5.551115123125783e-18, 0.08296941652100853], 'true,true': [5.551115123125783e-18, nan]}, {'': [0.09503165453650175, 0.08173080588643881], 'true': [0.06944914971267782, 0.1458098877640129], 'true,false': [nan, 0.1458098877640129], 'true,false,false': [0.0, 1.1102230246251566e-17], 'false': [0.07883141244464054, 0.12590151601775398], 'false,false': [0.0, 0.1306140239125656], 'false,false,false': [0.1306140239125656, nan], 'false,false,true': [nan, 0.0]}, {'': [0.08113934774961934, 0.08855927548377932], 'false': [0.08549663355114138, 0.14502367816336012], 'false,false': [0.14502367816336012, nan], 'false,false,true': [0.034494027355941315, 0.0019637961766334477], 'false,true': [0.08784004102282253, 0.08239536377106761], 'false,true,false': [0.10711612692352537, 6.770593877328475e-05], 'true': [0.1118531876007331, 0.056956154462451725]}, {'': [0.09610263994514223, 0.074409119886979], 'true': [0.13888888888888887, 0.07270005853542297], 'true,true': [0.13888888888888887, nan], 'true,true,true': [-4.625929269271485e-18, 0.2222222222222222], 'false': [0.07370241996292883, 0.08619944498271036], 'false,false': [0.08619944498271036, nan], 'false,false,true': [0.0, 0.08347005818168028]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
0;true,false;interaction(E, A), interaction(E, C).;true;true
0;false;interaction(F, A), interaction(A, F).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;phenotype(A, D).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(F, E), interaction(F, A).;true;true
1;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
1;false,false;recursion_proteinclass(I, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;phenotype(A, D).;true;true
2;false;interaction(E, A).;true;true
2;false,false;phenotype(A, H).;true;true
2;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
2;false,false,false;interaction(A, J), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;phenotype(A, D), interaction(E, C).;true;true
3;true,true;interaction(E, A).;true;true
3;false;interaction(F, A).;true;true
3;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
3;false,true,true;interaction(G, F), interaction(A, G).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,false;phenotype(A, I).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(C, D).;true;true
4;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;false,true;interaction(H, A), interaction(H, G).;true;true
4;false,true,false;phenotype(A, I).;true;true
4;false,false;interaction(J, A).;true;true
4;false,false,false;phenotype(A, K).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, D), interaction(A, D).;true;true
5;true,true;interaction(D, E), interaction(C, E).;true;true
5;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;false,true;phenotype(F, G), interaction(F, H).;true;true
5;false,true,true;interaction(H, A), phenotype(A, G).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(A, C), phenotype(A, D).;true;true
6;false;interaction(F, A).;true;true
6;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
6;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, D), interaction(C, D).;true;true
7;true,false;phenotype(A, F).;true;true
7;false;interaction(G, A).;true;true
7;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false;interaction(E, A).;true;true
8;false,true;interaction(F, E), interaction(F, A).;true;true
8;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
8;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(A, C), phenotype(A, D).;true;true
9;true,true;recursion_proteinclass(E, B), interaction(E, C).;true;true
9;false;interaction(F, A).;true;true
9;false,false;recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.7152917922423694;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.6273797043302815;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.14185106490048768;  // std dev = 4.94e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, J), location(A, K) )
%   | | | then return 0.07243464938522666;  // std dev = 3.071, 56.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=12 */
%   | | | else return 0.17427796735757697;  // std dev = 5.789, 155.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=49 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.7229622273689073;  // std dev = 0.026, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7225745812402458;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1254446385283914;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.10067803919404966;  // std dev = 4.703, 127.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6388060124910994;  // std dev = 2.949, 59.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=48 */
%   | | | else return -0.15685346753290935;  // std dev = 0.127, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( recursion_proteinclass(H, B) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.8491007369185987;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22317527197706993;  // std dev = 1.029, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.15089926308140125;  // std dev = 7.45e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5048285649695118;  // std dev = 0.222, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.6528281591841918;  // std dev = 0.899, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.10924899634179225;  // std dev = 5.501, 180.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=52 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.0052629133379403946;  // std dev = 1.502, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return 0.19065827510230576;  // std dev = 1.834, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5288488259012281;  // std dev = 0.924, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.1613812641865772;  // std dev = 0.153, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.6723153510187649;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.15716850126316217;  // std dev = 0.035, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(E, C) )
%   | then if ( interaction(E, A) )
%   | | then return 0.4289981783119322;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.053355782962019094;  // std dev = 0.732, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.4330146422406555;  // std dev = 0.011, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4889815801094866;  // std dev = 4.008, 103.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=82 */
%   | | else return -0.16144105472831785;  // std dev = 0.023, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5115880350459663;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.08906610550113843;  // std dev = 1.298, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.13753251560871482;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.3471429973013427;  // std dev = 0.049, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.008527947916387613;  // std dev = 1.135, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( complex(A, F) )
%   | | then return 0.32770867822507854;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.17231267148083843;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.46127179616501773;  // std dev = 0.111, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(H, A) )
%   | | then if ( complex(A, I), location(A, J) )
%   | | | then return 0.002340655362397194;  // std dev = 2.821, 94.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=21 */
%   | | | else return 0.08229669544180378;  // std dev = 4.818, 171.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=55 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.048866342232138;  // std dev = 1.389, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.12207399023207677;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.293860580828972;  // std dev = 0.047, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.038369371360168304;  // std dev = 0.678, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.036639208654872024;  // std dev = 0.901, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( phenotype(F, G), interaction(F, H) )
%   | | then return 0.11591493806039546;  // std dev = 0.262, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.4228876761253295;  // std dev = 0.163, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(A, K), interaction(J, J) )
%   | | | then return -0.020691097088525835;  // std dev = 2.591, 94.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=21 */
%   | | | else return 0.03284757766668037;  // std dev = 4.916, 186.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=50 */
%   | | else if ( location(A, L) )
%   | | | then return 0.057526320731543346;  // std dev = 1.654, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.3347570941565688;  // std dev = 0.591, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.20490070930168205;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then return 0.007422186258870478;  // std dev = 0.755, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.2914403971140749;  // std dev = 0.042, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, A) )
%   | | | then return 0.22398531263411403;  // std dev = 1.887, 27.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
%   | | | else return 0.43628507984713666;  // std dev = 3.151, 72.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=61 */
%   | | else return -0.15027271412964416;  // std dev = 0.026, 179.000 (wgt'ed) examples reached here.  /* #neg=179 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return -0.3280054472929778;  // std dev = 0.755, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.17361853390161805;  // std dev = 0.904, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.03593670613908832;  // std dev = 0.727, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.2053443283486079;  // std dev = 0.033, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.08136226480835813;  // std dev = 0.354, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F) )
%   | | then if ( interaction(A, G), complex(G, F) )
%   | | | then return -0.03419194442958572;  // std dev = 1.488, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | | else return 0.0280424967931688;  // std dev = 2.250, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.02122075183500425;  // std dev = 4.056, 150.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=48 */
%   | | | else return 0.10687665564023781;  // std dev = 1.342, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.26475836545172393;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.11628569097092448;  // std dev = 1.026, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.07157495023380589;  // std dev = 0.963, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then return -0.00257467201397108;  // std dev = 0.332, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0.21225299567850003;  // std dev = 0.037, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then if ( complex(A, H) )
%   | | | then return -0.006037865964196399;  // std dev = 1.915, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | | | else return 0.0032221071506301517;  // std dev = 2.870, 84.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=22 */
%   | | else if ( interaction(F, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3620499252744791;  // std dev = 1.838, 51.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   | | | else return -0.12945425183562803;  // std dev = 0.237, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( interaction(J, K), recursion_proteinclass(J, B) )
%   | | then if ( enzyme(A, L) )
%   | | | then return 0.5085436303523045;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.13188098346194452;  // std dev = 0.692, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.16250184519295702;  // std dev = 0.077, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then if ( recursion_proteinclass(E, B), interaction(E, C) )
%   | | then return 0.14633855801106044;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.7069507114968212;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( complex(A, F) )
%   | | then if ( interaction(G, A), complex(G, F) )
%   | | | then return 0.17586815096418548;  // std dev = 0.063, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.40125783106130813;  // std dev = 0.722, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.1986286623717727;  // std dev = 0.078, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(H, A) )
%   | then return 0.004899237634910302;  // std dev = 0.291, 270.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=82 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.10098041270681879;  // std dev = 0.956, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.26615952555517186;  // std dev = 0.780, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.13192721891784806;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.975595
   AUC PR    = 0.299591
   CLL	      = -0.168485
   Precision = 0.189739 at threshold = 0.5
   Recall    = 0.739623
   F1        = 0.302003


Total learning time: 10.094 seconds
Total inference time: 50.509 seconds
AUC ROC: 0.975595


Results scoring model
   AUC ROC   = 0.974877
   AUC PR    = 0.178627
   CLL	      = -0.196231
   Precision = 0.094565 at threshold = 0.5
   Recall    = 0.836538
   F1        = 0.169922


Total scoring time: 18.803 seconds
Refined model CLL: -0.196231


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.986706
   AUC PR    = 0.272081
   CLL	      = -0.158542
   Precision = 0.212695 at threshold = 0.5
   Recall    = 0.720755
   F1        = 0.328461


Total learning time: 42.172 seconds
Total inference time: 14.88 seconds
AUC ROC: 0.986706
Total revision time: 42.172
Best scored revision CLL: -0.192035


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:23:12
{'AUC ROC': 0.986706, 'AUC PR': 0.272081, 'CLL': -0.158542, 'Precision': [0.212695, 0.5], 'Recall': 0.720755, 'F1': 0.328461, 'Learning time': 42.172, 'Inference time': 14.88, 'parameter': {'AUC ROC': 0.986706, 'AUC PR': 0.272081, 'CLL': -0.158542, 'Precision': [0.212695, 0.5], 'Recall': 0.720755, 'F1': 0.328461, 'Learning time': 3.641, 'Inference time': 14.88}}


Starting fold 3

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos	 examples: 277
Target test neg examples: 38883

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;false;true
0;true,false;follows(E, A), follows(E, C).;false;false
0;false;follows(F, A), follows(A, F).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(H, A), recursion_accounttype(H, B).;false;true
0;false,false,false;follows(I, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;tweets(A, D).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(F, E), follows(F, A).;false;true
1;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(E, G), follows(G, A).;false;false
2;false,false;tweets(A, H).;true;true
2;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), follows(E, C).;true;false
3;true,true;follows(E, A).;false;false
3;false;follows(F, A).;true;true
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false,true,true;follows(G, F), follows(A, G).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;tweets(A, I).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;true
4;true,false;follows(A, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,true;follows(H, A), follows(H, G).;false;true
4;false,true,false;tweets(A, I).;false;false
4;false,false;follows(J, A).;false;true
4;false,false,false;tweets(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), follows(A, D).;true;false
5;true,true;follows(D, E), follows(C, E).;false;false
5;false;follows(A, F), recursion_accounttype(F, B).;true;true
5;false,true;tweets(F, G), follows(F, H).;true;false
5;false,true,true;follows(H, A), tweets(A, G).;false;false
5;false,false;follows(I, A).;false;true
5;false,false,false;follows(A, J), follows(J, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, C), tweets(A, D).;true;false
6;true,true;follows(A, E), follows(E, C).;false;false
6;false;follows(F, A).;true;true
6;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
6;false,true,true;follows(A, H), recursion_accounttype(H, B).;false;false
6;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(C, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(H, I), follows(I, H).;false;false
7;false,false,false;follows(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(D, C).;false;false
8;false;follows(E, A).;true;true
8;false,true;follows(F, E), follows(F, A).;false;true
8;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(A, C), tweets(A, D).;true;false
9;true,true;follows(A, E), follows(C, E).;true;false
9;true,true,true;recursion_accounttype(E, B), follows(E, C).;false;false
9;false;follows(F, A).;false;true
9;false,false;follows(A, G), follows(G, H).;true;true
9;false,false,true;recursion_accounttype(H, B).;false;false
9;false,false,false;follows(A, I), tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.15279179224236805;  // std dev = 4.825, 112.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=33 */
%   | | | else return 0.1438632208137966;  // std dev = 5.071, 126.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=36 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6138586558685364;  // std dev = 0.790, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.10789869337816121;  // std dev = 3.153, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.822986423027386;  // std dev = 0.192, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.156496196405598;  // std dev = 0.100, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.14527815290426038;  // std dev = 4.502, 97.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=30 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.19971872973489785;  // std dev = 2.400, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.5553664367462843;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.4824255118558205;  // std dev = 0.740, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.6971899888494824;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.20217603834012796;  // std dev = 0.655, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.06729955762222746;  // std dev = 4.528, 140.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=34 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7389066936116638;  // std dev = 0.965, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.18144267248851287;  // std dev = 0.014, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.6533866826949103;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11955304736931921;  // std dev = 4.006, 76.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=23 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(C, E) )
%   | then if ( interaction(A, E) )
%   | | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.45597393806525544;  // std dev = 0.041, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6854435013506125;  // std dev = 1.021, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | else return -0.15593456909354822;  // std dev = 0.225, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5031523175669352;  // std dev = 0.053, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.0949832067209601;  // std dev = 2.553, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | | else return 0.0753567331611002;  // std dev = 4.079, 83.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=23 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3269627481245191;  // std dev = 0.028, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(E, A), phenotype(A, F) )
%   | | then return 0.31655164181714707;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.34750142272173296;  // std dev = 0.029, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(G, H) )
%   | | then return 0.34663163940288744;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.18235665113596689;  // std dev = 0.510, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3730921116939901;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, J) )
%   | | then return 0.04693311306072904;  // std dev = 3.709, 133.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=36 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.12067106895215514;  // std dev = 2.416, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | | else return 0.07462371964059307;  // std dev = 4.042, 80.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, C) )
%   | | then return 0.25947520341871544;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.268729871498873;  // std dev = 0.037, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( phenotype(F, G), interaction(H, F) )
%   | | then if ( interaction(A, H), phenotype(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.31104983814861864;  // std dev = 0.052, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.3048535627257339;  // std dev = 0.065, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I) )
%   | | then return 0.03485662187426458;  // std dev = 3.654, 143.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=36 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.06338748044426487;  // std dev = 4.092, 93.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=27 */
%   | | | else return 0.07649193319900127;  // std dev = 2.347, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(E, A), interaction(C, E) )
%   | | then return 0.20801367215988242;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22059463032159732;  // std dev = 0.034, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return -0.2110941163096242;  // std dev = 0.605, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.5206467610652655;  // std dev = 1.073, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | else return -0.14909091715174014;  // std dev = 0.214, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2519039352819645;  // std dev = 0.065, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03572211304165709;  // std dev = 4.781, 129.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.17966566778697335;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F) )
%   | | | then return -0.07966614421204155;  // std dev = 0.868, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.19042778064692345;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, G) )
%   | then return -0.003472140385481955;  // std dev = 3.015, 157.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=37 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, H), interaction(H, I) )
%   | | | then return 0.20560812257152666;  // std dev = 0.040, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.2089650262792573;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.05174518634824853;  // std dev = 4.703, 118.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.15469897891833723;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.1693427991283938;  // std dev = 0.028, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.05747200065783025;  // std dev = 2.119, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.35144778089466927;  // std dev = 0.247, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.11933750678318508;  // std dev = 0.075, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6284493929187406;  // std dev = 1.164, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return -0.239154938902569;  // std dev = 0.262, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( recursion_proteinclass(E, B), interaction(C, E) )
%   | | | then return 0.13246715571795398;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1469457512071089;  // std dev = 0.025, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, F) )
%   | then return 0.004330447515793018;  // std dev = 2.692, 139.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=37 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return -0.026932148552651764;  // std dev = 0.275, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.05086853016616443;  // std dev = 3.219, 85.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=30 */
%   | | else if ( interaction(I, A), phenotype(A, J) )
%   | | | then return 0.02074741284348733;  // std dev = 0.864, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.08612489803393454;  // std dev = 1.584, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */


Results
   AUC ROC   = 0.986744
   AUC PR    = 0.238887
   CLL	      = -0.21285
   Precision = 0.209644 at threshold = 0.5
   Recall    = 0.722022
   F1        = 0.324939


Total learning time: 2.633 seconds
Total inference time: 16.235 seconds
AUC ROC: 0.986744


Results scoring model
   AUC ROC   = 0.996565
   AUC PR    = 0.548058
   CLL	      = -0.189083
   Precision = 0.543689 at threshold = 0.5
   Recall    = 0.608696
   F1        = 0.574359


Total scoring time: 3.949 seconds
Parameter learned model CLL: -0.189083


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F), interaction(F, A)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 4], 'false,true,false': [1.05e-08, 21, 0], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [4.825, 79, 33], 'false,false,false,false': [5.071, 90, 36]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.79, 1, 7], 'false,true,true': [3.153, 39, 14], 'false,true,false,true': [0.192, 0, 23], 'false,true,false,false': [0.1, 65, 0], 'false,false,true,true': [0.816, 1, 2], 'false,false,true,false': [4.502, 67, 30], 'false,false,false,true': [2.4, 16, 9], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, E), interaction(A, G)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.74, 1, 7], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.655, 2, 2], 'false,true,false': [4.528, 106, 34], 'false,false,true,true': [0.965, 1, 15], 'false,false,true,false': [0.014, 39, 0], 'false,false,false,true': [0.044, 0, 3], 'false,false,false,false': [4.006, 53, 23]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D), interaction(C, E)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true,true,true': [2.11e-08, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.041, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.021, 1, 37], 'false,true,false': [0.225, 96, 0], 'false,false,true': [0.053, 0, 5], 'false,false,false,true': [2.553, 29, 13], 'false,false,false,false': [4.079, 60, 23]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'interaction(E, A), phenotype(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H), interaction(G, H)', 'false,true,false': 'phenotype(A, I)', 'false,false': 'interaction(A, J)', 'false,false,false': 'phenotype(A, K)'}, {'true,true': [0.028, 0, 5], 'true,false,true': [0.006, 0, 2], 'true,false,false': [0.029, 0, 7], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.51, 1, 2], 'false,true,false,false': [0.046, 0, 3], 'false,false,true': [3.709, 97, 36], 'false,false,false,true': [2.416, 24, 13], 'false,false,false,false': [4.042, 57, 23]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'interaction(E, D), interaction(E, C)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'phenotype(F, G), interaction(H, F)', 'false,true,true': 'interaction(A, H), phenotype(A, G)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.025, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.037, 0, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.052, 0, 2], 'false,true,false': [0.065, 0, 4], 'false,false,true': [3.654, 107, 36], 'false,false,false,true': [4.092, 66, 27], 'false,false,false,false': [2.347, 19, 9]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'true,true': 'interaction(E, A), interaction(C, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [0.034, 0, 10], 'false,true,true,true': [0.605, 1, 1], 'false,true,true,false': [1.073, 1, 36], 'false,true,false': [0.214, 104, 0], 'false,false,true': [0.065, 0, 5], 'false,false,false,true': [4.781, 93, 36], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'phenotype(A, E), interaction(C, A)', 'true,false,false': 'phenotype(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, H), interaction(H, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.017, 0, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.868, 1, 3], 'true,false,false,false': [0.0, 0, 6], 'false,true': [3.015, 120, 37], 'false,false,true,true': [0.04, 0, 2], 'false,false,true,false': [0.04, 0, 3], 'false,false,false,true': [4.703, 82, 36], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true,true': [0.015, 0, 5], 'true,false': [0.028, 0, 9], 'false,true,true': [2.119, 32, 14], 'false,true,false,true': [0.247, 0, 23], 'false,true,false,false': [0.075, 60, 0], 'false,false,true,true': [1.164, 0, 41], 'false,false,true,false': [0.262, 94, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'recursion_proteinclass(E, B), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), phenotype(A, J)'}, {'true,true,true,true': [0.0, 0, 4], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.025, 0, 10], 'false,true': [2.692, 102, 37], 'false,false,true,true': [0.275, 1, 2], 'false,false,true,false': [3.219, 55, 30], 'false,false,false,true': [0.864, 6, 3], 'false,false,false,false': [1.584, 10, 6]}]]
[{'': [-2.5376526277146434e-16, 0.20633771441301027], 'false': [0.13439999999999985, 0.21179020813223057], 'false,false': [0.0, 0.20586469882070613], 'false,false,false': [0.20782844387755237, 0.2040816326530626], 'false,true': [0.0, 5.28677630773884e-18], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, 1.4802973661668753e-16]}, {'': [0.04441960522005548, 0.20086693369258848], 'false': [0.18647010520709037, 0.21524337471339286], 'false,false': [0.21100837245271986, 0.23040000000000002], 'false,false,false': [0.23040000000000002, nan], 'false,false,true': [0.22222222222222224, 0.20892111833524799], 'false,true': [0.18762739648259566, 0.18574661713067808], 'false,true,false': [0.001607241511242764, 0.0001549605932038157], 'true': [-6.344131569286608e-17, 0.07808133730087852]}, {'': [0.03780032348311106, 0.17571428501121253], 'false': [0.1475434090417518, 0.20525942159104257], 'false,false': [0.19165683436134517, 0.21355346026372626], 'false,false,false': [0.0006427630551077238, 0.21113586722437228], 'false,false,true': [0.05817825899743512, 4.779338174229699e-06], 'false,true': [0.12511724437013244, 0.14645815337985485], 'false,true,true': [0.0, 0.10738879322289013], 'true': [0.0, 0.06839276321969107]}, {'': [0.0004830036971911359, 0.16819958321452128], 'false': [0.15197884884011084, 0.18479769083820133], 'false,false': [0.000566691978161371, 0.18534345549957024], 'false,false,false': [0.15518735780098167, 0.20047374090397568], 'false,true': [0.02742528574845207, 0.0005287025231585177], 'false,true,true': [nan, 0.027425285748451975], 'true': [7.401486830834377e-17, 0.00021131411752117746], 'true,true': [7.401486830834377e-17, nan]}, {'': [0.0002673777753865141, 0.14299793490315074], 'false': [0.045795738043651175, 0.14439097027887093], 'false,false': [0.10343096505910031, 0.19000257410151053], 'false,false,false': [0.15771132639146557, 0.20426673548356877], 'false,true': [0.0, 0.05275004530758174], 'false,true,false': [0.08659279972104462, 0.00071728293697824], 'true': [0.0001562950514653938, 0.0002624398883036684], 'true,false': [1.7307308495931317e-05, 0.00011961355979493517]}, {'': [0.0001591931970559449, 0.13359423626871766], 'false': [0.0011673587128920304, 0.13512936858307045], 'false,false': [0.09335843715163165, 0.18395538399528483], 'false,false,false': [0.18004855876939732, 0.19679963664787659], 'false,true': [0.0013653032572658041, 0.001055588497666446], 'false,true,true': [nan, 0.0013653032572658041], 'true': [0.00012052455920842364, 0.0001500868874686355], 'true,true': [0.00012052455920842364, nan]}, {'': [0.00011557702534322914, 0.13369272305250995], 'false': [0.09730869357345427, 0.17230439351116747], 'false,false': [0.0008560806436593516, 0.17720584933373631], 'false,false,false': [0.17720584933373631, nan], 'false,true': [0.06493849446965136, 0.00044043146424264186], 'false,true,true': [0.18295527674938528, 0.031100505780946842], 'true': [0.0, 0.00011658483311857704], 'true,true': [0.0, nan]}, {'': [0.06401329890847181, 0.11281492007963534], 'false': [0.05791730944264651, 0.18076300675749624], 'false,false': [0.0006496072423703813, 0.18740722056391634], 'false,false,false': [0.18740722056391634, nan], 'true': [5.927164464384349e-05, 0.09283614102344237], 'true,false': [nan, 0.09283614102344237], 'true,false,false': [0.18831991561117378, 0.0], 'false,false,true': [0.0008189867838474807, 0.0005321800270511231]}, {'': [0.00012260617164644043, 0.11825801826883424], 'false': [0.06438923085603046, 0.16972728510739843], 'false,false': [0.16972728510739843, nan], 'false,false,true': [0.03306103820076726, 0.0007279322808182159], 'false,true': [0.09762769319804089, 0.04520181502287061], 'false,true,false': [0.002654824020701221, 9.351776052762828e-05], 'true': [4.6837601489402304e-05, 8.81135823249483e-05]}, {'': [8.787583776356007e-05, 0.08383611074887488], 'false': [0.0521379782165366, 0.12160575872414836], 'false,false': [0.1188395229018198, 0.13118203509156287], 'false,false,false': [0.0828739302614632, 0.15681662645335623], 'false,false,true': [0.02529430199348523, 0.12193476851538632], 'true': [0.0, 6.313196505796093e-05], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;true,false;interaction(A, E), interaction(C, E).;true;true
0;false;interaction(A, F), interaction(F, A).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;phenotype(A, D).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(E, F), interaction(A, F).;true;true
1;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;phenotype(A, D).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,true,true;interaction(G, E), interaction(A, G).;true;true
2;false,false;phenotype(A, H).;true;true
2;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
2;false,false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;phenotype(A, D), interaction(C, E).;true;true
3;false;interaction(A, F).;true;true
3;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;true,false;interaction(E, A), phenotype(A, F).;true;true
4;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;false,true;interaction(A, H), interaction(G, H).;true;true
4;false,true,false;phenotype(A, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), interaction(D, A).;true;true
5;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
5;false,true;phenotype(F, G), interaction(H, F).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(C, A), phenotype(A, D).;true;true
6;false;interaction(A, F).;true;true
6;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
6;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, A), interaction(D, C).;true;true
7;true,false;phenotype(A, F).;true;true
7;false;interaction(A, G).;true;true
7;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;false,false,true;interaction(I, H), interaction(H, I).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), interaction(C, D).;true;true
8;false;interaction(A, E).;true;true
8;false,true;interaction(E, F), interaction(A, F).;true;true
8;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
8;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, A), phenotype(A, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.09344305274657119;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.1878786648292408;  // std dev = 6.394, 185.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=61 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109543;  // std dev = 1.05e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.04407845260232552;  // std dev = 2.919, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | | else return 0.3337056976419209;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.8199087450510507;  // std dev = 0.187, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.1577220012783737;  // std dev = 0.104, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.8216812465439247;  // std dev = 0.153, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.16629430235807904;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.05568782953184666;  // std dev = 1.464, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.11812290111371011;  // std dev = 3.637, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.45750584483391493;  // std dev = 0.259, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.5904624259391039;  // std dev = 0.085, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.02320128087856546;  // std dev = 2.935, 73.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=14 */
%   | | | else return 0.11566205961348351;  // std dev = 3.410, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6803756046587723;  // std dev = 0.948, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.16468708108133082;  // std dev = 0.097, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.6443770902703195;  // std dev = 0.140, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1218078758202012;  // std dev = 3.679, 74.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=23 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(C, E) )
%   | then return 0.4414872781850834;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.42051029591165656;  // std dev = 0.008, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), interaction(H, A) )
%   | | | then return 0.44872057384549696;  // std dev = 0.156, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7216022330871856;  // std dev = 0.445, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else if ( interaction(I, A), interaction(A, I) )
%   | | | then return -0.12221416299302255;  // std dev = 0.046, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.16368781498878587;  // std dev = 0.174, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.4752034863907822;  // std dev = 0.197, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.08671478074674095;  // std dev = 3.702, 91.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=27 */
%   | | | else return 0.17267845521200573;  // std dev = 2.161, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.333625559608277;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3262344837107707;  // std dev = 0.009, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then return 0.34913099750605603;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.33991354046286754;  // std dev = 0.110, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.37917939054794614;  // std dev = 0.135, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( phenotype(H, I) )
%   | | | then return -0.11954083783213168;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.044128362772532514;  // std dev = 0.656, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.0954429040011685;  // std dev = 2.862, 67.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
%   | | | else return 0.04906146291588228;  // std dev = 4.799, 171.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=47 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.13302057591284802;  // std dev = 0.717, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then return -0.07483522111194678;  // std dev = 0.823, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.25838342309007745;  // std dev = 0.008, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( phenotype(F, G), interaction(H, F) )
%   | | then return 0.3447844678492638;  // std dev = 0.009, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.25371284946855344;  // std dev = 0.114, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.22485904539804097;  // std dev = 0.410, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.013029954121356048;  // std dev = 2.286, 75.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=13 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.06345155549385216;  // std dev = 2.933, 70.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=22 */
%   | | | else return 0.11354298398089203;  // std dev = 3.971, 93.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=34 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.2417220296339876;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.22634704471694694;  // std dev = 0.026, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.6262136439432961;  // std dev = 0.279, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.4395757331190659;  // std dev = 0.409, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.12810060577480473;  // std dev = 0.135, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return -0.18525969379267498;  // std dev = 0.159, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2307520184932895;  // std dev = 0.123, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, J), enzyme(A, K) )
%   | | | then return 0.10631666375347348;  // std dev = 1.748, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.06191315584913285;  // std dev = 3.820, 91.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=29 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1924155503673324;  // std dev = 0.020, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( complex(A, F), location(E, G) )
%   | | | then return -0.07895780324802633;  // std dev = 0.252, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.005397283675680449;  // std dev = 0.367, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.04925005921211678;  // std dev = 2.468, 84.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=29 */
%   | | | else return -0.01765198470265936;  // std dev = 1.008, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, J), interaction(J, K) )
%   | | | then return 0.1841603879084061;  // std dev = 0.070, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.19875794099278898;  // std dev = 0.080, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.07275719018966026;  // std dev = 3.102, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | | | else return 0.020083211582979602;  // std dev = 2.842, 59.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.1694540552829524;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, E), complex(A, F) )
%   | | then return -0.14221712444488196;  // std dev = 0.794, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.15569856292649023;  // std dev = 0.016, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, H), interaction(A, H) )
%   | | then if ( interaction(A, I), complex(I, J) )
%   | | | then return -0.017788343042827365;  // std dev = 1.923, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | | else return 0.10211945922000036;  // std dev = 0.755, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.016428100121974463;  // std dev = 0.217, 74.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=23 */
%   | else if ( interaction(K, L), recursion_proteinclass(L, B) )
%   | | then if ( complex(A, M) )
%   | | | then return 0.133569355793303;  // std dev = 2.294, 36.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return 0.27394946720870145;  // std dev = 2.632, 38.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=23 */
%   | | else return -0.22737055831694472;  // std dev = 0.042, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.1484445360173563;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.15027721818955225;  // std dev = 0.032, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.1996043661107313;  // std dev = 0.080, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, H), location(F, I) )
%   | | | then return -0.0030362297902345246;  // std dev = 1.438, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | | else return -0.050781101486895165;  // std dev = 1.145, 44.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=6 */
%   | else if ( interaction(A, J), phenotype(A, K) )
%   | | then if ( phenotype(J, L), interaction(J, J) )
%   | | | then return 0.12216470290846547;  // std dev = 0.853, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.039082550957697;  // std dev = 1.123, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.01697502381329758;  // std dev = 2.965, 70.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=22 */
%   | | | else return 0.07818660240911007;  // std dev = 2.820, 72.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=30 */


Results
   AUC ROC   = 0.982157
   AUC PR    = 0.209223
   CLL	      = -0.213489
   Precision = 0.186941 at threshold = 0.5
   Recall    = 0.754513
   F1        = 0.299642


Total learning time: 7.443 seconds
Total inference time: 115.72800000000001 seconds
AUC ROC: 0.982157


Results scoring model
   AUC ROC   = 0.993018
   AUC PR    = 0.46509
   CLL	      = -0.203904
   Precision = 0.488889 at threshold = 0.5
   Recall    = 0.717391
   F1        = 0.581498


Total scoring time: 9.473 seconds
Refined model CLL: -0.203904


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.986744
   AUC PR    = 0.238887
   CLL	      = -0.21285
   Precision = 0.209644 at threshold = 0.5
   Recall    = 0.722022
   F1        = 0.324939


Total learning time: 23.497999999999998 seconds
Total inference time: 16.235 seconds
AUC ROC: 0.986744
Total revision time: 23.497999999999998
Best scored revision CLL: -0.189083


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:25:48
{'AUC ROC': 0.986744, 'AUC PR': 0.238887, 'CLL': -0.21285, 'Precision': [0.209644, 0.5], 'Recall': 0.722022, 'F1': 0.324939, 'Learning time': 23.497999999999998, 'Inference time': 16.235, 'parameter': {'AUC ROC': 0.986744, 'AUC PR': 0.238887, 'CLL': -0.21285, 'Precision': [0.209644, 0.5], 'Recall': 0.722022, 'F1': 0.324939, 'Learning time': 2.633, 'Inference time': 16.235}}


Starting fold 4

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos	 examples: 283
Target test neg examples: 40479

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;false;true
0;true,false;follows(E, A), follows(E, C).;false;false
0;false;follows(F, A), follows(A, F).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(H, A), recursion_accounttype(H, B).;false;true
0;false,false,false;follows(I, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;tweets(A, D).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(F, E), follows(F, A).;false;true
1;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(E, G), follows(G, A).;false;false
2;false,false;tweets(A, H).;true;true
2;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), follows(E, C).;true;false
3;true,true;follows(E, A).;false;false
3;false;follows(F, A).;true;true
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false,true,true;follows(G, F), follows(A, G).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;tweets(A, I).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;true
4;true,false;follows(A, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,true;follows(H, A), follows(H, G).;false;true
4;false,true,false;tweets(A, I).;false;false
4;false,false;follows(J, A).;false;true
4;false,false,false;tweets(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), follows(A, D).;true;false
5;true,true;follows(D, E), follows(C, E).;false;false
5;false;follows(A, F), recursion_accounttype(F, B).;true;true
5;false,true;tweets(F, G), follows(F, H).;true;false
5;false,true,true;follows(H, A), tweets(A, G).;false;false
5;false,false;follows(I, A).;false;true
5;false,false,false;follows(A, J), follows(J, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, C), tweets(A, D).;true;false
6;true,true;follows(A, E), follows(E, C).;false;false
6;false;follows(F, A).;true;true
6;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
6;false,true,true;follows(A, H), recursion_accounttype(H, B).;false;false
6;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(C, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(H, I), follows(I, H).;false;false
7;false,false,false;follows(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(D, C).;false;false
8;false;follows(E, A).;true;true
8;false,true;follows(F, E), follows(F, A).;false;true
8;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(A, C), tweets(A, D).;true;false
9;true,true;follows(A, E), follows(C, E).;true;false
9;true,true,true;recursion_accounttype(E, B), follows(E, C).;false;false
9;false;follows(F, A).;false;true
9;false,false;follows(A, G), follows(G, H).;true;true
9;false,false,true;recursion_accounttype(H, B).;false;false
9;false,false,false;follows(A, I), tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995121;  // std dev = 4.21e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.18029658610622404;  // std dev = 5.704, 149.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=48 */
%   | | | else return 0.11346808403568258;  // std dev = 2.989, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07751472431779245;  // std dev = 3.130, 61.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.798093663516815;  // std dev = 1.004, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.1651948807424498;  // std dev = 0.134, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7609047842808697;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.13962439121370845;  // std dev = 2.478, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.14376752842070023;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.5553664367462843;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.7035658432648949;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5320490548907634;  // std dev = 0.754, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.0884983614585815;  // std dev = 5.171, 178.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=49 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7778077178316845;  // std dev = 0.255, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.17569347505462826;  // std dev = 0.001, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6177820666266197;  // std dev = 0.103, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.06196724731587865;  // std dev = 2.271, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, C) )
%   | then if ( interaction(E, A) )
%   | | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.08418025082497664;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.30640247304719875;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5935708907252597;  // std dev = 2.226, 61.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   | | else return -0.16012420022375923;  // std dev = 0.212, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.43117938056792376;  // std dev = 0.143, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.05702764750994034;  // std dev = 1.617, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.11469190156118891;  // std dev = 2.174, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.338229024715626;  // std dev = 0.072, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), complex(A, F) )
%   | | then return -0.6792881528398503;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.3557462022711023;  // std dev = 0.046, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A), interaction(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, I) )
%   | | | then return 0.34183410233100875;  // std dev = 0.098, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.18201658295584505;  // std dev = 0.837, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(J, A) )
%   | | then return 0.05983092285241523;  // std dev = 4.266, 181.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=52 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.13726333541341484;  // std dev = 1.488, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.052167796001087605;  // std dev = 2.241, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( interaction(D, E), interaction(C, E) )
%   | | then return 0.2672389340757471;  // std dev = 0.064, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11089024354396408;  // std dev = 0.922, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(F, G), interaction(F, H) )
%   | | then if ( interaction(H, A), complex(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24789379523269106;  // std dev = 0.064, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.32475245849184964;  // std dev = 0.096, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A) )
%   | | then return 0.0396321026656214;  // std dev = 4.305, 188.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=52 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.13713932589380587;  // std dev = 2.186, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.26879219443869684;  // std dev = 1.157, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then if ( interaction(A, E), interaction(E, C) )
%   | | then return 0.20489601032313487;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.028317886786690973;  // std dev = 1.526, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.25367986589952063;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.44507299137858364;  // std dev = 2.152, 57.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=52 */
%   | | else return -0.15038529262073608;  // std dev = 0.169, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return -0.15831510696433157;  // std dev = 1.070, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.0015780957996221088;  // std dev = 2.750, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.2028307908585599;  // std dev = 0.087, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( complex(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.28656552717533;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.24336002958675218;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then return 0.012901252229961406;  // std dev = 3.662, 198.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=56 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), interaction(I, H) )
%   | | | then return 0.1885509086128927;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.292001815705834;  // std dev = 0.090, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.0028743465591868932;  // std dev = 2.731, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.16658065356565135;  // std dev = 0.056, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.06580610666401296;  // std dev = 0.934, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.02357778822044276;  // std dev = 2.216, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3456549346654983;  // std dev = 1.054, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.12969583809031013;  // std dev = 0.218, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5870124477440886;  // std dev = 0.780, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.23656607160740678;  // std dev = 0.358, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( recursion_proteinclass(E, B), interaction(E, C) )
%   | | | then return 0.12671983707237422;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08012368114809011;  // std dev = 0.864, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( interaction(F, A) )
%   | then return 0.005131841420778201;  // std dev = 3.226, 195.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=56 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return -0.07892408961768485;  // std dev = 0.969, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.0019193428699649543;  // std dev = 1.939, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( interaction(A, I), complex(A, J) )
%   | | | then return 0.12190244280599347;  // std dev = 0.433, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.01063440965824549;  // std dev = 1.016, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */


Results
   AUC ROC   = 0.981264
   AUC PR    = 0.222344
   CLL	      = -0.190313
   Precision = 0.132733 at threshold = 0.5
   Recall    = 0.780919
   F1        = 0.226899


Total learning time: 2.715 seconds
Total inference time: 21.804 seconds
AUC ROC: 0.981264


Results scoring model
   AUC ROC   = 0.989293
   AUC PR    = 0.373477
   CLL	      = -0.174412
   Precision = 0.246377 at threshold = 0.5
   Recall    = 0.790698
   F1        = 0.375691


Total scoring time: 4.592 seconds
Parameter learned model CLL: -0.174412


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A), interaction(A, F)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.0, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [4.21e-08, 0, 5], 'false,true,true': [0.0, 0, 5], 'false,true,false': [1.05e-08, 22, 0], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [5.704, 101, 48], 'false,false,false,false': [2.989, 35, 12]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.0, 0, 8], 'false,true,true': [3.13, 47, 14], 'false,true,false,true': [1.004, 1, 42], 'false,true,false,false': [0.134, 81, 0], 'false,false,true,true': [0.101, 0, 3], 'false,false,true,false': [2.478, 21, 9], 'false,false,false,true': [1.449, 7, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.0, 0, 8], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.754, 1, 6], 'false,true,false': [5.171, 129, 49], 'false,false,true,true': [0.255, 0, 6], 'false,false,true,false': [0.001, 15, 0], 'false,false,false,true': [0.103, 0, 2], 'false,false,false,false': [2.271, 22, 7]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), interaction(E, C)', 'true,true': 'interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(G, F), interaction(A, G)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I)'}, {'true,true,true': [1.49e-08, 0, 5], 'true,true,false': [0.816, 1, 2], 'true,false': [0.943, 1, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.226, 5, 56], 'false,true,false': [0.212, 139, 0], 'false,false,true': [0.143, 0, 3], 'false,false,false,true': [1.617, 15, 5], 'false,false,false,false': [2.174, 16, 7]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'interaction(A, E), complex(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A), interaction(H, G)', 'false,true,false': 'complex(A, I)', 'false,false': 'interaction(J, A)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.072, 0, 10], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.046, 0, 5], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.098, 0, 3], 'false,true,false,false': [0.837, 1, 4], 'false,false,true': [4.266, 129, 52], 'false,false,false,true': [1.488, 9, 5], 'false,false,false,false': [2.241, 20, 7]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,true': 'interaction(D, E), interaction(C, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'complex(F, G), interaction(F, H)', 'false,true,true': 'interaction(H, A), complex(A, G)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.064, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.922, 1, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.064, 0, 2], 'false,true,false': [0.096, 0, 5], 'false,false,true': [4.305, 136, 52], 'false,false,false,true': [2.186, 15, 9], 'false,false,false,false': [1.157, 3, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'true,true': 'interaction(A, E), interaction(E, C)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [1.526, 3, 11], 'false,true,true,true': [0.014, 0, 4], 'false,true,true,false': [2.152, 5, 52], 'false,true,false': [0.169, 115, 0], 'false,false,true': [1.07, 2, 3], 'false,false,false,true': [2.75, 35, 12], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'complex(A, E), interaction(A, C)', 'true,false,false': 'complex(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(H, I), interaction(I, H)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.087, 0, 10], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 1], 'true,false,false,false': [0.0, 0, 4], 'false,true': [3.662, 142, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.09, 0, 2], 'false,false,false,true': [2.731, 36, 12], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true,true': [0.056, 0, 9], 'true,false': [0.934, 1, 6], 'false,true,true': [2.216, 38, 14], 'false,true,false,true': [1.054, 1, 42], 'false,true,false,false': [0.218, 94, 0], 'false,false,true,true': [0.78, 0, 15], 'false,false,true,false': [0.358, 40, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'recursion_proteinclass(E, B), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), complex(A, J)'}, {'true,true,true,true': [0.0, 0, 4], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.864, 2, 11], 'false,true': [3.226, 139, 56], 'false,false,true,true': [0.969, 2, 3], 'false,false,true,false': [1.939, 22, 9], 'false,false,false,true': [0.433, 1, 1], 'false,false,false,false': [1.016, 6, 2]}]]
[{'': [-2.220446049250313e-16, 0.21275777162203896], 'false': [0.1508916323731138, 0.21880646518650546], 'false,false': [0.0, 0.21241149521032954], 'false,false,false': [0.2183685419575703, 0.19013128112267944], 'false,true': [0.0, 5.046468293750712e-18], 'true': [-8.881784197001253e-17, 1.4802973661668753e-16], 'true,false': [0.0, 3.552713678800501e-16]}, {'': [1.1842378929335003e-16, 0.20450629349243946], 'false': [0.201249793293011, 0.21685909775861903], 'false,false': [0.21830060038270424, 0.2100000000000002], 'false,false,true': [0.003433117183191466, 0.2046974099017745], 'false,false,false': [0.2100000000000002, nan], 'false,true': [0.1606431409202842, 0.2184750740078581], 'false,true,false': [0.02345712725937126, 0.00022273885657207195], 'true': [-6.344131569286608e-17, 0.0]}, {'': [-1.1842378929335003e-16, 0.16261576337397973], 'false': [0.1558633625720251, 0.18667207961216398], 'false,false': [0.18863793479766638, 0.18533989071944873], 'false,false,true': [0.010829363527589267, 7.049551979572873e-08], 'false,false,false': [0.005280713798833436, 0.1778267899340017], 'false,true': [0.07425915864394173, 0.15023135555973846], 'false,true,true': [0.0, 0.08119035879201848], 'true': [0.0, -1.1102230246251565e-16]}, {'': [0.10380622837370254, 0.1498689029222816], 'false': [0.1454072745489943, 0.167933212358082], 'false,false': [0.006823230804987294, 0.17148689413156498], 'false,false,false': [0.1306750914500274, 0.205428829274427], 'false,true': [0.08121264617601624, 0.0003218494488987762], 'true': [0.10937500000000008, 0.09876543209876552], 'true,true': [4.4408920985006264e-17, 0.2222222222222222], 'false,true,true': [nan, 0.08121264617601648]}, {'': [0.061886912108282705, 0.11530062509397847], 'false': [0.09480225827792002, 0.11493519501176849], 'false,false': [0.10054324055856768, 0.1780972400710769], 'false,false,false': [0.15807163899433216, 0.18600826283992478], 'false,true': [nan, 0.09480225827792002], 'false,true,false': [0.003174075832341472, 0.14020105293305557], 'true': [0.0005215953695691056, 0.14914903369175755], 'true,false': [0.0, 0.0004294877201181047]}, {'': [0.05913485183247538, 0.11360287347408021], 'false': [0.0031118265553654917, 0.11526621165770469], 'false,false': [0.09856523125650012, 0.20670032007415362], 'false,false,false': [0.1991223710078308, 0.2231461341025662], 'true': [0.0004079583984906932, 0.1417349369114062], 'false,true': [0.0020479009398266315, 0.0018496099107282228], 'false,true,true': [nan, 0.0020479009398266315], 'true,true': [0.0004079583984906932, nan]}, {'': [0.13467635812743833, 0.11989383920524069], 'true': [0.0, 0.16622646565649815], 'false': [0.10420597330264765, 0.16968536833846076], 'false,false': [0.229169881635893, 0.16089897513653387], 'false,false,false': [0.16089897513653387, nan], 'false,true': [0.07817344684534075, 0.0002493041797931214], 'false,true,true': [4.5685950047183455e-05, 0.08125404240613003], 'true,true': [0.0, nan]}, {'': [0.0011442295066575495, 0.08460118726930525], 'false': [0.06773101619043613, 0.15007764478307195], 'false,false': [0.005061618564566457, 0.15532682395622258], 'false,false,false': [0.15532682395622258, nan], 'false,false,true': [0.0, 0.004025064454065572], 'true': [0.0007610996704972228, 0.0002986744035002653], 'true,false': [nan, 0.0002986744035002542], 'true,false,false': [0.0, 0.0]}, {'': [0.05724006492750777, 0.08573727698061687], 'false': [0.06739522938004337, 0.14794517908066904], 'false,false': [0.14794517908066904, nan], 'false,false,true': [0.040605264537888174, 0.0032117622513387232], 'false,true': [0.09445449136390158, 0.05711998974977021], 'true': [0.00035158685288172144, 0.1246699198975312], 'false,true,false': [0.025844950286983713, 0.0005054205493038883]}, {'': [0.044313857991401466, 0.06801095082760526], 'false': [0.0533753424753812, 0.12994520078287417], 'false,false': [0.13120336250128736, 0.1247807062980324], 'false,false,true': [0.1879174207120181, 0.12123236000460996], 'false,false,false': [0.09375933398312705, 0.12902284592453325], 'true': [0.0, 0.057438020220249644], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
0;true,false;interaction(E, A), interaction(E, C).;true;true
0;false;interaction(F, A), interaction(A, F).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;complex(A, D).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(F, E), interaction(F, A).;true;true
1;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;complex(A, D).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
2;false,true,true;interaction(E, G), interaction(G, A).;true;true
2;false,false;complex(A, H).;true;true
2;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), interaction(E, C).;true;true
3;true,true;interaction(E, A).;true;true
3;false;interaction(F, A).;true;true
3;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(C, D).;true;true
4;true,false;interaction(A, E), complex(A, F).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, D), interaction(A, D).;true;true
5;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;false,true;complex(F, G), interaction(F, H).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(A, C), complex(A, D).;true;true
6;false;interaction(F, A).;true;true
6;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
6;false,true,true;interaction(A, H), recursion_proteinclass(H, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, D), interaction(C, D).;true;true
7;true,false;complex(A, F).;true;true
7;false;interaction(G, A).;true;true
7;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
7;false,false,true;interaction(H, I), interaction(I, H).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), interaction(D, C).;true;true
8;false;interaction(E, A).;true;true
8;false,true;interaction(F, E), interaction(F, A).;true;true
8;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(A, C), complex(A, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995121;  // std dev = 4.21e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.1418510649004877;  // std dev = 2.11e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.08314893509951238;  // std dev = 2.641, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | | else return 0.21985106275908592;  // std dev = 5.706, 141.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=51 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.6711393364096254;  // std dev = 0.238, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( complex(A, F), enzyme(A, G) )
%   | | | then return 0.5517875606192054;  // std dev = 0.839, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.05347925700710155;  // std dev = 2.850, 52.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=11 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7964345923262249;  // std dev = 1.002, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.16445368740259578;  // std dev = 0.117, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.82244302738355;  // std dev = 0.113, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1596760826639597;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.31566044467847776;  // std dev = 0.940, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1212395228595117;  // std dev = 1.839, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5834142460762526;  // std dev = 0.020, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(D, F), interaction(F, A) )
%   | | | then return 0.5962979865661977;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6685383293588399;  // std dev = 0.167, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.01923332259070051;  // std dev = 2.929, 79.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=16 */
%   | | | else return 0.10547444673303544;  // std dev = 4.285, 109.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=33 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7058844761072032;  // std dev = 0.116, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1844893603303683;  // std dev = 0.191, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.1624569498587977;  // std dev = 1.177, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.09030742232412249;  // std dev = 1.915, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, C) )
%   | then if ( interaction(E, A) )
%   | | then return 0.269488742657685;  // std dev = 0.884, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.44300550277689743;  // std dev = 0.029, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.4430055027768975;  // std dev = 0.021, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.6790361073434927;  // std dev = 0.439, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.5970520013919696;  // std dev = 1.368, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | | else return -0.16201573203955236;  // std dev = 0.029, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   | else if ( enzyme(A, J) )
%   | | then return 0.30876661139061023;  // std dev = 0.852, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.031181162447420287;  // std dev = 1.357, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.19270649862620637;  // std dev = 1.878, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3475647116550701;  // std dev = 0.022, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( location(A, D), interaction(A, E) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.3613296578311235;  // std dev = 0.080, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5150074302845776;  // std dev = 0.147, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.11597053766226134;  // std dev = 1.29e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.022757123872029654;  // std dev = 3.467, 114.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=31 */
%   | else if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.03385089943600086;  // std dev = 1.378, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.03137892334326536;  // std dev = 0.855, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( complex(A, K), location(A, L) )
%   | | | then return 0.1422173615287057;  // std dev = 1.445, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.06833887522137921;  // std dev = 2.782, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.2831666677748519;  // std dev = 0.049, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.24912718537756595;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.11491974440956139;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(F, G), interaction(F, H) )
%   | | then return 0.30795297342501665;  // std dev = 0.007, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.33842143104435013;  // std dev = 0.210, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( phenotype(J, K), interaction(I, L) )
%   | | | then return -0.03384710053146492;  // std dev = 2.108, 81.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=14 */
%   | | | else return 0.0760133177968378;  // std dev = 1.517, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.13820574943597969;  // std dev = 1.995, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | | else return 0.04971883608975138;  // std dev = 3.517, 93.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=29 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.03539722955872469;  // std dev = 0.867, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.23422688377940198;  // std dev = 0.027, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.22146597642588645;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.41895834536927773;  // std dev = 2.247, 57.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=52 */
%   | | else return -0.14864550281334962;  // std dev = 0.036, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( location(A, I), location(H, I) )
%   | | | then return -0.018449243481499185;  // std dev = 1.238, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.13899237492930894;  // std dev = 0.986, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.033025425717256175;  // std dev = 0.808, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.24971599518238533;  // std dev = 1.431, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.1953981543058379;  // std dev = 0.027, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( complex(A, E) )
%   | | then return -0.28342742091613216;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.11676075424946548;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( complex(A, G) )
%   | | then return -0.04474815963537568;  // std dev = 0.217, 77.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=15 */
%   | | else return 0.04012507188639127;  // std dev = 0.252, 127.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=41 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), interaction(I, H) )
%   | | | then return 0.25409092864941996;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.006253207040609092;  // std dev = 0.782, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return -0.028135319318529545;  // std dev = 1.946, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | | else return 0.1320690691651637;  // std dev = 1.347, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13248262282988552;  // std dev = 0.235, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, G) )
%   | | | then return -0.06032016927926402;  // std dev = 0.874, 31.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=4 */
%   | | | else return 0.05456893350255849;  // std dev = 1.883, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3107644393125696;  // std dev = 1.536, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.1272574854959394;  // std dev = 0.171, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then if ( complex(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.468722059464707;  // std dev = 0.093, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14931645986443146;  // std dev = 0.062, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.04133714000320188;  // std dev = 1.485, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return -0.04490057175791372;  // std dev = 1.690, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.17133423635193157;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, E), interaction(A, F) )
%   | | then return -0.14309836267499543;  // std dev = 0.708, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.17920487949329938;  // std dev = 0.046, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then return 0.15407638631929593;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2770350858570821;  // std dev = 0.105, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then if ( complex(J, K), interaction(A, J) )
%   | | | then return -0.08251762437125787;  // std dev = 0.554, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.016459259011946756;  // std dev = 2.218, 103.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=32 */
%   | | else if ( location(A, L), interaction(M, A) )
%   | | | then return -0.0366517488182569;  // std dev = 2.196, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | | else return 7.265022381607278E-4;  // std dev = 2.417, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */


Results
   AUC ROC   = 0.979324
   AUC PR    = 0.184476
   CLL	      = -0.198706
   Precision = 0.149464 at threshold = 0.5
   Recall    = 0.787986
   F1        = 0.251268


Total learning time: 6.363 seconds
Total inference time: 24.225 seconds
AUC ROC: 0.979324


Results scoring model
   AUC ROC   = 0.987557
   AUC PR    = 0.312321
   CLL	      = -0.181534
   Precision = 0.251825 at threshold = 0.5
   Recall    = 0.802326
   F1        = 0.383333


Total scoring time: 4.644 seconds
Refined model CLL: -0.181534


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.981264
   AUC PR    = 0.222344
   CLL	      = -0.190313
   Precision = 0.132733 at threshold = 0.5
   Recall    = 0.780919
   F1        = 0.226899


Total learning time: 18.314 seconds
Total inference time: 21.804 seconds
AUC ROC: 0.981264
Total revision time: 18.314
Best scored revision CLL: -0.174412


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:26:54
{'AUC ROC': 0.981264, 'AUC PR': 0.222344, 'CLL': -0.190313, 'Precision': [0.132733, 0.5], 'Recall': 0.780919, 'F1': 0.226899, 'Learning time': 18.314, 'Inference time': 21.804, 'parameter': {'AUC ROC': 0.981264, 'AUC PR': 0.222344, 'CLL': -0.190313, 'Precision': [0.132733, 0.5], 'Recall': 0.780919, 'F1': 0.226899, 'Learning time': 2.715, 'Inference time': 21.804}}


Starting fold 1

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos	 examples: 282
Target test neg examples: 39912

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;false;true
0;true,false;follows(E, A), follows(E, C).;false;false
0;false;follows(F, A), follows(A, F).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(H, A), recursion_accounttype(H, B).;false;true
0;false,false,false;follows(I, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;tweets(A, D).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(F, E), follows(F, A).;false;true
1;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(E, G), follows(G, A).;false;false
2;false,false;tweets(A, H).;true;true
2;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), follows(E, C).;true;false
3;true,true;follows(E, A).;false;false
3;false;follows(F, A).;true;true
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false,true,true;follows(G, F), follows(A, G).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;tweets(A, I).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;true
4;true,false;follows(A, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,true;follows(H, A), follows(H, G).;false;true
4;false,true,false;tweets(A, I).;false;false
4;false,false;follows(J, A).;false;true
4;false,false,false;tweets(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), follows(A, D).;true;false
5;true,true;follows(D, E), follows(C, E).;false;false
5;false;follows(A, F), recursion_accounttype(F, B).;true;true
5;false,true;tweets(F, G), follows(F, H).;true;false
5;false,true,true;follows(H, A), tweets(A, G).;false;false
5;false,false;follows(I, A).;false;true
5;false,false,false;follows(A, J), follows(J, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, C), tweets(A, D).;true;false
6;true,true;follows(A, E), follows(E, C).;false;false
6;false;follows(F, A).;true;true
6;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
6;false,true,true;follows(A, H), recursion_accounttype(H, B).;false;false
6;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(C, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(H, I), follows(I, H).;false;false
7;false,false,false;follows(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(D, C).;false;false
8;false;follows(E, A).;true;true
8;false,true;follows(F, E), follows(F, A).;false;true
8;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(A, C), tweets(A, D).;true;false
9;true,true;follows(A, E), follows(C, E).;true;false
9;true,true,true;recursion_accounttype(E, B), follows(E, C).;false;false
9;false;follows(F, A).;false;true
9;false,false;follows(A, G), follows(G, H).;true;true
9;false,false,true;recursion_accounttype(H, B).;false;false
9;false,false,false;follows(A, I), tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.1418510649004877;  // std dev = 2.58e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.11116098329228312;  // std dev = 3.961, 83.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=21 */
%   | | | else return 0.1914822684328448;  // std dev = 5.164, 120.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=40 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.07719849523519473;  // std dev = 3.213, 72.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=17 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8440714182552775;  // std dev = 1.12e-07, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.15592858174472204;  // std dev = 2.79e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7952947982246839;  // std dev = 0.093, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15021011055878025;  // std dev = 4.991, 116.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=37 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.10593276395882123;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.5553664367462844;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.5747404889450262;  // std dev = 1.090, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.4229794967127322;  // std dev = 0.682, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.025931701639708458;  // std dev = 3.521, 106.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=20 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7740576850265534;  // std dev = 0.310, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.1885456038074996;  // std dev = 0.007, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.25773738616519226;  // std dev = 3.774, 58.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=26 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(C, E) )
%   | then if ( interaction(A, E) )
%   | | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6425975549182555;  // std dev = 1.005, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | else return -0.14433586209374388;  // std dev = 0.130, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.4522895691367365;  // std dev = 0.128, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.09568903702586772;  // std dev = 2.581, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | | else return 0.07553388906684325;  // std dev = 4.229, 84.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=26 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(E, A), phenotype(A, F) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.34651723905289583;  // std dev = 0.114, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, J) )
%   | | then return 0.05407051336588606;  // std dev = 3.286, 114.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.06468929659294925;  // std dev = 2.560, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.058147886351265485;  // std dev = 4.240, 85.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=26 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, C) )
%   | | then return 0.11463255601440556;  // std dev = 0.989, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( phenotype(F, G), interaction(H, F) )
%   | | then if ( interaction(A, H), phenotype(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01765061070384727;  // std dev = 0.585, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3140562453496113;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, I) )
%   | | then return 0.04810289812591413;  // std dev = 3.199, 115.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=33 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.13062083365391933;  // std dev = 4.439, 94.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=37 */
%   | | | else return 0.2449729755675023;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(E, A), interaction(C, E) )
%   | | then return 0.23400256015057297;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12608104306279821;  // std dev = 0.756, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4965438493356708;  // std dev = 0.593, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.14368806482503443;  // std dev = 0.216, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.042919024627253416;  // std dev = 0.724, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02031928084473409;  // std dev = 4.961, 129.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.2043958853349267;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( phenotype(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.1896221056643873;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1896221056643873;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G) )
%   | then return 0.004784392758861753;  // std dev = 2.567, 130.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=33 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, H), interaction(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24273309211853125;  // std dev = 0.083, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.019838288418366302;  // std dev = 4.906, 132.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.1712130675638097;  // std dev = 0.020, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.030690037476224542;  // std dev = 0.903, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return -0.015177467093858027;  // std dev = 1.894, 76.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=17 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.3891593465970262;  // std dev = 0.087, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.1192132097319565;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4985503822608608;  // std dev = 2.416, 50.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=43 */
%   | | | else return -0.26391198007711875;  // std dev = 0.365, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( recursion_proteinclass(E, B), interaction(C, E) )
%   | | | then return 0.14240482473925298;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16717784823348575;  // std dev = 0.031, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F) )
%   | then return 0.024703933432078173;  // std dev = 2.261, 106.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=33 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return -0.08350116761514328;  // std dev = 1.037, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.015080015738495421;  // std dev = 3.876, 117.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=37 */
%   | | else if ( interaction(I, A), phenotype(A, J) )
%   | | | then return 0.44632463121901234;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.02596361897544658;  // std dev = 0.962, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */


Results
   AUC ROC   = 0.988791
   AUC PR    = 0.295296
   CLL	      = -0.207965
   Precision = 0.25641 at threshold = 0.5
   Recall    = 0.70922
   F1        = 0.376648


Total learning time: 3.529 seconds
Total inference time: 13.686 seconds
AUC ROC: 0.988791


Results scoring model
   AUC ROC   = 0.987445
   AUC PR    = 0.329196
   CLL	      = -0.211549
   Precision = 0.254464 at threshold = 0.5
   Recall    = 0.655172
   F1        = 0.366559


Total scoring time: 7.739 seconds
Parameter learned model CLL: -0.211549


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F), interaction(F, A)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 12], 'false,true,false': [2.58e-08, 29, 0], 'false,false,true': [2.11e-08, 0, 3], 'false,false,false,true': [3.961, 62, 21], 'false,false,false,false': [5.164, 80, 40]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.0, 0, 4], 'false,true,true': [3.213, 55, 17], 'false,true,false,true': [1.12e-07, 0, 16], 'false,true,false,false': [2.79e-08, 39, 0], 'false,false,true,true': [0.093, 0, 3], 'false,false,true,false': [4.991, 79, 37], 'false,false,false,true': [1.477, 8, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, E), interaction(A, G)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [2.11e-08, 0, 7], 'true,false': [0.0, 0, 4], 'false,true,true,true': [1.09, 2, 11], 'false,true,true,false': [0.682, 1, 2], 'false,true,false': [3.521, 86, 20], 'false,false,true,true': [0.31, 0, 17], 'false,false,true,false': [0.007, 37, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.774, 32, 26]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D), interaction(C, E)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true,true,true': [1.49e-08, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 6], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.005, 1, 33], 'false,true,false': [0.13, 90, 0], 'false,false,true': [0.128, 0, 3], 'false,false,false,true': [2.581, 28, 14], 'false,false,false,false': [4.229, 58, 26]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'interaction(E, A), phenotype(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H), interaction(G, H)', 'false,true,false': 'phenotype(A, I)', 'false,false': 'interaction(A, J)', 'false,false,false': 'phenotype(A, K)'}, {'true,true': [0.0, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.114, 0, 3], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [3.286, 81, 33], 'false,false,false,true': [2.56, 32, 14], 'false,false,false,false': [4.24, 59, 26]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'interaction(E, D), interaction(E, C)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'phenotype(F, G), interaction(H, F)', 'false,true,true': 'interaction(A, H), phenotype(A, G)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.989, 2, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.585, 1, 2], 'false,true,false': [0.0, 0, 1], 'false,false,true': [3.199, 82, 33], 'false,false,false,true': [4.439, 57, 37], 'false,false,false,false': [1.155, 3, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'true,true': 'interaction(E, A), interaction(C, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [0.756, 1, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.593, 0, 33], 'false,true,false': [0.216, 83, 0], 'false,false,true': [0.724, 1, 3], 'false,false,false,true': [4.961, 89, 40], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'phenotype(A, E), interaction(C, A)', 'true,false,false': 'phenotype(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, H), interaction(H, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.026, 0, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 1], 'true,false,false,false': [0.0, 0, 1], 'false,true': [2.567, 97, 33], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.083, 0, 3], 'false,false,false,true': [4.906, 92, 40], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true,true': [0.02, 0, 7], 'true,false': [0.903, 1, 4], 'false,true,true': [1.894, 59, 17], 'false,true,false,true': [0.087, 0, 16], 'false,true,false,false': [0.0, 43, 0], 'false,false,true,true': [2.416, 7, 43], 'false,false,true,false': [0.365, 96, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'recursion_proteinclass(E, B), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), phenotype(A, J)'}, {'true,true,true,true': [0.0, 0, 4], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.031, 0, 7], 'false,true': [2.261, 73, 33], 'false,false,true,true': [1.037, 2, 3], 'false,false,true,false': [3.876, 80, 37], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.962, 4, 2]}]]
[{'': [-1.6148698540002277e-16, 0.21301775147929014], 'false': [0.20701963117192096, 0.21415779055519013], 'false,false': [1.4802973661668753e-16, 0.21019680166953908], 'false,false,false': [0.18899695166207028, 0.22222222222222351], 'false,true': [-1.4802973661668753e-16, 2.2970131543968756e-17], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16], 'true,false': [0.0, 0.0]}, {'': [0.0, 0.19593077918524404], 'false': [0.17142882782841667, 0.21813964996097254], 'false,false': [0.21965908972544834, 0.1983471074380164], 'false,false,true': [0.002874441288521471, 0.21477480973480426], 'false,false,false': [0.1983471074380164, nan], 'false,true': [0.14335972689001605, 0.20628099173553754], 'false,true,false': [7.771561172376096e-16, 1.9927079929169476e-17], 'true': [-2.5376526277146434e-16, 0.0]}, {'': [-2.0185873175002846e-16, 0.1884672352259727], 'false': [0.1465060355772944, 0.2295190419301775], 'false,false': [0.20165880608465642, 0.24556525319327244], 'false,false,false': [nan, 0.24556525319327244], 'false,false,true': [0.005664626555182399, 1.1755266106293838e-06], 'false,true': [0.10684902174260252, 0.11698145955644358], 'false,true,true': [0.0913713240971526, 0.15520603337768077], 'true': [6.344131569286608e-17, 0.0]}, {'': [1.6148698540002277e-16, 0.163283589999835], 'false': [0.13151982626597755, 0.19363132834453378], 'false,false': [0.005430098596872083, 0.19492794718008558], 'false,false,false': [0.15859905264667698, 0.21295698445037334], 'false,true': [0.02969738772321145, 0.00018783166894729882], 'false,true,true': [nan, 0.029697387723211243], 'true': [4.4408920985006264e-17, -3.700743415417188e-17], 'true,true': [4.4408920985006264e-17, nan]}, {'': [-6.055761952500853e-17, 0.14353534185083827], 'false': [0.004321865402184137, 0.14422939350571357], 'false,false': [0.09470091876241381, 0.1873116024156277], 'false,false,false': [0.1425196257314498, 0.21153694075522086], 'false,true': [nan, 0.004321865402184137], 'false,true,false': [0.004321865402184137, nan], 'true': [-3.700743415417188e-17, 0.0], 'true,false': [0.0, 0.0]}, {'': [0.07777845578256988, 0.14696080387303445], 'false': [0.10198066605072606, 0.14779756481807552], 'false,false': [0.08900575361367528, 0.2111351664693921], 'false,false,false': [0.20963836233751001, 0.22229327025026677], 'false,true': [0.11401014633852856, 0.0], 'false,true,true': [nan, 0.11401014633852856], 'true': [0.08888131573650547, 0.0], 'true,true': [0.08888131573650547, nan]}, {'': [0.050257617329133066, 0.14150250023693095], 'false': [0.08686837030414836, 0.18901149782025112], 'false,false': [0.13118452587680698, 0.1907892213668904], 'false,false,false': [0.1907892213668904, nan], 'false,true': [0.010655088041799703, 0.0005614347714424345], 'true': [0.0, 0.07150407471019059], 'false,true,true': [nan, 0.01065508804179981], 'true,true': [0.0, nan]}, {'': [9.419098958519061e-05, 0.11634121365408291], 'false': [0.05066907666940454, 0.1793846832429972], 'false,false': [0.002272403971674941, 0.18230591579475577], 'false,false,false': [0.18230591579475577, nan], 'false,false,true': [nan, 0.002272403971674941], 'true': [7.543785410344149e-05, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [0.0, 0.0]}, {'': [0.07782853628270657, 0.11291473454388337], 'false': [0.04924116261374351, 0.1717882121758117], 'false,false': [0.1717882121758117, nan], 'false,false,true': [0.11669501261547882, 0.0013905136653084478], 'true': [5.7953926717150906e-05, 0.16292784768328758], 'false,true': [0.04721397192178021, 0.051208241617969816], 'false,true,false': [0.00047387894551825793, -5.163828021512356e-18]}, {'': [0.00023064206768804517, 0.09522677767429111], 'false': [0.04823423947451558, 0.13379926851606647], 'false,false': [0.13235036849999882, 0.15373524927385152], 'false,false,false': [0.0, 0.15411445073171698], 'false,false,true': [0.21494192837020099, 0.12842252573679339], 'true': [0.0, 0.00013927291928531832], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;true,false;interaction(A, E), interaction(C, E).;true;true
0;false;interaction(A, F), interaction(F, A).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;phenotype(A, D).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(E, F), interaction(A, F).;true;true
1;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;phenotype(A, D).;true;true
2;false;interaction(A, E).;true;true
2;false,false;phenotype(A, H).;true;true
2;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;phenotype(A, D), interaction(C, E).;true;true
3;false;interaction(A, F).;true;true
3;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;true,false;interaction(E, A), phenotype(A, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), interaction(D, A).;true;true
5;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
5;false,true;phenotype(F, G), interaction(H, F).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(C, A), phenotype(A, D).;true;true
6;false;interaction(A, F).;true;true
6;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, A), interaction(D, C).;true;true
7;true,false;phenotype(A, F).;true;true
7;false;interaction(A, G).;true;true
7;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), interaction(C, D).;true;true
8;false;interaction(A, E).;true;true
8;false,true;interaction(E, F), interaction(A, F).;true;true
8;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
8;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, A), phenotype(A, D).;true;true
9;false;interaction(A, F).;true;true
9;false,false;interaction(G, A), interaction(H, G).;true;true
9;false,false,false;interaction(I, A), phenotype(A, J).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H), phenotype(A, I) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.14185106490048768;  // std dev = 4.71e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), complex(A, L) )
%   | | | then return 0.0664822684328457;  // std dev = 2.814, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | | | else return 0.17103237068233368;  // std dev = 5.920, 163.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=51 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.636140078877621;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, A), interaction(F, F) )
%   | | | then return -0.007600409626828339;  // std dev = 1.968, 44.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=6 */
%   | | | else return 0.2240924413848636;  // std dev = 2.385, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.8403511835631007;  // std dev = 0.026, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.16041460825100085;  // std dev = 0.036, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( enzyme(A, J), phenotype(H, K) )
%   | | | then return 0.13199454386091727;  // std dev = 2.627, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.26547634015613125;  // std dev = 2.692, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.09902000712464887;  // std dev = 3.616, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | | | else return 0.12174245097197463;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.49250468440316525;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then if ( interaction(G, E), complex(G, F) )
%   | | | then return 0.02899287991422156;  // std dev = 2.909, 64.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=13 */
%   | | | else return 0.11057308075669793;  // std dev = 2.138, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.24172392338460888;  // std dev = 1.384, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.12464667231114086;  // std dev = 1.701, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6857453476533975;  // std dev = 1.346, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return -0.1908738240605675;  // std dev = 0.132, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.14851422202061473;  // std dev = 2.815, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | | else return 0.26914679017234716;  // std dev = 2.774, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(C, E) )
%   | then return 0.4534368863072652;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, F) )
%   | | then return 0.19988869972638504;  // std dev = 0.621, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.4534368863072652;  // std dev = 1.05e-08, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.6974273005897041;  // std dev = 0.057, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.15428561133081872;  // std dev = 0.018, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( interaction(K, I), enzyme(K, L) )
%   | | | then return 0.14705839254429973;  // std dev = 3.871, 73.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=27 */
%   | | | else return 0.031227425074253023;  // std dev = 3.020, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.015139107823217469;  // std dev = 0.760, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.025229352807835885;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3559801959985652;  // std dev = 0.023, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( enzyme(E, F), phenotype(A, G) )
%   | | then if ( interaction(D, D), interaction(D, A) )
%   | | | then return -0.09454985869480963;  // std dev = 0.675, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.0602462382064085;  // std dev = 1.190, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.29529083515507926;  // std dev = 1.322, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return -0.003239101027243414;  // std dev = 2.292, 71.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=14 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6219073035052126;  // std dev = 1.306, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | | else return -0.20389815659143015;  // std dev = 0.317, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.2825627903531491;  // std dev = 1.739, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.09117212052490693;  // std dev = 2.819, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(A, A) )
%   | | then return 0.2696870790594721;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.28726544682094;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.296054630701674;  // std dev = 0.037, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, F), interaction(G, E) )
%   | | then return -0.06794411946127629;  // std dev = 0.828, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.37074465706090387;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( interaction(I, A), complex(I, J) )
%   | | | then return -0.013843920528963672;  // std dev = 1.713, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | | | else return 0.1483865893038686;  // std dev = 0.735, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.07547320882045265;  // std dev = 4.825, 153.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=53 */
%   | | | else return 0.1048254873594643;  // std dev = 1.754, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.21920997807182915;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then return 0.236275054006506;  // std dev = 0.047, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1158703444836227;  // std dev = 0.817, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.4945929688169693;  // std dev = 0.075, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.1475924385688673;  // std dev = 0.030, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5825193371474208;  // std dev = 0.428, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.23979663264029424;  // std dev = 0.312, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return -0.03547924408126827;  // std dev = 2.356, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | | | else return 0.04905872876909626;  // std dev = 2.890, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.1933433471554991;  // std dev = 0.020, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2270524229520961;  // std dev = 0.009, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, A) )
%   | | then if ( enzyme(A, G), interaction(A, F) )
%   | | | then return -0.048034911339231795;  // std dev = 0.685, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.03538473078955159;  // std dev = 2.168, 83.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=26 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.01278090911381724;  // std dev = 0.800, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.07864117991760776;  // std dev = 0.614, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.007194659312819462;  // std dev = 0.831, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.00783196854248823;  // std dev = 2.196, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | | else return 0.04225956576130865;  // std dev = 3.565, 80.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=27 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.16342090816540353;  // std dev = 0.018, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.008058740918695895;  // std dev = 0.770, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.01859144015798054;  // std dev = 1.509, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | | else return 0.11903758601555518;  // std dev = 1.161, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.3487142276787112;  // std dev = 0.101, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.13765805833530906;  // std dev = 0.098, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.16762679833028546;  // std dev = 2.321, 42.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=23 */
%   | | | else return 0.29314245461192073;  // std dev = 2.408, 31.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   | | else return -0.2106178037514002;  // std dev = 0.058, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.15566141162624922;  // std dev = 0.024, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2772491082447101;  // std dev = 0.957, 28.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=24 */
%   | | | else return -0.12426632299781899;  // std dev = 0.248, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( interaction(A, H), location(H, I) )
%   | | | then return -0.048544896784339944;  // std dev = 1.119, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return 0.07623402724244577;  // std dev = 0.392, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.10137812562353725;  // std dev = 2.234, 49.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   | | | else return -0.023227460724459727;  // std dev = 2.874, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | else if ( interaction(N, A), phenotype(A, P) )
%   | | | then return 0.5578686406047426;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.08948408809547463;  // std dev = 0.827, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */


Results
   AUC ROC   = 0.990684
   AUC PR    = 0.321359
   CLL	      = -0.202248
   Precision = 0.277512 at threshold = 0.5
   Recall    = 0.822695
   F1        = 0.415027


Total learning time: 13.959 seconds
Total inference time: 84.473 seconds
AUC ROC: 0.990684


Results scoring model
   AUC ROC   = 0.988145
   AUC PR    = 0.349214
   CLL	      = -0.205393
   Precision = 0.331731 at threshold = 0.5
   Recall    = 0.793103
   F1        = 0.467797


Total scoring time: 33.095 seconds
Refined model CLL: -0.205393


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.990684
   AUC PR    = 0.321359
   CLL	      = -0.202248
   Precision = 0.277512 at threshold = 0.5
   Recall    = 0.822695
   F1        = 0.415027


Total learning time: 58.322 seconds
Total inference time: 84.473 seconds
AUC ROC: 0.990684
Total revision time: 58.322
Best scored revision CLL: -0.205393


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:29:31
{'AUC ROC': 0.990684, 'AUC PR': 0.321359, 'CLL': -0.202248, 'Precision': [0.277512, 0.5], 'Recall': 0.822695, 'F1': 0.415027, 'Learning time': 58.322, 'Inference time': 84.473, 'parameter': {'AUC ROC': 0.988791, 'AUC PR': 0.295296, 'CLL': -0.207965, 'Precision': [0.25641, 0.5], 'Recall': 0.70922, 'F1': 0.376648, 'Learning time': 3.529, 'Inference time': 13.686}}


Starting fold 2

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos	 examples: 265
Target test neg examples: 35157

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;false;true
0;true,false;follows(E, A), follows(E, C).;false;false
0;false;follows(F, A), follows(A, F).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(H, A), recursion_accounttype(H, B).;false;true
0;false,false,false;follows(I, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;tweets(A, D).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(F, E), follows(F, A).;false;true
1;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(E, G), follows(G, A).;false;false
2;false,false;tweets(A, H).;true;true
2;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), follows(E, C).;true;false
3;true,true;follows(E, A).;false;false
3;false;follows(F, A).;true;true
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false,true,true;follows(G, F), follows(A, G).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;tweets(A, I).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;true
4;true,false;follows(A, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,true;follows(H, A), follows(H, G).;false;true
4;false,true,false;tweets(A, I).;false;false
4;false,false;follows(J, A).;false;true
4;false,false,false;tweets(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), follows(A, D).;true;false
5;true,true;follows(D, E), follows(C, E).;false;false
5;false;follows(A, F), recursion_accounttype(F, B).;true;true
5;false,true;tweets(F, G), follows(F, H).;true;false
5;false,true,true;follows(H, A), tweets(A, G).;false;false
5;false,false;follows(I, A).;false;true
5;false,false,false;follows(A, J), follows(J, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, C), tweets(A, D).;true;false
6;true,true;follows(A, E), follows(E, C).;false;false
6;false;follows(F, A).;true;true
6;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
6;false,true,true;follows(A, H), recursion_accounttype(H, B).;false;false
6;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(C, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(H, I), follows(I, H).;false;false
7;false,false,false;follows(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(D, C).;false;false
8;false;follows(E, A).;true;true
8;false,true;follows(F, E), follows(F, A).;false;true
8;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(A, C), tweets(A, D).;true;false
9;true,true;follows(A, E), follows(C, E).;true;false
9;true,true,true;recursion_accounttype(E, B), follows(E, C).;false;false
9;false;follows(F, A).;false;true
9;false,false;follows(A, G), follows(G, H).;true;true
9;false,false,true;recursion_accounttype(H, B).;false;false
9;false,false,false;follows(A, I), tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7672398441904213;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.14185106490048768;  // std dev = 5.37e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.1273797043302816;  // std dev = 3.199, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return 0.15943098638156367;  // std dev = 5.731, 156.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=47 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.6493621065608507;  // std dev = 0.818, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.7323124482320517;  // std dev = 0.049, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.059384813266625223;  // std dev = 3.586, 96.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=21 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.7436153353360373;  // std dev = 0.951, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.15214231992660052;  // std dev = 0.072, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.4920946337022293;  // std dev = 1.099, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.14784835620767348;  // std dev = 5.365, 135.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=42 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.17094568166038585;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.5924368886530564;  // std dev = 0.059, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5684603300569094;  // std dev = 0.063, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.6160182822414003;  // std dev = 1.133, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.6125715750006379;  // std dev = 0.173, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.01884155565125441;  // std dev = 3.233, 116.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=16 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6416864368988651;  // std dev = 2.248, 35.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=29 */
%   | | | else return -0.18606406380249943;  // std dev = 0.079, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.6390346258625478;  // std dev = 0.059, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.14692438727807536;  // std dev = 3.476, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(C, E) )
%   | then if ( interaction(A, E) )
%   | | then return 0.4415413196424871;  // std dev = 0.027, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3570387913107097;  // std dev = 0.746, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5609050305647468;  // std dev = 1.652, 39.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=36 */
%   | | else return -0.1350938216615946;  // std dev = 0.162, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.4835537000906795;  // std dev = 0.065, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.13648473870340982;  // std dev = 3.758, 83.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=29 */
%   | | | else return 0.09293336936640167;  // std dev = 3.548, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3469430237563767;  // std dev = 0.089, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(E, A), phenotype(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.006918391590354196;  // std dev = 0.821, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(G, H) )
%   | | then return 0.48547572244586257;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3663837312830933;  // std dev = 0.061, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, J) )
%   | | then return 0.05548329991334571;  // std dev = 3.159, 114.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.051777850727323355;  // std dev = 3.952, 102.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=29 */
%   | | | else return 0.08611736588616058;  // std dev = 3.530, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, C) )
%   | | then return 0.272454559303145;  // std dev = 0.048, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.27494569328181817;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.10927346067269934;  // std dev = 0.540, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( phenotype(F, G), interaction(H, F) )
%   | | then if ( interaction(A, H), phenotype(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3188082430478375;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.20713474497047146;  // std dev = 0.487, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, I) )
%   | | then return 0.04507085052938642;  // std dev = 3.132, 115.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=33 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.0793137792851973;  // std dev = 4.872, 129.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=42 */
%   | | | else return 0.03942001899021361;  // std dev = 1.841, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(E, A), interaction(C, E) )
%   | | then return 0.21926106229603173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.6009011683267954;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.23916578813019979;  // std dev = 0.125, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.3047803259523811;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.36244955091543435;  // std dev = 2.024, 38.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=33 */
%   | | else return -0.13446359614774256;  // std dev = 0.141, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.08395441658338736;  // std dev = 0.848, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02096532641944275;  // std dev = 5.347, 171.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=47 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.01667359866904159;  // std dev = 1.508, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | else if ( phenotype(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2577910638370764;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G) )
%   | then return -0.020748213291424716;  // std dev = 3.086, 154.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=36 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, H), interaction(H, I) )
%   | | | then return 0.22454119098601477;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.22329182560246053;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04415746681541711;  // std dev = 5.222, 155.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=47 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.1817845511278162;  // std dev = 0.001, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.11275185437886377;  // std dev = 0.732, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return -0.02126491547057525;  // std dev = 2.451, 89.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=21 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.3091454354772644;  // std dev = 1.214, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.1142505163126267;  // std dev = 0.101, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5607047408285075;  // std dev = 1.956, 56.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=52 */
%   | | | else return -0.23857558941420018;  // std dev = 0.340, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( recursion_proteinclass(E, B), interaction(C, E) )
%   | | | then return 0.15607895321319065;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15607895321319065;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.026864591529682767;  // std dev = 1.212, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( interaction(A, F) )
%   | then return -0.0037515515643060946;  // std dev = 2.927, 133.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=36 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return -0.05393299292569958;  // std dev = 0.882, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.009214241262120568;  // std dev = 4.011, 145.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=42 */
%   | | else if ( interaction(I, A), phenotype(A, J) )
%   | | | then return 0.49360703655162486;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.15330604671793516;  // std dev = 1.245, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */


Results
   AUC ROC   = 0.990895
   AUC PR    = 0.328362
   CLL	      = -0.190219
   Precision = 0.356701 at threshold = 0.5
   Recall    = 0.65283
   F1        = 0.461333


Total learning time: 3.303 seconds
Total inference time: 13.509 seconds
AUC ROC: 0.990895


Results scoring model
   AUC ROC   = 0.983758
   AUC PR    = 0.235858
   CLL	      = -0.206473
   Precision = 0.180401 at threshold = 0.5
   Recall    = 0.778846
   F1        = 0.292948


Total scoring time: 8.715 seconds
Parameter learned model CLL: -0.206473


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F), interaction(F, A)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.953, 1, 10], 'true,false,true': [1.195, 2, 5], 'true,false,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 21], 'false,true,false': [5.37e-08, 50, 0], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [3.199, 38, 14], 'false,false,false,false': [5.731, 109, 47]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.818, 1, 9], 'true,false': [0.049, 0, 7], 'false,true,true': [3.586, 75, 21], 'false,true,false,true': [0.951, 1, 15], 'false,true,false,false': [0.072, 33, 0], 'false,false,true,true': [1.099, 2, 5], 'false,false,true,false': [5.365, 93, 42], 'false,false,false,true': [1.826, 10, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, E), interaction(A, G)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.059, 0, 9], 'true,false': [0.063, 0, 7], 'false,true,true,true': [1.133, 2, 15], 'false,true,true,false': [0.173, 0, 5], 'false,true,false': [3.233, 100, 16], 'false,false,true,true': [2.248, 6, 29], 'false,false,true,false': [0.079, 49, 0], 'false,false,false,true': [0.059, 0, 5], 'false,false,false,false': [3.476, 36, 18]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D), interaction(C, E)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true,true,true': [0.027, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.746, 1, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.652, 3, 36], 'false,true,false': [0.162, 93, 0], 'false,false,true': [0.065, 0, 5], 'false,false,false,true': [3.758, 54, 29], 'false,false,false,false': [3.548, 42, 18]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'interaction(E, A), phenotype(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H), interaction(G, H)', 'false,true,false': 'phenotype(A, I)', 'false,false': 'interaction(A, J)', 'false,false,false': 'phenotype(A, K)'}, {'true,true': [0.089, 0, 14], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.821, 1, 2], 'false,true,true': [0.0, 0, 3], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.061, 0, 5], 'false,false,true': [3.159, 81, 33], 'false,false,false,true': [3.952, 73, 29], 'false,false,false,false': [3.53, 40, 18]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'interaction(E, D), interaction(E, C)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'phenotype(F, G), interaction(H, F)', 'false,true,true': 'interaction(A, H), phenotype(A, G)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.048, 0, 10], 'true,true,false': [0.062, 0, 4], 'true,false': [0.54, 1, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.098, 0, 4], 'false,true,false': [0.487, 1, 4], 'false,false,true': [3.132, 82, 33], 'false,false,false,true': [4.872, 87, 42], 'false,false,false,false': [1.841, 13, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'true,true': 'interaction(E, A), interaction(C, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 1, 0], 'true,false': [0.125, 0, 11], 'false,true,true,true': [0.019, 0, 3], 'false,true,true,false': [2.024, 5, 33], 'false,true,false': [0.141, 85, 0], 'false,false,true': [0.848, 1, 5], 'false,false,false,true': [5.347, 124, 47], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'phenotype(A, E), interaction(C, A)', 'true,false,false': 'phenotype(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, H), interaction(H, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [1.508, 3, 14], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 2], 'false,true': [3.086, 118, 36], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.061, 0, 4], 'false,false,false,true': [5.222, 108, 47], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true,true': [0.001, 0, 7], 'true,false': [0.732, 1, 9], 'false,true,true': [2.451, 68, 21], 'false,true,false,true': [1.214, 1, 15], 'false,true,false,false': [0.101, 45, 0], 'false,false,true,true': [1.956, 4, 52], 'false,false,true,false': [0.34, 96, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'recursion_proteinclass(E, B), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), phenotype(A, J)'}, {'true,true,true,true': [0.0, 0, 3], 'true,true,true,false': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [1.212, 2, 11], 'false,true': [2.927, 97, 36], 'false,false,true,true': [0.882, 3, 5], 'false,false,true,false': [4.011, 103, 42], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [1.245, 5, 4]}]]
[{'': [0.12749999999999959, 0.2124950406665349], 'false': [0.20829200555445368, 0.2138464590359061], 'false,false': [0.0, 0.207262389053255], 'false,true': [0.0, 5.773159728050814e-17], 'false,false,false': [0.196745562130177, 0.21051117685733162], 'true': [0.0826446280991734, 0.17283950617283939], 'true,false': [0.20408163265306106, 0.0]}, {'': [0.04117564396004253, 0.18943936719455667], 'false': [0.15606218487633666, 0.21729479287768919], 'false,false': [0.21677070262794723, 0.22222222222222215], 'false,false,false': [0.22222222222222215, nan], 'false,false,true': [0.172625208867287, 0.21321790782906735], 'false,true': [0.13396473891582575, 0.1950150414537558], 'false,true,false': [0.05652731587125148, 0.00015839248712006194], 'true': [0.06692537001811871, 0.0003428156179520668]}, {'': [0.0006076846357370158, 0.18514518813772482], 'false': [0.13912411855905926, 0.22567735644083725], 'false,false': [0.22674799480059396, 0.2236315285791185], 'false,false,true': [0.14433291544295182, 0.00012803720608303194], 'false,false,false': [0.0006850211004356232, 0.22375163160419745], 'false,true': [0.05970682734360342, 0.09009061251078022], 'false,true,true': [0.07550422699897814, 0.005986488676981328], 'true': [0.0003922424840190095, 0.0005613142967562419]}, {'': [0.03447378734720844, 0.15623591714514917], 'false': [0.12171284746859855, 0.1853289481909069], 'false,false': [0.0008359616728702335, 0.1872704624124351], 'false,false,false': [0.17018936588814818, 0.20979841814979194], 'false,true': [0.06998799730243117, 0.00028147662401806396], 'false,true,true': [nan, 0.06998799730243122], 'true': [0.00010203051038518549, 0.05559373824702929], 'true,true': [0.00010203051038518549, nan]}, {'': [0.0583231202093753, 0.13863653416082528], 'false': [0.00378978057822546, 0.13908945207296414], 'false,false': [0.08756048139853535, 0.17577204288216783], 'false,false,false': [0.15314955572478486, 0.21480467538149076], 'true': [0.0005693444529872226, 0.22472011582957763], 'true,false': [nan, 0.22472011582957763], 'false,true': [0.0, 0.0007450605404931921], 'false,true,false': [nan, 0.0007450605404931921]}, {'': [0.021438190316501987, 0.1388460537290687], 'false': [0.030472777083419642, 0.14130306477241023], 'false,false': [0.08530850745109124, 0.18473001981172546], 'false,false,false': [0.1840304773491423, 0.1883467743837008], 'false,true': [0.0023967569777368497, 0.04739093975781681], 'true': [0.0004476780940474275, 0.09727320029051612], 'false,true,true': [nan, 0.0023967569777368497], 'true,true': [0.00023507859957119236, 0.0009747441527382245]}, {'': [0.039498066947507564, 0.13257651275890867], 'false': [0.08601914680054035, 0.1657158842270005], 'false,false': [0.11991345984096351, 0.16718849105806466], 'false,false,false': [0.16718849105806466, nan], 'false,true': [0.10011141362445655, 0.00023265149238108825], 'false,true,true': [0.00012613889877962267, 0.10776164115164819], 'true': [0.09342584507502937, 0.0014277145690330722], 'true,true': [0.0, 0.0]}, {'': [0.12516207298679097, 0.11890379101613233], 'true': [0.13376727201214725, 0.0], 'false': [0.06182089698465012, 0.171407646996532], 'false,false': [0.0007364632979923735, 0.17590758459378142], 'false,false,false': [0.17590758459378142, nan], 'false,false,true': [0.0, 0.0009202669397181604], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}, {'': [0.03263748716326735, 0.12092792605773736], 'false': [0.06411494122704045, 0.17457258715001414], 'false,false': [0.17457258715001414, nan], 'false,false,true': [0.06828757408280442, 0.0012067399906090608], 'false,true': [0.06748360263307987, 0.059006290737868436], 'false,true,false': [0.09207459816413775, 0.00022857012499844694], 'true': [1.4302496151308297e-07, 0.05352135791049144]}, {'': [0.08492771993579507, 0.09276578526873916], 'false': [0.06441137850597825, 0.11570730104368744], 'false,false': [0.1104349909521295, 0.1654783775981016], 'false,false,false': [0.0, 0.17228438762971177], 'false,false,true': [0.09721426423895432, 0.11095590979827162], 'true': [0.0, 0.11295435225194289], 'true,true': [0.0, nan], 'true,true,true': [-4.625929269271485e-18, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;true,false;interaction(A, E), interaction(C, E).;true;true
0;false;interaction(A, F), interaction(F, A).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;phenotype(A, D).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(E, F), interaction(A, F).;true;true
1;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;phenotype(A, D).;true;true
2;false;interaction(A, E).;true;true
2;false,false;phenotype(A, H).;true;true
2;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
2;false,false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;phenotype(A, D), interaction(C, E).;true;true
3;false;interaction(A, F).;true;true
3;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;false,true;interaction(A, H), interaction(G, H).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), interaction(D, A).;true;true
5;true,true;interaction(E, D), interaction(E, C).;true;true
5;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
5;false,true;phenotype(F, G), interaction(H, F).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(C, A), phenotype(A, D).;true;true
6;true,true;interaction(E, A), interaction(C, E).;true;true
6;false;interaction(A, F).;true;true
6;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
6;false,true,true;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, A), interaction(D, C).;true;true
7;false;interaction(A, G).;true;true
7;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;false,false,true;interaction(I, H), interaction(H, I).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), interaction(C, D).;true;true
8;false;interaction(A, E).;true;true
8;false,true;interaction(E, F), interaction(A, F).;true;true
8;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
8;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, A), phenotype(A, D).;true;true
9;true,true;recursion_proteinclass(E, B), interaction(C, E).;true;true
9;false;interaction(A, F).;true;true
9;false,false;interaction(G, A), interaction(H, G).;true;true
9;false,false,false;interaction(I, A), phenotype(A, J).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.6914822684328455;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.14185106490048768;  // std dev = 5.37e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.04655473220096165;  // std dev = 3.248, 69.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=13 */
%   | | | else return 0.17602972980149936;  // std dev = 5.722, 151.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=48 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.6644592069534541;  // std dev = 0.236, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.13311355690022927;  // std dev = 0.119, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.0929694266319402;  // std dev = 3.573, 82.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=21 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.7397235776369978;  // std dev = 0.939, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.1490649027710566;  // std dev = 0.083, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7132504326204763;  // std dev = 0.919, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.15978808520831747;  // std dev = 0.020, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( location(A, I) )
%   | | | then return 0.15316820520998417;  // std dev = 5.145, 124.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=39 */
%   | | | else return 0.057347926531319565;  // std dev = 1.923, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4645154068075272;  // std dev = 0.310, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.11155404645888524;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.08901045937838693;  // std dev = 4.070, 116.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=32 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.31366336606399237;  // std dev = 0.950, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.15548603571465;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.7321800868647782;  // std dev = 1.336, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | | | else return -0.17287850267070537;  // std dev = 0.177, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.7040107721201749;  // std dev = 0.186, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.10882444883454492;  // std dev = 3.570, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(C, E) )
%   | then return 0.4533551401000829;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.46258421069911226;  // std dev = 0.052, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.5721301174192225;  // std dev = 1.276, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.6922034180682746;  // std dev = 0.384, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.150250933348038;  // std dev = 0.293, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.5467552797924341;  // std dev = 0.213, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.06485726342004244;  // std dev = 2.857, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | | else return 0.14104820994432613;  // std dev = 4.117, 90.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=32 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.35276344819751543;  // std dev = 0.015, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.09855738449707536;  // std dev = 0.392, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0.3430553960633078;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(F, G) )
%   | | then return 0.40803121307264584;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.26365581581703074;  // std dev = 0.858, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( location(A, H), complex(A, I) )
%   | | then if ( location(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.2316383741616151;  // std dev = 2.702, 44.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=23 */
%   | | | else return -0.14272089563839113;  // std dev = 0.246, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.0025228585052234384;  // std dev = 1.580, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return 0.0963683685517927;  // std dev = 4.887, 156.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=52 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, C) )
%   | | then return 0.19602777071730806;  // std dev = 0.277, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.31751212342646595;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.27036664828516477;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( phenotype(F, G), interaction(H, F) )
%   | | then return 0.34531751148338896;  // std dev = 0.115, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.037564615108305645;  // std dev = 1.044, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, I), complex(A, J) )
%   | | then if ( phenotype(I, K) )
%   | | | then return 0.011871100124810996;  // std dev = 2.170, 69.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=15 */
%   | | | else return -0.1745061667805783;  // std dev = 0.065, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.05306209733068761;  // std dev = 4.701, 165.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=49 */
%   | | | else return 0.12222990856051408;  // std dev = 2.859, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(E, A), interaction(C, E) )
%   | | then return 0.06808639208372615;  // std dev = 0.905, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16424377689566982;  // std dev = 0.282, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.382816309510028;  // std dev = 0.307, 41.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=36 */
%   | | else return -0.13592864821902864;  // std dev = 0.027, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( complex(H, J) )
%   | | | then return -0.0028180059886683123;  // std dev = 2.501, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return 0.17208256130366395;  // std dev = 1.488, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.1219552962010171;  // std dev = 3.666, 75.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=30 */
%   | | | else return 0.30365878181627737;  // std dev = 1.051, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.15980700838133152;  // std dev = 0.242, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( complex(A, G), interaction(H, A) )
%   | | | then return -0.053888883611838696;  // std dev = 1.432, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | | | else return 0.04699852261059017;  // std dev = 1.501, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.06903863688567108;  // std dev = 1.867, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | | else return -0.0747658494885343;  // std dev = 0.354, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then if ( interaction(L, K), interaction(K, L) )
%   | | | then return -0.23284320149750926;  // std dev = 0.599, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.33856303651317365;  // std dev = 0.135, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, M), enzyme(A, N) )
%   | | | then return 0.05956128122080777;  // std dev = 1.888, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return -0.01100707994545624;  // std dev = 4.677, 142.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=37 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1940216397631573;  // std dev = 0.014, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, A), complex(F, G) )
%   | | | then return -0.0028960136999859392;  // std dev = 2.096, 75.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=17 */
%   | | | else return 0.1581038140189842;  // std dev = 1.018, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.3233563206223703;  // std dev = 0.359, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.12497624188608199;  // std dev = 0.129, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.19959648954865267;  // std dev = 2.914, 52.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=29 */
%   | | | else return 0.3918485526989995;  // std dev = 2.358, 31.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=23 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.1909790548735284;  // std dev = 0.167, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.26354824651571196;  // std dev = 0.198, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( recursion_proteinclass(E, B), interaction(C, E) )
%   | | then return -2.4250256110073623E-4;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16507774401221909;  // std dev = 0.015, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then return 0.0025319903805209373;  // std dev = 0.226, 131.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=34 */
%   | | else return -0.0631244276436644;  // std dev = 0.108, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.0273640314985057;  // std dev = 3.991, 123.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=40 */
%   | | | else return -0.09476849854832951;  // std dev = 1.706, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else if ( interaction(M, A), phenotype(A, N) )
%   | | | then return -0.0713688722565459;  // std dev = 0.609, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.01131641731934708;  // std dev = 1.493, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */


Results
   AUC ROC   = 0.984108
   AUC PR    = 0.28333
   CLL	      = -0.215841
   Precision = 0.29529 at threshold = 0.5
   Recall    = 0.615094
   F1        = 0.399021


Total learning time: 11.492 seconds
Total inference time: 80.119 seconds
AUC ROC: 0.984108


Results scoring model
   AUC ROC   = 0.977381
   AUC PR    = 0.181707
   CLL	      = -0.222904
   Precision = 0.171504 at threshold = 0.5
   Recall    = 0.625
   F1        = 0.269151


Total scoring time: 21.509 seconds
Refined model CLL: -0.222904


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.990895
   AUC PR    = 0.328362
   CLL	      = -0.190219
   Precision = 0.356701 at threshold = 0.5
   Recall    = 0.65283
   F1        = 0.461333


Total learning time: 45.019000000000005 seconds
Total inference time: 13.509 seconds
AUC ROC: 0.990895
Total revision time: 45.019000000000005
Best scored revision CLL: -0.206473


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:31:50
{'AUC ROC': 0.990895, 'AUC PR': 0.328362, 'CLL': -0.190219, 'Precision': [0.356701, 0.5], 'Recall': 0.65283, 'F1': 0.461333, 'Learning time': 45.019000000000005, 'Inference time': 13.509, 'parameter': {'AUC ROC': 0.990895, 'AUC PR': 0.328362, 'CLL': -0.190219, 'Precision': [0.356701, 0.5], 'Recall': 0.65283, 'F1': 0.461333, 'Learning time': 3.303, 'Inference time': 13.509}}


Starting fold 3

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos	 examples: 277
Target test neg examples: 38883

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;false;true
0;true,false;follows(E, A), follows(E, C).;false;false
0;false;follows(F, A), follows(A, F).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(H, A), recursion_accounttype(H, B).;false;true
0;false,false,false;follows(I, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;tweets(A, D).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(F, E), follows(F, A).;false;true
1;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(E, G), follows(G, A).;false;false
2;false,false;tweets(A, H).;true;true
2;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), follows(E, C).;true;false
3;true,true;follows(E, A).;false;false
3;false;follows(F, A).;true;true
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false,true,true;follows(G, F), follows(A, G).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;tweets(A, I).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;true
4;true,false;follows(A, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,true;follows(H, A), follows(H, G).;false;true
4;false,true,false;tweets(A, I).;false;false
4;false,false;follows(J, A).;false;true
4;false,false,false;tweets(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), follows(A, D).;true;false
5;true,true;follows(D, E), follows(C, E).;false;false
5;false;follows(A, F), recursion_accounttype(F, B).;true;true
5;false,true;tweets(F, G), follows(F, H).;true;false
5;false,true,true;follows(H, A), tweets(A, G).;false;false
5;false,false;follows(I, A).;false;true
5;false,false,false;follows(A, J), follows(J, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, C), tweets(A, D).;true;false
6;true,true;follows(A, E), follows(E, C).;false;false
6;false;follows(F, A).;true;true
6;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
6;false,true,true;follows(A, H), recursion_accounttype(H, B).;false;false
6;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(C, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(H, I), follows(I, H).;false;false
7;false,false,false;follows(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(D, C).;false;false
8;false;follows(E, A).;true;true
8;false,true;follows(F, E), follows(F, A).;false;true
8;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(A, C), tweets(A, D).;true;false
9;true,true;follows(A, E), follows(C, E).;true;false
9;true,true,true;recursion_accounttype(E, B), follows(E, C).;false;false
9;false;follows(F, A).;false;true
9;false,false;follows(A, G), follows(G, H).;true;true
9;false,false,true;recursion_accounttype(H, B).;false;false
9;false,false,false;follows(A, I), tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.20189893509951096;  // std dev = 4.654, 96.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
%   | | | else return 0.1684937626857178;  // std dev = 4.983, 116.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=36 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.03870933314555187;  // std dev = 3.289, 70.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=14 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8171076758595336;  // std dev = 0.181, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.16108341530856018;  // std dev = 0.182, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.13586367791746623;  // std dev = 4.523, 99.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=30 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.18252971987464173;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.5553664367462843;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.45750584483391465;  // std dev = 0.732, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.26893037722660457;  // std dev = 0.626, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.5311454700680511;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.0644604562920864;  // std dev = 4.521, 140.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=34 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6832420193990332;  // std dev = 1.315, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return -0.18372021205251363;  // std dev = 0.010, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.6006622185962772;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1532841122752943;  // std dev = 3.902, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(C, E) )
%   | then if ( interaction(A, E) )
%   | | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.4384905664317367;  // std dev = 0.022, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6559771406689541;  // std dev = 1.425, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | else return -0.15960541092315386;  // std dev = 0.235, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.485105773392318;  // std dev = 0.144, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.07130112267259064;  // std dev = 2.614, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | | else return 0.10190370025660145;  // std dev = 3.980, 74.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=23 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3241068806063293;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(E, A), phenotype(A, F) )
%   | | then return 0.3184355135605973;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.3352619905009194;  // std dev = 0.016, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(G, H) )
%   | | then return 0.3553294078279702;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.41038829858536485;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.34125685059320765;  // std dev = 0.109, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, J) )
%   | | then return 0.05589195707360363;  // std dev = 3.680, 129.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=36 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.07769009893226048;  // std dev = 2.570, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 0.06386714878246888;  // std dev = 4.042, 79.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=23 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, C) )
%   | | then return 0.2574997814857135;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2625388701272554;  // std dev = 0.020, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( phenotype(F, G), interaction(H, F) )
%   | | then if ( interaction(A, H), phenotype(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27326717278104434;  // std dev = 0.060, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.2936897229697314;  // std dev = 0.088, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I) )
%   | | then return 0.03809303939630073;  // std dev = 3.664, 139.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=36 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.07504242760549848;  // std dev = 4.075, 88.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=27 */
%   | | | else return 0.17767589008244844;  // std dev = 2.161, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(E, A), interaction(C, E) )
%   | | then return 0.20881072085634778;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2156415521035025;  // std dev = 0.019, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.22361662662826565;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.544380024627752;  // std dev = 0.692, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return -0.1520578549696188;  // std dev = 0.175, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.23410434293291327;  // std dev = 0.094, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.05570746699906288;  // std dev = 4.703, 116.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.05998400124700903;  // std dev = 0.649, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( phenotype(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.17369076093613825;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.18436323932047916;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, G) )
%   | then return 0.030760195920848346;  // std dev = 2.906, 121.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=37 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, H), interaction(H, I) )
%   | | | then return 0.1834878737213812;  // std dev = 0.043, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.20283597264871037;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.06124405252056465;  // std dev = 4.650, 109.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.1698581151702599;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.15554143015646815;  // std dev = 0.012, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return -0.02228104312382965;  // std dev = 2.349, 71.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=14 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.3274375549873988;  // std dev = 0.310, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.12834403478139292;  // std dev = 0.080, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6168304475217633;  // std dev = 1.128, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return -0.25354624977867996;  // std dev = 0.328, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( recursion_proteinclass(E, B), interaction(C, E) )
%   | | | then return 0.145447608851636;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1380075958742199;  // std dev = 0.020, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, F) )
%   | then return -5.941119323260873E-4;  // std dev = 2.751, 141.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=37 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.07364141940568786;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.013063865301988246;  // std dev = 3.336, 95.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=30 */
%   | | else if ( interaction(I, A), phenotype(A, J) )
%   | | | then return 0.11785538563161875;  // std dev = 0.757, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.04151415257647279;  // std dev = 1.698, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */


Results
   AUC ROC   = 0.986043
   AUC PR    = 0.228664
   CLL	      = -0.211105
   Precision = 0.211802 at threshold = 0.5
   Recall    = 0.725632
   F1        = 0.327896


Total learning time: 2.512 seconds
Total inference time: 17.484 seconds
AUC ROC: 0.986043


Results scoring model
   AUC ROC   = 0.996554
   AUC PR    = 0.552022
   CLL	      = -0.191314
   Precision = 0.543689 at threshold = 0.5
   Recall    = 0.608696
   F1        = 0.574359


Total scoring time: 4.228 seconds
Parameter learned model CLL: -0.191314


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F), interaction(F, A)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 4], 'false,true,false': [1.49e-08, 24, 0], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [4.654, 63, 33], 'false,false,false,false': [4.983, 80, 36]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.0, 0, 7], 'false,true,true': [3.289, 56, 14], 'false,true,false,true': [0.181, 0, 23], 'false,true,false,false': [0.182, 62, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [4.523, 69, 30], 'false,false,false,true': [2.426, 17, 9], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, E), interaction(A, G)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.732, 1, 7], 'false,true,true,true': [0.626, 1, 1], 'false,true,true,false': [0.0, 0, 2], 'false,true,false': [4.521, 106, 34], 'false,false,true,true': [1.315, 2, 15], 'false,false,true,false': [0.01, 22, 0], 'false,false,false,true': [0.111, 0, 3], 'false,false,false,false': [3.902, 45, 23]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D), interaction(C, E)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true,true,true': [2.11e-08, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.022, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.425, 2, 37], 'false,true,false': [0.235, 100, 0], 'false,false,true': [0.144, 0, 5], 'false,false,false,true': [2.614, 35, 13], 'false,false,false,false': [3.98, 51, 23]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'interaction(E, A), phenotype(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H), interaction(G, H)', 'false,true,false': 'phenotype(A, I)', 'false,false': 'interaction(A, J)', 'false,false,false': 'phenotype(A, K)'}, {'true,true': [0.015, 0, 5], 'true,false,true': [0.003, 0, 2], 'true,false,false': [0.016, 0, 7], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.109, 0, 3], 'false,false,true': [3.68, 93, 36], 'false,false,false,true': [2.57, 31, 13], 'false,false,false,false': [4.042, 56, 23]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,true': 'interaction(E, D), interaction(E, C)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'phenotype(F, G), interaction(H, F)', 'false,true,true': 'interaction(A, H), phenotype(A, G)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.013, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.02, 0, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.06, 0, 2], 'false,true,false': [0.088, 0, 4], 'false,false,true': [3.664, 103, 36], 'false,false,false,true': [4.075, 61, 27], 'false,false,false,false': [2.161, 12, 9]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'true,true': 'interaction(E, A), interaction(C, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [0.019, 0, 10], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.692, 0, 36], 'false,true,false': [0.175, 91, 0], 'false,false,true': [0.094, 0, 5], 'false,false,false,true': [4.703, 80, 36], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,false': 'phenotype(A, E), interaction(C, A)', 'true,false,false': 'phenotype(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, H), interaction(H, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.649, 1, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.002, 0, 3], 'true,false,false,false': [0.0, 0, 6], 'false,true': [2.906, 84, 37], 'false,false,true,true': [0.043, 0, 2], 'false,false,true,false': [0.066, 0, 3], 'false,false,false,true': [4.65, 73, 36], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(E, F), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true,true': [0.009, 0, 5], 'true,false': [0.012, 0, 9], 'false,true,true': [2.349, 57, 14], 'false,true,false,true': [0.31, 0, 23], 'false,true,false,false': [0.08, 54, 0], 'false,false,true,true': [1.128, 0, 41], 'false,false,true,false': [0.328, 76, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'recursion_proteinclass(E, B), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), phenotype(A, J)'}, {'true,true,true,true': [0.0, 0, 4], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.02, 0, 10], 'false,true': [2.751, 104, 37], 'false,false,true,true': [0.002, 0, 2], 'false,false,true,false': [3.336, 65, 30], 'false,false,false,true': [0.757, 3, 3], 'false,false,false,false': [1.698, 17, 6]}]]
[{'': [-2.5376526277146434e-16, 0.21700957934194146], 'false': [0.12244897959183658, 0.22472339612223804], 'false,false': [0.0, 0.21953987184051407], 'false,false,false': [0.22558593750000142, 0.21403091557669582], 'false,true': [0.0, 9.25185853854297e-18], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, 1.4802973661668753e-16]}, {'': [1.2688263138573217e-16, 0.19356044637466066], 'false': [0.17481296985269512, 0.2128960416802545], 'false,false': [0.2091850868151739, 0.2263313609467457], 'false,false,false': [0.2263313609467457, nan], 'false,false,true': [0.0, 0.20666648733404236], 'false,true': [0.1545075236123883, 0.18963324087502875], 'false,true,false': [0.0014298674157300253, 0.0005361548891075852], 'true': [-6.344131569286608e-17, -6.344131569286608e-17]}, {'': [0.038136529434211607, 0.18423196247789594], 'false': [0.14814956475566532, 0.2250724228166278], 'false,false': [0.2291256649414319, 0.22267440981329575], 'false,false,true': [0.10164311630488039, 4.145967660937081e-06], 'false,false,false': [0.004103415706804281, 0.22386032511187717], 'false,true': [0.11516504064638583, 0.14596386204697817], 'false,true,true': [0.19595170383584745, 0.0], 'true': [0.0, 0.06703686814607537]}, {'': [0.00014368450132238943, 0.1665686907591989], 'false': [0.14927350991614635, 0.18481339797902346], 'false,false': [0.004171034260903239, 0.18606651449867084], 'false,false,false': [0.14232988326096624, 0.21406775524556892], 'false,true': [0.052068279009670065, 0.0005517439265188884], 'false,true,true': [nan, 0.052068279009669975], 'true': [7.401486830834377e-17, 6.28619693285315e-05], 'true,true': [7.401486830834377e-17, nan]}, {'': [7.893397430705893e-05, 0.14367132545026748], 'false': [0.0029728673746752254, 0.14486574094097168], 'false,false': [0.10500815835089773, 0.1865821456069534], 'false,false,false': [0.15008600633830715, 0.20684075759303894], 'false,true': [0.0, 0.003536704683528402], 'false,true,false': [0.0, 0.0039828449652837454], 'true': [4.610500840271925e-05, 7.75310508509788e-05], 'true,false': [5.181694656464231e-06, 3.528444520612644e-05]}, {'': [4.700337809759869e-05, 0.13929083863704333], 'false': [0.0020000854244821196, 0.14142862542612195], 'false,false': [0.09656668848103185, 0.19683454055831653], 'false,false,false': [0.18871714595998593, 0.2223460762269099], 'false,true': [0.0018162627012973942, 0.0019529699340046641], 'false,true,true': [nan, 0.0018162627012973942], 'true': [3.533732565614844e-05, 4.441579893669593e-05], 'true,true': [3.533732565614844e-05, nan]}, {'': [3.416434859976336e-05, 0.1419557899136856], 'false': [0.10197552341633234, 0.18411189865317582], 'false,false': [0.0017667373787395135, 0.19065650283329258], 'false,false,false': [0.19065650283329258, nan], 'false,true': [0.01566497135230228, 0.0003348492453245522], 'false,true,true': [0.0, 0.013319321404984288], 'true': [0.0, 3.4498586460463e-05], 'true,true': [0.0, nan]}, {'': [0.03160904513084687, 0.12868335140664566], 'false': [0.06980617911936186, 0.1904952763776893], 'false,false': [0.0013465167685068169, 0.19838601182166987], 'false,false,false': [0.19838601182166987, nan], 'true': [0.07022505882613718, 2.587834777789677e-05], 'false,false,true': [0.0009354917767762996, 0.0014707938568198214], 'true,false': [nan, 2.5878347777890604e-05], 'true,false,false': [1.700513424217805e-06, 0.0]}, {'': [6.240098604071154e-05, 0.11615148630131376], 'false': [0.06083446316727753, 0.18424061808601847], 'false,false': [0.18424061808601847, nan], 'false,false,true': [0.031041393470810544, 0.001419368178759843], 'false,true': [0.07770085293182248, 0.04484828767641809], 'false,true,false': [0.004179356413603018, 0.00011897073601728018], 'true': [1.604441909625054e-05, 1.4951966563151206e-05]}, {'': [4.025532938224068e-05, 0.08350894682908264], 'false': [0.05367650373861963, 0.11684372533098324], 'false,false': [0.11478592736112392, 0.12332461144397634], 'false,false,false': [0.09547770473118487, 0.1253341288476204], 'false,false,true': [1.8398265186824955e-06, 0.11712677178544166], 'true': [0.0, 4.054209167681788e-05], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
0;true,false;interaction(A, E), interaction(C, E).;true;true
0;false;interaction(A, F), interaction(F, A).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;phenotype(A, D).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(E, F), interaction(A, F).;true;true
1;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
1;false,false;interaction(H, A), interaction(I, H).;true;true
1;false,false,true;recursion_proteinclass(I, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;phenotype(A, D).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,true,true;interaction(G, E), interaction(A, G).;true;true
2;false,false;phenotype(A, H).;true;true
2;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;phenotype(A, D), interaction(C, E).;true;true
3;false;interaction(A, F).;true;true
3;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;true,false;interaction(E, A), phenotype(A, F).;true;true
4;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;false,true;interaction(A, H), interaction(G, H).;true;true
4;false,true,false;phenotype(A, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), interaction(D, A).;true;true
5;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
5;false,true;phenotype(F, G), interaction(H, F).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;interaction(C, A), phenotype(A, D).;true;true
6;false;interaction(A, F).;true;true
6;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
6;false,true,true;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, A), interaction(D, C).;true;true
7;true,false;phenotype(A, F).;true;true
7;false;interaction(A, G).;true;true
7;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
7;false,false,true;interaction(I, H), interaction(H, I).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), interaction(C, D).;true;true
8;false;interaction(A, E).;true;true
8;false,true;interaction(E, F), interaction(A, F).;true;true
8;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
8;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, A), phenotype(A, D).;true;true
9;false;interaction(A, F).;true;true
9;false,false;interaction(G, A), interaction(H, G).;true;true
9;false,false,true;recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0.10814893509951237;  // std dev = 3.240, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | | | else return 0.1742408891225004;  // std dev = 6.133, 174.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=55 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.6631455421616647;  // std dev = 0.211, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, A), interaction(A, F) )
%   | | | then return -0.07263726035718227;  // std dev = 0.818, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.15655937688723667;  // std dev = 2.981, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.8274122466966914;  // std dev = 0.164, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.1549166402158221;  // std dev = 0.107, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.14127503323526217;  // std dev = 4.503, 97.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=30 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.11336562870530391;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.2800322953719706;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.47085390082979134;  // std dev = 0.260, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.5692288370639201;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.5970182155701539;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.11464005397202297;  // std dev = 0.017, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.1217937517868274;  // std dev = 4.368, 109.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=34 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7362621823898122;  // std dev = 0.965, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.18594867223250808;  // std dev = 0.031, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.6002768532976513;  // std dev = 0.110, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12742919996897062;  // std dev = 3.973, 73.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=23 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(C, E) )
%   | then return 0.45211015995029896;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.43090505639489746;  // std dev = 0.023, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(A, H) )
%   | | | then return 0.45538805262591125;  // std dev = 0.181, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7170231660419114;  // std dev = 0.379, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.15960012562286038;  // std dev = 0.353, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.4790642522135341;  // std dev = 0.135, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.05044638609640408;  // std dev = 2.998, 60.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   | | | else return 0.11465623121039302;  // std dev = 3.682, 65.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=21 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.34084332590352906;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(E, A), phenotype(A, F) )
%   | | then return 0.34668592042243196;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.32994619070221587;  // std dev = 0.016, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.33385280880621043;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.3777319565642796;  // std dev = 0.059, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( enzyme(A, J) )
%   | | | then return -0.13880842268674815;  // std dev = 0.190, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.06329568391603244;  // std dev = 1.518, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.035943321756824555;  // std dev = 3.420, 107.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=27 */
%   | | | else return 0.07798137085752813;  // std dev = 4.634, 122.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=39 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.2688796228794995;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(E, A), complex(A, F) )
%   | | then return 0.2613141016908031;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.30305949179847036;  // std dev = 0.118, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( phenotype(G, H), interaction(I, G) )
%   | | then return 0.2684982916927932;  // std dev = 0.061, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.11478231301640476;  // std dev = 0.870, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( enzyme(A, K) )
%   | | | then return -0.11188420440797389;  // std dev = 0.168, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.10893216605041317;  // std dev = 1.418, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.12397261244214085;  // std dev = 3.501, 76.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=29 */
%   | | | else return 0.047234986759161116;  // std dev = 4.365, 126.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=37 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.22201168540397453;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.22552605353107286;  // std dev = 0.036, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.3280776711348897;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.48509336606941755;  // std dev = 1.057, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | else if ( complex(A, H), interaction(I, A) )
%   | | | then return -0.12385767629647634;  // std dev = 0.285, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return -0.1688374616886026;  // std dev = 0.313, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.2497579727090029;  // std dev = 0.111, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.015597144573744316;  // std dev = 2.575, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | | | else return 0.0939527317009364;  // std dev = 3.874, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.18803047709976978;  // std dev = 0.028, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( complex(E, G), complex(A, G) )
%   | | | then return -0.08069651640624963;  // std dev = 0.632, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return -0.004802009904344673;  // std dev = 1.417, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.0068805105642060615;  // std dev = 1.749, 58.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | | | else return 0.059620962763215296;  // std dev = 1.484, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, I), interaction(I, J) )
%   | | | then return 0.1934419996176278;  // std dev = 0.065, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.21509237638981712;  // std dev = 0.068, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.041299266167815;  // std dev = 4.064, 93.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=27 */
%   | | | else return 0.15714310257200287;  // std dev = 2.106, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.16110962064247653;  // std dev = 0.025, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, A) )
%   | | | then return -0.04939802666373395;  // std dev = 1.280, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | | | else return 0.04802211452650478;  // std dev = 1.685, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.3197705980613074;  // std dev = 0.253, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.1282850958664056;  // std dev = 0.191, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.2538254525801215;  // std dev = 2.301, 30.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=18 */
%   | | | else return 0.3831239407251981;  // std dev = 2.522, 32.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=23 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.20213468595614192;  // std dev = 0.066, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.28036882721598266;  // std dev = 0.163, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.14058916460100074;  // std dev = 0.022, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D) )
%   | then if ( phenotype(A, E), location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.17791862138771128;  // std dev = 1.321, 27.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=17 */
%   | | | else return -0.13111264053822422;  // std dev = 0.175, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.012598910973271158;  // std dev = 1.892, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | | | else return -0.07607191374188942;  // std dev = 0.498, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.10598084698197485;  // std dev = 0.009, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.004102525712690753;  // std dev = 3.840, 100.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=30 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.1785333834537871;  // std dev = 1.512, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return -0.13908928299234205;  // std dev = 1.154, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */


Results
   AUC ROC   = 0.975219
   AUC PR    = 0.209066
   CLL	      = -0.225398
   Precision = 0.18894 at threshold = 0.5
   Recall    = 0.592058
   F1        = 0.286463


Total learning time: 7.197 seconds
Total inference time: 203.014 seconds
AUC ROC: 0.975219


Results scoring model
   AUC ROC   = 0.98467
   AUC PR    = 0.417599
   CLL	      = -0.211486
   Precision = 0.471074 at threshold = 0.5
   Recall    = 0.619565
   F1        = 0.535211


Total scoring time: 11.242 seconds
Refined model CLL: -0.211486


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.986043
   AUC PR    = 0.228664
   CLL	      = -0.211105
   Precision = 0.211802 at threshold = 0.5
   Recall    = 0.725632
   F1        = 0.327896


Total learning time: 25.179000000000002 seconds
Total inference time: 17.484 seconds
AUC ROC: 0.986043
Total revision time: 25.179000000000002
Best scored revision CLL: -0.191314


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:35:57
{'AUC ROC': 0.986043, 'AUC PR': 0.228664, 'CLL': -0.211105, 'Precision': [0.211802, 0.5], 'Recall': 0.725632, 'F1': 0.327896, 'Learning time': 25.179000000000002, 'Inference time': 17.484, 'parameter': {'AUC ROC': 0.986043, 'AUC PR': 0.228664, 'CLL': -0.211105, 'Precision': [0.211802, 0.5], 'Recall': 0.725632, 'F1': 0.327896, 'Learning time': 2.512, 'Inference time': 17.484}}


Starting fold 4

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos	 examples: 283
Target test neg examples: 40479

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
0;true;follows(C, D), recursion_accounttype(D, B).;false;true
0;true,false;follows(E, A), follows(E, C).;false;false
0;false;follows(F, A), follows(A, F).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;false;false
0;false,false;follows(H, A), recursion_accounttype(H, B).;false;true
0;false,false,false;follows(I, A).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;tweets(A, D).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(F, E), follows(F, A).;false;true
1;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
1;false,false;follows(A, H), follows(H, I).;true;true
1;false,false,true;recursion_accounttype(I, B).;false;false
1;false,false,false;follows(A, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;tweets(A, D).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(E, G), follows(G, A).;false;false
2;false,false;tweets(A, H).;true;true
2;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), follows(E, C).;true;false
3;true,true;follows(E, A).;false;false
3;false;follows(F, A).;true;true
3;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
3;false,true,true;follows(G, F), follows(A, G).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;tweets(A, I).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;true
4;true,false;follows(A, E), tweets(A, F).;false;false
4;false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,true;follows(H, A), follows(H, G).;false;true
4;false,true,false;tweets(A, I).;false;false
4;false,false;follows(J, A).;false;true
4;false,false,false;tweets(A, K).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), follows(A, D).;true;false
5;true,true;follows(D, E), follows(C, E).;false;false
5;false;follows(A, F), recursion_accounttype(F, B).;true;true
5;false,true;tweets(F, G), follows(F, H).;true;false
5;false,true,true;follows(H, A), tweets(A, G).;false;false
5;false,false;follows(I, A).;false;true
5;false,false,false;follows(A, J), follows(J, K).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;follows(A, C), tweets(A, D).;true;false
6;true,true;follows(A, E), follows(E, C).;false;false
6;false;follows(F, A).;true;true
6;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
6;false,true,true;follows(A, H), recursion_accounttype(H, B).;false;false
6;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
6;false,false,false;follows(A, J).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D), follows(C, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
7;false,false,true;follows(H, I), follows(I, H).;false;false
7;false,false,false;follows(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), follows(D, C).;false;false
8;false;follows(E, A).;true;true
8;false,true;follows(F, E), follows(F, A).;false;true
8;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(A, C), tweets(A, D).;true;false
9;true,true;follows(A, E), follows(C, E).;true;false
9;true,true,true;recursion_accounttype(E, B), follows(E, C).;false;false
9;false;follows(F, A).;false;true
9;false,false;follows(A, G), follows(G, H).;true;true
9;false,false,true;recursion_accounttype(H, B).;false;false
9;false,false,false;follows(A, I), tweets(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.6914822684328454;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1418510649004877;  // std dev = 2.79e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.1846795473444106;  // std dev = 5.686, 147.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=48 */
%   | | | else return 0.12481560176617902;  // std dev = 2.966, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.6025682260387666;  // std dev = 0.910, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.7356630398665785;  // std dev = 0.046, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06265265398459818;  // std dev = 3.182, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8220387947360863;  // std dev = 0.216, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.16413181824345954;  // std dev = 0.079, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7711972974414193;  // std dev = 0.090, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08975433633918672;  // std dev = 2.573, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.11499308531837348;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.46897634531998195;  // std dev = 0.904, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.5717568755386447;  // std dev = 0.058, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.7399800904153054;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6417029678917849;  // std dev = 0.194, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.05651386122818008;  // std dev = 5.275, 206.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=49 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7814716163987825;  // std dev = 0.262, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.17105393258666388;  // std dev = 0.004, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6591355658664758;  // std dev = 0.107, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.15699267358387314;  // std dev = 2.125, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, C) )
%   | then if ( interaction(E, A) )
%   | | then return 0.4676219949323591;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.4884321160761825;  // std dev = 0.029, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.32118193661549344;  // std dev = 0.925, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.624528813225656;  // std dev = 1.828, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.1561579564418128;  // std dev = 0.221, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.4536854824330927;  // std dev = 0.173, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.13133198780834998;  // std dev = 1.529, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.060289770739381555;  // std dev = 2.238, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.3464023457120803;  // std dev = 0.030, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), complex(A, F) )
%   | | then return -0.4006675314640402;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.37606883943059166;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A), interaction(H, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, I) )
%   | | | then return 0.3469063040917719;  // std dev = 0.118, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3992579098626472;  // std dev = 0.114, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(J, A) )
%   | | then return 0.04886701487725763;  // std dev = 4.312, 187.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=52 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.10995569381764464;  // std dev = 1.509, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.0453548940629811;  // std dev = 2.256, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( interaction(D, E), interaction(C, E) )
%   | | then return 0.18082624302874575;  // std dev = 0.964, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return -0.704014079131629;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.2927069768265297;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(F, G), interaction(F, H) )
%   | | then if ( interaction(H, A), complex(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24169654533478674;  // std dev = 0.065, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.3154600127670598;  // std dev = 0.105, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A) )
%   | | then return 0.01728044256165726;  // std dev = 4.431, 212.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=52 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.09093932920988752;  // std dev = 2.255, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return 0.1050275524559044;  // std dev = 1.341, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then if ( interaction(A, E), interaction(E, C) )
%   | | then return 0.24516937462664357;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.021086551953199965;  // std dev = 1.531, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.25230515089169514;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.49259512275680944;  // std dev = 1.542, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | else return -0.1462695469716204;  // std dev = 0.180, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return -0.046772362580354526;  // std dev = 0.923, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.013793324985839309;  // std dev = 2.810, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.21906355820734474;  // std dev = 0.045, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( complex(A, E), interaction(A, C) )
%   | | then return -0.619954462513917;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( complex(A, F) )
%   | | | then return -0.24192618610789252;  // std dev = 0.684, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.029710519304722415;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(G, A) )
%   | then return 0.009853481355616919;  // std dev = 3.549, 208.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=56 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), interaction(I, H) )
%   | | | then return 0.1670982370617331;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.25461188049660033;  // std dev = 0.090, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.05107205324323624;  // std dev = 2.677, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.18212999380781425;  // std dev = 0.036, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2312140042135408;  // std dev = 0.067, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.018524676749806422;  // std dev = 2.160, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3346521029802852;  // std dev = 1.062, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.12647030842214785;  // std dev = 0.189, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5359407424068923;  // std dev = 1.144, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.22088510135964615;  // std dev = 0.181, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( recursion_proteinclass(E, B), interaction(E, C) )
%   | | | then return 0.14542956880925473;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1803992579107314;  // std dev = 0.075, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(F, A) )
%   | then return 0.015282048095353313;  // std dev = 3.184, 182.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=56 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.2271287759864812;  // std dev = 0.327, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.04718619336703011;  // std dev = 2.122, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | else if ( interaction(A, I), complex(A, J) )
%   | | | then return 0.146214580950142;  // std dev = 0.451, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.224215050549669;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.980627
   AUC PR    = 0.208519
   CLL	      = -0.185323
   Precision = 0.133891 at threshold = 0.5
   Recall    = 0.791519
   F1        = 0.229039


Total learning time: 2.684 seconds
Total inference time: 20.878 seconds
AUC ROC: 0.980627


Results scoring model
   AUC ROC   = 0.989235
   AUC PR    = 0.347241
   CLL	      = -0.169803
   Precision = 0.25 at threshold = 0.5
   Recall    = 0.802326
   F1        = 0.381215


Total scoring time: 4.671 seconds
Parameter learned model CLL: -0.169803


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A), interaction(A, F)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.0, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.913, 1, 5], 'false,true,true': [0.0, 0, 5], 'false,true,false': [2.79e-08, 31, 0], 'false,false,true': [0.913, 1, 5], 'false,false,false,true': [5.686, 99, 48], 'false,false,false,false': [2.966, 33, 12]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.91, 1, 7], 'true,false': [0.046, 0, 8], 'false,true,true': [3.182, 50, 14], 'false,true,false,true': [0.216, 0, 42], 'false,true,false,false': [0.079, 94, 0], 'false,false,true,true': [0.09, 0, 3], 'false,false,true,false': [2.573, 27, 9], 'false,false,false,true': [1.477, 8, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, G), interaction(G, A)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [0.904, 1, 7], 'true,false': [0.058, 0, 8], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.194, 0, 6], 'false,true,false': [5.275, 157, 49], 'false,false,true,true': [0.262, 0, 6], 'false,false,true,false': [0.004, 7, 0], 'false,false,false,true': [0.107, 0, 2], 'false,false,false,false': [2.125, 14, 7]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), interaction(E, C)', 'true,true': 'interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(G, F), interaction(A, G)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.029, 0, 2], 'true,false': [0.925, 1, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.828, 3, 56], 'false,true,false': [0.221, 167, 0], 'false,false,true': [0.173, 0, 3], 'false,false,false,true': [1.529, 10, 5], 'false,false,false,false': [2.238, 20, 7]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'interaction(A, E), complex(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A), interaction(H, G)', 'false,true,false': 'complex(A, I)', 'false,false': 'interaction(J, A)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.03, 0, 10], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.014, 0, 5], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.118, 0, 3], 'false,true,false,false': [0.114, 0, 4], 'false,false,true': [4.312, 135, 52], 'false,false,false,true': [1.509, 10, 5], 'false,false,false,false': [2.256, 20, 7]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,true': 'interaction(D, E), interaction(C, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'complex(F, G), interaction(F, H)', 'false,true,true': 'interaction(H, A), complex(A, G)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.964, 1, 10], 'true,true,false': [0.0, 1, 0], 'true,false': [0.013, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.065, 0, 2], 'false,true,false': [0.105, 0, 5], 'false,false,true': [4.431, 160, 52], 'false,false,false,true': [2.255, 19, 9], 'false,false,false,false': [1.341, 6, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'true,true': 'interaction(A, E), interaction(E, C)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [1.531, 3, 11], 'false,true,true,true': [0.024, 0, 4], 'false,true,true,false': [1.542, 2, 52], 'false,true,false': [0.18, 133, 0], 'false,false,true': [0.923, 1, 3], 'false,false,false,true': [2.81, 41, 12], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,false': 'complex(A, E), interaction(A, C)', 'true,false,false': 'complex(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(H, I), interaction(I, H)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.045, 0, 10], 'true,false,true': [0.0, 1, 0], 'true,false,false,true': [0.684, 1, 1], 'true,false,false,false': [0.894, 1, 4], 'false,true': [3.549, 152, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.09, 0, 2], 'false,false,false,true': [2.677, 29, 12], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true,true': [0.036, 0, 9], 'true,false': [0.067, 0, 6], 'false,true,true': [2.16, 44, 14], 'false,true,false,true': [1.062, 1, 42], 'false,true,false,false': [0.189, 84, 0], 'false,false,true,true': [1.144, 1, 15], 'false,false,true,false': [0.181, 31, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'recursion_proteinclass(E, B), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), complex(A, J)'}, {'true,true,true,true': [0.0, 0, 4], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.075, 0, 11], 'false,true': [3.184, 126, 56], 'false,false,true,true': [0.327, 0, 3], 'false,false,true,false': [2.122, 30, 9], 'false,false,false,true': [0.451, 1, 1], 'false,false,false,false': [0.852, 2, 2]}]]
[{'': [0.055363321799307655, 0.20965738914457002], 'false': [0.11959876543209878, 0.22051321293745557], 'false,false': [0.1388888888888887, 0.21484375000000047], 'false,false,false': [0.21990837151187081, 0.19555555555555507], 'false,true': [0.0, 2.5069552168955147e-17], 'true': [-8.881784197001253e-17, 0.1224489795918368], 'true,false': [0.0, 0.13888888888888898]}, {'': [0.05630984321970983, 0.19517444234855866], 'false': [0.19336011308942416, 0.20209034388567698], 'false,false': [0.20298360371028928, 0.19834710743801665], 'false,false,true': [0.002700102951875616, 0.1839535485758665], 'false,false,false': [0.19834710743801665, nan], 'false,true': [0.15818253637817464, 0.20797894024807395], 'false,true,false': [0.0011151725471587816, 6.651990552472033e-05], 'true': [0.10350046766186177, 0.0002621040436278088]}, {'': [0.05395015902560174, 0.1566657841416668], 'false': [0.14224817509624801, 0.22298495786109485], 'false,false': [0.2307550741048085, 0.2169274994599], 'false,false,true': [0.011417452421588425, 2.632231732449134e-06], 'false,false,false': [0.005714768521018487, 0.21511712944716951], 'false,true': [0.006585013116287072, 0.13505750053935556], 'true': [0.10220257725197379, 0.00041582210321516877], 'false,true,true': [0.0, 0.006302744900691677]}, {'': [0.05932640689448759, 0.1398990886124185], 'false': [0.13257523161261464, 0.17341858906922084], 'false,false': [0.009927157033551329, 0.17606712915651146], 'false,false,false': [0.15591090002828226, 0.18546253543986638], 'false,true': [0.05664218974979161, 0.0002919720135925851], 'true': [0.0002121115797652427, 0.09514481465901012], 'false,true,true': [nan, 0.056642189749791856], 'true,true': [0.0, 0.0004330611420206021]}, {'': [0.033827561356199604, 0.11340477510036345], 'false': [0.0045255678345906825, 0.11361220493924208], 'false,false': [0.09944537821459887, 0.17637590379824997], 'false,false,false': [0.1518047151799712, 0.18853611295283026], 'true': [9.230117355543132e-05, 0.08382927130579132], 'true,false': [0.0, 4.1893921855695736e-05], 'false,true': [nan, 0.0045255678345906825], 'false,true,false': [0.0046469074777849935, 0.00325998140499964]}, {'': [0.10399288896441643, 0.10627944386690101], 'false': [0.0032749674444953547, 0.10724550885181028], 'false,false': [0.0926106919846052, 0.18603982048055762], 'false,false,false': [0.18161220970011885, 0.19966440998178478], 'true': [0.13717609719647775, 3.283909809776997e-05], 'true,true': [0.08440145184366031, 0.0], 'false,true': [0.002087094581344276, 0.002195531124718109], 'false,true,true': [nan, 0.002087094581344276]}, {'': [0.13890824898976026, 0.10956338907848841], 'true': [0.0, 0.1674378509258478], 'false': [0.09563487196204873, 0.15357275194842113], 'false,false': [0.21278491989465673, 0.149027585090122], 'false,false,false': [0.149027585090122, nan], 'false,true': [0.04472321345453648, 0.00024315945414247624], 'false,true,true': [0.0001478712526157555, 0.044043071994062905], 'true,true': [0.0, nan]}, {'': [0.12063886164531465, 0.07921750189501071], 'true': [0.0002064666040570373, 0.2075337056166656], 'true,false': [0.0, 0.19627558475463217], 'true,false,false': [0.23425990397876986, 0.15999999999999998], 'false': [0.060563170561351895, 0.16507367298092074], 'false,false': [0.0043985276705840555, 0.17475736276310957], 'false,false,false': [0.17475736276310957, nan], 'false,false,true': [0.0, 0.004044912243461055]}, {'': [0.0009651574253470925, 0.08306345434149251], 'false': [0.0642171901478161, 0.15715612361931502], 'false,false': [0.15715612361931502, nan], 'false,false,true': [0.08180721446254108, 0.0010551230843800926], 'false,true': [0.08043479142649344, 0.05677186802409343], 'false,true,false': [0.026208404291761637, 0.0004233028789257454], 'true': [0.00014418468389368024, 0.0007510724910215205]}, {'': [0.0006172065062567955, 0.07030381041075866], 'false': [0.0556944501436037, 0.12552783967137812], 'false,false': [0.11478788789283048, 0.15609223740674616], 'false,false,false': [0.10153127291567214, 0.18134469523303426], 'false,false,true': [0.035696497062335714, 0.1154969337185366], 'true': [0.0, 0.0005155441275770036], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
0;true,false;interaction(E, A), interaction(E, C).;true;true
0;false;interaction(F, A), interaction(A, F).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;complex(A, D).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(F, E), interaction(F, A).;true;true
1;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;complex(A, D).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
2;false,true,true;interaction(E, G), interaction(G, A).;true;true
2;false,false;complex(A, H).;true;true
2;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), interaction(E, C).;true;true
3;true,true;interaction(E, A).;true;true
3;false;interaction(F, A).;true;true
3;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(C, D).;true;true
4;true,false;interaction(A, E), complex(A, F).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, D), interaction(A, D).;true;true
5;true,true;interaction(D, E), interaction(C, E).;true;true
5;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;false,true;complex(F, G), interaction(F, H).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;interaction(A, C), complex(A, D).;true;true
6;false;interaction(F, A).;true;true
6;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
6;false,true,true;interaction(A, H), recursion_proteinclass(H, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, D), interaction(C, D).;true;true
7;true,false;complex(A, E), interaction(A, C).;true;true
7;false;interaction(G, A).;true;true
7;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
7;false,false,true;interaction(H, I), interaction(I, H).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), interaction(D, C).;true;true
8;false;interaction(E, A).;true;true
8;false,true;interaction(F, E), interaction(F, A).;true;true
8;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
8;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(A, C), complex(A, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7672398441904213;  // std dev = 0.287, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.6914822684328454;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( interaction(H, A), enzyme(A, I) )
%   | | then if ( interaction(H, H) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.23069795470735543;  // std dev = 3.453, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.04419544672741935;  // std dev = 2.552, 43.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | | | else return 0.13814893509951212;  // std dev = 5.020, 125.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=35 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.7470336846779896;  // std dev = 0.103, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6672907648490222;  // std dev = 0.338, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), complex(A, H) )
%   | | | then return -0.056271430938700115;  // std dev = 1.173, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | | else return 0.14734602480091608;  // std dev = 2.781, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.758202540587909;  // std dev = 1.660, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | | else return -0.16221387208784283;  // std dev = 0.080, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.7470519982063011;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.07151756969087748;  // std dev = 2.491, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 0.24536517045579065;  // std dev = 1.552, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.6226027240778601;  // std dev = 0.070, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(D, F), interaction(F, A) )
%   | | | then return 0.7622018412028828;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4464875739396294;  // std dev = 1.008, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5805331561773747;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07914705534624426;  // std dev = 5.130, 173.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=46 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.789468188532687;  // std dev = 0.242, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1661781288669484;  // std dev = 0.049, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.12550108134665883;  // std dev = 2.084, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.4973296849983772;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, C) )
%   | then return 0.4325889580927053;  // std dev = 0.058, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then return 0.1471794249153117;  // std dev = 0.708, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5324672197325946;  // std dev = 0.168, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(H, A) )
%   | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then return 0.6552943492608775;  // std dev = 0.163, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.1631539633358233;  // std dev = 0.551, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( phenotype(A, L), phenotype(J, L) )
%   | | | then return -7.956982420099263E-4;  // std dev = 1.011, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.12284850179438693;  // std dev = 2.049, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.25370334253102045;  // std dev = 1.091, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.26663038444741805;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3696657447668452;  // std dev = 0.066, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(E, G) )
%   | | | then return 0.4371883132144334;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19447004936388163;  // std dev = 0.565, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.12276606905499123;  // std dev = 0.057, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0.04640837939062715;  // std dev = 2.349, 65.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=18 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3699924689810501;  // std dev = 2.901, 62.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=44 */
%   | | | else return -0.16397535619421855;  // std dev = 0.354, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.10441243582495581;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.03865206584414914;  // std dev = 0.581, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( interaction(D, E), interaction(C, E) )
%   | | then return 0.25311081175973227;  // std dev = 0.101, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21695491510750387;  // std dev = 0.800, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(F, G), interaction(F, H) )
%   | | then return 0.2545262257557956;  // std dev = 0.021, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.36039993226583855;  // std dev = 0.173, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.10919026916465763;  // std dev = 0.040, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.07665905161390112;  // std dev = 3.337, 117.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=40 */
%   | | | else return 0.010835041760204526;  // std dev = 3.101, 90.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=24 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.1990501125785873;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.26007939135695946;  // std dev = 0.056, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.221570260579453;  // std dev = 0.046, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3675288419721145;  // std dev = 2.254, 58.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=52 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.17600665163151774;  // std dev = 0.521, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return -0.12926337424390508;  // std dev = 0.276, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.3173148578087786;  // std dev = 0.118, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.09621658119752959;  // std dev = 1.916, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.027526869254426545;  // std dev = 1.450, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2019724582818588;  // std dev = 0.046, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.2160712368253034;  // std dev = 0.089, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.10141948414365415;  // std dev = 0.346, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.00876178111704082;  // std dev = 2.525, 105.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=31 */
%   | | | else return 0.062140807684435265;  // std dev = 2.021, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), interaction(I, H) )
%   | | | then return 0.1724385982226132;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.040728428079783795;  // std dev = 0.822, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.23594325822708492;  // std dev = 1.026, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.03383156946741422;  // std dev = 2.204, 43.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.1477700884614993;  // std dev = 0.020, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( enzyme(A, E) )
%   | | then return -0.11945952576494286;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.20454960900090144;  // std dev = 0.092, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then if ( complex(A, H) )
%   | | | then return -0.01388191809165042;  // std dev = 1.158, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return -0.10585249813107135;  // std dev = 1.995, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   | | else return 0.005297913896278559;  // std dev = 0.227, 141.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=42 */
%   | else if ( interaction(I, J), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.31521239754510627;  // std dev = 1.116, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return 0.632516675646203;  // std dev = 0.170, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.2130444057588305;  // std dev = 0.052, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.12553425788859696;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return -0.03273190710156286;  // std dev = 0.752, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.1431432395866822;  // std dev = 0.064, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.21594208597017084;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( location(A, H) )
%   | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.3097783807964028;  // std dev = 1.610, 57.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=54 */
%   | | | else return -0.025169407113309318;  // std dev = 2.214, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else return -0.12583995989944835;  // std dev = 0.040, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | else if ( interaction(K, A) )
%   | | then return -0.031166016982358363;  // std dev = 0.297, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return -0.24397398053151767;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */


Results
   AUC ROC   = 0.981519
   AUC PR    = 0.207449
   CLL	      = -0.19003
   Precision = 0.135149 at threshold = 0.5
   Recall    = 0.929329
   F1        = 0.23598


Total learning time: 9.384 seconds
Total inference time: 120.779 seconds
AUC ROC: 0.981519


Results scoring model
   AUC ROC   = 0.989339
   AUC PR    = 0.315922
   CLL	      = -0.168836
   Precision = 0.229412 at threshold = 0.5
   Recall    = 0.906977
   F1        = 0.366197


Total scoring time: 9.834 seconds
Refined model CLL: -0.168836


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.981519
   AUC PR    = 0.207449
   CLL	      = -0.19003
   Precision = 0.135149 at threshold = 0.5
   Recall    = 0.929329
   F1        = 0.23598


Total learning time: 26.573 seconds
Total inference time: 120.779 seconds
AUC ROC: 0.981519
Total revision time: 26.573
Best scored revision CLL: -0.168836


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:38:46
{'AUC ROC': 0.981519, 'AUC PR': 0.207449, 'CLL': -0.19003, 'Precision': [0.135149, 0.5], 'Recall': 0.929329, 'F1': 0.23598, 'Learning time': 26.573, 'Inference time': 120.779, 'parameter': {'AUC ROC': 0.980627, 'AUC PR': 0.208519, 'CLL': -0.185323, 'Precision': [0.133891, 0.5], 'Recall': 0.791519, 'F1': 0.229039, 'Learning time': 2.684, 'Inference time': 20.878}}


