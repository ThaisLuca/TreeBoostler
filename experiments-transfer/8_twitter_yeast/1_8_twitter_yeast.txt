Starting experiment #1 for 8_twitter_yeast

Start learning from source dataset

Source train facts examples: 3142
Source train pos examples: 282
Source train neg examples: 40776

WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, C), tweets(A, D) )
%   | then return 0.8196873966379727;  // std dev = 0.192, 104.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=100 */
%   | else return 0.8581489350995118;  // std dev = 2.67e-07, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   else if ( follows(A, E), recursion_accounttype(E, B) )
%   | then if ( follows(A, F), follows(F, A) )
%   | | then if ( follows(F, G), follows(G, A) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), recursion_accounttype(I, B) )
%   | | | then return 0.7672398441904207;  // std dev = 1.651, 33.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=30 */
%   | | | else return -0.14185106490048727;  // std dev = 2.98e-07, 416.000 (wgt'ed) examples reached here.  /* #neg=416 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.1277141524908154;  // std dev = 4.759, 115.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=31 */
%   | | | else return 0.21109011157010057;  // std dev = 3.941, 68.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=24 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(A, D) )
%   | then return 0.7250915341571577;  // std dev = 0.040, 137.000 (wgt'ed) examples reached here.  /* #pos=137 */
%   | else return 0.6588673516048942;  // std dev = 0.239, 33.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   else if ( follows(A, E), recursion_accounttype(E, B) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then return 0.7244182852118497;  // std dev = 0.111, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else if ( follows(E, G), follows(G, E) )
%   | | | then return 0.21947341221095437;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return -0.10642476272944759;  // std dev = 2.095, 265.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=6 */
%   | | | else return 0.008164956016572033;  // std dev = 3.886, 155.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=24 */
%   | | else if ( tweets(A, J), follows(A, K) )
%   | | | then return 0.07865278391679427;  // std dev = 4.088, 92.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=22 */
%   | | | else return 0.16944717973092716;  // std dev = 4.688, 99.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=33 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then return 0.5507026602378845;  // std dev = 0.109, 166.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=164 */
%   | else return 0.3591349667081574;  // std dev = 0.890, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( follows(A, G), recursion_accounttype(G, B) )
%   | | | then return 0.39564162404065456;  // std dev = 1.810, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | | | else return 0.6774285784240892;  // std dev = 1.376, 32.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   | | else return -0.11873190033301308;  // std dev = 0.122, 433.000 (wgt'ed) examples reached here.  /* #neg=433 */
%   | else if ( follows(A, H), recursion_accounttype(H, B) )
%   | | then if ( follows(A, I), follows(I, H) )
%   | | | then return 0.466043578070253;  // std dev = 0.836, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.2216259727692226;  // std dev = 0.817, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.047914227034803025;  // std dev = 4.908, 139.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=31 */
%   | | | else return 0.2370396498774441;  // std dev = 3.705, 56.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=24 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, D), follows(A, D) )
%   | then return 0.41081803217676666;  // std dev = 0.148, 153.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=149 */
%   | else return 0.3007904414790335;  // std dev = 0.333, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( follows(E, A), follows(A, E) )
%   | then if ( follows(A, F), follows(E, F) )
%   | | then if ( follows(E, G), recursion_accounttype(G, B) )
%   | | | then return 0.5552497312084638;  // std dev = 0.359, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.10611127222086633;  // std dev = 0.090, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
%   | | else if ( follows(E, H), recursion_accounttype(H, B) )
%   | | | then return 0.5859303237735255;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.11233418866959874;  // std dev = 0.015, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( follows(I, A), recursion_accounttype(I, B) )
%   | | then return 0.4207792376207995;  // std dev = 0.054, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else if ( follows(J, A) )
%   | | | then return -0.08979582726082536;  // std dev = 0.969, 79.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=2 */
%   | | | else return 0.09082841350904307;  // std dev = 6.225, 189.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=55 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), follows(A, D) )
%   | then if ( recursion_accounttype(D, B) )
%   | | then return 0.33102849747336904;  // std dev = 0.020, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | | else if ( tweets(C, E), follows(D, A) )
%   | | | then return 0.1593343962358159;  // std dev = 2.026, 30.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=25 */
%   | | | else return 0.33220277418940924;  // std dev = 0.016, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.3312136254341978;  // std dev = 0.125, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   else if ( follows(F, A) )
%   | then return -0.04308942619815507;  // std dev = 0.162, 469.000 (wgt'ed) examples reached here.  /* #neg=421 #pos=48 */
%   | else if ( tweets(A, G) )
%   | | then if ( tweets(H, G), recursion_accounttype(H, B) )
%   | | | then return 0.6865870800409763;  // std dev = 1.104, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return -0.2053513523665958;  // std dev = 0.217, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else if ( follows(A, I), recursion_accounttype(I, B) )
%   | | | then return 0.36909462154990386;  // std dev = 0.069, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09848878865705603;  // std dev = 4.420, 90.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=29 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), follows(D, A) )
%   | then return 0.25857701826999857;  // std dev = 0.087, 136.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=135 */
%   | else return 0.211579569308734;  // std dev = 0.234, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), follows(F, A) )
%   | | then return -0.08426053137761279;  // std dev = 0.104, 305.000 (wgt'ed) examples reached here.  /* #neg=298 #pos=7 */
%   | | else if ( follows(E, G), recursion_accounttype(G, B) )
%   | | | then return 0.38507290903108726;  // std dev = 1.505, 43.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=41 */
%   | | | else return -0.09991778125027506;  // std dev = 0.009, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.5946443563507742;  // std dev = 1.995, 56.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=55 */
%   | | | else return -0.1996941635659899;  // std dev = 0.366, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else if ( tweets(A, J) )
%   | | | then return -0.05176552243351732;  // std dev = 1.457, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.03404877660818471;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(A, D), follows(E, C) )
%   | then return 0.210365230471984;  // std dev = 0.084, 135.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=134 */
%   | else return 0.23360542249212093;  // std dev = 0.088, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), recursion_accounttype(G, B) )
%   | | then if ( follows(A, G), follows(G, H) )
%   | | | then return 0.28442589173714283;  // std dev = 0.023, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.3826976183158643;  // std dev = 0.834, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | | else return -0.08567104915747709;  // std dev = 0.074, 408.000 (wgt'ed) examples reached here.  /* #neg=408 */
%   | else if ( tweets(A, I) )
%   | | then if ( tweets(J, I), recursion_accounttype(J, B) )
%   | | | then return 0.3817111576790466;  // std dev = 1.834, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | | | else return -0.14816305995430934;  // std dev = 0.215, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( follows(A, K), follows(K, L) )
%   | | | then return 0.09781841338691633;  // std dev = 2.711, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | | else return 0.11066954413027967;  // std dev = 2.669, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D) )
%   | then return 0.17428974184880794;  // std dev = 0.115, 148.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=146 */
%   | else return 0.1317572549213857;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( follows(F, E), follows(A, F) )
%   | | | then return 0.074894428800956;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.2915760265234402;  // std dev = 0.829, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | else return -0.07959816046642526;  // std dev = 0.073, 416.000 (wgt'ed) examples reached here.  /* #neg=416 */
%   | else if ( follows(A, G) )
%   | | then if ( follows(H, G), recursion_accounttype(H, B) )
%   | | | then return 0.44182273162282376;  // std dev = 1.389, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | | else return -0.16722848622694217;  // std dev = 0.496, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else if ( tweets(A, I) )
%   | | | then return -0.017798294567339626;  // std dev = 1.227, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.018410600160805493;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), recursion_accounttype(D, B) )
%   | then return 0.14772650430886503;  // std dev = 0.123, 132.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=130 */
%   | else if ( follows(C, E), follows(E, A) )
%   | | then if ( recursion_accounttype(E, B), follows(A, F) )
%   | | | then return -0.05067162212536824;  // std dev = 0.911, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.11659711102668396;  // std dev = 0.980, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | else return 0.16285124153556482;  // std dev = 0.024, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( follows(G, A) )
%   | then return -0.04467218221568386;  // std dev = 0.111, 462.000 (wgt'ed) examples reached here.  /* #neg=414 #pos=48 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( recursion_accounttype(I, B) )
%   | | | then return 0.2859244026131705;  // std dev = 2.109, 43.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=41 */
%   | | | else return -0.130050069838166;  // std dev = 0.453, 96.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=1 */
%   | | else if ( tweets(A, J) )
%   | | | then return -0.0037742402014084102;  // std dev = 1.698, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return -0.047879090646304655;  // std dev = 2.772, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( recursion_accounttype(D, B) )
%   | then if ( follows(A, E), follows(E, D) )
%   | | then return 0.1483642906984572;  // std dev = 0.149, 185.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=181 */
%   | | else return 0.04715251964028367;  // std dev = 0.309, 33.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=29 */
%   | else return -0.06912661169919866;  // std dev = 0.463, 432.000 (wgt'ed) examples reached here.  /* #neg=429 #pos=3 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then if ( follows(A, G), follows(G, F) )
%   | | then return 0.07528728511758723;  // std dev = 0.049, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.48600537672026045;  // std dev = 1.088, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( tweets(A, H) )
%   | | then if ( follows(A, I) )
%   | | | then return 0.006210794457084136;  // std dev = 1.539, 83.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=23 */
%   | | | else return 0.021404021480358765;  // std dev = 1.190, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.06055522695943264;  // std dev = 2.415, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
%   | | | else return 0.010725566254036057;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */


Starting fold 1

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos	 examples: 282
Target test neg examples: 39912

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;true;false
0;false,true,true;follows(F, G), follows(G, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(H, I), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;false;true
1;false,true,false;follows(E, G), follows(G, E).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J), follows(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(D, C), recursion_accounttype(D, B).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), follows(A, D).;false;false
3;false;follows(E, A), follows(A, E).;true;true
3;false,true;follows(A, F), follows(E, F).;true;true
3;false,true,true;follows(E, G), recursion_accounttype(G, B).;false;false
3;false,true,false;follows(E, H), recursion_accounttype(H, B).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
3;false,false,false;follows(J, A).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(A, D).;true;false
4;true,true;recursion_accounttype(D, B).;false;true
4;true,true,false;tweets(C, E), follows(D, A).;false;false
4;false;follows(F, A).;false;true
4;false,false;tweets(A, G).;true;true
4;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
4;false,false,false;follows(A, I), recursion_accounttype(I, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), follows(D, A).;false;false
5;false;follows(E, A).;true;true
5;false,true;follows(E, F), follows(F, A).;false;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;tweets(A, D), follows(E, C).;false;false
6;false;follows(F, A).;true;true
6;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;false,false;tweets(A, I).;true;true
6;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
6;false,false,false;follows(A, K), follows(K, L).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G).;true;true
7;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
7;false,false,false;tweets(A, I).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(C, E), follows(E, A).;true;false
8;true,false,true;recursion_accounttype(E, B), follows(A, F).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H), follows(H, I).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
9;true;recursion_accounttype(D, B).;true;false
9;true,true;follows(A, E), follows(E, D).;false;false
9;false;follows(A, F), recursion_accounttype(F, B).;true;true
9;false,true;follows(A, G), follows(G, F).;false;false
9;false,false;tweets(A, H).;true;true
9;false,false,true;follows(A, I).;false;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995116;  // std dev = 2.23e-07, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return -0.14185106490048766;  // std dev = 7.88e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1717082571334092;  // std dev = 5.040, 118.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=37 */
%   | | | else return 0.088918165868743;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.7670719622367217;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, E), interaction(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7670719622367217;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.05410044725371958;  // std dev = 3.091, 80.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=17 */
%   | | | else return 0.09617321084586329;  // std dev = 2.903, 61.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=16 */
%   | | else if ( function(A, J), interaction(K, A) )
%   | | | then return 0.16489034864811095;  // std dev = 5.183, 122.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3053664367462845;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7041755440181103;  // std dev = 0.025, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.13435774671038545;  // std dev = 0.022, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0.6046262796882593;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6046262796882593;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.13101787522331268;  // std dev = 5.020, 116.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=37 */
%   | | | else return 0.32436298316913487;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.42855764423629555;  // std dev = 0.064, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.23351028265025978;  // std dev = 0.543, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.46243198367122634;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.11690115743174442;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.5457653170045597;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.4586809968470278;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.05930466446406765;  // std dev = 2.571, 77.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=21 */
%   | | | else return 0.08382768252185188;  // std dev = 5.315, 136.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=40 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.318310614091899;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( function(C, E), interaction(A, D) )
%   | | | then return -0.6251689233336271;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3555599481772893;  // std dev = 0.051, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F) )
%   | then return 0.05922524211187339;  // std dev = 3.017, 109.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=33 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4963394535601016;  // std dev = 3.313, 58.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=43 */
%   | | | else return -0.2235973574858186;  // std dev = 0.027, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.15955569099828038;  // std dev = 0.784, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.2916990014045014;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return 0.013040213601028028;  // std dev = 2.075, 71.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=17 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.4469193188988566;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.1345276475483545;  // std dev = 1.83e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5699618037290036;  // std dev = 1.918, 47.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=43 */
%   | | | else return -0.2142067695040709;  // std dev = 0.453, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D), interaction(C, E) )
%   | then return 0.22309910356440943;  // std dev = 0.011, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.10605566838773746;  // std dev = 0.935, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3937716649483428;  // std dev = 0.881, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | else return -0.11858456437483271;  // std dev = 0.065, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( function(A, I) )
%   | | then if ( function(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.2459024256102804;  // std dev = 3.189, 64.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=43 */
%   | | | else return -0.1636412672875066;  // std dev = 0.224, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.07055810755433782;  // std dev = 1.011, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else return 0.25296270147880107;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F), interaction(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.28057537848963215;  // std dev = 1.165, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | else return -0.10593889525727788;  // std dev = 0.051, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3496983750096346;  // std dev = 2.136, 49.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=43 */
%   | | | else return -0.16813042536870454;  // std dev = 0.636, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.10045799222490882;  // std dev = 0.729, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then if ( recursion_proteinclass(E, B), interaction(F, A) )
%   | | | then return 0.1679197601426866;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.224029311949008;  // std dev = 0.022, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G) )
%   | then return -0.022728114046666595;  // std dev = 2.329, 125.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=33 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.07198556672182796;  // std dev = 0.817, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.004630509517708186;  // std dev = 3.032, 125.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=37 */
%   | | else if ( function(A, J) )
%   | | | then return -0.03453831266190001;  // std dev = 0.876, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(D, E) )
%   | | then return 0.2288538091904567;  // std dev = 0.219, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0.20004607796735396;  // std dev = 0.077, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.04632493310761031;  // std dev = 1.103, 68.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=8 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0.08768036289601;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1504144538792326;  // std dev = 0.094, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( function(A, H) )
%   | | then if ( interaction(I, A) )
%   | | | then return 0.00780595410464052;  // std dev = 3.262, 169.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=51 */
%   | | | else return 0.011864055453192336;  // std dev = 0.462, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.988541
   AUC PR    = 0.280518
   CLL	      = -0.165093
   Precision = 0.208799 at threshold = 0.5
   Recall    = 0.992908
   F1        = 0.34504


Total learning time: 2.406 seconds
Total inference time: 18.125 seconds
AUC ROC: 0.988541


Results scoring model
   AUC ROC   = 0.988593
   AUC PR    = 0.311523
   CLL	      = -0.165211
   Precision = 0.195067 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.326454


Total scoring time: 6.785 seconds
Parameter learned model CLL: -0.165211


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(A, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.0, 0, 4], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.866, 1, 3], 'false,false,true,true': [2.23e-07, 0, 33], 'false,false,true,false': [7.88e-08, 84, 0], 'false,false,false,true': [5.04, 81, 37], 'false,false,false,false': [1.519, 10, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, E), interaction(E, G)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'function(A, J), interaction(K, A)'}, {'true,true': [5.16e-08, 0, 11], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [3.091, 63, 17], 'false,false,true,false': [2.903, 45, 16], 'false,false,false,true': [5.183, 82, 40], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(H, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.866, 1, 3], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.025, 0, 33], 'false,true,false': [0.022, 82, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 2], 'false,false,false,true': [5.02, 79, 37], 'false,false,false,false': [1.225, 3, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'false': 'interaction(A, E), interaction(E, A)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false,true,true': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(H, E), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.064, 0, 9], 'true,false': [0.543, 1, 2], 'false,true,true,true': [0.957, 1, 11], 'false,true,true,false': [0.0, 37, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.05, 0, 3], 'false,false,false,true': [2.571, 56, 21], 'false,false,false,false': [5.315, 96, 40]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'true,true,false': 'function(C, E), interaction(A, D)', 'false': 'interaction(A, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.051, 0, 4], 'false,true': [3.017, 76, 33], 'false,false,true,true': [3.313, 15, 43], 'false,false,true,false': [0.027, 61, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true,true': [0.784, 1, 8], 'true,false': [0.005, 0, 3], 'false,true,true': [2.075, 54, 17], 'false,true,false,true': [0.97, 1, 16], 'false,true,false,false': [1.83e-08, 36, 0], 'false,false,true,true': [1.918, 4, 43], 'false,false,true,false': [0.453, 70, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D), interaction(C, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(G, A), interaction(H, G)', 'false,false': 'function(A, I)', 'false,false,true': 'function(J, I), recursion_proteinclass(J, B)'}, {'true,true': [0.011, 0, 8], 'true,false': [0.935, 2, 3], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.881, 1, 33], 'false,true,false': [0.065, 94, 0], 'false,false,true,true': [3.189, 21, 43], 'false,false,true,false': [0.224, 64, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F), interaction(F, A)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [1.011, 2, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.165, 2, 33], 'false,true,false': [0.051, 93, 0], 'false,false,true,true': [2.136, 6, 43], 'false,false,true,false': [0.636, 80, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)', 'true,false': 'interaction(E, C), interaction(A, E)', 'true,false,true': 'recursion_proteinclass(E, B), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'function(A, J)'}, {'true,true': [0.729, 1, 8], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.022, 0, 2], 'false,true': [2.329, 92, 33], 'false,false,true,true': [0.817, 1, 3], 'false,false,true,false': [3.032, 88, 37], 'false,false,false,true': [0.876, 7, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(D, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, A), interaction(F, G)', 'false,false': 'function(A, H)', 'false,false,true': 'interaction(I, A)'}, {'true,true,true': [0.219, 0, 19], 'true,true,false': [0.077, 0, 2], 'true,false': [1.103, 60, 8], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.094, 0, 3], 'false,false,true,true': [3.262, 118, 51], 'false,false,true,false': [0.462, 6, 3], 'false,false,false': [0.0, 0, 0]}]]
[{'': [-1.6148698540002277e-16, 0.2106324011085928], 'false': [0.18750000000000006, 0.20771006763787744], 'false,false': [0.20249835634451155, 0.2121088514655336], 'false,false,false': [0.2152398735995418, 0.17751479289940816], 'false,false,true': [1.5072118637335459e-15, 7.401486830834377e-17], 'false,true': [nan, 0.18750000000000006], 'true': [-2.5376526277146434e-16, 0.0]}, {'': [2.4223047810003414e-16, 0.17568229321638001], 'false': [1.4802973661668753e-16, 0.17289451224307523], 'false,false': [0.1279760339231378, 0.22021254722474012], 'false,false,false': [0.22021254722474012, nan], 'false,false,true': [0.11946444607034368, 0.1381344501410708], 'true': [2.4223047810003414e-16, nan], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}, {'': [0.07638888888888869, 0.18421626849041065], 'false': [0.14388045282003775, 0.22033757137153961], 'false,false': [-7.401486830834377e-17, 0.22058638520464624], 'false,false,false': [0.21722651605231863, 0.25000000000000006], 'false,true': [1.9193365847015823e-05, 5.780080780597603e-06], 'true': [-1.1102230246251565e-16, 0.1875], 'false,true,true': [nan, 1.9193365847015823e-05], 'false,false,true': [0.0, 0.0]}, {'': [0.032041615905143594, 0.1489957324725144], 'false': [0.08447307951685554, 0.16355258503771392], 'false,false': [0.0008473779337415666, 0.16379920984748034], 'false,false,false': [0.08586894393902478, 0.20770409304294551], 'false,true': [0.08077259687942137, 0.0], 'false,true,true': [0.07638888888888891, -2.700542492331462e-17], 'true': [0.0004591819008226879, 0.09825631297185093], 'false,true,false': [0.0, nan]}, {'': [0.07047404483796765, 0.15682614739976508], 'false': [0.08352298192181677, 0.2217541696699817], 'false,false': [0.2217541696699817, nan], 'false,false,true': [0.18927757697504316, 1.2353811311697708e-05], 'true': [0.09736055410601238, 0.0006462532355771822], 'true,true': [-1.586032892321652e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.05452556554700971, 0.12728745816542178], 'false': [0.07415409420913799, 0.18099727434176455], 'false,false': [0.18099727434176455, nan], 'false,false,true': [0.07830869096810635, 0.0029260367802373985], 'false,true': [0.060620507932456026, 0.0914160429736783], 'false,true,false': [0.05536332179930784, 9.25185853854297e-18], 'true': [0.06833240928006595, 8.643484004811075e-06]}, {'': [0.09286390468484902, 0.08966564261836285], 'true': [1.4497484035258523e-05, 0.17475042457607726], 'false': [0.05730107485896398, 0.12175124589233888], 'false,false': [0.12175124589233888, nan], 'false,false,true': [0.15885510397569158, 0.0007843696128071662], 'false,true': [0.022816237484665516, 4.5385825703855794e-05], 'false,true,true': [nan, 0.022816237484665516]}, {'': [0.08106319715014973, 0.07130656933479294], 'true': [0.08525912235742515, 0.0], 'false': [0.04029788102223702, 0.1016613252927229], 'false,false': [0.1016613252927229, nan], 'false,false,true': [0.09310075494861594, 0.0050505144845952085], 'false,true': [0.038758037067292604, 2.7666146251619203e-05], 'false,true,true': [nan, 0.03875803706729253]}, {'': [0.046546339874171706, 0.06100714043710837], 'false': [0.04339223298580889, 0.07669189521169514], 'false,false': [0.07661565542871507, 0.076708144484356], 'false,false,false': [0.076708144484356, nan], 'false,false,true': [0.16682256999872835, 0.07354701794113085], 'true': [0.05902353712504519, 0.0008667536937098097], 'true,false': [0.0, 0.00025070327259595765], 'true,false,true': [0.0, nan]}, {'': [0.027680963911285585, 0.060066458501552594], 'false': [0.0029532138901113003, 0.06099698119591124], 'false,false': [0.06099698119591123, nan], 'false,false,true': [0.06298123857849319, 0.023721401486435298], 'true': [0.0026282797651341074, 0.017905023184388746], 'false,true': [0.0, 0.0029537269772755884], 'true,true': [0.0025155369714213085, 0.002948487629871051]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), function(A, D).;true;true
0;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
0;false,false;interaction(A, G).;true;true
0;false,false,true;interaction(H, G), recursion_proteinclass(H, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
2;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false,true;interaction(I, A), interaction(H, I).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, C), interaction(D, A).;true;true
3;false;interaction(A, E), interaction(E, A).;true;true
3;false,true;interaction(F, A), interaction(F, E).;true;true
3;false,true,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), interaction(D, A).;true;true
4;true,true;recursion_proteinclass(D, B).;true;true
4;false;interaction(A, F).;true;true
4;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), interaction(A, D).;true;true
5;false;interaction(A, E).;true;true
5;false,true;interaction(F, E), interaction(A, F).;true;true
5;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;function(A, D), interaction(C, E).;true;true
6;false;interaction(A, F).;true;true
6;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
6;false,false;function(J, I), recursion_proteinclass(J, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, A).;true;true
7;false;interaction(A, E).;true;true
7;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(E, C), interaction(A, E).;true;true
9;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
9;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
9;false,true;interaction(G, A), interaction(F, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995116;  // std dev = 2.23e-07, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return -0.14185106490048763;  // std dev = 8.69e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.24703782398840124;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.14263169372020054;  // std dev = 4.859, 116.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=33 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.05280674554428779;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.2670719622367217;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.7670719622367217;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then if ( enzyme(A, H) )
%   | | | then return -0.1254446385283914;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( phenotype(A, I), enzyme(A, J) )
%   | | | then return 0.2598287915531101;  // std dev = 2.561, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | | else return 0.1471427820479151;  // std dev = 5.955, 188.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=59 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6064752625860315;  // std dev = 0.125, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.5889681235262885;  // std dev = 0.945, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.6845541782505706;  // std dev = 0.045, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.1411535125370124;  // std dev = 0.012, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(I, J) )
%   | | | then return 0.7160148792310865;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6046262796882593;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.07629176896419977;  // std dev = 3.931, 79.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=21 */
%   | | | else return 0.1620803244130272;  // std dev = 3.526, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(A, E), phenotype(E, F) )
%   | | then return 0.4154511509271857;  // std dev = 0.011, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.462343165088215;  // std dev = 0.110, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.45515900582710433;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(H, A), interaction(H, G) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.44975796603891366;  // std dev = 0.964, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.11776199316453202;  // std dev = 0.078, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return 0.009368325252198061;  // std dev = 0.606, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.46427617283495975;  // std dev = 0.130, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.07181126312086623;  // std dev = 5.711, 193.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=55 */
%   | | | else return 0.13376818646278674;  // std dev = 1.492, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.31826521717161954;  // std dev = 0.005, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3438012077212276;  // std dev = 0.128, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.036934157089920094;  // std dev = 1.831, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return 0.14825385106980862;  // std dev = 1.550, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else if ( interaction(A, I), location(I, J) )
%   | | | then return -0.013292093301340764;  // std dev = 1.482, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | | else return 0.0803737602969582;  // std dev = 0.743, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( function(K, L), recursion_proteinclass(K, B) )
%   | | then if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.1293272629678624;  // std dev = 2.246, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.2876759437866792;  // std dev = 4.063, 68.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=35 */
%   | | else return -0.21615561954337248;  // std dev = 0.009, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.15207836559230917;  // std dev = 0.283, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.28204703600754416;  // std dev = 0.110, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return 0.03453462178818578;  // std dev = 0.251, 60.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.4929635036284515;  // std dev = 0.057, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.1447553590691438;  // std dev = 0.042, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.46842347154866315;  // std dev = 2.450, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return -0.21783532637203548;  // std dev = 0.270, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 7.299888436850255E-4;  // std dev = 0.844, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.20149330315236816;  // std dev = 2.837, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D), interaction(C, E) )
%   | then return 0.22450886216675348;  // std dev = 0.005, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.22951010351779863;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(A, H), complex(A, I) )
%   | | | then return 0.2660783066759464;  // std dev = 0.969, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.3948860347175782;  // std dev = 0.203, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return -0.12676427687144182;  // std dev = 0.017, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( function(J, K), recursion_proteinclass(J, B) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.20897942220914695;  // std dev = 2.444, 29.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   | | | else return 0.27753487919190845;  // std dev = 3.103, 45.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=26 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return -0.15358238820594108;  // std dev = 0.056, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.21164203545443647;  // std dev = 0.059, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.1924938999933246;  // std dev = 0.025, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.1539784558048085;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G), enzyme(A, H) )
%   | | | then return 0.33496638953167873;  // std dev = 0.137, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.1842048211665466;  // std dev = 1.678, 29.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   | | else return -0.1127743079530704;  // std dev = 0.016, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( location(A, K), location(I, K) )
%   | | | then return 0.06417727129452135;  // std dev = 2.571, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | | | else return 0.21135587267507727;  // std dev = 1.398, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.0024865759108661178;  // std dev = 1.766, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.05875039160941314;  // std dev = 2.572, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), phenotype(E, F) )
%   | | then return 0.15856242285510616;  // std dev = 0.025, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.18498108164175422;  // std dev = 0.837, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(G, C), interaction(A, G) )
%   | | then return 0.15314461224490927;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.16922214509832867;  // std dev = 0.859, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, H), location(H, I) )
%   | then return -0.008679447492551985;  // std dev = 0.175, 118.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=31 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5243987819425233;  // std dev = 0.500, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.1938495952890312;  // std dev = 0.461, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return -0.014504683727387098;  // std dev = 3.680, 98.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=28 */
%   | | | else return 0.13561867144079592;  // std dev = 0.895, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( interaction(E, A), location(A, F) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.15595000049611207;  // std dev = 0.046, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.009395845471861612;  // std dev = 0.189, 70.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=19 */
%   | else if ( enzyme(A, G) )
%   | | then return 0.1055384516640288;  // std dev = 0.451, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.041391526001346775;  // std dev = 0.395, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then if ( interaction(I, A), interaction(H, I) )
%   | | then return -0.3118559508440003;  // std dev = 0.640, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.13476371123161757;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.38336017249811843;  // std dev = 2.245, 58.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=51 */
%   | | | else return -0.18489137600525074;  // std dev = 0.826, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else return -0.03789258456126676;  // std dev = 0.127, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */


Results
   AUC ROC   = 0.98838
   AUC PR    = 0.255039
   CLL	      = -0.178132
   Precision = 0.19369 at threshold = 0.5
   Recall    = 0.93617
   F1        = 0.320973


Total learning time: 10.434 seconds
Total inference time: 143.981 seconds
AUC ROC: 0.98838


Results scoring model
   AUC ROC   = 0.98916
   AUC PR    = 0.354528
   CLL	      = -0.181897
   Precision = 0.203911 at threshold = 0.5
   Recall    = 0.83908
   F1        = 0.32809


Total scoring time: 22.182 seconds
Refined model CLL: -0.181897


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.988541
   AUC PR    = 0.280518
   CLL	      = -0.165093
   Precision = 0.208799 at threshold = 0.5
   Recall    = 0.992908
   F1        = 0.34504


Total learning time: 41.807 seconds
Total inference time: 18.125 seconds
AUC ROC: 0.988541
Total revision time: 41.807
Best scored revision CLL: -0.165211


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:04:21
{'AUC ROC': 0.988541, 'AUC PR': 0.280518, 'CLL': -0.165093, 'Precision': [0.208799, 0.5], 'Recall': 0.992908, 'F1': 0.34504, 'Learning time': 41.807, 'Inference time': 18.125, 'parameter': {'AUC ROC': 0.988541, 'AUC PR': 0.280518, 'CLL': -0.165093, 'Precision': [0.208799, 0.5], 'Recall': 0.992908, 'F1': 0.34504, 'Learning time': 2.406, 'Inference time': 18.125}}


Starting fold 2

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos	 examples: 265
Target test neg examples: 35157

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;true;false
0;false,true,true;follows(F, G), follows(G, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(H, I), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;false;true
1;false,true,false;follows(E, G), follows(G, E).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J), follows(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(D, C), recursion_accounttype(D, B).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), follows(A, D).;false;false
3;false;follows(E, A), follows(A, E).;true;true
3;false,true;follows(A, F), follows(E, F).;true;true
3;false,true,true;follows(E, G), recursion_accounttype(G, B).;false;false
3;false,true,false;follows(E, H), recursion_accounttype(H, B).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
3;false,false,false;follows(J, A).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(A, D).;true;false
4;true,true;recursion_accounttype(D, B).;false;true
4;true,true,false;tweets(C, E), follows(D, A).;false;false
4;false;follows(F, A).;false;true
4;false,false;tweets(A, G).;true;true
4;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
4;false,false,false;follows(A, I), recursion_accounttype(I, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), follows(D, A).;false;false
5;false;follows(E, A).;true;true
5;false,true;follows(E, F), follows(F, A).;false;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;tweets(A, D), follows(E, C).;false;false
6;false;follows(F, A).;true;true
6;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;false,false;tweets(A, I).;true;true
6;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
6;false,false,false;follows(A, K), follows(K, L).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G).;true;true
7;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
7;false,false,false;tweets(A, I).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(C, E), follows(E, A).;true;false
8;true,false,true;recursion_accounttype(E, B), follows(A, F).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H), follows(H, I).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
9;true;recursion_accounttype(D, B).;true;false
9;true,true;follows(A, E), follows(E, D).;false;false
9;false;follows(A, F), recursion_accounttype(F, B).;true;true
9;false,true;follows(A, G), follows(G, F).;false;false
9;false,false;tweets(A, H).;true;true
9;false,false,true;follows(A, I).;false;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7522665821583358;  // std dev = 2.837, 85.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=76 */
%   | | | else return -0.1418510649004883;  // std dev = 0.000, 179.000 (wgt'ed) examples reached here.  /* #neg=179 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.14386322081379804;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.636140078877621;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(E, G), interaction(G, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4733807044648281;  // std dev = 1.029, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), interaction(I, A) )
%   | | | then return 0.07949069359966464;  // std dev = 4.228, 129.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=31 */
%   | | | else return 0.10498427553845305;  // std dev = 5.010, 165.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=45 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.12543301544918353;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.3397187297348978;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4774847155582389;  // std dev = 0.946, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.34679193518420504;  // std dev = 1.253, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5951365771691864;  // std dev = 0.069, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5568427748230692;  // std dev = 3.541, 91.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=76 */
%   | | else return -0.13597536153668185;  // std dev = 0.022, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6150216473806375;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.05744246007380342;  // std dev = 1.728, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.4478962973577699;  // std dev = 0.074, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.25321600918061465;  // std dev = 0.771, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4760405966859853;  // std dev = 1.322, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return -0.1503998498265755;  // std dev = 0.526, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5977475172112369;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.12187577245540192;  // std dev = 0.003, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.4723439863937344;  // std dev = 0.054, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.06399798353076731;  // std dev = 4.862, 200.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=57 */
%   | | | else return 0.10255872831734474;  // std dev = 1.668, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.3461145380803961;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(C, E), interaction(D, A) )
%   | | | then return -0.6750570680298098;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.33114668089347044;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.3700687397307545;  // std dev = 0.090, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(F, A) )
%   | then return 0.06595249808642634;  // std dev = 5.277, 269.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=82 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.6502007689455643;  // std dev = 0.361, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2025063585301949;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4273476969537504;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.18505031680272133;  // std dev = 0.950, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.30514996433929314;  // std dev = 0.046, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then return 0.04372480694078081;  // std dev = 3.333, 114.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.41519957337596114;  // std dev = 2.436, 55.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=48 */
%   | | | else return -0.13367684568504667;  // std dev = 0.067, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5836529748249082;  // std dev = 0.403, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.2376049620163593;  // std dev = 0.201, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, C) )
%   | then return 0.15904408796961111;  // std dev = 0.924, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.08806627669850949;  // std dev = 0.939, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.15816618252256892;  // std dev = 0.565, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.32284324210994103;  // std dev = 3.352, 92.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=78 */
%   | | else return -0.1237496800126056;  // std dev = 0.164, 192.000 (wgt'ed) examples reached here.  /* #neg=192 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.40225286255524756;  // std dev = 0.323, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.17935929603191164;  // std dev = 0.329, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return -0.09610615182357264;  // std dev = 1.047, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.14753806964035132;  // std dev = 0.856, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.2084502415542203;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.23455739090186103;  // std dev = 3.408, 98.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=82 */
%   | | else return -0.11156352581980591;  // std dev = 0.116, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.41705782078541614;  // std dev = 0.379, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.20216251546654623;  // std dev = 0.212, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.09734995237197755;  // std dev = 0.927, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then if ( recursion_proteinclass(E, B), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.024507114111902227;  // std dev = 0.900, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.18090437480672802;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then return 0.005623765369623017;  // std dev = 4.125, 261.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=82 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.4562284656830402;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.003833690698590927;  // std dev = 0.812, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, D) )
%   | | then return 0.22869477303999036;  // std dev = 0.985, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | else return 0.16704488428964143;  // std dev = 0.494, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return -0.02479435642184043;  // std dev = 3.620, 245.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=58 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, F) )
%   | | then return -0.830102201156198;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.06637351636977795;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, H) )
%   | | then if ( interaction(A, I) )
%   | | | then return -0.012762494663368618;  // std dev = 0.552, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.042837957838182415;  // std dev = 0.348, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.06406378009520586;  // std dev = 0.765, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.03191273580809986;  // std dev = 0.709, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */


Results
   AUC ROC   = 0.987558
   AUC PR    = 0.317647
   CLL	      = -0.148401
   Precision = 0.196442 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.328377


Total learning time: 2.751 seconds
Total inference time: 12.967 seconds
AUC ROC: 0.987558


Results scoring model
   AUC ROC   = 0.975146
   AUC PR    = 0.202
   CLL	      = -0.180929
   Precision = 0.079693 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.147622


Total scoring time: 8.966 seconds
Parameter learned model CLL: -0.180929


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,true': 'interaction(F, G), interaction(G, A)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 13], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 2], 'false,true,false': [0.0, 0, 5], 'false,false,true,true': [2.837, 9, 76], 'false,false,true,false': [0.0, 179, 0], 'false,false,false,true': [1.69, 10, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(E, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), interaction(I, A)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.957, 1, 11], 'true,false': [2.11e-08, 0, 6], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.029, 2, 5], 'false,false,true,true': [4.228, 98, 31], 'false,false,true,false': [5.01, 120, 45], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [1.0, 2, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.946, 1, 10], 'true,false': [1.253, 2, 7], 'false,true,true,true': [0.069, 0, 6], 'false,true,true,false': [3.541, 15, 76], 'false,true,false': [0.022, 209, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.728, 12, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'false': 'interaction(E, A), interaction(A, E)', 'false,true': 'interaction(A, F), interaction(E, F)', 'false,true,true': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(E, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.074, 0, 13], 'true,false': [0.771, 1, 3], 'false,true,true,true': [1.322, 2, 14], 'false,true,true,false': [0.526, 36, 0], 'false,true,false,true': [0.007, 0, 5], 'false,true,false,false': [0.003, 13, 0], 'false,false,true': [0.054, 0, 8], 'false,false,false,true': [4.862, 143, 57], 'false,false,false,false': [1.668, 9, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'true,true,false': 'complex(C, E), interaction(D, A)', 'false': 'interaction(F, A)', 'false,false': 'complex(A, G)', 'false,false,true': 'complex(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), recursion_proteinclass(I, B)'}, {'true,true,true': [0.017, 0, 5], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 2], 'true,false': [0.09, 0, 10], 'false,true': [5.277, 187, 82], 'false,false,true,true': [0.361, 0, 3], 'false,false,true,false': [0.0, 12, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.816, 1, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true,true': [0.95, 1, 11], 'true,false': [0.046, 0, 6], 'false,true,true': [3.333, 80, 34], 'false,true,false,true': [2.436, 7, 48], 'false,true,false,false': [0.067, 83, 0], 'false,false,true,true': [0.403, 0, 5], 'false,false,true,false': [0.201, 7, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), interaction(E, C)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(A, G), interaction(G, H)', 'false,false': 'complex(A, I)', 'false,false,true': 'complex(J, I), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), interaction(K, L)'}, {'true,true': [0.924, 1, 11], 'true,false': [0.939, 1, 6], 'false,true,true,true': [0.565, 1, 4], 'false,true,true,false': [3.352, 14, 78], 'false,true,false': [0.164, 192, 0], 'false,false,true,true': [0.323, 0, 3], 'false,false,true,false': [0.329, 9, 0], 'false,false,false,true': [1.047, 6, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.856, 1, 12], 'true,false': [0.018, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.408, 16, 82], 'false,true,false': [0.116, 143, 0], 'false,false,true,true': [0.379, 0, 5], 'false,false,true,false': [0.212, 10, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(C, E), interaction(E, A)', 'true,false,true': 'recursion_proteinclass(E, B), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.927, 1, 9], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.9, 1, 4], 'true,false,false': [0.008, 0, 4], 'false,true': [4.125, 179, 82], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.812, 9, 4], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(E, D)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(A, G), interaction(G, F)', 'false,false': 'complex(A, H)', 'false,false,true': 'interaction(A, I)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true': [0.985, 1, 28], 'true,true,false': [0.494, 2, 8], 'true,false': [3.62, 187, 58], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 1], 'false,false,true,true': [0.552, 8, 2], 'false,false,true,false': [0.348, 2, 1], 'false,false,false,true': [0.765, 6, 2], 'false,false,false,false': [0.709, 9, 4]}]]
[{'': [-2.0898315757650005e-16, 0.2120775623268703], 'false': [-2.5376526277146434e-16, 0.20495833548988251], 'false,false': [0.20500459136822805, 0.20408163265306106], 'false,false,true': [0.09467128027681644, -1.9847562451399445e-16], 'false,false,false': [0.20408163265306106, nan], 'true': [0.0, -2.7328566760003855e-16], 'false,true': [0.0, 0.0], 'false,true,true': [nan, 0.0]}, {'': [0.05246913580246929, 0.1543378717459732], 'false': [0.12822614775553318, 0.1498008480331218], 'false,false': [0.14631474919960435, 0.23140495867768587], 'false,false,false': [0.20408163265306117, 0.25], 'false,false,true': [0.13855255341851946, 0.15209820481899702], 'false,true': [0.0, 0.1514040520145509], 'false,true,false': [nan, 0.1514040520145509], 'true': [0.07638888888888884, 7.401486830834377e-17]}, {'': [0.12749298407547333, 0.148143300847736], 'false': [0.1456518489885019, 0.19295704715665957], 'false,false': [0.0, 0.186728947891142], 'false,false,false': [0.186728947891142, nan], 'false,true': [0.1293875815113874, 2.2386518740257523e-06], 'false,true,true': [0.0007908320346287449, 0.13777578196938056], 'true': [0.08138811363362786, 0.17444904971913064], 'false,false,true': [nan, 0.0]}, {'': [0.04209100800508903, 0.12379096209131397], 'false': [0.11799516807575533, 0.12541703973299345], 'false,false': [0.00037023360571905584, 0.12414693892667852], 'false,false,false': [0.1182067415146446, 0.21413841204063927], 'false,true': [0.12254916584948825, 0.10389407899367935], 'false,true,true': [0.10928147031795166, 0.007698955410796238], 'false,true,false': [9.008629555351532e-06, 5.200012856912192e-07], 'true': [0.0004177994756156331, 0.14854626573401755]}, {'': [0.05671296826407059, 0.1077368594808224], 'false': [0.10350727398153672, 0.17051781706713792], 'false,false': [0.12501558735825066, 0.22222222222222224], 'false,false,false': [nan, 0.22222222222222224], 'false,false,true': [0.043390380592884435, -1.850371707708594e-17], 'true': [0.11317703045778721, 0.0008166835906177727], 'true,true': [5.600918719204095e-05, 0.22498799652161414], 'true,true,false': [0.0, 0.0]}, {'': [0.05347813504684569, 0.11099886529488229], 'false': [0.10760830089871859, 0.1808067048789643], 'false,false': [0.1808067048789643, nan], 'false,false,true': [0.03240522147515943, 0.005780848276120949], 'false,true': [0.09743459036889325, 0.11523905056145989], 'false,true,false': [0.10786706263703578, 5.4589850768024106e-05], 'true': [0.07523388521776338, 0.0003506844794043766]}, {'': [0.09256932196324734, 0.08509511625159197], 'true': [0.07117970738954678, 0.1260554328550179], 'false': [0.08332093160599228, 0.1044261099133035], 'false,false': [0.0811674604538609, 0.13699651840066113], 'false,false,false': [0.13699651840066113, nan], 'false,true': [0.12045403101854062, 0.00013973011493631968], 'false,true,true': [0.06373697446058484, 0.12213861716955046], 'false,false,true': [0.03479841333083705, 0.012055633740765138]}, {'': [0.04145700042788383, 0.07839568791678098], 'false': [0.07715250584605826, 0.09778399334730097], 'false,false': [0.09778399334730097, nan], 'false,false,true': [0.028780713324606032, 0.004474358415983937], 'false,true': [0.11850995481073967, 9.441249419685692e-05], 'false,true,true': [nan, 0.11850995481073959], 'true': [0.05634622498939745, 6.536073825718635e-05]}, {'': [0.09303573286141713, 0.064999383053365], 'true': [0.08600188701434913, 0.10035948485491207], 'true,false': [0.1618822564181853, 1.4976078726872122e-05], 'true,false,true': [nan, 0.16188225641818532], 'false': [0.06517831700990535, 0.06114367533925397], 'false,false': [0.06114367533925397, nan], 'false,false,true': [0.0, 0.05072866442826958]}, {'': [0.05721422399098951, 0.06223974232769537], 'false': [0.2009171780284284, 0.0461014078965526], 'false,true': [0.0, 0.0], 'true': [0.031863178778830555, 0.05349192647309957], 'false,false': [0.03332648076148245, 0.05400118467600547], 'false,false,false': [0.07320746700052488, 0.03867279435573896], 'false,false,true': [0.030507870301133805, 0.040343841025431364], 'true,true': [0.03344699131882032, 0.024443954343501828]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), complex(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(C, D), interaction(A, D).;true;true
3;false;interaction(E, A), interaction(A, E).;true;true
3;false,true;interaction(A, F), interaction(E, F).;true;true
3;false,true,false;interaction(E, H), recursion_proteinclass(H, B).;true;true
3;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), interaction(A, D).;true;true
4;true,true;recursion_proteinclass(D, B).;true;true
4;true,true,false;complex(C, E), interaction(D, A).;true;true
4;false;interaction(F, A).;true;true
4;false,false;complex(A, G).;true;true
4;false,false,true;complex(H, G), recursion_proteinclass(H, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, D), interaction(D, A).;true;true
5;false;interaction(E, A).;true;true
5;false,true;interaction(E, F), interaction(F, A).;true;true
5;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
6;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, D).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(C, E), interaction(E, A).;true;true
8;false;interaction(G, A).;true;true
8;false,false;recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
9;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
9;false,true;interaction(A, G), interaction(G, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7025933795439567;  // std dev = 3.438, 90.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=76 */
%   | | | else return -0.14185106490048838;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #neg=195 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.6422501431581288;  // std dev = 0.279, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.7561337978940017;  // std dev = 0.073, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.25613379789400165;  // std dev = 0.927, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.7518526675222027;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.5951114248732337;  // std dev = 0.924, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( location(A, H), interaction(I, A) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return 0.05546221447747425;  // std dev = 3.508, 94.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=20 */
%   | | | else return 0.12683450813960429;  // std dev = 5.253, 170.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=50 */
%   | | else if ( complex(A, K), location(A, L) )
%   | | | then return 0.12374632549049433;  // std dev = 1.197, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.26946844246527585;  // std dev = 1.911, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5952313140680713;  // std dev = 0.169, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6258641791143879;  // std dev = 0.076, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5447590370226002;  // std dev = 3.709, 93.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=76 */
%   | | else return -0.1399209493461512;  // std dev = 0.217, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.6256046521737129;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.044303894200588174;  // std dev = 1.246, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.4679189611158467;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.4567673735811488;  // std dev = 0.135, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.43252326316597584;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.018334452121144488;  // std dev = 2.207, 47.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=10 */
%   | | | else return 0.11069058083035463;  // std dev = 1.229, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6116431184570403;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.11942162601912855;  // std dev = 0.018, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.4630513692770112;  // std dev = 0.133, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return -0.02471068540047155;  // std dev = 1.592, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | | else return 0.10850330356844076;  // std dev = 4.685, 169.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=57 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.2455139105516064;  // std dev = 0.240, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then return -0.1386047602174914;  // std dev = 0.915, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.2574981099472204;  // std dev = 0.269, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(G, A) )
%   | then if ( location(A, H), interaction(A, I) )
%   | | then return 0.04511168501180767;  // std dev = 0.322, 117.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=33 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.041684974536456504;  // std dev = 2.598, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | | | else return 0.11415514913944366;  // std dev = 3.316, 87.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=32 */
%   | else if ( complex(A, K) )
%   | | then if ( complex(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.6661658499589455;  // std dev = 0.373, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.18148898206937214;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.19082143331469106;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.29952408325685537;  // std dev = 0.039, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.1576950621460725;  // std dev = 0.331, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.09303227816988065;  // std dev = 3.056, 80.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=27 */
%   | | | else return -0.04848274689434628;  // std dev = 1.687, 43.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.4805574483647982;  // std dev = 1.693, 51.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   | | | else return -0.14328189935248467;  // std dev = 0.137, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5065717229789554;  // std dev = 0.749, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.21045632513691342;  // std dev = 0.280, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.08794217125254807;  // std dev = 0.343, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(A, A) )
%   | | then return 0.2250218562884802;  // std dev = 0.047, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.29741576897382405;  // std dev = 0.988, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.24521871591565905;  // std dev = 0.069, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.28928524311761916;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.2856600673181532;  // std dev = 3.584, 83.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=67 */
%   | | | else return 0.4398385638940192;  // std dev = 0.111, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.13351167294699023;  // std dev = 0.208, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
%   | else if ( phenotype(A, K) )
%   | | then return 0.32636448715795147;  // std dev = 0.793, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return -0.06354416911259213;  // std dev = 0.340, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.14827461626893734;  // std dev = 0.241, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.21417629795543558;  // std dev = 0.057, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.3009732332196234;  // std dev = 1.247, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return 0.23427854305681153;  // std dev = 3.160, 76.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=63 */
%   | | else return -0.12055751566378481;  // std dev = 0.025, 190.000 (wgt'ed) examples reached here.  /* #neg=190 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(I, K) )
%   | | | then return -0.2587413917484081;  // std dev = 0.791, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.04400215819862052;  // std dev = 0.599, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.0774991391370103;  // std dev = 0.816, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.003873185573009271;  // std dev = 0.314, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1891218752948862;  // std dev = 0.038, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then if ( enzyme(A, F), interaction(A, E) )
%   | | | then return -0.08398450325183526;  // std dev = 0.709, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.04156929115639597;  // std dev = 2.034, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
%   | | else if ( phenotype(A, G), location(A, H) )
%   | | | then return -0.0064201557181863276;  // std dev = 2.845, 106.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=35 */
%   | | | else return -0.025326162423272416;  // std dev = 2.566, 95.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=29 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.23470302273212554;  // std dev = 0.652, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.05980699929411253;  // std dev = 0.858, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.17153870741867505;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.3016415503300798;  // std dev = 0.208, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(A, F), phenotype(A, G) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.1750800897371808;  // std dev = 0.115, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.02291129196266292;  // std dev = 1.735, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else return 0.08301130395758352;  // std dev = 0.244, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | else return 6.655703978301205E-4;  // std dev = 0.237, 216.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=69 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.24239765770617538;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then if ( complex(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.4006633616548269;  // std dev = 0.150, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1323373288265995;  // std dev = 0.088, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( location(A, L) )
%   | | | then return -0.08270484896974366;  // std dev = 1.178, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.031501307948921066;  // std dev = 0.409, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */


Results
   AUC ROC   = 0.985215
   AUC PR    = 0.296477
   CLL	      = -0.167051
   Precision = 0.178161 at threshold = 0.5
   Recall    = 0.935849
   F1        = 0.299336


Total learning time: 7.063 seconds
Total inference time: 25.552 seconds
AUC ROC: 0.985215


Results scoring model
   AUC ROC   = 0.975091
   AUC PR    = 0.184925
   CLL	      = -0.190129
   Precision = 0.07855 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.145658


Total scoring time: 20.623 seconds
Refined model CLL: -0.190129


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.987558
   AUC PR    = 0.317647
   CLL	      = -0.148401
   Precision = 0.196442 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.328377


Total learning time: 39.403 seconds
Total inference time: 12.967 seconds
AUC ROC: 0.987558
Total revision time: 39.403
Best scored revision CLL: -0.180929


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:05:39
{'AUC ROC': 0.987558, 'AUC PR': 0.317647, 'CLL': -0.148401, 'Precision': [0.196442, 0.5], 'Recall': 1.0, 'F1': 0.328377, 'Learning time': 39.403, 'Inference time': 12.967, 'parameter': {'AUC ROC': 0.987558, 'AUC PR': 0.317647, 'CLL': -0.148401, 'Precision': [0.196442, 0.5], 'Recall': 1.0, 'F1': 0.328377, 'Learning time': 2.751, 'Inference time': 12.967}}


Starting fold 3

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos	 examples: 277
Target test neg examples: 38883

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;true;false
0;false,true,true;follows(F, G), follows(G, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(H, I), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;false;true
1;false,true,false;follows(E, G), follows(G, E).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J), follows(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(D, C), recursion_accounttype(D, B).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), follows(A, D).;false;false
3;false;follows(E, A), follows(A, E).;true;true
3;false,true;follows(A, F), follows(E, F).;true;true
3;false,true,true;follows(E, G), recursion_accounttype(G, B).;false;false
3;false,true,false;follows(E, H), recursion_accounttype(H, B).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
3;false,false,false;follows(J, A).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(A, D).;true;false
4;true,true;recursion_accounttype(D, B).;false;true
4;true,true,false;tweets(C, E), follows(D, A).;false;false
4;false;follows(F, A).;false;true
4;false,false;tweets(A, G).;true;true
4;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
4;false,false,false;follows(A, I), recursion_accounttype(I, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), follows(D, A).;false;false
5;false;follows(E, A).;true;true
5;false,true;follows(E, F), follows(F, A).;false;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;tweets(A, D), follows(E, C).;false;false
6;false;follows(F, A).;true;true
6;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;false,false;tweets(A, I).;true;true
6;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
6;false,false,false;follows(A, K), follows(K, L).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G).;true;true
7;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
7;false,false,false;tweets(A, I).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(C, E), follows(E, A).;true;false
8;true,false,true;recursion_accounttype(E, B), follows(A, F).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H), follows(H, I).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
9;true;recursion_accounttype(D, B).;true;false
9;true,true;follows(A, E), follows(E, D).;false;false
9;false;follows(A, F), recursion_accounttype(F, B).;true;true
9;false,true;follows(A, G), follows(G, F).;false;false
9;false,false;tweets(A, H).;true;true
9;false,false,true;follows(A, I).;false;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995115;  // std dev = 2.53e-07, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.14185106490048763;  // std dev = 8.16e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.14538297765270278;  // std dev = 4.387, 94.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=27 */
%   | | | else return 0.28672036367094095;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.7473839334745775;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, E), interaction(E, G) )
%   | | | then return 0.7473839334745775;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.7473839334745774;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.04353897161947765;  // std dev = 2.828, 70.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=14 */
%   | | | else return 0.09324003342767485;  // std dev = 3.412, 85.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=22 */
%   | | else if ( function(A, J), interaction(K, A) )
%   | | | then return 0.1156162489222231;  // std dev = 5.089, 128.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.45536643674628463;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.16240867517630736;  // std dev = 0.596, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.7042916791642074;  // std dev = 0.030, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return -0.13355395164470618;  // std dev = 0.029, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0.5835404111048867;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5835404111048867;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.16947326628380788;  // std dev = 4.202, 78.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=27 */
%   | | | else return 0.17681284160625674;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.4414715685409476;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4500226617270864;  // std dev = 0.102, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5483535139554081;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11589758006870551;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.4965160916760554;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1210882385854285;  // std dev = 3.73e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.4273140990058436;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.09881369043363368;  // std dev = 3.103, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
%   | | | else return 0.1162031321968745;  // std dev = 4.927, 111.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=36 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.3374988138250202;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32507607687225243;  // std dev = 0.038, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E) )
%   | then return 0.049727233314298326;  // std dev = 3.294, 132.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=37 */
%   | else if ( function(A, F) )
%   | | then if ( function(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.43055803547884847;  // std dev = 3.454, 59.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=41 */
%   | | | else return -0.22867498000253195;  // std dev = 0.081, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.14355755309902057;  // std dev = 0.932, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.2542939835292615;  // std dev = 0.025, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return 0.0537211638153261;  // std dev = 1.995, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.48696045940417554;  // std dev = 0.149, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.13342337833140783;  // std dev = 0.069, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6328619346696642;  // std dev = 0.929, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return -0.21436236526184577;  // std dev = 0.475, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D), interaction(C, E) )
%   | then return 0.2334821459336534;  // std dev = 0.038, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.20384819573264681;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return -0.4166024781110084;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.4146815768822413;  // std dev = 0.397, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return -0.1255273527388645;  // std dev = 0.113, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( function(A, I) )
%   | | then if ( function(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.23335316498448103;  // std dev = 3.118, 60.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=41 */
%   | | | else return -0.16023756092458372;  // std dev = 0.068, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.18823212956640145;  // std dev = 0.044, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.18780728093246735;  // std dev = 0.023, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F), interaction(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27289420198187625;  // std dev = 1.323, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | else return -0.11018406648265489;  // std dev = 0.109, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.4360099359593503;  // std dev = 0.760, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return -0.17219261500660046;  // std dev = 0.583, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.16456663344428646;  // std dev = 0.025, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then if ( recursion_proteinclass(E, B), interaction(F, A) )
%   | | | then return 0.1749922939559575;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.3299115592122279;  // std dev = 0.714, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.14728289541101042;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G) )
%   | then return -0.018963857414099995;  // std dev = 1.988, 165.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=37 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.08130559758109768;  // std dev = 0.000452, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.04173482261176316;  // std dev = 2.237, 81.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=30 */
%   | | else if ( function(A, J) )
%   | | | then return -0.0249370247558454;  // std dev = 1.459, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(D, E) )
%   | | then return 0.15773355108780987;  // std dev = 0.103, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.18951342810543842;  // std dev = 0.054, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -5.954401591027788E-4;  // std dev = 1.905, 110.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=31 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0.0757337433869073;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.08738176390584673;  // std dev = 0.045, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( function(A, H) )
%   | | then if ( interaction(I, A) )
%   | | | then return -0.0030605180594947008;  // std dev = 2.794, 138.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=41 */
%   | | | else return 0.01435712780311671;  // std dev = 0.275, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.985231
   AUC PR    = 0.218348
   CLL	      = -0.179851
   Precision = 0.165472 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.283957


Total learning time: 1.812 seconds
Total inference time: 21.027 seconds
AUC ROC: 0.985231


Results scoring model
   AUC ROC   = 0.996414
   AUC PR    = 0.537496
   CLL	      = -0.146057
   Precision = 0.491979 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.659498


Total scoring time: 3.763 seconds
Parameter learned model CLL: -0.146057


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(A, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.0, 0, 7], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.926, 1, 6], 'false,false,true,true': [2.53e-07, 0, 36], 'false,false,true,false': [8.16e-08, 111, 0], 'false,false,false,true': [4.387, 67, 27], 'false,false,false,false': [2.268, 12, 9]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, E), interaction(E, G)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'function(A, J), interaction(K, A)'}, {'true,true': [5.16e-08, 0, 14], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.49e-08, 0, 3], 'false,false,true,true': [2.828, 56, 14], 'false,false,true,false': [3.412, 63, 22], 'false,false,false,true': [5.089, 92, 36], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(H, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true': [0.949, 1, 9], 'true,false': [0.0, 0, 5], 'false,true,true,true': [0.596, 1, 1], 'false,true,true,false': [0.03, 0, 36], 'false,true,false': [0.029, 104, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 4], 'false,false,false,true': [4.202, 51, 27], 'false,false,false,false': [2.372, 15, 9]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'false': 'interaction(A, E), interaction(E, A)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false,true,true': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(H, E), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.003, 0, 6], 'true,false': [0.102, 0, 8], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [5.27e-09, 10, 0], 'false,true,false,true': [0.097, 0, 3], 'false,true,false,false': [3.73e-09, 6, 0], 'false,false,true': [0.027, 0, 5], 'false,false,false,true': [3.103, 67, 33], 'false,false,false,false': [4.927, 75, 36]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,false': 'function(A, F)', 'false,false,true': 'function(G, F), recursion_proteinclass(G, B)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.038, 0, 9], 'false,true': [3.294, 95, 37], 'false,false,true,true': [3.454, 18, 41], 'false,false,true,false': [0.081, 49, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true,true': [0.932, 1, 7], 'true,false': [0.025, 0, 7], 'false,true,true': [1.995, 35, 14], 'false,true,false,true': [0.149, 0, 23], 'false,true,false,false': [0.069, 55, 0], 'false,false,true,true': [0.929, 0, 41], 'false,false,true,false': [0.475, 92, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D), interaction(C, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(G, A), interaction(H, G)', 'false,false': 'function(A, I)', 'false,false,true': 'function(J, I), recursion_proteinclass(J, B)'}, {'true,true': [0.038, 0, 10], 'true,false': [0.009, 0, 4], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.397, 0, 37], 'false,true,false': [0.113, 110, 0], 'false,false,true,true': [3.118, 19, 41], 'false,false,true,false': [0.068, 58, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F), interaction(F, A)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [0.044, 0, 12], 'true,false': [0.023, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.323, 2, 37], 'false,true,false': [0.109, 109, 0], 'false,false,true,true': [0.76, 0, 41], 'false,false,true,false': [0.583, 75, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)', 'true,false': 'interaction(E, C), interaction(A, E)', 'true,false,true': 'recursion_proteinclass(E, B), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'function(A, J)'}, {'true,true': [0.025, 0, 8], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.714, 1, 1], 'true,false,false': [0.007, 0, 4], 'false,true': [1.988, 128, 37], 'false,false,true,true': [0.000452, 0, 2], 'false,false,true,false': [2.237, 51, 30], 'false,false,false,true': [1.459, 20, 9], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(D, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, A), interaction(F, G)', 'false,false': 'function(A, H)', 'false,false,true': 'interaction(I, A)'}, {'true,true,true': [0.103, 0, 11], 'true,true,false': [0.054, 0, 2], 'true,false': [1.905, 79, 31], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.045, 0, 5], 'false,false,true,true': [2.794, 97, 41], 'false,false,true,false': [0.275, 2, 1], 'false,false,false': [0.0, 0, 0]}]]
[{'': [-2.5376526277146434e-16, 0.20588438523514177], 'false': [0.12244897959183662, 0.19928908571761597], 'false,false': [0.18492294877134655, 0.21504725897920748], 'false,false,false': [0.20473064735174404, 0.2448979591836735], 'false,false,true': [1.7763568394002505e-15, 6.00120553851436e-17], 'false,true': [nan, 0.12244897959183662], 'true': [-2.5376526277146434e-16, -2.5376526277146434e-16]}, {'': [1.9032394707859825e-16, 0.16712316243925363], 'false': [-7.401486830834377e-17, 0.1617234681098624], 'false,false': [0.12729614232677766, 0.20231247289177348], 'false,false,false': [0.20231247289177348, nan], 'false,false,true': [0.11422184199442813, 0.13694764100715975], 'true': [1.9032394707859825e-16, nan], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 7.401486830834377e-17]}, {'': [0.062222222222222, 0.17645369897040006], 'false': [0.1348051562768245, 0.22514235164409663], 'false,false': [-4.4408920985006264e-17, 0.2282336746583325], 'false,false,false': [0.226331360946745, 0.2343750000000003], 'false,true': [0.02399951242408162, 8.077576539672338e-06], 'true': [0.08999999999999986, -4.4408920985006264e-17], 'false,true,true': [0.17735193900621873, 2.5344221572866212e-05], 'false,false,true': [0.0, 0.0]}, {'': [0.0007651801488980846, 0.15211833569111757], 'false': [0.06353868913561733, 0.1593365382906694], 'false,false': [0.00014407513691505613, 0.16074808541222255], 'false,false,false': [0.09626802915171964, 0.21869491211880726], 'false,true': [0.03646524924894477, 0.0858035902007344], 'false,true,false': [0.0031206980970457008, 2.3129646346357427e-18], 'false,true,true': [0.0, 2.7755575615628915e-18], 'true': [1.4758893157607034e-06, 0.0013066206887228093]}, {'': [0.00013678613026649585, 0.14509093507646748], 'false': [0.08221403514753145, 0.2182662030204891], 'false,false': [0.2182662030204891, nan], 'false,false,true': [0.20225401822570846, 0.00013227365516330818], 'true': [-4.4408920985006264e-17, 0.0001576625700740649], 'true,true': [-4.4408920985006264e-17, nan]}, {'': [0.0609931387050202, 0.12190618714581136], 'false': [0.08069554457274851, 0.1612485747447758], 'false,false': [0.1612485747447758, nan], 'false,false,true': [0.02105944840547181, 0.002450858467594263], 'false,true': [0.0812018331853789, 0.08037065028770204], 'false,true,false': [0.0009675450768277781, 8.647697815477533e-05], 'true': [0.10856435077092752, 8.600878809601951e-05]}, {'': [0.00028671907962817586, 0.08570180276251377], 'false': [0.056966254547282075, 0.12116125721839228], 'false,false': [0.12116125721839228, nan], 'false,false,true': [0.16206206546014051, 8.041889477556754e-05], 'false,true': [0.021847536800477737, 0.00011555985197133633], 'false,true,true': [0.0, 0.004252927081584018], 'true': [0.00014220915141578417, 2.072889693363611e-05]}, {'': [0.00017697217123870717, 0.06391937434541572], 'false': [0.0403790318052662, 0.09243695051446803], 'false,false': [0.09243695051446803, nan], 'false,false,true': [0.01408494652887262, 0.004525206402503823], 'false,true': [0.04484801354848839, 0.00010970434411910881], 'false,true,true': [nan, 0.044848013548488413], 'true': [0.00016356037402583123, 0.0002572882433487314]}, {'': [0.061854442805068, 0.04087035019218372], 'true': [7.992402824210862e-05, 0.12050718948196783], 'true,false': [0.22664387812929765, 1.2534160564469515e-05], 'true,false,true': [0.0, 0.25498985021258636], 'false': [0.023961556001864913, 0.06461995599186289], 'false,false': [0.060354602226667685, 0.07343863268953833], 'false,false,false': [0.07343863268953833, nan], 'false,false,true': [1.0199108530384998e-07, 0.06180710556588761]}, {'': [0.03215452614716587, 0.053950235589986066], 'false': [0.0003630299012793957, 0.055913523446655344], 'false,false': [0.05591352344665534, nan], 'false,false,true': [0.05657549477654419, 0.02516592265857319], 'true': [0.001167118804501394, 0.033001045314625235], 'true,true': [0.0009562926613752929, 0.0014720805597094877], 'false,true': [0.0, 0.00041302315120033686]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), function(A, D).;true;true
0;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
0;false,false;interaction(A, G).;true;true
0;false,false,true;interaction(H, G), recursion_proteinclass(H, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(G, E), interaction(E, G).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
2;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false,true;interaction(I, A), interaction(H, I).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, C), interaction(D, A).;true;true
3;false;interaction(A, E), interaction(E, A).;true;true
3;false,true;interaction(F, A), interaction(F, E).;true;true
3;false,true,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,false;interaction(H, E), recursion_proteinclass(H, B).;true;true
3;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), interaction(D, A).;true;true
4;false;interaction(A, E).;true;true
4;false,false;function(G, F), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), interaction(A, D).;true;true
5;false;interaction(A, E).;true;true
5;false,true;interaction(F, E), interaction(A, F).;true;true
5;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
5;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;function(A, D), interaction(C, E).;true;true
6;false;interaction(A, F).;true;true
6;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
6;false,true,true;interaction(G, A), interaction(H, G).;true;true
6;false,false;function(J, I), recursion_proteinclass(J, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, A).;true;true
7;false;interaction(A, E).;true;true
7;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(E, C), interaction(A, E).;true;true
8;true,false,true;recursion_proteinclass(E, B), interaction(F, A).;true;true
8;false;interaction(A, G).;true;true
8;false,false;interaction(H, A), interaction(I, H).;true;true
8;false,false,true;recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
9;true;recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(D, E).;true;true
9;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
9;false,true;interaction(G, A), interaction(F, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.8311219080724844;  // std dev = 0.986, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | | else return -0.14185106490048763;  // std dev = 8.43e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.1123862232351056;  // std dev = 3.345, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | | | else return 0.2140811384893424;  // std dev = 3.678, 59.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=21 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.7194734122109543;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7194734122109543;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, E), interaction(E, G) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4694734122109544;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( phenotype(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7749112973465041;  // std dev = 0.216, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.1413396148718023;  // std dev = 0.150, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.07619963400830998;  // std dev = 4.672, 131.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=31 */
%   | | | else return 0.14869222258800044;  // std dev = 3.817, 84.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=27 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.6159463602843244;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6652160713788545;  // std dev = 0.377, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( phenotype(A, G), enzyme(A, H) )
%   | | | then return -0.11074136538908606;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.13903509379180246;  // std dev = 0.036, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(I, J) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5856563985153044;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.19326543725923184;  // std dev = 1.587, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.09293751889382845;  // std dev = 4.701, 117.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=32 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4350579285560309;  // std dev = 0.027, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.3843205991996018;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.10818887242877107;  // std dev = 0.034, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.4528186201747714;  // std dev = 0.129, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.11345030844152137;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.03688880511525719;  // std dev = 1.938, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return 0.10028889201728239;  // std dev = 5.419, 200.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=63 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.31934953282927486;  // std dev = 0.002, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( phenotype(E, F) )
%   | | | then return -0.10135005979216134;  // std dev = 0.030, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.02219799430161286;  // std dev = 0.707, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( location(A, G) )
%   | | | then return 0.03405966428594663;  // std dev = 3.043, 117.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=32 */
%   | | | else return 0.2964407193642065;  // std dev = 0.532, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( function(H, I), recursion_proteinclass(H, B) )
%   | | then if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.32018772388573513;  // std dev = 2.961, 39.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
%   | | | else return 0.2850931830147642;  // std dev = 2.804, 35.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.1874596253790074;  // std dev = 0.049, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.21516982828585873;  // std dev = 0.049, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.25424386289944484;  // std dev = 0.002, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return -0.051544243567119986;  // std dev = 0.597, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.07285069420827861;  // std dev = 1.739, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.46642734157190835;  // std dev = 0.347, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.1296747961377747;  // std dev = 0.188, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | then if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.40351006254973654;  // std dev = 1.573, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return 0.30417280542131503;  // std dev = 3.306, 49.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=30 */
%   | | else if ( phenotype(A, M), enzyme(A, N) )
%   | | | then return -0.14721248503376433;  // std dev = 0.068, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.1886232761258165;  // std dev = 0.233, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D), interaction(C, E) )
%   | then if ( complex(A, F) )
%   | | then return 0.2094133723195966;  // std dev = 0.001, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.12319566114978771;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.20796338058598024;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.36807341295001383;  // std dev = 0.960, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | else return -0.12460004173422758;  // std dev = 0.022, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else if ( function(J, K), recursion_proteinclass(J, B) )
%   | | then if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.17880708658451577;  // std dev = 2.970, 40.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   | | | else return 0.32755746003291425;  // std dev = 2.183, 27.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | | else return -0.1447031429511442;  // std dev = 0.012, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.19001058120199726;  // std dev = 0.024, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.005369603061194339;  // std dev = 0.813, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.17748083730087627;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.30878505758582925;  // std dev = 0.073, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return -0.10878876450863073;  // std dev = 0.021, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4305913999060111;  // std dev = 1.028, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.2097658580801925;  // std dev = 0.759, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.048173991709396964;  // std dev = 2.518, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | | else return 0.11997995299374936;  // std dev = 2.108, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.16536800218518619;  // std dev = 0.018, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then if ( interaction(E, E), phenotype(A, G) )
%   | | | then return -0.06661780634169048;  // std dev = 0.825, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | | else return -0.009441616882947687;  // std dev = 1.450, 81.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=21 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.06035811048351347;  // std dev = 0.654, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.009816231026514362;  // std dev = 0.690, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return -0.04172626280461972;  // std dev = 0.477, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.017352780546062575;  // std dev = 3.625, 101.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=30 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.2102274809509339;  // std dev = 1.299, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return -0.06666925421114449;  // std dev = 1.100, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.13190374666449228;  // std dev = 0.068, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return -0.025248100189588753;  // std dev = 0.152, 100.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=21 */
%   | | else if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.014231562238869724;  // std dev = 0.681, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.09280378388649098;  // std dev = 0.547, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.14364112573128984;  // std dev = 0.026, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.42483629674853257;  // std dev = 0.699, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.16729986018468676;  // std dev = 0.756, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.02361581773252287;  // std dev = 2.041, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return 0.07826158769007949;  // std dev = 2.209, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */


Results
   AUC ROC   = 0.98194
   AUC PR    = 0.240499
   CLL	      = -0.193408
   Precision = 0.208081 at threshold = 0.5
   Recall    = 0.743682
   F1        = 0.325178


Total learning time: 10.94 seconds
Total inference time: 211.03300000000002 seconds
AUC ROC: 0.98194


Results scoring model
   AUC ROC   = 0.989415
   AUC PR    = 0.522876
   CLL	      = -0.178407
   Precision = 0.458599 at threshold = 0.5
   Recall    = 0.782609
   F1        = 0.578313


Total scoring time: 16.703 seconds
Refined model CLL: -0.178407


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.985231
   AUC PR    = 0.218348
   CLL	      = -0.179851
   Precision = 0.165472 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.283957


Total learning time: 33.218 seconds
Total inference time: 21.027 seconds
AUC ROC: 0.985231
Total revision time: 33.218
Best scored revision CLL: -0.146057


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:10:05
{'AUC ROC': 0.985231, 'AUC PR': 0.218348, 'CLL': -0.179851, 'Precision': [0.165472, 0.5], 'Recall': 1.0, 'F1': 0.283957, 'Learning time': 33.218, 'Inference time': 21.027, 'parameter': {'AUC ROC': 0.985231, 'AUC PR': 0.218348, 'CLL': -0.179851, 'Precision': [0.165472, 0.5], 'Recall': 1.0, 'F1': 0.283957, 'Learning time': 1.812, 'Inference time': 21.027}}


Starting fold 4

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos	 examples: 283
Target test neg examples: 40479

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;true;false
0;false,true,true;follows(F, G), follows(G, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(H, I), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;false;true
1;false,true,false;follows(E, G), follows(G, E).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J), follows(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(D, C), recursion_accounttype(D, B).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), follows(A, D).;false;false
3;false;follows(E, A), follows(A, E).;true;true
3;false,true;follows(A, F), follows(E, F).;true;true
3;false,true,true;follows(E, G), recursion_accounttype(G, B).;false;false
3;false,true,false;follows(E, H), recursion_accounttype(H, B).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
3;false,false,false;follows(J, A).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(A, D).;true;false
4;true,true;recursion_accounttype(D, B).;false;true
4;true,true,false;tweets(C, E), follows(D, A).;false;false
4;false;follows(F, A).;false;true
4;false,false;tweets(A, G).;true;true
4;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
4;false,false,false;follows(A, I), recursion_accounttype(I, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), follows(D, A).;false;false
5;false;follows(E, A).;true;true
5;false,true;follows(E, F), follows(F, A).;false;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;tweets(A, D), follows(E, C).;false;false
6;false;follows(F, A).;true;true
6;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;false,false;tweets(A, I).;true;true
6;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
6;false,false,false;follows(A, K), follows(K, L).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G).;true;true
7;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
7;false,false,false;tweets(A, I).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(C, E), follows(E, A).;true;false
8;true,false,true;recursion_accounttype(E, B), follows(A, F).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H), follows(H, I).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
9;true;recursion_accounttype(D, B).;true;false
9;true,true;follows(A, E), follows(E, D).;false;false
9;false;follows(A, F), recursion_accounttype(F, B).;true;true
9;false,true;follows(A, G), follows(G, F).;false;false
9;false,false;tweets(A, H).;true;true
9;false,false,true;follows(A, I).;false;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995116;  // std dev = 2.23e-07, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return -0.14185106490048763;  // std dev = 8.69e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.13592671287728994;  // std dev = 3.801, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
%   | | | else return 0.20189893509951234;  // std dev = 2.687, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.6709416005653102;  // std dev = 0.982, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, E), interaction(E, G) )
%   | | | then return 0.7733921696315487;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.7733921696315487;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.04850907780029733;  // std dev = 2.817, 68.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=14 */
%   | | | else return 0.14664761509953378;  // std dev = 3.032, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   | | else if ( function(A, J), interaction(K, A) )
%   | | | then return 0.22523599897747032;  // std dev = 4.357, 80.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=31 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.5727250005118767;  // std dev = 0.034, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.5943603485772917;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.5928761360959484;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6686380367563105;  // std dev = 0.975, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | else return -0.13542901290176146;  // std dev = 0.059, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0.11163098577078026;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.6116309857707802;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.10678199695674104;  // std dev = 3.746, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   | | | else return 0.11212836798441307;  // std dev = 2.746, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.4232589265462652;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.4806857315994528;  // std dev = 0.115, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.17010399520602978;  // std dev = 0.784, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.12941888151564626;  // std dev = 0.321, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.29376999427553074;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.11830819218326075;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.19845218039045978;  // std dev = 1.227, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.052290012943587864;  // std dev = 3.099, 109.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=29 */
%   | | | else return 0.10692418927466;  // std dev = 4.590, 97.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=31 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.3262765319263172;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( function(C, E), interaction(A, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.33336037295486454;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.27587369045603405;  // std dev = 0.938, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, F) )
%   | then return 0.047762229251187636;  // std dev = 3.296, 130.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=36 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4005386722265092;  // std dev = 3.373, 52.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=34 */
%   | | | else return -0.2318192336615193;  // std dev = 0.052, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.2805202135637346;  // std dev = 0.117, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.15733399310315357;  // std dev = 0.903, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return 0.017099948813043747;  // std dev = 2.186, 69.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=15 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.48173883941423046;  // std dev = 0.256, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.1355580814182971;  // std dev = 0.040, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5343521454171478;  // std dev = 2.076, 39.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=34 */
%   | | | else return -0.21888310739914418;  // std dev = 0.430, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D), interaction(C, E) )
%   | then return 0.23631736789803567;  // std dev = 0.138, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.29227598087046514;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.21027667838866226;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4070602267551684;  // std dev = 1.008, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | else return -0.12267086805060078;  // std dev = 0.064, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( function(A, I) )
%   | | then if ( function(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.27098260363077065;  // std dev = 2.784, 50.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=34 */
%   | | | else return -0.16002809914409988;  // std dev = 0.030, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.07176834705819322;  // std dev = 1.248, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else return 0.23292929296427287;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F), interaction(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.33404382412786243;  // std dev = 0.456, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return -0.11337473125628875;  // std dev = 0.354, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.36349041431164447;  // std dev = 2.018, 38.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | | | else return -0.18431320401900678;  // std dev = 0.651, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.1648242518483143;  // std dev = 0.020, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then if ( recursion_proteinclass(E, B), interaction(F, A) )
%   | | | then return 0.22207132571008548;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.18952081100250145;  // std dev = 0.008, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.02676061192681465;  // std dev = 0.908, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, G) )
%   | then return 8.850179743233655E-4;  // std dev = 1.905, 133.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=36 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.15348730064871297;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.03988580417863684;  // std dev = 2.121, 61.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=22 */
%   | | else if ( function(A, J) )
%   | | | then return -0.016400192889300974;  // std dev = 1.762, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(D, E) )
%   | | then return 0.17096031157773653;  // std dev = 0.176, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.16402361184146913;  // std dev = 0.333, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.006565247612867747;  // std dev = 1.740, 113.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=28 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0.13458715688170508;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.0955745614820458;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( function(A, H) )
%   | | then if ( interaction(I, A) )
%   | | | then return 0.021247779428307623;  // std dev = 2.663, 103.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=33 */
%   | | | else return 0.02471795766185761;  // std dev = 0.454, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.986737
   AUC PR    = 0.282699
   CLL	      = -0.173783
   Precision = 0.1806 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.305946


Total learning time: 1.783 seconds
Total inference time: 23.949 seconds
AUC ROC: 0.986737


Results scoring model
   AUC ROC   = 0.990603
   AUC PR    = 0.31702
   CLL	      = -0.156797
   Precision = 0.296552 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.457447


Total scoring time: 3.806 seconds
Parameter learned model CLL: -0.156797


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(A, F)', 'false,true,true': 'interaction(G, F), interaction(A, G)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.943, 1, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false': [1.195, 2, 5], 'false,false,true,true': [2.23e-07, 0, 33], 'false,false,true,false': [8.69e-08, 95, 0], 'false,false,false,true': [3.801, 52, 20], 'false,false,false,false': [2.687, 21, 11]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, E), interaction(E, G)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'function(A, J), interaction(K, A)'}, {'true,true': [0.982, 1, 16], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 4], 'false,false,true,true': [2.817, 54, 14], 'false,false,true,false': [3.032, 40, 19], 'false,false,false,true': [4.357, 49, 31], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(H, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true': [0.034, 0, 10], 'true,false': [0.0, 0, 6], 'false,true,true,true': [0.046, 0, 3], 'false,true,true,false': [0.975, 1, 33], 'false,true,false': [0.059, 109, 0], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [0.0, 0, 2], 'false,false,false,true': [3.746, 47, 20], 'false,false,false,false': [2.746, 24, 11]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'false': 'interaction(A, E), interaction(E, A)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false,true,true': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(H, E), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.016, 0, 9], 'true,false': [0.115, 0, 6], 'false,true,true,true': [0.784, 1, 2], 'false,true,true,false': [0.321, 28, 0], 'false,true,false,true': [0.852, 1, 3], 'false,true,false,false': [0.009, 5, 0], 'false,false,true': [1.227, 2, 6], 'false,false,false,true': [3.099, 80, 29], 'false,false,false,false': [4.59, 66, 31]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'true,true,false': 'function(C, E), interaction(A, D)', 'false': 'interaction(A, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true,true': [1.49e-08, 0, 8], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.938, 1, 7], 'false,true': [3.296, 94, 36], 'false,false,true,true': [3.373, 18, 34], 'false,false,true,false': [0.052, 72, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true,true': [0.117, 0, 11], 'true,false': [0.903, 1, 5], 'false,true,true': [2.186, 54, 15], 'false,true,false,true': [0.256, 0, 21], 'false,true,false,false': [0.04, 37, 0], 'false,false,true,true': [2.076, 5, 34], 'false,false,true,false': [0.43, 79, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D), interaction(C, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(G, A), interaction(H, G)', 'false,false': 'function(A, I)', 'false,false,true': 'function(J, I), recursion_proteinclass(J, B)'}, {'true,true': [0.138, 0, 13], 'true,false': [0.021, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [1.008, 1, 35], 'false,true,false': [0.064, 79, 0], 'false,false,true,true': [2.784, 16, 34], 'false,false,true,false': [0.03, 53, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F), interaction(F, A)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [1.248, 2, 13], 'true,false': [0.016, 0, 3], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.456, 0, 36], 'false,true,false': [0.354, 95, 0], 'false,false,true,true': [2.018, 4, 34], 'false,false,true,false': [0.651, 70, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)', 'true,false': 'interaction(E, C), interaction(A, E)', 'true,false,true': 'recursion_proteinclass(E, B), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'function(A, J)'}, {'true,true': [0.02, 0, 9], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.008, 0, 2], 'true,false,false': [0.908, 1, 4], 'false,true': [1.905, 97, 36], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [2.121, 39, 22], 'false,false,false,true': [1.762, 28, 11], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(D, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, A), interaction(F, G)', 'false,false': 'function(A, H)', 'false,false,true': 'interaction(I, A)'}, {'true,true,true': [0.176, 0, 14], 'true,true,false': [0.333, 1, 5], 'true,false': [1.74, 85, 28], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.0, 0, 2], 'false,false,true,true': [2.663, 70, 33], 'false,false,true,false': [0.454, 5, 3], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.055363321799307655, 0.2065972222222236], 'false': [0.1874999999999999, 0.19976218787158198], 'false,false': [0.19134521484375125, 0.20922707100591847], 'false,false,false': [0.20061728395061681, 0.2255859374999995], 'false,false,true': [1.5072118637335459e-15, 7.946859544685331e-17], 'false,true': [0.0, 0.20408163265306106], 'true': [-2.220446049250313e-16, 0.09876543209876527], 'false,true,true': [nan, 0.0]}, {'': [0.05669327151113368, 0.1854518494091253], 'false': [0.0004037822780250296, 0.18000050389856634], 'false,false': [0.13729778421892172, 0.23724062993912973], 'false,false,false': [0.23724062993912973, nan], 'false,false,true': [0.11671673949473897, 0.1558614620722584], 'true': [0.05669327151113368, nan], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 0.0]}, {'': [0.0001828469866842486, 0.1638558908377113], 'false': [0.12712188992870377, 0.2129223343508853], 'false,false': [0.18749999999999997, 0.21150357876084705], 'false,false,false': [0.2094007574069948, 0.2155102040816327], 'false,false,true': [0.24999999999999997, 0.0], 'false,true': [0.026190030775643802, 3.1987543331857984e-05], 'false,true,true': [0.0007034887726510656, 0.0279734487978871], 'true': [0.00011702207147799016, 0.0]}, {'': [0.0016903003111861695, 0.13943341138492588], 'false': [0.05638609313325824, 0.1516102195001579], 'false,false': [0.18817465537668582, 0.1496480014733533], 'false,false,false': [0.08811688109639126, 0.21721183396727614], 'false,true': [0.031007603660106433, 0.12263228705640856], 'false,true,false': [0.1815627228949619, 1.7524272158553344e-05], 'false,true,true': [0.20503383280834186, 0.0036799407339835493], 'true': [2.7522081253314764e-05, 0.0022057648929153517]}, {'': [0.052382892318697055, 0.1351722297760424], 'false': [0.08359037085315123, 0.1891438690050485], 'false,false': [0.1891438690050485, nan], 'false,false,true': [0.21879618640050522, 3.815241559276508e-05], 'true': [4.95612876225435e-06, 0.10992079494813323], 'true,true': [2.7755575615628914e-17, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.05227795496109843, 0.12015992557252625], 'false': [0.0795944312979381, 0.16362456082791052], 'false,false': [0.16362456082791052, nan], 'false,false,true': [0.11048781224655649, 0.0023382325381471757], 'false,true': [0.06925419436428375, 0.08916880267822296], 'false,true,false': [0.0031116890192452373, 4.366283478080741e-05], 'true': [0.001240335888783947, 0.13602790596475386]}, {'': [0.0016857160412470165, 0.093691134804578], 'false': [0.06886421647503681, 0.12164033124791183], 'false,false': [0.12164033124791183, nan], 'false,false,true': [0.15497010124342364, 1.74306930340721e-05], 'false,true': [0.028496915284453937, 5.21615804541446e-05], 'false,true,true': [0.0, 0.02824190802382863], 'true': [0.0014548973421400107, 0.00014169523183316102]}, {'': [0.09008923163051867, 0.0729951072189637], 'true': [0.10376190720312296, 8.181169637864565e-05], 'false': [0.04243306915510885, 0.11006500576072044], 'false,false': [0.11006500576072044, nan], 'false,false,true': [0.10715442347679141, 0.0060582346458891295], 'false,true': [0.005764212169843451, 0.001316413926626333], 'false,true,true': [nan, 0.005764212169843525]}, {'': [0.05316648806921068, 0.04847806152276283], 'true': [4.430521051838116e-05, 0.1101108186498587], 'true,false': [0.00025911530335514615, 0.1647191303594659], 'false': [0.027277910020776147, 0.0762028440516211], 'false,false': [0.07275779460454741, 0.07960612861475062], 'false,false,false': [0.07960612861475062, nan], 'false,false,true': [0.0, 0.07374239533576563], 'true,false,true': [0.0, 3.549428578984021e-05]}, {'': [0.02775899306034808, 0.06419633034267107], 'false': [0.00033821835551500295, 0.06572267054437723], 'false,false': [0.06572267054437723, nan], 'false,false,true': [0.06882474315204228, 0.02577231148548087], 'true': [0.007088435739945098, 0.02678880857499043], 'true,true': [0.0022089268947611657, 0.018440273916445784], 'false,true': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), function(A, D).;true;true
0;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(F, A), interaction(A, F).;true;true
0;false,false;interaction(A, H).;true;true
0;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(G, E), interaction(E, G).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
2;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false,true;interaction(I, A), interaction(H, I).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, C), interaction(D, A).;true;true
3;false;interaction(A, E), interaction(E, A).;true;true
3;false,true;interaction(F, A), interaction(F, E).;true;true
3;false,true,false;interaction(H, E), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), interaction(D, A).;true;true
4;true,true;recursion_proteinclass(D, B).;true;true
4;false;interaction(A, F).;true;true
4;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), interaction(A, D).;true;true
5;false;interaction(A, E).;true;true
5;false,true;interaction(F, E), interaction(A, F).;true;true
5;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
5;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;function(A, D), interaction(C, E).;true;true
6;false;interaction(A, F).;true;true
6;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
6;false,true,true;interaction(G, A), interaction(H, G).;true;true
6;false,false;function(J, I), recursion_proteinclass(J, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, A).;true;true
7;false;interaction(A, E).;true;true
7;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(E, C), interaction(A, E).;true;true
8;true,false,true;recursion_proteinclass(E, B), interaction(F, A).;true;true
8;false;interaction(A, G).;true;true
8;false,false;interaction(H, A), interaction(I, H).;true;true
8;false,false,true;recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
9;true;recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(D, E).;true;true
9;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
9;false,true;interaction(G, A), interaction(F, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995121;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A), interaction(A, H) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8010060779566543;  // std dev = 1.373, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | | else return -0.14185106490048766;  // std dev = 7.88e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.2867203636709409;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.13756069980539468;  // std dev = 3.700, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then return 0.4068585879990681;  // std dev = 0.843, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, F), interaction(F, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7350122940520397;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.05483017499783307;  // std dev = 1.522, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return -0.1254446385283914;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.060068648891504185;  // std dev = 2.523, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | | else return 0.17190983173322275;  // std dev = 5.396, 143.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=49 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.5625104390414544;  // std dev = 0.023, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.5916724645023437;  // std dev = 0.142, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7063864208765214;  // std dev = 0.067, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.138924636348827;  // std dev = 0.034, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.055366436746284484;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.08539804188235114;  // std dev = 2.913, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0.1494910629320974;  // std dev = 3.559, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4483768959343065;  // std dev = 0.055, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( phenotype(A, F), enzyme(A, G) )
%   | | | then return 0.08470551235082706;  // std dev = 0.493, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.09321016237025082;  // std dev = 0.743, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.5591658337590543;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.11650560890788854;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.10026692856841417;  // std dev = 0.751, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4103644970529601;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, L), location(A, M) )
%   | | | then return 0.025057032102691393;  // std dev = 3.119, 115.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=27 */
%   | | | else return 0.11261143934016861;  // std dev = 4.630, 101.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=33 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.3364241752135299;  // std dev = 0.048, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.35646664817857776;  // std dev = 0.054, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( enzyme(F, G) )
%   | | | then return -0.045336931492707906;  // std dev = 1.161, 36.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | | | else return 0.025054789774362356;  // std dev = 1.485, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | else if ( interaction(H, A), location(A, I) )
%   | | | then return 0.05040444314915795;  // std dev = 2.230, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | | else return 0.19759955279612254;  // std dev = 1.312, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else if ( function(J, K), recursion_proteinclass(J, B) )
%   | | then if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.29088830380295416;  // std dev = 3.186, 41.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=23 */
%   | | | else return 0.683856857191143;  // std dev = 0.967, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return -0.23164735526005864;  // std dev = 0.007, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.2506588269575387;  // std dev = 0.018, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.3207229373466628;  // std dev = 0.115, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.07927259052446545;  // std dev = 0.508, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | | else return 0.03752262791577793;  // std dev = 2.089, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.4768878139796006;  // std dev = 0.311, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.1378819256416693;  // std dev = 0.091, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.2001739509083693;  // std dev = 2.015, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.38057048451357456;  // std dev = 2.688, 34.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   | | else return -0.20702096408646783;  // std dev = 0.039, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D), interaction(C, E) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then return 0.22891526219092312;  // std dev = 0.040, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.3019392782921273;  // std dev = 1.011, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.20916011941708443;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.21271150645985792;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.37500301741032604;  // std dev = 1.408, 37.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   | | else return -0.12351243736716769;  // std dev = 0.041, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( function(K, L), recursion_proteinclass(K, B) )
%   | | then if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.2680205120916226;  // std dev = 2.719, 35.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=23 */
%   | | | else return 0.010472095936926452;  // std dev = 2.399, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | else return -0.16333952667085896;  // std dev = 0.006, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.19676274420746126;  // std dev = 0.039, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.41025376213633746;  // std dev = 0.207, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.30352391064738155;  // std dev = 0.325, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.08413654512015555;  // std dev = 0.040, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.12036888490183939;  // std dev = 0.363, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( phenotype(A, H) )
%   | | then if ( interaction(I, A), phenotype(I, J) )
%   | | | then return -0.04173501470621558;  // std dev = 3.035, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | | else return 0.17544676606055912;  // std dev = 0.936, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.05108894376243927;  // std dev = 1.565, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.22054998818856025;  // std dev = 1.290, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.15532360892964853;  // std dev = 0.027, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then if ( recursion_proteinclass(E, B), interaction(F, A) )
%   | | | then return 0.21960236376459785;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11971762779947133;  // std dev = 0.740, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.013719127605106496;  // std dev = 0.850, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, G) )
%   | then return -0.014211522397182574;  // std dev = 0.176, 147.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=36 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.1304305828433637;  // std dev = 0.407, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.017462947797619977;  // std dev = 3.142, 66.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */
%   | | else if ( complex(A, J), enzyme(A, K) )
%   | | | then return -0.1325166054659913;  // std dev = 0.818, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.11308987382026903;  // std dev = 1.778, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.17011290348059724;  // std dev = 0.086, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else if ( interaction(A, A) )
%   | | then return -0.09363725716840153;  // std dev = 0.096, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.006554265814905356;  // std dev = 0.184, 105.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=28 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.1752770881585658;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.10816936974189817;  // std dev = 0.826, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.527932270451867;  // std dev = 0.334, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.15862238870612197;  // std dev = 0.287, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.06799193798938656;  // std dev = 2.893, 73.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=16 */
%   | | | else return 0.02317355863936027;  // std dev = 1.892, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */


Results
   AUC ROC   = 0.963284
   AUC PR    = 0.20877
   CLL	      = -0.219881
   Precision = 0.126384 at threshold = 0.5
   Recall    = 0.685512
   F1        = 0.213421


Total learning time: 9.307 seconds
Total inference time: 215.549 seconds
AUC ROC: 0.963284


Results scoring model
   AUC ROC   = 0.977075
   AUC PR    = 0.292345
   CLL	      = -0.199499
   Precision = 0.15942 at threshold = 0.5
   Recall    = 0.767442
   F1        = 0.264


Total scoring time: 14.873 seconds
Refined model CLL: -0.199499


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.986737
   AUC PR    = 0.282699
   CLL	      = -0.173783
   Precision = 0.1806 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.305946


Total learning time: 29.769 seconds
Total inference time: 23.949 seconds
AUC ROC: 0.986737
Total revision time: 29.769
Best scored revision CLL: -0.156797


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:14:35
{'AUC ROC': 0.986737, 'AUC PR': 0.282699, 'CLL': -0.173783, 'Precision': [0.1806, 0.5], 'Recall': 1.0, 'F1': 0.305946, 'Learning time': 29.769, 'Inference time': 23.949, 'parameter': {'AUC ROC': 0.986737, 'AUC PR': 0.282699, 'CLL': -0.173783, 'Precision': [0.1806, 0.5], 'Recall': 1.0, 'F1': 0.305946, 'Learning time': 1.783, 'Inference time': 23.949}}


Starting fold 1

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos	 examples: 282
Target test neg examples: 39912

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;true;false
0;false,true,true;follows(F, G), follows(G, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(H, I), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;false;true
1;false,true,false;follows(E, G), follows(G, E).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J), follows(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(D, C), recursion_accounttype(D, B).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), follows(A, D).;false;false
3;false;follows(E, A), follows(A, E).;true;true
3;false,true;follows(A, F), follows(E, F).;true;true
3;false,true,true;follows(E, G), recursion_accounttype(G, B).;false;false
3;false,true,false;follows(E, H), recursion_accounttype(H, B).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
3;false,false,false;follows(J, A).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(A, D).;true;false
4;true,true;recursion_accounttype(D, B).;false;true
4;true,true,false;tweets(C, E), follows(D, A).;false;false
4;false;follows(F, A).;false;true
4;false,false;tweets(A, G).;true;true
4;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
4;false,false,false;follows(A, I), recursion_accounttype(I, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), follows(D, A).;false;false
5;false;follows(E, A).;true;true
5;false,true;follows(E, F), follows(F, A).;false;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;tweets(A, D), follows(E, C).;false;false
6;false;follows(F, A).;true;true
6;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;false,false;tweets(A, I).;true;true
6;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
6;false,false,false;follows(A, K), follows(K, L).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G).;true;true
7;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
7;false,false,false;tweets(A, I).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(C, E), follows(E, A).;true;false
8;true,false,true;recursion_accounttype(E, B), follows(A, F).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H), follows(H, I).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
9;true;recursion_accounttype(D, B).;true;false
9;true,true;follows(A, E), follows(E, D).;false;false
9;false;follows(A, F), recursion_accounttype(F, B).;true;true
9;false,true;follows(A, G), follows(G, F).;false;false
9;false,false;tweets(A, H).;true;true
9;false,false,true;follows(A, I).;false;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8287371703936293;  // std dev = 0.985, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | | else return -0.14185106490048763;  // std dev = 8.30e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.13845196540254118;  // std dev = 5.160, 132.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=37 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, E), interaction(E, G) )
%   | | | then return -0.28052658778904555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.07617062798634405;  // std dev = 3.073, 71.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=17 */
%   | | | else return 0.10528506275290754;  // std dev = 2.905, 59.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | | else if ( function(A, J), interaction(K, A) )
%   | | | then return 0.16814197823767232;  // std dev = 5.180, 121.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3053664367462845;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6500396360459364;  // std dev = 1.369, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | else return -0.13540856691236153;  // std dev = 0.015, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.11258895271205936;  // std dev = 5.104, 125.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=37 */
%   | | | else return 0.11471035452202012;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.4243748196064295;  // std dev = 0.058, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.47081725532671886;  // std dev = 1.036, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.11908863101242859;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.5609583964299307;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11908863101242853;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.4586809968470278;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.07603232189390625;  // std dev = 2.611, 72.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=21 */
%   | | | else return 0.0936624931119338;  // std dev = 5.307, 134.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=40 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.31921892986048167;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1864488918483948;  // std dev = 0.759, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, E) )
%   | then return 0.037140857487783584;  // std dev = 3.268, 119.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=33 */
%   | else if ( function(A, F) )
%   | | then if ( function(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.4207400504218257;  // std dev = 3.775, 65.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=43 */
%   | | | else return -0.2189126313679025;  // std dev = 0.077, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.2565422793945917;  // std dev = 0.018, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.07750215606030234;  // std dev = 0.868, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return 0.019928001007609587;  // std dev = 2.157, 69.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=17 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5256686520588707;  // std dev = 5.96e-08, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.13484282092233982;  // std dev = 2.58e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6276993922331434;  // std dev = 1.478, 45.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=43 */
%   | | | else return -0.19641733306607542;  // std dev = 0.347, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D), interaction(C, E) )
%   | then return 0.21073342140273504;  // std dev = 0.016, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.31128123296326715;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4275188272372352;  // std dev = 0.259, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.1187365130165581;  // std dev = 0.059, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( function(A, I) )
%   | | then if ( function(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3389282549863189;  // std dev = 2.651, 56.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=43 */
%   | | | else return -0.1546696162073318;  // std dev = 0.031, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.19221385498397564;  // std dev = 0.092, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.24658637132466865;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F), interaction(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3030254427710921;  // std dev = 0.879, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | else return -0.1062404833711547;  // std dev = 0.057, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3808745044090016;  // std dev = 1.768, 46.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=43 */
%   | | | else return -0.17969185581585922;  // std dev = 0.685, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.15839034924079778;  // std dev = 0.064, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then if ( recursion_proteinclass(E, B), interaction(F, A) )
%   | | | then return 0.16279077411497656;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20815437313711344;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G) )
%   | then return -0.009560780837351433;  // std dev = 1.956, 129.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=33 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.06030590712653308;  // std dev = 0.799, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.0037100498498259062;  // std dev = 2.795, 120.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=37 */
%   | | else if ( function(A, J) )
%   | | | then return 0.012189205843219343;  // std dev = 0.720, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(D, E) )
%   | | then return 0.169216423742404;  // std dev = 0.968, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else return -0.20314493840609302;  // std dev = 0.937, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return -0.05310007911439003;  // std dev = 1.221, 63.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=8 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0.07005064072565859;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.11373281652157323;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( function(A, H) )
%   | | then if ( interaction(I, A) )
%   | | | then return 0.00535344177031947;  // std dev = 3.259, 154.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=51 */
%   | | | else return 0.03802922469650973;  // std dev = 0.417, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.989378
   AUC PR    = 0.310306
   CLL	      = -0.166772
   Precision = 0.209821 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.346863


Total learning time: 2.369 seconds
Total inference time: 18.199 seconds
AUC ROC: 0.989378


Results scoring model
   AUC ROC   = 0.988802
   AUC PR    = 0.304585
   CLL	      = -0.16692
   Precision = 0.194631 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.325843


Total scoring time: 6.687 seconds
Parameter learned model CLL: -0.16692


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(A, F)', 'false,true,true': 'interaction(G, F), interaction(A, G)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.0, 0, 4], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [2.11e-08, 0, 3], 'false,false,true,true': [0.985, 1, 33], 'false,false,true,false': [8.3e-08, 89, 0], 'false,false,false,true': [5.16, 95, 37], 'false,false,false,false': [1.225, 3, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, E), interaction(E, G)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'function(A, J), interaction(K, A)'}, {'true,true': [5.16e-08, 0, 11], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [3.073, 54, 17], 'false,false,true,false': [2.905, 43, 16], 'false,false,false,true': [5.18, 81, 40], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(H, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.866, 1, 3], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.369, 2, 33], 'false,true,false': [0.015, 80, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 2], 'false,false,false,true': [5.104, 88, 37], 'false,false,false,false': [1.414, 6, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'false': 'interaction(A, E), interaction(E, A)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false,true,true': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(H, E), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.058, 0, 9], 'true,false': [0.0, 0, 2], 'false,true,true,true': [1.036, 1, 11], 'false,true,true,false': [0.0, 32, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [3.73e-09, 5, 0], 'false,false,true': [0.05, 0, 3], 'false,false,false,true': [2.611, 51, 21], 'false,false,false,false': [5.307, 94, 40]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,false': 'function(A, F)', 'false,false,true': 'function(G, F), recursion_proteinclass(G, B)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.759, 1, 4], 'false,true': [3.268, 86, 33], 'false,false,true,true': [3.775, 22, 43], 'false,false,true,false': [0.077, 62, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true,true': [0.018, 0, 8], 'true,false': [0.868, 1, 3], 'false,true,true': [2.157, 52, 17], 'false,true,false,true': [5.96e-08, 0, 16], 'false,true,false,false': [2.58e-08, 38, 0], 'false,false,true,true': [1.478, 2, 43], 'false,false,true,false': [0.347, 89, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D), interaction(C, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(G, A), interaction(H, G)', 'false,false': 'function(A, I)', 'false,false,true': 'function(J, I), recursion_proteinclass(J, B)'}, {'true,true': [0.016, 0, 8], 'true,false': [0.006, 0, 3], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.259, 0, 33], 'false,true,false': [0.059, 85, 0], 'false,false,true,true': [2.651, 13, 43], 'false,false,true,false': [0.031, 59, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F), interaction(F, A)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [0.092, 0, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.879, 1, 33], 'false,true,false': [0.057, 96, 0], 'false,false,true,true': [1.768, 3, 43], 'false,false,true,false': [0.685, 71, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)', 'true,false': 'interaction(E, C), interaction(A, E)', 'true,false,true': 'recursion_proteinclass(E, B), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'function(A, J)'}, {'true,true': [0.064, 0, 8], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.006, 0, 2], 'false,true': [1.956, 96, 33], 'false,false,true,true': [0.799, 1, 3], 'false,false,true,false': [2.795, 83, 37], 'false,false,false,true': [0.72, 5, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(D, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, A), interaction(F, G)', 'false,false': 'function(A, H)', 'false,false,true': 'interaction(I, A)'}, {'true,true,true': [0.968, 1, 19], 'true,true,false': [0.937, 4, 2], 'true,false': [1.221, 55, 8], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.097, 0, 3], 'false,false,true,true': [3.259, 103, 51], 'false,false,true,false': [0.417, 4, 3], 'false,false,false': [0.0, 0, 0]}]]
[{'': [-1.6148698540002277e-16, 0.2045425418298339], 'false': [0.18750000000000006, 0.20146504014914668], 'false,false': [0.1963117192147544, 0.20583910943079312], 'false,false,false': [0.20173324150597016, 0.24999999999999992], 'false,false,true': [0.028546712802769686, 7.734137924355023e-17], 'false,true': [0.0, 1.4802973661668753e-16], 'false,true,true': [0.0, nan], 'true': [-2.5376526277146434e-16, 0.0]}, {'': [2.4223047810003414e-16, 0.18171645910664808], 'false': [0.1875, 0.17978824856489115], 'false,true': [0.0, 0.22222222222222218], 'false,true,false': [0.0, 0.0], 'false,false': [0.1377758643489497, 0.2217129137140373], 'false,false,false': [0.2217129137140373, nan], 'false,false,true': [0.13298991952133948, 0.1430722742058974], 'true': [2.4223047810003414e-16, nan]}, {'': [0.07638888888888869, 0.18071866442173162], 'false': [0.14692262357809063, 0.20892659841559694], 'false,false': [3.700743415417188e-17, 0.20931371479665994], 'false,false,false': [0.20838399999999893, 0.2222222222222222], 'false,true': [0.05357144714747838, 2.7999311380894066e-06], 'true': [-1.1102230246251565e-16, 0.1875], 'false,true,true': [nan, 0.053571447147478475], 'false,false,true': [0.0, 0.0]}, {'': [0.0003151405538709911, 0.15461005372736183], 'false': [0.09013742984720519, 0.16941264336705047], 'false,false': [0.0008473779337415666, 0.1698898462167438], 'false,false,false': [0.09465872352766715, 0.21020390186181342], 'false,true': [0.09339887855074452, 0.06423110549072068], 'false,true,true': [0.08937967851328088, -1.9081958235744878e-17], 'false,true,false': [0.0, 2.7755575615628915e-18], 'true': [0.0003766124149963752, 0.0]}, {'': [0.052305735566816225, 0.15540680700916645], 'false': [0.08972591598805081, 0.2144892172970959], 'false,false': [0.2144892172970959, nan], 'false,false,true': [0.21924179392091392, 9.635472249520804e-05], 'true': [-1.586032892321652e-17, 0.11525083361401586], 'true,true': [-1.586032892321652e-17, nan]}, {'': [0.06996937902664141, 0.12581655724471424], 'false': [0.07816613094349686, 0.16869342149108588], 'false,false': [0.16869342149108588, nan], 'false,false,true': [0.04856898422734825, 0.0013515639650172454], 'false,true': [0.06741351241600127, 0.09096551673916461], 'false,true,false': [2.220446049250313e-16, 1.7529837230923523e-17], 'true': [3.9951056677561825e-05, 0.18845799112419742]}, {'': [0.0020308017396270376, 0.0916228785278588], 'false': [0.06070901678102726, 0.12199156347907644], 'false,false': [0.12199156347907644, nan], 'false,false,true': [0.12550398926131706, 1.6204548170485352e-05], 'false,true': [0.0020290558751420735, 4.1228382974703923e-05], 'true': [3.059037001874876e-05, 1.2071518258401545e-05], 'false,true,true': [nan, 0.0020290558751420735]}, {'': [0.0010171733562574906, 0.07062357505484146], 'false': [0.038317264840913336, 0.10568143002570406], 'false,false': [0.10568143002570406, nan], 'false,false,true': [0.06792132319525136, 0.00660047985751538], 'false,true': [0.02272142578412919, 3.346546401348146e-05], 'false,true,true': [nan, 0.022721425784129265], 'true': [0.0008501297343178671, 0.0]}, {'': [0.0007409928850920914, 0.04912625564785926], 'false': [0.02964439281597794, 0.06804660852550892], 'false,false': [0.06824798779504852, 0.06488364396914954], 'false,false,true': [0.159752817581031, 0.0650945012840894], 'false,false,false': [0.06488364396914954, nan], 'true': [0.00051505171255882, 0.0004706843002631282], 'true,false': [0.0, 2.0074411647627577e-05], 'true,false,true': [0.0, nan]}, {'': [0.04817584576757008, 0.06575848137272565], 'false': [0.0026903203769422946, 0.06710179644210856], 'false,false': [0.06710179644210854, nan], 'false,false,true': [0.06897538193642451, 0.024861630811659045], 'true': [0.09442534684372555, 0.023654632576126686], 'true,true': [0.04683177559692959, 0.1464144427783653], 'false,true': [0.0, 0.0031100607153567625]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), function(A, D).;true;true
0;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(F, A), interaction(A, F).;true;true
0;false,false;interaction(A, H).;true;true
0;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(G, E), interaction(E, G).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
2;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false,true;interaction(I, A), interaction(H, I).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, C), interaction(D, A).;true;true
3;false;interaction(A, E), interaction(E, A).;true;true
3;false,true;interaction(F, A), interaction(F, E).;true;true
3;false,true,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,false;interaction(H, E), recursion_proteinclass(H, B).;true;true
3;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), interaction(D, A).;true;true
4;false;interaction(A, E).;true;true
4;false,false;function(G, F), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), interaction(A, D).;true;true
5;false;interaction(A, E).;true;true
5;false,true;interaction(F, E), interaction(A, F).;true;true
5;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
5;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;function(A, D), interaction(C, E).;true;true
6;false;interaction(A, F).;true;true
6;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
6;false,false;function(J, I), recursion_proteinclass(J, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, A).;true;true
7;false;interaction(A, E).;true;true
7;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(E, C), interaction(A, E).;true;true
9;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
9;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
9;false,true;interaction(G, A), interaction(F, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995116;  // std dev = 2.23e-07, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return -0.14185106490048763;  // std dev = 8.30e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.14497064052586747;  // std dev = 5.137, 129.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=37 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( complex(G, I), location(A, J) )
%   | | | then return 0.11423052556424082;  // std dev = 4.664, 125.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=35 */
%   | | | else return 0.2531108873447737;  // std dev = 2.376, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | else if ( location(A, K) )
%   | | | then return 0.10126207813862872;  // std dev = 4.012, 91.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=24 */
%   | | | else return 0.01537503659483293;  // std dev = 1.091, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.1553664367462845;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.6902679430317665;  // std dev = 0.080, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return 0.498589248919904;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.13978884317989249;  // std dev = 0.007, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0.0553664367462845;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.11584248123413661;  // std dev = 5.175, 128.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=38 */
%   | | | else return 0.30823040308737937;  // std dev = 1.012, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.4423330723063584;  // std dev = 0.047, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5248298459674442;  // std dev = 0.051, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.1354539495059235;  // std dev = 0.372, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.49961805870527676;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1384136019251896;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.48366888655711415;  // std dev = 0.081, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.15489307383228637;  // std dev = 3.543, 69.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=26 */
%   | | | else return 0.06758199682628908;  // std dev = 4.641, 127.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=35 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( location(A, E), interaction(A, A) )
%   | | then return 0.3153290078443265;  // std dev = 7.45e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.012637905924738865;  // std dev = 0.741, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.0743850770901527;  // std dev = 1.058, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then return -0.009533754137308288;  // std dev = 0.220, 53.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=10 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.03340633747858629;  // std dev = 2.023, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | | else return 0.10804490352779571;  // std dev = 1.483, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | else if ( function(J, K), recursion_proteinclass(J, B) )
%   | | then if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.2370539702493703;  // std dev = 2.169, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.4201236332437439;  // std dev = 3.382, 53.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=35 */
%   | | else return -0.21374858041551395;  // std dev = 0.015, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.27169840007267004;  // std dev = 0.027, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.38290878498798575;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return -0.012949981167375899;  // std dev = 1.107, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | | else return 0.05357071618592085;  // std dev = 1.592, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.4946305926654726;  // std dev = 0.120, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.1443071959405477;  // std dev = 0.070, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, A), location(K, L) )
%   | | | then return 0.2325488965487489;  // std dev = 4.302, 76.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=41 */
%   | | | else return -0.05275096273817926;  // std dev = 1.200, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return -0.18278385675773715;  // std dev = 0.013, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D), interaction(C, E) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then return 0.2321273267563601;  // std dev = 0.054, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.20385875056938052;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.29731924883991884;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A) )
%   | | | then return 0.38733997732394854;  // std dev = 0.222, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return 0.47380712954480947;  // std dev = 0.117, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.12207225187082163;  // std dev = 0.014, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( function(K, L), recursion_proteinclass(K, B) )
%   | | then if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | | then return -2.861440277884819E-5;  // std dev = 0.786, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2710553832013605;  // std dev = 3.970, 66.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=40 */
%   | | else return -0.1599186768217956;  // std dev = 0.013, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.19663145685461672;  // std dev = 0.028, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.23662536135445456;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.33432088672901467;  // std dev = 0.190, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.28628142896494585;  // std dev = 0.097, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.10962501845843599;  // std dev = 0.013, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5679304611096644;  // std dev = 0.397, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.254890205049496;  // std dev = 0.750, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.21772435912882593;  // std dev = 1.160, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.050873731226673796;  // std dev = 3.205, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17017490209462247;  // std dev = 0.025, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( complex(E, F), complex(A, F) )
%   | | then if ( phenotype(E, G) )
%   | | | then return -0.09096562914069123;  // std dev = 0.483, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.11385954032708141;  // std dev = 0.337, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.052711886017063836;  // std dev = 1.705, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | | else return -0.019961897657600768;  // std dev = 2.098, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(J, A) )
%   | | | then return 0.0213505966901139;  // std dev = 2.072, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return 0.11400714323510802;  // std dev = 2.361, 48.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=22 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.10622794341527309;  // std dev = 0.457, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.058745367856682114;  // std dev = 1.141, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.13654892530621676;  // std dev = 0.015, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( enzyme(A, F), phenotype(A, G) )
%   | | then if ( phenotype(H, G), interaction(H, H) )
%   | | | then return 0.07078273861425365;  // std dev = 0.610, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.05362698795546541;  // std dev = 0.390, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return -0.03538136775503133;  // std dev = 1.424, 59.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
%   | | | else return -0.12221034150435303;  // std dev = 0.760, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | then return 0.20048893393907524;  // std dev = 0.057, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(L, A), location(A, M) )
%   | | then if ( phenotype(A, N) )
%   | | | then return -0.035576385536401404;  // std dev = 2.718, 75.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=20 */
%   | | | else return 0.05104965070321988;  // std dev = 3.218, 75.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=29 */
%   | | else return 0.08906985625945524;  // std dev = 0.165, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */


Results
   AUC ROC   = 0.975114
   AUC PR    = 0.277639
   CLL	      = -0.21193
   Precision = 0.235227 at threshold = 0.5
   Recall    = 0.734043
   F1        = 0.356282


Total learning time: 16.032 seconds
Total inference time: 188.124 seconds
AUC ROC: 0.975114


Results scoring model
   AUC ROC   = 0.975719
   AUC PR    = 0.334183
   CLL	      = -0.212691
   Precision = 0.272727 at threshold = 0.5
   Recall    = 0.689655
   F1        = 0.390879


Total scoring time: 30.298 seconds
Refined model CLL: -0.212691


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.989378
   AUC PR    = 0.310306
   CLL	      = -0.166772
   Precision = 0.209821 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.346863


Total learning time: 55.385999999999996 seconds
Total inference time: 18.199 seconds
AUC ROC: 0.989378
Total revision time: 55.385999999999996
Best scored revision CLL: -0.16692


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:18:58
{'AUC ROC': 0.989378, 'AUC PR': 0.310306, 'CLL': -0.166772, 'Precision': [0.209821, 0.5], 'Recall': 1.0, 'F1': 0.346863, 'Learning time': 55.385999999999996, 'Inference time': 18.199, 'parameter': {'AUC ROC': 0.989378, 'AUC PR': 0.310306, 'CLL': -0.166772, 'Precision': [0.209821, 0.5], 'Recall': 1.0, 'F1': 0.346863, 'Learning time': 2.369, 'Inference time': 18.199}}


Starting fold 2

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos	 examples: 265
Target test neg examples: 35157

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;true;false
0;false,true,true;follows(F, G), follows(G, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(H, I), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;false;true
1;false,true,false;follows(E, G), follows(G, E).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J), follows(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(D, C), recursion_accounttype(D, B).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), follows(A, D).;false;false
3;false;follows(E, A), follows(A, E).;true;true
3;false,true;follows(A, F), follows(E, F).;true;true
3;false,true,true;follows(E, G), recursion_accounttype(G, B).;false;false
3;false,true,false;follows(E, H), recursion_accounttype(H, B).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
3;false,false,false;follows(J, A).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(A, D).;true;false
4;true,true;recursion_accounttype(D, B).;false;true
4;true,true,false;tweets(C, E), follows(D, A).;false;false
4;false;follows(F, A).;false;true
4;false,false;tweets(A, G).;true;true
4;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
4;false,false,false;follows(A, I), recursion_accounttype(I, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), follows(D, A).;false;false
5;false;follows(E, A).;true;true
5;false,true;follows(E, F), follows(F, A).;false;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;tweets(A, D), follows(E, C).;false;false
6;false;follows(F, A).;true;true
6;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;false,false;tweets(A, I).;true;true
6;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
6;false,false,false;follows(A, K), follows(K, L).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G).;true;true
7;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
7;false,false,false;tweets(A, I).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(C, E), follows(E, A).;true;false
8;true,false,true;recursion_accounttype(E, B), follows(A, F).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H), follows(H, I).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
9;true;recursion_accounttype(D, B).;true;false
9;true,true;follows(A, E), follows(E, D).;false;false
9;false;follows(A, F), recursion_accounttype(F, B).;true;true
9;false,true;follows(A, G), follows(G, F).;false;false
9;false,false;tweets(A, H).;true;true
9;false,false,true;follows(A, I).;false;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7672398441904213;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7418698653320703;  // std dev = 2.973, 86.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=76 */
%   | | | else return -0.14185106490048832;  // std dev = 0.000, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.16584124279182003;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.7300482636012737;  // std dev = 0.036, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.7518526675222027;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(E, G), interaction(G, E) )
%   | | | then return -0.28052658778904555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.7389009653977034;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), interaction(I, A) )
%   | | | then return 0.06986026481275334;  // std dev = 4.289, 133.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=31 */
%   | | | else return 0.132288961792473;  // std dev = 4.886, 151.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=45 */
%   | | else if ( function(A, J), interaction(A, K) )
%   | | | then return 0.07203266827938797;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4699724322038947;  // std dev = 0.939, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.5751053271879637;  // std dev = 3.65e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.48036683330315144;  // std dev = 0.626, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.5855559090824008;  // std dev = 3.206, 88.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=76 */
%   | | else return -0.13726630849102678;  // std dev = 0.050, 181.000 (wgt'ed) examples reached here.  /* #neg=181 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5913663723835847;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.07665822124971336;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.33139423463715867;  // std dev = 1.143, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else return 0.2320865827319767;  // std dev = 0.741, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.464580968787097;  // std dev = 1.418, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return -0.11860469454790411;  // std dev = 0.009, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.590291706495899;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14099426318480293;  // std dev = 0.284, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.4420555324249687;  // std dev = 0.036, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.09010921896620751;  // std dev = 4.594, 182.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=57 */
%   | | | else return 0.3153970496381652;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.35673493005800205;  // std dev = 1.05e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( function(C, E), interaction(D, A) )
%   | | | then return 0.35673493005800205;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2649394166856328;  // std dev = 0.845, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(F, A) )
%   | then return 0.05867752860157339;  // std dev = 5.196, 279.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=82 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5301540671417195;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.23684218381790229;  // std dev = 1.05e-08, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.2830482140870449;  // std dev = 0.024, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.14607610872490134;  // std dev = 0.918, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then return 0.028325915942010112;  // std dev = 3.404, 122.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.399541098205969;  // std dev = 2.482, 55.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=48 */
%   | | | else return -0.14266310355971384;  // std dev = 0.342, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.574364198569351;  // std dev = 0.359, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.22372940355425766;  // std dev = 0.190, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), interaction(E, C) )
%   | then return 0.08884914983046983;  // std dev = 1.607, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.31258794589840655;  // std dev = 0.113, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3473572390794819;  // std dev = 2.979, 89.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=78 */
%   | | else return -0.12594160800353807;  // std dev = 0.196, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
%   | else if ( function(A, I) )
%   | | then if ( function(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.06792800545423008;  // std dev = 1.356, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.1637423771263718;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.22506851094384953;  // std dev = 0.071, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.22093987304217713;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27787004285344924;  // std dev = 2.828, 91.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=82 */
%   | | else return -0.1122738205502887;  // std dev = 0.120, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.42975541406675816;  // std dev = 0.311, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.2387681002896674;  // std dev = 0.220, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.18722184581520163;  // std dev = 0.063, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then if ( recursion_proteinclass(E, B), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18351351646131867;  // std dev = 0.013, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.19180114417959598;  // std dev = 0.000555, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then return -0.010477659213857675;  // std dev = 4.082, 281.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=82 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.39361761511901994;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.052511450419956536;  // std dev = 0.882, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, D) )
%   | | then return 0.16274386585259576;  // std dev = 1.512, 31.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   | | else return 0.13159357848877926;  // std dev = 0.533, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else return -0.02204789317677405;  // std dev = 3.516, 229.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=58 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10882166905936486;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( function(A, H) )
%   | | then if ( interaction(A, I) )
%   | | | then return -0.03615956386398211;  // std dev = 1.005, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.018669235723195735;  // std dev = 0.763, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.987655
   AUC PR    = 0.269357
   CLL	      = -0.145599
   Precision = 0.194139 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.325153


Total learning time: 2.766 seconds
Total inference time: 16.469 seconds
AUC ROC: 0.987655


Results scoring model
   AUC ROC   = 0.976182
   AUC PR    = 0.151307
   CLL	      = -0.184537
   Precision = 0.079572 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.147413


Total scoring time: 9.151 seconds
Parameter learned model CLL: -0.184537


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,true': 'interaction(F, G), interaction(G, A)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.953, 1, 10], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 0, 2], 'false,true,false': [0.913, 1, 5], 'false,false,true,true': [2.973, 10, 76], 'false,false,true,false': [0.0, 187, 0], 'false,false,false,true': [1.664, 9, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(E, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), interaction(I, A)', 'false,false,false': 'function(A, J), interaction(A, K)'}, {'true,true': [0.036, 0, 17], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.035, 0, 5], 'false,false,true,true': [4.289, 102, 31], 'false,false,true,false': [4.886, 106, 45], 'false,false,false,true': [1.749, 13, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.939, 1, 10], 'true,false': [3.65e-08, 0, 7], 'false,true,true,true': [0.626, 1, 6], 'false,true,true,false': [3.206, 12, 76], 'false,true,false': [0.05, 181, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.732, 12, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'false': 'interaction(E, A), interaction(A, E)', 'false,true': 'interaction(A, F), interaction(E, F)', 'false,true,true': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(E, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [1.143, 2, 13], 'true,false': [0.741, 1, 3], 'false,true,true,true': [1.418, 2, 14], 'false,true,true,false': [0.009, 36, 0], 'false,true,false,true': [0.017, 0, 5], 'false,true,false,false': [0.284, 16, 0], 'false,false,true': [0.036, 0, 8], 'false,false,false,true': [4.594, 125, 57], 'false,false,false,false': [1.414, 4, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'true,true,false': 'function(C, E), interaction(D, A)', 'false': 'interaction(F, A)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true,true': [1.05e-08, 0, 5], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.845, 1, 10], 'false,true': [5.196, 197, 82], 'false,false,true,true': [0.913, 1, 5], 'false,false,true,false': [1.05e-08, 8, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true,true': [0.024, 0, 11], 'true,false': [0.918, 1, 6], 'false,true,true': [3.404, 88, 34], 'false,true,false,true': [2.482, 7, 48], 'false,true,false,false': [0.342, 98, 0], 'false,false,true,true': [0.359, 0, 5], 'false,false,true,false': [0.19, 11, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D), interaction(E, C)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(A, G), interaction(G, H)', 'false,false': 'function(A, I)', 'false,false,true': 'function(J, I), recursion_proteinclass(J, B)'}, {'true,true': [1.607, 3, 17], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.113, 0, 4], 'false,true,true,false': [2.979, 11, 78], 'false,true,false': [0.196, 202, 0], 'false,false,true,true': [1.356, 4, 5], 'false,false,true,false': [0.0, 4, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.071, 0, 12], 'true,false': [0.018, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.828, 9, 82], 'false,true,false': [0.12, 206, 0], 'false,false,true,true': [0.311, 0, 5], 'false,false,true,false': [0.22, 7, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(C, E), interaction(E, A)', 'true,false,true': 'recursion_proteinclass(E, B), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.063, 0, 9], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.013, 0, 4], 'true,false,false': [0.000555, 0, 4], 'false,true': [4.082, 199, 82], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.882, 19, 4], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(E, D)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(A, G), interaction(G, F)', 'false,false': 'function(A, H)', 'false,false,true': 'interaction(A, I)'}, {'true,true,true': [1.512, 3, 28], 'true,true,false': [0.533, 3, 8], 'true,false': [3.516, 171, 58], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 1], 'false,false,true,true': [1.005, 11, 4], 'false,false,true,false': [0.763, 12, 5], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.05246913580246885, 0.2075305880204534], 'false': [0.20999999999999988, 0.20147684483348927], 'false,true': [0.25, 0.1388888888888887], 'false,true,true': [0.0, 0.0], 'false,false': [0.20088824484428916, 0.21301775147928975], 'false,false,false': [0.21301775147928975, nan], 'false,false,true': [0.10275824770146001, -2.1610758340297165e-16], 'true': [-2.5376526277146434e-16, 0.0826446280991734]}, {'': [7.827923734940945e-05, 0.1572446770283455], 'false': [0.11467998118328365, 0.15155164746174057], 'false,false': [0.14979854869987225, 0.1799307958477508], 'false,false,false': [0.1799307958477508, nan], 'false,false,true': [0.13829630126137826, 0.15810450352479316], 'false,true': [0.0, 0.14454753548439134], 'false,true,false': [0.0, 0.0002516198818825366], 'true': [7.827923734940945e-05, nan]}, {'': [0.051622053602380515, 0.15648449423916755], 'false': [0.15434984270719743, 0.1911376875207557], 'false,false': [0.0, 0.18750000000000008], 'false,false,false': [0.18750000000000008, nan], 'false,true': [0.11307423078652012, 1.3544096438601506e-05], 'false,true,true': [0.05599951903200005, 0.11679896792194593], 'true': [0.08017409139078784, 1.9032394707859825e-16], 'false,false,true': [nan, 0.0]}, {'': [0.09923602747979335, 0.11993291243102108], 'false': [0.10833933566693119, 0.12321913123120855], 'false,false': [0.00015798047599760445, 0.12366209979445358], 'false,false,false': [0.1159717494302779, 0.25], 'false,true': [0.1111363102968537, 0.10086631502681985], 'false,true,true': [0.1257300976177036, 2.330931164230061e-06], 'false,true,false': [5.4575567882597654e-05, 0.005041609928727143], 'true': [0.08706069032864595, 0.137107744643764]}, {'': [0.041631463490014106, 0.10191916297906527], 'false': [0.09676694763363797, 0.20354632592161254], 'false,false': [0.20354632592161254, nan], 'false,false,true': [0.13877957058693466, 1.3877787807814457e-17], 'true': [1.586032892321652e-17, 0.06484727332104387], 'true,true': [2.2204460492503132e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.051328144921914294, 0.10522306790135154], 'false': [0.10276814199895275, 0.14717639549158526], 'false,false': [0.14717639549158526, nan], 'false,false,true': [0.025837632574509283, 0.0032824418386367153], 'false,true': [0.09498947975810891, 0.10871688063637691], 'false,true,false': [0.11199716630976565, 0.0011948791288275509], 'true': [5.15475952429007e-05, 0.12044038088886588]}, {'': [0.12916341722868147, 0.08150061025339628], 'true': [0.12916341722868147, nan], 'false': [0.07832387251627661, 0.15293308042005663], 'false,false': [0.15293308042005663, nan], 'false,false,true': [0.204389133410667, 0.0], 'false,true': [0.09561211472916759, 0.00018933214469775569], 'false,true,true': [0.0032069121636148223, 0.09971316168096013]}, {'': [0.0003225755884424955, 0.061744838043202445], 'false': [0.05931915292615982, 0.12076417949873593], 'false,false': [0.12076417949873593, nan], 'false,false,true': [0.019404892819465603, 0.0069454661308181375], 'false,true': [0.08786814473571027, 7.02865431961863e-05], 'false,true,true': [nan, 0.08786814473571032], 'true': [0.0004257088139361098, 6.302362307683551e-05]}, {'': [0.0002495282761992127, 0.05785841803260506], 'false': [0.05931109624160044, 0.04034355841435616], 'false,false': [0.04034355841435616, nan], 'false,false,true': [0.0, 0.0338046618748904], 'true': [0.0004359609254413292, 3.969114457894746e-05], 'true,false': [4.496300621435745e-05, 7.689634517332733e-08], 'true,false,true': [nan, 4.496300621435745e-05]}, {'': [0.05922591304324749, 0.04936971649371993], 'true': [0.06141398987351316, 0.05398928423401286], 'true,true': [0.07377390575325705, 0.02586529603628841], 'false': [0.0, 0.05050579231684745], 'false,false': [0.050505792316847445, nan], 'false,false,true': [0.06738703395417348, 0.03420142413986202], 'false,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), function(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,true;interaction(F, G), interaction(G, A).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(E, G), interaction(G, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A), interaction(A, E).;true;true
3;false,true;interaction(A, F), interaction(E, F).;true;true
3;false,true,true;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;false,true,false;interaction(E, H), recursion_proteinclass(H, B).;true;true
3;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), interaction(A, D).;true;true
4;true,true;recursion_proteinclass(D, B).;true;true
4;false;interaction(F, A).;true;true
4;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, D), interaction(D, A).;true;true
5;false;interaction(E, A).;true;true
5;false,true;interaction(E, F), interaction(F, A).;true;true
5;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
6;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
6;false,false;function(J, I), recursion_proteinclass(J, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, D).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(C, E), interaction(E, A).;true;true
8;false;interaction(G, A).;true;true
8;false,false;recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
9;false;interaction(A, F), recursion_proteinclass(F, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7025933795439567;  // std dev = 3.438, 90.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=76 */
%   | | | else return -0.1418510649004883;  // std dev = 0.000, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7385744794058932;  // std dev = 0.082, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, F) )
%   | | then return 0.2551723247302799;  // std dev = 1.024, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, I), enzyme(A, J) )
%   | | then if ( interaction(K, A), interaction(K, K) )
%   | | | then return -0.06287908624649971;  // std dev = 0.871, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.07246719200022506;  // std dev = 2.393, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else if ( complex(A, L), interaction(M, A) )
%   | | | then return 0.08603715992772044;  // std dev = 3.427, 81.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=20 */
%   | | | else return 0.14182664473935275;  // std dev = 5.211, 160.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=50 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.49089080554546255;  // std dev = 0.246, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( complex(A, E) )
%   | | then return 0.631801488590078;  // std dev = 0.165, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.24567825226503434;  // std dev = 0.753, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.5199797923209184;  // std dev = 3.599, 83.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=67 */
%   | | | else return 0.7259200034126557;  // std dev = 0.020, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.14145018457525557;  // std dev = 0.030, 205.000 (wgt'ed) examples reached here.  /* #neg=205 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.06473706180920989;  // std dev = 1.205, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.06967900115960464;  // std dev = 1.278, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.456742656633424;  // std dev = 0.035, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.30006499192021907;  // std dev = 0.330, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.44562596046624064;  // std dev = 1.562, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | | else return -0.11951290202275877;  // std dev = 0.031, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6157823878859633;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.12019433544222641;  // std dev = 0.008, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.46792010776204734;  // std dev = 0.068, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( complex(A, J), location(A, K) )
%   | | | then return 0.002710451813218078;  // std dev = 2.467, 62.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=12 */
%   | | | else return 0.08835462511579117;  // std dev = 4.444, 154.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=49 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.3220521504238033;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.16318411131043628;  // std dev = 0.577, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.35811343111754734;  // std dev = 0.058, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.18682548110506528;  // std dev = 0.116, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.0855424835031543;  // std dev = 4.260, 152.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=52 */
%   | | | else return 0.02307826753734976;  // std dev = 3.309, 124.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=30 */
%   | else if ( function(G, H), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.495769673254963;  // std dev = 0.871, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.11511020817291964;  // std dev = 0.898, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.2305116868125772;  // std dev = 0.076, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.3400351842578228;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.12204876581834483;  // std dev = 0.857, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.2232499298869176;  // std dev = 0.953, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.29396275724563936;  // std dev = 0.150, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), interaction(H, A) )
%   | | then return 0.01986348490269463;  // std dev = 0.280, 145.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=34 */
%   | | else return 0.09502731746667584;  // std dev = 0.340, 134.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=48 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then return -0.09551184202181282;  // std dev = 0.842, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.2082773983779694;  // std dev = 0.980, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.031101544363743832;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.2515381254822123;  // std dev = 0.029, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return -0.40595721230143156;  // std dev = 0.736, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.23965893859414633;  // std dev = 0.129, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.07664271443297954;  // std dev = 0.836, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.33433623919405875;  // std dev = 0.377, 101.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=82 */
%   | | else return -0.13714702719520128;  // std dev = 0.017, 199.000 (wgt'ed) examples reached here.  /* #neg=199 */
%   | else if ( function(I, J), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.12031165706575286;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.36548373089088504;  // std dev = 0.773, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.18412792293246683;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.20064449968921155;  // std dev = 0.036, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.23083759947689822;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.24019708340707532;  // std dev = 0.146, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.3716775929962745;  // std dev = 1.349, 33.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   | | | else return 0.2866455738693673;  // std dev = 2.741, 60.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=51 */
%   | | else return -0.12268948154065569;  // std dev = 0.030, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.49854825126369345;  // std dev = 0.355, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.17109273254144677;  // std dev = 0.013, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.02905889479437612;  // std dev = 0.972, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.17431428589569883;  // std dev = 0.020, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.07128755466795678;  // std dev = 0.673, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.17104419674988286;  // std dev = 0.101, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.20457097827918114;  // std dev = 0.021, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return -0.03688613603816375;  // std dev = 2.154, 67.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=15 */
%   | | | else return 0.0017409633018899738;  // std dev = 3.715, 214.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=61 */
%   | else if ( recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.08579066051795488;  // std dev = 1.066, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.24378693692051517;  // std dev = 0.710, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.16411693123129406;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.1185136167370264;  // std dev = 0.161, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then if ( phenotype(A, H), complex(A, I) )
%   | | | then return 0.012650803911089714;  // std dev = 1.615, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | | else return -0.027464770897880394;  // std dev = 3.867, 190.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=53 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.017831487574846136;  // std dev = 0.877, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.05499341797341781;  // std dev = 0.945, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | then return 0.11261936835247566;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, L) )
%   | | then return 0.2939686198681508;  // std dev = 0.807, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( location(A, M) )
%   | | | then return 0.02502187274957952;  // std dev = 0.695, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.06214122975801124;  // std dev = 0.499, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */


Results
   AUC ROC   = 0.98143
   AUC PR    = 0.242644
   CLL	      = -0.179103
   Precision = 0.141939 at threshold = 0.5
   Recall    = 0.916981
   F1        = 0.245827


Total learning time: 6.745 seconds
Total inference time: 56.154 seconds
AUC ROC: 0.98143


Results scoring model
   AUC ROC   = 0.977129
   AUC PR    = 0.171778
   CLL	      = -0.191282
   Precision = 0.076923 at threshold = 0.5
   Recall    = 0.990385
   F1        = 0.142758


Total scoring time: 15.418 seconds
Refined model CLL: -0.191282


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.987655
   AUC PR    = 0.269357
   CLL	      = -0.145599
   Precision = 0.194139 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.325153


Total learning time: 34.08 seconds
Total inference time: 16.469 seconds
AUC ROC: 0.987655
Total revision time: 34.08
Best scored revision CLL: -0.184537


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:20:45
{'AUC ROC': 0.987655, 'AUC PR': 0.269357, 'CLL': -0.145599, 'Precision': [0.194139, 0.5], 'Recall': 1.0, 'F1': 0.325153, 'Learning time': 34.08, 'Inference time': 16.469, 'parameter': {'AUC ROC': 0.987655, 'AUC PR': 0.269357, 'CLL': -0.145599, 'Precision': [0.194139, 0.5], 'Recall': 1.0, 'F1': 0.325153, 'Learning time': 2.766, 'Inference time': 16.469}}


Starting fold 3

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos	 examples: 277
Target test neg examples: 38883

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;true;false
0;false,true,true;follows(F, G), follows(G, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(H, I), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;false;true
1;false,true,false;follows(E, G), follows(G, E).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J), follows(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(D, C), recursion_accounttype(D, B).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), follows(A, D).;false;false
3;false;follows(E, A), follows(A, E).;true;true
3;false,true;follows(A, F), follows(E, F).;true;true
3;false,true,true;follows(E, G), recursion_accounttype(G, B).;false;false
3;false,true,false;follows(E, H), recursion_accounttype(H, B).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
3;false,false,false;follows(J, A).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(A, D).;true;false
4;true,true;recursion_accounttype(D, B).;false;true
4;true,true,false;tweets(C, E), follows(D, A).;false;false
4;false;follows(F, A).;false;true
4;false,false;tweets(A, G).;true;true
4;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
4;false,false,false;follows(A, I), recursion_accounttype(I, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), follows(D, A).;false;false
5;false;follows(E, A).;true;true
5;false,true;follows(E, F), follows(F, A).;false;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;tweets(A, D), follows(E, C).;false;false
6;false;follows(F, A).;true;true
6;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;false,false;tweets(A, I).;true;true
6;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
6;false,false,false;follows(A, K), follows(K, L).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G).;true;true
7;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
7;false,false,false;tweets(A, I).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(C, E), follows(E, A).;true;false
8;true,false,true;recursion_accounttype(E, B), follows(A, F).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H), follows(H, I).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
9;true;recursion_accounttype(D, B).;true;false
9;true,true;follows(A, E), follows(E, D).;false;false
9;false;follows(A, F), recursion_accounttype(F, B).;true;true
9;false,true;follows(A, G), follows(G, F).;false;false
9;false,false;tweets(A, H).;true;true
9;false,false,true;follows(A, I).;false;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 8.43e-08, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.14185106490048802;  // std dev = 0.000, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.22353355048412768;  // std dev = 3.472, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(E, G), interaction(G, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5194734122109546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), interaction(I, A) )
%   | | | then return 0.073359608704396;  // std dev = 2.090, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.11440306619761566;  // std dev = 4.743, 155.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=44 */
%   | | else if ( function(A, J), interaction(A, K) )
%   | | | then return 0.14269619443241227;  // std dev = 3.687, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5918806549725852;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6600545563540173;  // std dev = 1.390, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | else return -0.13744726215608974;  // std dev = 0.024, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6040520610480189;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.08285040437373295;  // std dev = 3.711, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | | | else return 0.023127004040349914;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.32860517596092;  // std dev = 0.785, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.43761950100709973;  // std dev = 0.049, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5519213798354519;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1185808034060716;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5417509157333578;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.12293824382524533;  // std dev = 7.45e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.27465644130116706;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.07153475706773295;  // std dev = 3.923, 168.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=49 */
%   | | | else return 0.05948721752088259;  // std dev = 3.810, 75.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=20 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.34038164148916017;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.34051353942284746;  // std dev = 0.051, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.05289124808749554;  // std dev = 4.054, 195.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=56 */
%   | else if ( function(A, F) )
%   | | then if ( function(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.4417078810804916;  // std dev = 2.573, 32.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=22 */
%   | | | else return -0.21857212646527258;  // std dev = 0.111, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.27033685323778717;  // std dev = 0.010, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2674077143367662;  // std dev = 0.043, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then return -0.005985682587417859;  // std dev = 1.606, 44.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4713103886107737;  // std dev = 1.036, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.13493685622201027;  // std dev = 0.064, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6547983906137885;  // std dev = 0.594, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.20808989310385753;  // std dev = 0.301, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), interaction(E, C) )
%   | then return 0.21854737005586491;  // std dev = 0.037, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.22871760884932713;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.39587344629483273;  // std dev = 0.482, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.12050096839739763;  // std dev = 0.078, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | else if ( function(A, I) )
%   | | then if ( function(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.30271200449646984;  // std dev = 1.927, 30.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=22 */
%   | | | else return -0.1550075886960006;  // std dev = 0.088, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.17944644536399196;  // std dev = 0.024, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.19236754173167;  // std dev = 0.000407, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.30745018090113346;  // std dev = 0.428, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.10838391507588702;  // std dev = 0.074, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4348263150269751;  // std dev = 0.484, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.17667818625856088;  // std dev = 0.797, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.15326445353613743;  // std dev = 0.019, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then if ( recursion_proteinclass(E, B), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16391112873258695;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.001993715102861948;  // std dev = 0.911, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(G, A) )
%   | then return -0.0036352324850984284;  // std dev = 2.340, 198.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=56 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.07616449995651076;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.04949599696910199;  // std dev = 1.804, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | else if ( function(A, J) )
%   | | | then return 0.24647457009211504;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, D) )
%   | | then return 0.15225023228063989;  // std dev = 0.113, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.10007087167016673;  // std dev = 0.848, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.008009952599180083;  // std dev = 1.993, 167.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=43 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, F) )
%   | | then return 0.0709753228017378;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.11088142520129912;  // std dev = 0.039, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( function(A, H) )
%   | | then if ( interaction(A, I) )
%   | | | then return 0.005743293205421684;  // std dev = 1.966, 74.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=23 */
%   | | | else return -0.015052842501142246;  // std dev = 1.135, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.980909
   AUC PR    = 0.221787
   CLL	      = -0.182292
   Precision = 0.110535 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.199066


Total learning time: 1.504 seconds
Total inference time: 21.273 seconds
AUC ROC: 0.980909


Results scoring model
   AUC ROC   = 0.996784
   AUC PR    = 0.554763
   CLL	      = -0.130954
   Precision = 0.516854 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.681481


Total scoring time: 3.211 seconds
Parameter learned model CLL: -0.130954


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,true': 'interaction(F, G), interaction(G, A)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.0, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false': [0.0, 0, 5], 'false,false,true,true': [8.43e-08, 0, 52], 'false,false,true,false': [0.0, 144, 0], 'false,false,false,true': [3.472, 33, 19], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(E, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), interaction(I, A)', 'false,false,false': 'function(A, J), interaction(A, K)'}, {'true,true': [5.16e-08, 0, 14], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.894, 1, 4], 'false,false,true,true': [2.09, 26, 8], 'false,false,true,false': [4.743, 111, 44], 'false,false,false,true': [3.687, 43, 20], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 4], 'false,true,true,true': [0.042, 0, 4], 'false,true,true,false': [1.39, 2, 52], 'false,true,false': [0.024, 141, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.711, 50, 19], 'false,false,false,false': [0.816, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'false': 'interaction(E, A), interaction(A, E)', 'false,true': 'interaction(A, F), interaction(E, F)', 'false,true,true': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(E, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.785, 1, 8], 'true,false': [0.049, 0, 6], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [7.45e-09, 10, 0], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [7.45e-09, 12, 0], 'false,false,true': [0.926, 1, 6], 'false,false,false,true': [3.923, 119, 49], 'false,false,false,false': [3.81, 55, 20]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,false': 'function(A, F)', 'false,false,true': 'function(G, F), recursion_proteinclass(G, B)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.051, 0, 9], 'false,true': [4.054, 139, 56], 'false,false,true,true': [2.573, 10, 22], 'false,false,true,false': [0.111, 38, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true,true': [0.01, 0, 6], 'true,false': [0.043, 0, 8], 'false,true,true': [1.606, 36, 8], 'false,true,false,true': [1.036, 1, 48], 'false,true,false,false': [0.064, 104, 0], 'false,false,true,true': [0.594, 0, 22], 'false,false,true,false': [0.301, 38, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D), interaction(E, C)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(A, G), interaction(G, H)', 'false,false': 'function(A, I)', 'false,false,true': 'function(J, I), recursion_proteinclass(J, B)'}, {'true,true': [0.037, 0, 13], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.482, 0, 56], 'false,true,false': [0.078, 134, 0], 'false,false,true,true': [1.927, 8, 22], 'false,false,true,false': [0.088, 31, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.024, 0, 9], 'true,false': [0.000407, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.428, 0, 56], 'false,true,false': [0.074, 141, 0], 'false,false,true,true': [0.484, 0, 22], 'false,false,true,false': [0.797, 57, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(C, E), interaction(E, A)', 'true,false,true': 'recursion_proteinclass(E, B), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'function(A, J)'}, {'true,true': [0.019, 0, 8], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.911, 1, 5], 'false,true': [2.34, 142, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.804, 31, 20], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(E, D)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(A, G), interaction(G, F)', 'false,false': 'function(A, H)', 'false,false,true': 'interaction(A, I)'}, {'true,true,true': [0.113, 0, 11], 'true,true,false': [0.848, 1, 3], 'true,false': [1.993, 124, 43], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.039, 0, 2], 'false,false,true,true': [1.966, 51, 23], 'false,false,true,false': [1.135, 20, 9], 'false,false,false': [0.0, 0, 0]}]]
[{'': [-2.5376526277146434e-16, 0.21231833910034667], 'false': [-1.4802973661668753e-16, 0.20554507185368115], 'false,false': [0.19491878384006744, 0.23495906016375898], 'false,false,false': [0.23187869822485158, 0.0], 'false,false,true': [1.3664283380001927e-16, -9.251858538542972e-17], 'false,true': [0.0, 0.0], 'false,true,true': [nan, 0.0], 'true': [-2.5376526277146434e-16, -2.5376526277146434e-16]}, {'': [1.9032394707859825e-16, 0.16550368380458058], 'false': [0.12244897959183687, 0.16096386978200466], 'false,false': [0.1423736041768692, 0.21578005136284012], 'false,false,false': [0.21578005136284012, nan], 'false,false,true': [0.12845016833283446, 0.14512473368907136], 'false,true': [0.0, 0.16000000000000006], 'false,true,false': [nan, 0.16000000000000006], 'true': [1.9032394707859825e-16, nan]}, {'': [-2.5376526277146434e-16, 0.1564559359532337], 'false': [0.13960315420452413, 0.20177621326107167], 'false,false': [0.0005925725034123808, 0.20062551946901908], 'false,false,false': [0.19953791220331862, 0.2222222222222222], 'false,true': [0.03363145499344239, 4.086474944451845e-06], 'false,true,true': [0.0004444293775593411, 0.03576922347482702], 'false,false,true': [0.0, 0.0], 'true': [-1.7763568394002506e-16, 0.0]}, {'': [0.04413104067451042, 0.11830702649687541], 'false': [0.04686029303403665, 0.12425707491210278], 'false,false': [0.12244897959183679, 0.12311124126332174], 'false,false,false': [0.0916104424212962, 0.1935726847470954], 'false,true': [0.03715480807699585, 0.054099389245068054], 'false,true,false': [0.0, 4.625929269271485e-18], 'true': [0.06852858663652053, 0.0004042478923304375], 'false,true,true': [0.0, 5.551115123125783e-18]}, {'': [0.0001877168941110436, 0.11581307277263783], 'false': [0.08429567932341674, 0.20293242671365283], 'false,false': [0.20293242671365283, nan], 'false,false,true': [0.20686001763320433, 0.0003245527620779898], 'true': [0.0, 0.00029199784426853844], 'true,true': [0.0, nan]}, {'': [0.00014259905122864552, 0.10525202506249043], 'false': [0.08144627934268983, 0.1803091649262728], 'false,false': [0.1803091649262728, nan], 'false,false,true': [0.016062324024552686, 0.0023881715061596994], 'false,true': [0.05864377802101461, 0.0870542029646583], 'false,true,false': [0.02190952643668241, 3.984909928953378e-05], 'true': [1.5907595704125106e-05, 0.00023394056228576154]}, {'': [0.00010725438184812562, 0.07073454332416297], 'false': [0.056682786037718064, 0.11338571506926405], 'false,false': [0.11338571506926405, nan], 'false,false,true': [0.12382100273859706, 0.0002507089308714955], 'false,true': [0.0041545736857056615, 4.549570642425976e-05], 'false,true,true': [nan, 0.0041545736857056615], 'true': [0.00010811659340507293, 0.0]}, {'': [8.062459433642271e-05, 0.050504518517313655], 'false': [0.0361371902601834, 0.08614438819689366], 'false,false': [0.08614438819689366, nan], 'false,false,true': [0.010669919327431755, 0.011140320244231911], 'false,true': [0.0032637951043005104, 3.8936448134138204e-05], 'false,true,true': [nan, 0.0032637951043004948], 'true': [6.577095727144933e-05, 3.3099475843512136e-08]}, {'': [0.06126985928355541, 0.0354825253879506], 'true': [4.367182398035477e-05, 0.12201204779654466], 'true,false': [0.0, 0.13841532949481666], 'false': [0.027655290214009302, 0.06212927764019232], 'false,false': [0.0625957926094037, 0.0], 'false,false,true': [0.0, 0.06380948399479507], 'true,false,true': [nan, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.02753338861517187, 0.048979458253308884], 'false': [0.00084843117640518, 0.050111231108317195], 'false,false': [0.05011123110831709, nan], 'false,false,true': [0.05221311420658603, 0.04443709201636399], 'true': [0.06126940482247236, 0.023790767825381694], 'true,true': [0.0011596744873918938, 0.17988280761137757], 'false,true': [0.0, 0.0007418144283663445]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), function(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
0;false,false,false;interaction(A, J), interaction(J, K).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false,true;interaction(A, I), interaction(I, H).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(C, D), interaction(A, D).;true;true
3;false;interaction(E, A), interaction(A, E).;true;true
3;false,true;interaction(A, F), interaction(E, F).;true;true
3;false,true,true;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;false,true,false;interaction(E, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), interaction(A, D).;true;true
4;false;interaction(E, A).;true;true
4;false,false;function(G, F), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, D), interaction(D, A).;true;true
5;false;interaction(E, A).;true;true
5;false,true;interaction(E, F), interaction(F, A).;true;true
5;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
5;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;function(A, D), interaction(E, C).;true;true
6;false;interaction(F, A).;true;true
6;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
6;false,false;function(J, I), recursion_proteinclass(J, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, D).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(C, E), interaction(E, A).;true;true
8;false;interaction(G, A).;true;true
8;false,false;interaction(A, H), interaction(H, I).;true;true
8;false,false,true;recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
9;true;recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(E, D).;true;true
9;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
9;false,true;interaction(A, G), interaction(G, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( phenotype(A, E), complex(A, F) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(H, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8392810105712104;  // std dev = 0.991, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.13756069980539468;  // std dev = 3.700, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(A, E) )
%   | then return 0.7505511758931249;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( phenotype(H, I) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.07041160167598945;  // std dev = 1.289, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.2484283062049087;  // std dev = 2.317, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.13231758286397072;  // std dev = 5.671, 189.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=57 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5538290804383934;  // std dev = 0.003, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.5917984828033578;  // std dev = 0.073, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6736172466946739;  // std dev = 0.990, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.1287972363373395;  // std dev = 0.042, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.14325151878116776;  // std dev = 0.056, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.017303617448605632;  // std dev = 1.997, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.16758201798112687;  // std dev = 3.130, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.41665010597794755;  // std dev = 0.003, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5539615549709259;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.10518887451525744;  // std dev = 0.033, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5539615549709259;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.11917807232638775;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5980580682914166;  // std dev = 0.711, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.15607555758145855;  // std dev = 0.346, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else if ( enzyme(A, J), complex(A, K) )
%   | | | then return 0.1654982382996371;  // std dev = 1.621, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.0933952089413342;  // std dev = 3.793, 115.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=37 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.3185397819393393;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.34201738311784247;  // std dev = 0.036, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.35050022431475764;  // std dev = 0.579, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return -0.11118378493088961;  // std dev = 0.060, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.026643797222988246;  // std dev = 1.664, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | | else return 0.06276883650490152;  // std dev = 2.624, 78.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=24 */
%   | else if ( function(I, J), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.45221777988728556;  // std dev = 1.293, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.24714351721135686;  // std dev = 2.435, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | else return -0.19719713514826687;  // std dev = 0.020, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.26426998549858144;  // std dev = 0.058, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.26481204673093917;  // std dev = 0.044, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.024519112162583984;  // std dev = 0.829, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then return 0.0016554554087476632;  // std dev = 0.234, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | else if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3901490945530476;  // std dev = 1.136, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.12310442627761117;  // std dev = 0.213, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else if ( interaction(I, J), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.2107395838552737;  // std dev = 1.299, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.3347350627231663;  // std dev = 2.235, 25.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=16 */
%   | | else return -0.18142054732399124;  // std dev = 0.046, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), interaction(E, C) )
%   | then if ( interaction(A, F) )
%   | | then return 0.20625707457666526;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.2573835589033247;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.21890605618259018;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.19507748264074848;  // std dev = 0.885, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return 0.3759552517381213;  // std dev = 1.042, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | | else return -0.11029211476864229;  // std dev = 0.020, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | else if ( function(J, K), recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.23215485680353248;  // std dev = 1.695, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return 0.31683710850035235;  // std dev = 1.710, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | else return -0.1431413474475615;  // std dev = 0.013, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.1755535060889308;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.04453747617475503;  // std dev = 0.917, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.20080356943447358;  // std dev = 0.149, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.31916515597363143;  // std dev = 0.297, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.10226463656814873;  // std dev = 0.024, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.0015133815595896086;  // std dev = 1.254, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.26613010161509465;  // std dev = 1.110, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return -0.07866930283421664;  // std dev = 0.686, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.06944294886872553;  // std dev = 1.988, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.15065960061398487;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.2086544747155923;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.035870846174765735;  // std dev = 0.870, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, G) )
%   | | then return -0.03018637307206763;  // std dev = 0.154, 83.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=20 */
%   | | else if ( phenotype(A, H), complex(A, I) )
%   | | | then return -0.0038392354566792143;  // std dev = 0.727, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return 0.028195097531125382;  // std dev = 1.455, 70.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=26 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.15370836495301898;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.04626350082689323;  // std dev = 2.573, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | | else return -0.06568500349401643;  // std dev = 0.738, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.1577669602015157;  // std dev = 0.037, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.07379894819098667;  // std dev = 0.008, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( complex(A, F) )
%   | | | then return -6.479555780998067E-4;  // std dev = 1.186, 74.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=23 */
%   | | | else return 0.03175070040658505;  // std dev = 1.253, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.14539825847635213;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(H, H), phenotype(H, J) )
%   | | | then return 0.01802930162860724;  // std dev = 1.421, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.08742601367896508;  // std dev = 2.244, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.15548402119750993;  // std dev = 0.797, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.012620078911067877;  // std dev = 1.354, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */


Results
   AUC ROC   = 0.984682
   AUC PR    = 0.223177
   CLL	      = -0.178748
   Precision = 0.104792 at threshold = 0.5
   Recall    = 0.971119
   F1        = 0.18917


Total learning time: 7.782 seconds
Total inference time: 65.645 seconds
AUC ROC: 0.984682


Results scoring model
   AUC ROC   = 0.994617
   AUC PR    = 0.603975
   CLL	      = -0.150043
   Precision = 0.41 at threshold = 0.5
   Recall    = 0.891304
   F1        = 0.561644


Total scoring time: 10.609 seconds
Refined model CLL: -0.150043


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.980909
   AUC PR    = 0.221787
   CLL	      = -0.182292
   Precision = 0.110535 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.199066


Total learning time: 23.106 seconds
Total inference time: 21.273 seconds
AUC ROC: 0.980909
Total revision time: 23.106
Best scored revision CLL: -0.130954


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:22:36
{'AUC ROC': 0.980909, 'AUC PR': 0.221787, 'CLL': -0.182292, 'Precision': [0.110535, 0.5], 'Recall': 1.0, 'F1': 0.199066, 'Learning time': 23.106, 'Inference time': 21.273, 'parameter': {'AUC ROC': 0.980909, 'AUC PR': 0.221787, 'CLL': -0.182292, 'Precision': [0.110535, 0.5], 'Recall': 1.0, 'F1': 0.199066, 'Learning time': 1.504, 'Inference time': 21.273}}


Starting fold 4

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos	 examples: 283
Target test neg examples: 40479

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;true;false
0;false,true,true;follows(F, G), follows(G, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(H, I), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;false;true
1;false,true,false;follows(E, G), follows(G, E).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J), follows(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(D, C), recursion_accounttype(D, B).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), follows(A, D).;false;false
3;false;follows(E, A), follows(A, E).;true;true
3;false,true;follows(A, F), follows(E, F).;true;true
3;false,true,true;follows(E, G), recursion_accounttype(G, B).;false;false
3;false,true,false;follows(E, H), recursion_accounttype(H, B).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
3;false,false,false;follows(J, A).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(A, D).;true;false
4;true,true;recursion_accounttype(D, B).;false;true
4;true,true,false;tweets(C, E), follows(D, A).;false;false
4;false;follows(F, A).;false;true
4;false,false;tweets(A, G).;true;true
4;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
4;false,false,false;follows(A, I), recursion_accounttype(I, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), follows(D, A).;false;false
5;false;follows(E, A).;true;true
5;false,true;follows(E, F), follows(F, A).;false;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;tweets(A, D), follows(E, C).;false;false
6;false;follows(F, A).;true;true
6;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;false,false;tweets(A, I).;true;true
6;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
6;false,false,false;follows(A, K), follows(K, L).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G).;true;true
7;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
7;false,false,false;tweets(A, I).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(C, E), follows(E, A).;true;false
8;true,false,true;recursion_accounttype(E, B), follows(A, F).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H), follows(H, I).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
9;true;recursion_accounttype(D, B).;true;false
9;true,true;follows(A, E), follows(E, D).;false;false
9;false;follows(A, F), recursion_accounttype(F, B).;true;true
9;false,true;follows(A, G), follows(G, F).;false;false
9;false,false;tweets(A, H).;true;true
9;false,false,true;follows(A, I).;false;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8287371703936293;  // std dev = 0.985, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | | else return -0.14185106490048763;  // std dev = 8.69e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.1566563977860793;  // std dev = 3.746, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   | | | else return 0.15544623239680966;  // std dev = 2.780, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.6123228684706171;  // std dev = 0.957, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.6194734122109542;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, E), interaction(E, G) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.04718464884330493;  // std dev = 2.842, 69.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=14 */
%   | | | else return 0.11583147633759397;  // std dev = 3.139, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.1713832272624199;  // std dev = 3.559, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   | | | else return 0.1623492218509995;  // std dev = 2.847, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.5983942655420182;  // std dev = 0.088, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4380412979605347;  // std dev = 0.925, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6781269905318439;  // std dev = 0.992, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | else return -0.13440554444870606;  // std dev = 0.041, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.10372555487535462;  // std dev = 3.769, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | | | else return 0.1687742553300192;  // std dev = 2.664, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.4511686201184308;  // std dev = 0.094, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.4264473671695801;  // std dev = 0.049, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5085543225229632;  // std dev = 0.050, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.11721802161670682;  // std dev = 0.013, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.5498667883482135;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12197367348070032;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.4587742185186263;  // std dev = 0.046, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.0556978649427291;  // std dev = 3.163, 107.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=29 */
%   | | | else return 0.07077137981379956;  // std dev = 4.735, 112.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=31 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.3478609576436027;  // std dev = 0.081, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( phenotype(C, E), interaction(A, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3676966437575502;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.24310590558312756;  // std dev = 0.795, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, F) )
%   | then return 0.031118219153274774;  // std dev = 3.373, 143.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=36 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.6772529776807584;  // std dev = 1.177, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return -0.21873750689411586;  // std dev = 0.032, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return -0.6812313036016036;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.0155995453159839;  // std dev = 3.036, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.1960823207003917;  // std dev = 0.931, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.3012482091791192;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return 0.0067577196169195;  // std dev = 2.221, 75.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=15 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.40160781853348587;  // std dev = 1.340, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | | else return -0.12712437286771308;  // std dev = 0.058, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6052019733776108;  // std dev = 1.490, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | | | else return -0.1963268070304452;  // std dev = 0.141, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(C, E) )
%   | then return 0.25366817316992885;  // std dev = 0.032, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.23210426869113338;  // std dev = 0.050, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.2284853719027936;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.39749680602524196;  // std dev = 1.357, 37.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   | | else return -0.11819409477458488;  // std dev = 0.081, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.38230235051957306;  // std dev = 1.189, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | | else return -0.17549089170729726;  // std dev = 0.605, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.12142642584672408;  // std dev = 2.038, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.03626111791602573;  // std dev = 1.248, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.12524712255455822;  // std dev = 0.967, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return -0.041772174594098266;  // std dev = 0.869, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F), interaction(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32542954794959106;  // std dev = 1.015, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | else return -0.11121901535547386;  // std dev = 0.394, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.4342140932964056;  // std dev = 1.237, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | | | else return -0.16156604850033682;  // std dev = 0.275, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.17660843264531437;  // std dev = 0.048, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then if ( recursion_proteinclass(E, B), interaction(F, A) )
%   | | | then return 0.17570184462684113;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.21715617329573772;  // std dev = 0.019, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.19004205104552438;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G) )
%   | then return -0.015037856836350772;  // std dev = 2.368, 140.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=36 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.05424834409199919;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.014448366623858032;  // std dev = 2.188, 72.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=22 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.02431190411420892;  // std dev = 0.952, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.2525539041691575;  // std dev = 0.781, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(D, E) )
%   | | then return 0.16626930968851156;  // std dev = 0.115, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.22931343462922502;  // std dev = 0.174, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.028267964872665412;  // std dev = 2.114, 133.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=28 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0.05153147151143578;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.053511820286355816;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( phenotype(A, H) )
%   | | then if ( interaction(I, A) )
%   | | | then return -0.010285453485020963;  // std dev = 1.670, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.02456311608451985;  // std dev = 0.417, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.08088687776420739;  // std dev = 1.959, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | | else return 0.02456311608451985;  // std dev = 0.295, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */


Results
   AUC ROC   = 0.988239
   AUC PR    = 0.270455
   CLL	      = -0.171882
   Precision = 0.216446 at threshold = 0.5
   Recall    = 0.809187
   F1        = 0.341536


Total learning time: 1.507 seconds
Total inference time: 13.36 seconds
AUC ROC: 0.988239


Results scoring model
   AUC ROC   = 0.992125
   AUC PR    = 0.372868
   CLL	      = -0.148604
   Precision = 0.314286 at threshold = 0.5
   Recall    = 0.895349
   F1        = 0.465257


Total scoring time: 3.105 seconds
Parameter learned model CLL: -0.148604


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(A, F)', 'false,true,true': 'interaction(G, F), interaction(A, G)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true': [0.866, 1, 3], 'true,false': [0.0, 0, 13], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false': [0.0, 0, 5], 'false,false,true,true': [0.985, 1, 33], 'false,false,true,false': [8.69e-08, 97, 0], 'false,false,false,true': [3.746, 47, 20], 'false,false,false,false': [2.78, 26, 11]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, E), interaction(E, G)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true': [0.957, 1, 7], 'true,false': [0.949, 1, 9], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 4], 'false,false,true,true': [2.842, 55, 14], 'false,false,true,false': [3.139, 48, 19], 'false,false,false,true': [3.559, 38, 19], 'false,false,false,false': [2.847, 25, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(H, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true': [0.088, 0, 10], 'true,false': [0.925, 1, 6], 'false,true,true,true': [1.05e-08, 0, 3], 'false,true,true,false': [0.992, 1, 33], 'false,true,false': [0.041, 104, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 2], 'false,false,false,true': [3.769, 49, 20], 'false,false,false,false': [2.664, 20, 11]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'false': 'interaction(A, E), interaction(E, A)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false,true,true': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(H, E), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.094, 0, 9], 'true,false': [0.049, 0, 6], 'false,true,true,true': [0.05, 0, 2], 'false,true,true,false': [0.013, 28, 0], 'false,true,false,true': [0.014, 0, 3], 'false,true,false,false': [0.006, 5, 0], 'false,false,true': [0.046, 0, 6], 'false,false,false,true': [3.163, 78, 29], 'false,false,false,false': [4.735, 81, 31]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'true,true,false': 'phenotype(C, E), interaction(A, D)', 'false': 'interaction(A, F)', 'false,false': 'phenotype(A, G)', 'false,false,true': 'phenotype(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), recursion_proteinclass(I, B)'}, {'true,true,true': [0.081, 0, 8], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.795, 1, 7], 'false,true': [3.373, 107, 36], 'false,false,true,true': [1.177, 1, 22], 'false,false,true,false': [0.032, 37, 0], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [3.036, 40, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true,true': [0.931, 1, 11], 'true,false': [0.018, 0, 5], 'false,true,true': [2.221, 60, 15], 'false,true,false,true': [1.34, 2, 21], 'false,true,false,false': [0.058, 44, 0], 'false,false,true,true': [1.49, 2, 34], 'false,false,true,false': [0.141, 66, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D), interaction(C, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(G, A), interaction(H, G)', 'false,false': 'phenotype(A, I)', 'false,false,true': 'phenotype(J, I), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A), interaction(L, K)'}, {'true,true': [0.032, 0, 6], 'true,false': [0.05, 0, 10], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [1.357, 2, 35], 'false,true,false': [0.081, 111, 0], 'false,false,true,true': [1.189, 2, 22], 'false,false,true,false': [0.605, 39, 0], 'false,false,false,true': [2.038, 16, 9], 'false,false,false,false': [1.248, 8, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F), interaction(F, A)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [0.967, 1, 13], 'true,false': [0.869, 1, 3], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.015, 1, 36], 'false,true,false': [0.394, 91, 0], 'false,false,true,true': [1.237, 1, 34], 'false,false,true,false': [0.275, 67, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)', 'true,false': 'interaction(E, C), interaction(A, E)', 'true,false,true': 'recursion_proteinclass(E, B), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.048, 0, 9], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.019, 0, 2], 'true,false,false': [0.028, 0, 4], 'false,true': [2.368, 104, 36], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [2.188, 50, 22], 'false,false,false,true': [0.952, 15, 8], 'false,false,false,false': [0.781, 2, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(D, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, A), interaction(F, G)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'interaction(I, A)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.115, 0, 14], 'true,true,false': [0.174, 0, 5], 'true,false': [2.114, 105, 28], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.0, 0, 2], 'false,false,true,true': [1.67, 46, 19], 'false,false,true,false': [0.417, 4, 2], 'false,false,false,true': [1.959, 21, 14], 'false,false,false,false': [0.295, 2, 1]}]]
[{'': [0.055363321799307655, 0.20609149291506826], 'false': [-1.4802973661668753e-16, 0.19817111815301103], 'false,false': [0.18845055649437803, 0.20922707100591847], 'false,false,false': [0.2094007574069944, 0.2089116143170192], 'false,false,true': [0.028546712802769686, 7.783006770568107e-17], 'true': [0.18750000000000006, -2.7328566760003855e-16], 'false,true': [0.0, 0.0], 'false,true,true': [nan, 0.0]}, {'': [0.1008430110762786, 0.1754831465637462], 'false': [7.401486830834377e-17, 0.17081711508631847], 'false,false': [0.1330284140277646, 0.22103263836458203], 'false,false,false': [0.22222799090856232, 0.21914166042241437], 'false,false,true': [0.11707484980109177, 0.14706736068587056], 'true': [0.11436836921285837, 0.09000000000000008], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 0.0]}, {'': [0.057017668137457615, 0.16704123619462857], 'false': [0.13195744256762043, 0.21297033453327643], 'false,false': [3.700743415417188e-17, 0.2139369779826236], 'false,false,false': [0.2058975714590344, 0.2289115208226878], 'false,true': [0.02771494238314195, 1.5904585739284345e-05], 'true': [0.000776720981098844, 0.12223654058895159], 'false,true,true': [3.700743415417188e-17, 0.028938474132604055], 'false,false,true': [0.0, 0.0]}, {'': [0.0009008988995746018, 0.13522122494216782], 'false': [0.048601950757198524, 0.14822086931293044], 'false,false': [0.0003510146710760109, 0.14810368543187752], 'false,false,false': [0.09348785861805108, 0.20017029399740194], 'false,true': [0.02445640600687621, 0.10581898528262082], 'false,true,false': [6.399099897747007e-05, 8.379546373712965e-06], 'false,true,true': [0.001271351005084853, 6.4129181431342245e-06], 'true': [0.000991000430704868, 0.00039906239446237574]}, {'': [0.040438917112176606, 0.1341728504543381], 'false': [0.07957270028903793, 0.20253427784412598], 'false,false': [0.21287640429707286, 0.18288769920828088], 'false,false,true': [0.06022498563288675, 2.8229804602993576e-05], 'false,false,false': [0.0, 0.17724301125250158], 'true': [0.0007590450631748988, 0.07902218009593998], 'true,true': [0.000810208535670584, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.05330042045712911, 0.11653901214976803], 'false': [0.07770610495303595, 0.16868720924055391], 'false,false': [0.16868720924055391, nan], 'false,false,true': [0.06169190694989584, 0.00030179410347957845], 'false,true': [0.06575211593638233, 0.08988957555454517], 'false,true,false': [0.07811446928051026, 7.71657111553596e-05], 'true': [0.07222862280097332, 6.577193812411508e-05]}, {'': [0.0003267582554619397, 0.08729855011616802], 'false': [0.06224534922226765, 0.12373088032991733], 'false,false': [0.10164393864341163, 0.16021252914231016], 'false,false,false': [0.16620849966548593, 0.14154842780022864], 'false,false,true': [0.058947007892768556, 0.009392001113799023], 'false,true': [0.04918333473508191, 5.900042176237402e-05], 'false,true,true': [0.0, 0.049760907082137644], 'true': [0.0001675174449084956, 0.00024792700065503495]}, {'': [0.09876425729566811, 0.06961198152185133], 'true': [0.06682814731808844, 0.1888441845127282], 'false': [0.04844276133006604, 0.09574504978484229], 'false,false': [0.09574504978484229, nan], 'false,false,true': [0.04371385697899411, 0.0011275902310245204], 'false,true': [0.027847110305513855, 0.0017035921634450779], 'false,true,true': [nan, 0.027847110305513855]}, {'': [0.0003980935724333737, 0.050985708067148805], 'false': [0.04003880667764631, 0.06503938382050918], 'false,false': [0.06557804370491493, 0.061822604750510976], 'false,false,true': [0.0, 0.06646715071396998], 'false,false,false': [0.03943249502205095, 0.122025272231823], 'true': [0.00025603028853101974, 0.00037485451171595914], 'true,false': [0.0005054709704604005, 0.00020112761613329255], 'true,false,true': [0.0, 0.0001853860005609706]}, {'': [0.034662959660579425, 0.0631898476587716], 'false': [8.71506948962065e-07, 0.06490327889699224], 'false,false': [0.04181867885022119, 0.10346288093354], 'false,false,false': [0.109598561173436, 0.028958028629281807], 'false,false,true': [0.042903188514731135, 0.0289580286292818], 'true': [0.0030652362774695333, 0.03360504987056279], 'true,true': [0.0009514583990641352, 0.006055189934185468], 'false,true': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), phenotype(A, D).;true;true
0;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(F, A), interaction(A, F).;true;true
0;false,false;interaction(A, H).;true;true
0;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(G, E), interaction(E, G).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
2;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false,true;interaction(I, A), interaction(H, I).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, C), interaction(D, A).;true;true
3;false;interaction(A, E), interaction(E, A).;true;true
3;false,true;interaction(F, A), interaction(F, E).;true;true
3;false,true,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,false;interaction(H, E), recursion_proteinclass(H, B).;true;true
3;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), interaction(D, A).;true;true
4;true,true;recursion_proteinclass(D, B).;true;true
4;false;interaction(A, F).;true;true
4;false,false;phenotype(A, G).;true;true
4;false,false,true;phenotype(H, G), recursion_proteinclass(H, B).;true;true
4;false,false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), interaction(A, D).;true;true
5;false;interaction(A, E).;true;true
5;false,true;interaction(F, E), interaction(A, F).;true;true
5;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
5;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;phenotype(A, D), interaction(C, E).;true;true
6;false;interaction(A, F).;true;true
6;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
6;false,true,true;interaction(G, A), interaction(H, G).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;false;interaction(A, E).;true;true
7;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(G, H), recursion_proteinclass(H, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(E, C), interaction(A, E).;true;true
8;true,false,true;recursion_proteinclass(E, B), interaction(F, A).;true;true
8;false;interaction(A, G).;true;true
8;false,false;interaction(H, A), interaction(I, H).;true;true
8;false,false,true;recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
9;true;recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(D, E).;true;true
9;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
9;false,true;interaction(G, A), interaction(F, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995116;  // std dev = 2.23e-07, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return -0.14185106490048763;  // std dev = 8.69e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( location(A, I) )
%   | | | then return 0.18781926476984065;  // std dev = 4.484, 91.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=30 */
%   | | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then return 0.7324548349452545;  // std dev = 0.070, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.44055891935749264;  // std dev = 0.441, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, E), interaction(E, G) )
%   | | | then return 0.7518526675222027;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5518526675222027;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(H, I), location(A, J) )
%   | | | then return -0.06911676847910167;  // std dev = 1.154, 30.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | | | else return 0.08860126765890965;  // std dev = 3.182, 75.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=19 */
%   | | else if ( interaction(K, A), complex(A, L) )
%   | | | then return 0.06900805038011268;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.17380214964161178;  // std dev = 4.562, 101.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=35 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.577432743414525;  // std dev = 0.098, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(E, A) )
%   | | then return 0.6051118601723118;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2658948328574285;  // std dev = 0.789, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.5930932958909355;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6965855501467596;  // std dev = 0.073, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.1346037553336783;  // std dev = 0.257, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.6356805498648179;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.07278481765846044;  // std dev = 3.749, 73.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   | | | else return 0.1556548715574758;  // std dev = 2.813, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4474612924952327;  // std dev = 0.033, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.5065772552584433;  // std dev = 0.046, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.10624465892442589;  // std dev = 0.021, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.5390861512699364;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12048413135325108;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.11682628603315696;  // std dev = 0.789, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4836119451091424;  // std dev = 0.106, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.049501008244867216;  // std dev = 1.854, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return 0.12477128440906557;  // std dev = 5.091, 141.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=49 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.3317774639376217;  // std dev = 0.028, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.37724920438793647;  // std dev = 0.047, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.09519291421055498;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(A, F), phenotype(F, G) )
%   | | | then return 0.023206438162739474;  // std dev = 2.970, 111.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=29 */
%   | | | else return 0.10481762011594012;  // std dev = 1.285, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6833341105933554;  // std dev = 1.138, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return -0.21986662248000546;  // std dev = 0.046, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16804082550180185;  // std dev = 2.681, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2765990361072721;  // std dev = 0.036, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(F, A), interaction(F, F) )
%   | | | then return -0.06915745906802702;  // std dev = 0.586, 27.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=1 */
%   | | | else return 0.018786927348177655;  // std dev = 2.073, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.463880641216191;  // std dev = 0.272, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.13235105139752834;  // std dev = 0.108, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.21100720817283275;  // std dev = 2.787, 40.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   | | | else return 0.4423541320879655;  // std dev = 1.877, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.1835179819040192;  // std dev = 0.041, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.2616089677080843;  // std dev = 0.046, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(C, E) )
%   | then return 0.24201578764194076;  // std dev = 0.059, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.19405493305047317;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.23580463662602041;  // std dev = 0.076, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.21328042487519994;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.38916321327195696;  // std dev = 0.995, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | else return -0.12122416117972523;  // std dev = 0.022, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.3920168400554784;  // std dev = 2.353, 42.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=33 */
%   | | | else return -0.1913960891980394;  // std dev = 0.395, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return -0.10218238981659551;  // std dev = 0.851, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(A, E) )
%   | then return 0.0013033594662704485;  // std dev = 0.845, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, F), interaction(F, F) )
%   | | then return 0.17361236435490784;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.22930283440384489;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.38159017996127675;  // std dev = 0.167, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.29543019486040784;  // std dev = 0.323, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.11137525978687685;  // std dev = 0.018, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.12409308799025116;  // std dev = 2.406, 39.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
%   | | | else return 0.3060759608133994;  // std dev = 1.748, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | else return -0.15274344722019081;  // std dev = 0.027, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.16786425030275728;  // std dev = 0.024, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(E, F) )
%   | | | then return -0.1042824215477607;  // std dev = 0.672, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.012618300631280253;  // std dev = 0.507, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return -0.014712489217345132;  // std dev = 1.331, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | | | else return 0.032978644243525104;  // std dev = 1.155, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.12598573341977237;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.025112506982016468;  // std dev = 2.810, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.05125784889876135;  // std dev = 1.485, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return -0.04951736004934076;  // std dev = 1.227, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.15634511619021604;  // std dev = 0.072, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else if ( enzyme(A, E) )
%   | | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.27625872818777947;  // std dev = 0.224, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.09813549880890451;  // std dev = 0.085, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.04435281780994207;  // std dev = 0.153, 89.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=16 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.12343601933379204;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3377595384241554;  // std dev = 1.403, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | | else return -0.16082295825470458;  // std dev = 0.518, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return -0.06667438168483243;  // std dev = 2.395, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | | else return 0.06082161845280032;  // std dev = 0.549, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */


Results
   AUC ROC   = 0.978939
   AUC PR    = 0.208748
   CLL	      = -0.205842
   Precision = 0.081854 at threshold = 0.5
   Recall    = 0.961131
   F1        = 0.15086


Total learning time: 6.448 seconds
Total inference time: 168.83100000000002 seconds
AUC ROC: 0.978939


Results scoring model
   AUC ROC   = 0.989013
   AUC PR    = 0.330312
   CLL	      = -0.166675
   Precision = 0.171908 at threshold = 0.5
   Recall    = 0.953488
   F1        = 0.291297


Total scoring time: 9.058 seconds
Refined model CLL: -0.166675


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.988239
   AUC PR    = 0.270455
   CLL	      = -0.171882
   Precision = 0.216446 at threshold = 0.5
   Recall    = 0.809187
   F1        = 0.341536


Total learning time: 20.118000000000002 seconds
Total inference time: 13.36 seconds
AUC ROC: 0.988239
Total revision time: 20.118000000000002
Best scored revision CLL: -0.148604


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:25:59
{'AUC ROC': 0.988239, 'AUC PR': 0.270455, 'CLL': -0.171882, 'Precision': [0.216446, 0.5], 'Recall': 0.809187, 'F1': 0.341536, 'Learning time': 20.118000000000002, 'Inference time': 13.36, 'parameter': {'AUC ROC': 0.988239, 'AUC PR': 0.270455, 'CLL': -0.171882, 'Precision': [0.216446, 0.5], 'Recall': 0.809187, 'F1': 0.341536, 'Learning time': 1.507, 'Inference time': 13.36}}


Starting fold 1

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos	 examples: 282
Target test neg examples: 39912

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;true;false
0;false,true,true;follows(F, G), follows(G, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(H, I), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;false;true
1;false,true,false;follows(E, G), follows(G, E).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J), follows(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(D, C), recursion_accounttype(D, B).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), follows(A, D).;false;false
3;false;follows(E, A), follows(A, E).;true;true
3;false,true;follows(A, F), follows(E, F).;true;true
3;false,true,true;follows(E, G), recursion_accounttype(G, B).;false;false
3;false,true,false;follows(E, H), recursion_accounttype(H, B).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
3;false,false,false;follows(J, A).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(A, D).;true;false
4;true,true;recursion_accounttype(D, B).;false;true
4;true,true,false;tweets(C, E), follows(D, A).;false;false
4;false;follows(F, A).;false;true
4;false,false;tweets(A, G).;true;true
4;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
4;false,false,false;follows(A, I), recursion_accounttype(I, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), follows(D, A).;false;false
5;false;follows(E, A).;true;true
5;false,true;follows(E, F), follows(F, A).;false;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;tweets(A, D), follows(E, C).;false;false
6;false;follows(F, A).;true;true
6;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;false,false;tweets(A, I).;true;true
6;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
6;false,false,false;follows(A, K), follows(K, L).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G).;true;true
7;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
7;false,false,false;tweets(A, I).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(C, E), follows(E, A).;true;false
8;true,false,true;recursion_accounttype(E, B), follows(A, F).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H), follows(H, I).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
9;true;recursion_accounttype(D, B).;true;false
9;true,true;follows(A, E), follows(E, D).;false;false
9;false;follows(A, F), recursion_accounttype(F, B).;true;true
9;false,true;follows(A, G), follows(G, F).;false;false
9;false,false;tweets(A, H).;true;true
9;false,false,true;follows(A, I).;false;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7660436719416182;  // std dev = 2.521, 76.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=69 */
%   | | | else return -0.14185106490048813;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.636140078877621;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.2670719622367217;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(E, G), interaction(G, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7670719622367217;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), interaction(I, A) )
%   | | | then return 0.08048167804616829;  // std dev = 4.370, 133.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=33 */
%   | | | else return 0.14832255418980547;  // std dev = 4.286, 113.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=36 */
%   | | else if ( function(A, J), interaction(A, K) )
%   | | | then return 0.11858226891312983;  // std dev = 1.688, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5758380177364986;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5758380177364986;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6603205794596729;  // std dev = 0.079, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5777464959832642;  // std dev = 3.066, 80.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=69 */
%   | | else return -0.13859209047906793;  // std dev = 0.046, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6046262796882593;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.20585034908331484;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.15644227505693484;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.4494829177985726;  // std dev = 0.124, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.4431400964978464;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3928423738625483;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return -0.1265903169559552;  // std dev = 0.284, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.0328759091998847;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.09336366503392597;  // std dev = 4.503, 180.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=57 */
%   | | | else return 0.023115187167580424;  // std dev = 1.744, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.3274788804908862;  // std dev = 1.05e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.4008369971089365;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.07774601502879698;  // std dev = 4.878, 219.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=71 */
%   | else if ( function(A, F) )
%   | | then if ( function(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.4379796955928571;  // std dev = 1.143, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.2200794481306999;  // std dev = 0.042, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.2686816292810035;  // std dev = 0.067, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3030097913541476;  // std dev = 0.068, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then return 0.013092183392502704;  // std dev = 3.603, 132.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5021749050824501;  // std dev = 1.004, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.14666377427459262;  // std dev = 5.58e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.47546371659377157;  // std dev = 0.835, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.19814358125408602;  // std dev = 0.133, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), interaction(E, C) )
%   | then return 0.13503146581021452;  // std dev = 0.913, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.267596816183827;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.4314684070081072;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.33788376990737196;  // std dev = 2.936, 80.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=70 */
%   | | else return -0.12845850929395267;  // std dev = 0.110, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | else if ( function(A, I) )
%   | | then if ( function(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.22057042157071666;  // std dev = 1.110, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return -0.16623816692357896;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.0832576994472242;  // std dev = 0.889, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return -0.010718278433953676;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.29213803752999096;  // std dev = 2.473, 78.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=71 */
%   | | else return -0.11721963549616769;  // std dev = 0.085, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.34489560648762846;  // std dev = 0.710, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.1281034303093223;  // std dev = 0.018, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.17561187132512895;  // std dev = 0.013, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then if ( recursion_proteinclass(E, B), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.2496665642916448;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.23213965604669767;  // std dev = 0.017, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(G, A) )
%   | then return -0.004035230789107345;  // std dev = 3.588, 246.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=71 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030283436695179265;  // std dev = 0.668, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( function(A, J) )
%   | | | then return 0.01387278290653593;  // std dev = 0.743, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, D) )
%   | | then return 0.26128502945360704;  // std dev = 0.360, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.07594690463382878;  // std dev = 1.074, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return -0.011807589745931598;  // std dev = 3.177, 209.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=56 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10757353127538238;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( function(A, H) )
%   | | then if ( interaction(A, I) )
%   | | | then return -0.013109637487302258;  // std dev = 1.129, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.036712775990607516;  // std dev = 0.513, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.984909
   AUC PR    = 0.256692
   CLL	      = -0.163537
   Precision = 0.153178 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.265662


Total learning time: 2.909 seconds
Total inference time: 16.067 seconds
AUC ROC: 0.984909


Results scoring model
   AUC ROC   = 0.980276
   AUC PR    = 0.295644
   CLL	      = -0.176765
   Precision = 0.103943 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.188312


Total scoring time: 9.018 seconds
Parameter learned model CLL: -0.176765


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,true': 'interaction(F, G), interaction(G, A)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.0, 0, 4], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.866, 1, 3], 'false,false,true,true': [2.521, 7, 69], 'false,false,true,false': [0.0, 156, 0], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.195, 5, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(E, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), interaction(I, A)', 'false,false,false': 'function(A, J), interaction(A, K)'}, {'true,true': [0.957, 1, 11], 'true,false': [0.0, 0, 0], 'false,true,true': [0.707, 1, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.37, 100, 33], 'false,false,true,false': [4.286, 77, 36], 'false,false,false,true': [1.688, 10, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.0, 0, 3], 'false,true,true,true': [0.079, 0, 2], 'false,true,true,false': [3.066, 11, 69], 'false,true,false': [0.046, 128, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.155, 4, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'false': 'interaction(E, A), interaction(A, E)', 'false,true': 'interaction(A, F), interaction(E, F)', 'false,true,true': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true': [0.124, 0, 8], 'true,false': [0.016, 0, 3], 'false,true,true,true': [1.549, 3, 12], 'false,true,true,false': [0.284, 39, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.095, 2, 3], 'false,false,false,true': [4.503, 123, 57], 'false,false,false,false': [1.744, 13, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,false': 'function(A, F)', 'false,false,true': 'function(G, F), recursion_proteinclass(G, B)'}, {'true,true,true': [1.05e-08, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.083, 0, 4], 'false,true': [4.878, 148, 71], 'false,false,true,true': [1.143, 2, 5], 'false,false,true,false': [0.042, 9, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true,true': [0.067, 0, 8], 'true,false': [0.068, 0, 3], 'false,true,true': [3.603, 98, 34], 'false,true,false,true': [1.004, 1, 37], 'false,true,false,false': [5.58e-08, 81, 0], 'false,false,true,true': [0.835, 1, 5], 'false,false,true,false': [0.133, 10, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D), interaction(E, C)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(A, G), interaction(G, H)', 'false,false': 'function(A, I)', 'false,false,true': 'function(J, I), recursion_proteinclass(J, B)'}, {'true,true': [0.913, 1, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [2.936, 10, 70], 'false,true,false': [0.11, 155, 0], 'false,false,true,true': [1.11, 3, 5], 'false,false,true,false': [0.0, 2, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.889, 1, 8], 'true,false': [0.856, 1, 3], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.473, 7, 71], 'false,true,false': [0.085, 142, 0], 'false,false,true,true': [0.71, 1, 5], 'false,false,true,false': [0.018, 7, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(C, E), interaction(E, A)', 'true,false,true': 'recursion_proteinclass(E, B), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'function(A, J)'}, {'true,true': [0.013, 0, 8], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.707, 1, 1], 'true,false,false': [0.017, 0, 2], 'false,true': [3.588, 175, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.668, 5, 2], 'false,false,false,true': [0.743, 8, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(E, D)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(A, G), interaction(G, F)', 'false,false': 'function(A, H)', 'false,false,true': 'interaction(A, I)'}, {'true,true,true': [0.36, 0, 19], 'true,true,false': [1.074, 3, 3], 'true,false': [3.177, 153, 56], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 1], 'false,false,true,true': [1.129, 16, 5], 'false,false,true,false': [0.513, 5, 3], 'false,false,false': [0.0, 0, 0]}]]
[{'': [-1.6148698540002277e-16, 0.2115840000000002], 'false': [0.24999999999999992, 0.20967145928513972], 'false,true': [0.0, 0.18750000000000006], 'false,false': [0.20895882877526778, 0.22222222222222207], 'false,false,false': [0.24000000000000005, 0.20408163265306126], 'false,false,true': [0.08362188365650852, -1.3664283380001927e-16], 'false,true,true': [0.0, nan], 'true': [-2.5376526277146434e-16, 0.0]}, {'': [0.07638888888888891, 0.15905559060121724], 'false': [0.18750000000000006, 0.1561320939463907], 'false,true': [0.25, 0.0], 'false,false': [0.1534342366724549, 0.2034917575728101], 'false,false,false': [0.2034917575728101, nan], 'false,false,true': [0.14356785387677887, 0.16255860087204083], 'true': [0.07638888888888891, nan], 'false,true,false': [nan, 0.0]}, {'': [-8.074349270001139e-17, 0.17108642596820772], 'false': [0.16769257239313787, 0.22551082888585636], 'false,false': [0.0, 0.23090827603335995], 'false,false,false': [0.2399999999999999, 0.22222222222222224], 'false,true': [0.11489816151367514, 1.6390934288696563e-05], 'false,true,true': [0.0031018550270280887, 0.11752676480359732], 'false,false,true': [nan, 0.0], 'true': [-5.551115123125783e-17, -3.700743415417188e-17]}, {'': [0.0014350052245480007, 0.11801919357958485], 'false': [0.10006916070697586, 0.12183492964982713], 'false,false': [0.24, 0.11876249546380922], 'false,false,false': [0.11265034417381328, 0.17897039271585116], 'false,true': [0.10006916070697586, nan], 'false,true,true': [0.16000000000000017, 0.002071526710035415], 'true': [0.0019305491421781618, 8.429559058657314e-05]}, {'': [0.0018729456166109487, 0.1140977272981917], 'false': [0.1086680626113735, 0.18832447146526266], 'false,false': [0.18832447146526266, nan], 'false,false,true': [0.1866223592651453, 0.00019253298059426462], 'true': [1.586032892321652e-17, 0.0017260647260226025], 'true,true': [1.586032892321652e-17, nan]}, {'': [0.0010628859525437088, 0.10275928112706499], 'false': [0.09966251278533252, 0.15100483693513606], 'false,false': [0.15100483693513606, nan], 'false,false,true': [0.11614112663324856, 0.001768016223558966], 'false,true': [0.09831831119212302, 0.09997019018331253], 'false,true,false': [0.026507213713796496, 3.8378079863585656e-17], 'true': [0.0005541102382331936, 0.001562586491563193]}, {'': [0.07084246115642616, 0.08884968030407472], 'false': [0.0858742975202091, 0.14720326426215768], 'false,false': [0.14720326426215768, nan], 'false,false,true': [0.15407990350110728, 0.0], 'false,true': [0.10651122185801337, 7.764578794268997e-05], 'false,true,true': [0.0, 0.10773448763369191], 'true': [0.07581822055461289, 0.0]}, {'': [0.11899480446450719, 0.06796351232350767], 'true': [0.08777382353084183, 0.18312790696767636], 'false': [0.06618325236188839, 0.09442771574958907], 'false,false': [0.09442771574958907, nan], 'false,false,true': [0.08407241900010393, 4.456647930807324e-05], 'false,true': [0.07841678080643148, 5.093165871776241e-05], 'false,true,true': [nan, 0.07841678080643161]}, {'': [0.068603879511924, 0.05257088852923206], 'true': [2.2394110471491563e-05, 0.18310400989222278], 'true,false': [0.25000000000000006, 0.00013940280608582684], 'true,false,true': [nan, 0.25000000000000006], 'false': [0.05231825077953052, 0.05547383085398902], 'false,false': [0.06369362721073556, 0.05013831985955259], 'false,false,true': [nan, 0.06369362721073556], 'false,false,false': [0.05013831985955259, nan]}, {'': [0.05434642184031259, 0.05209242724558154], 'true': [0.07208782474623854, 0.048279341108579836], 'true,true': [0.006813919855743008, 0.1923572367661929], 'false': [0.0, 0.05350751912625378], 'false,false': [0.05350751912625376, nan], 'false,false,true': [0.06069882364400221, 0.032832836816128266], 'false,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), function(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(C, D), interaction(A, D).;true;true
3;false;interaction(E, A), interaction(A, E).;true;true
3;false,true;interaction(E, G), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), interaction(A, D).;true;true
4;false;interaction(E, A).;true;true
4;false,false;function(G, F), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, D), interaction(D, A).;true;true
5;false;interaction(E, A).;true;true
5;false,true;interaction(E, F), interaction(F, A).;true;true
5;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
5;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;function(A, D), interaction(E, C).;true;true
6;false;interaction(F, A).;true;true
6;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
6;false,true,true;interaction(A, G), interaction(G, H).;true;true
6;false,false;function(J, I), recursion_proteinclass(J, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(H, G), recursion_proteinclass(H, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(C, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
9;false;interaction(A, F), recursion_proteinclass(F, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7100007869513648;  // std dev = 3.197, 81.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=69 */
%   | | | else return -0.14185106490048804;  // std dev = 0.000, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return 0.4118373604848879;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.7580193346218546;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( phenotype(A, K), enzyme(I, L) )
%   | | | then return 0.018683121828511416;  // std dev = 1.999, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   | | | else return 0.1392414418159564;  // std dev = 5.720, 199.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=61 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.21117966170390035;  // std dev = 1.368, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.41464162179984987;  // std dev = 0.988, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5837540295118506;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6214673841420917;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.5090781710917073;  // std dev = 1.967, 23.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | | else return 0.6135621994009304;  // std dev = 2.309, 59.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=53 */
%   | | else return -0.14080385833165415;  // std dev = 0.006, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.011228806056625055;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.15687739763407071;  // std dev = 1.373, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.42210203325157847;  // std dev = 0.023, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.23854868036688687;  // std dev = 1.339, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.5978805845790386;  // std dev = 0.033, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return -0.1183868966488092;  // std dev = 0.029, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.14427815008730702;  // std dev = 0.256, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( complex(J, L), complex(A, L) )
%   | | | then return -0.05536155437127752;  // std dev = 1.170, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.08295679334873528;  // std dev = 2.375, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.19324112689538553;  // std dev = 2.403, 42.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=19 */
%   | | | else return 0.11257375619787072;  // std dev = 3.122, 88.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=30 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.32703256581019213;  // std dev = 0.023, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.21376127273416806;  // std dev = 0.900, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.20938963185960383;  // std dev = 1.217, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.029220493315767426;  // std dev = 3.634, 120.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=34 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.07127334480702555;  // std dev = 1.906, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return 0.1273403751490568;  // std dev = 2.316, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | else if ( function(K, L), recursion_proteinclass(K, B) )
%   | | then if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.48012135921769694;  // std dev = 0.878, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.06548227239509337;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.24007531750557126;  // std dev = 0.051, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.27359624675641714;  // std dev = 0.042, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3610303109911664;  // std dev = 0.093, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.02018489242909389;  // std dev = 1.548, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return 0.07080273117376648;  // std dev = 3.077, 77.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=27 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.47049062892039983;  // std dev = 1.372, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.1552017298412987;  // std dev = 0.139, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( interaction(J, K), recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.059138458105480796;  // std dev = 1.081, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.40408258553235826;  // std dev = 0.925, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.20976961788319476;  // std dev = 0.043, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), interaction(E, C) )
%   | then if ( phenotype(A, F) )
%   | | then return 0.24119592682309163;  // std dev = 0.040, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.2018790662948263;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.3408549962683297;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.2863230266440887;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2941758427955812;  // std dev = 3.359, 84.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=70 */
%   | | else return -0.1355755389561152;  // std dev = 0.014, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else if ( function(J, K), recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, L), interaction(L, L) )
%   | | | then return -0.02974770048822049;  // std dev = 0.767, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.22568422205507707;  // std dev = 1.078, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return -0.13112793330438396;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( complex(D, E), interaction(D, F) )
%   | | then return 0.16980773460086696;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.18429483898683305;  // std dev = 0.034, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.13289775345420057;  // std dev = 1.065, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), location(A, J) )
%   | | | then return 0.19839801284109662;  // std dev = 2.161, 35.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=28 */
%   | | | else return 0.34316122544494376;  // std dev = 1.410, 45.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=43 */
%   | | else return -0.12122357536577379;  // std dev = 0.013, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | else if ( interaction(K, L), recursion_proteinclass(K, B) )
%   | | then if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.0525032993016753;  // std dev = 0.818, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5421188340168355;  // std dev = 0.113, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.17664649304251814;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1879352127790729;  // std dev = 0.059, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), phenotype(A, E) )
%   | then if ( enzyme(D, F), phenotype(D, G) )
%   | | then if ( interaction(H, D) )
%   | | | then return -0.12871763844849837;  // std dev = 0.863, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.027481958153008756;  // std dev = 0.445, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, D), phenotype(D, I) )
%   | | | then return -0.05862601945276792;  // std dev = 1.161, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.007973278932013718;  // std dev = 2.115, 80.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=24 */
%   | else if ( location(A, J), interaction(K, A) )
%   | | then if ( interaction(K, L), recursion_proteinclass(L, B) )
%   | | | then return 0.2823247415326328;  // std dev = 0.975, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.10745084131833772;  // std dev = 0.087, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.12971916781780532;  // std dev = 0.947, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.08476020356714294;  // std dev = 1.158, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(A, E) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.055566694790053564;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.2292885914194778;  // std dev = 0.895, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(H, E), interaction(H, A) )
%   | | | then return 0.023026224730072695;  // std dev = 1.823, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | | else return -0.02726584189404839;  // std dev = 2.188, 82.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=25 */
%   | else return 0.009320389552175058;  // std dev = 0.210, 82.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=29 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.15417067552187003;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.4361451794883179;  // std dev = 0.249, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11796362339222666;  // std dev = 0.056, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.03541019269663219;  // std dev = 0.178, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */


Results
   AUC ROC   = 0.981471
   AUC PR    = 0.232618
   CLL	      = -0.174405
   Precision = 0.104022 at threshold = 0.5
   Recall    = 0.953901
   F1        = 0.187587


Total learning time: 10.301 seconds
Total inference time: 92.182 seconds
AUC ROC: 0.981471


Results scoring model
   AUC ROC   = 0.977933
   AUC PR    = 0.213555
   CLL	      = -0.185249
   Precision = 0.095875 at threshold = 0.5
   Recall    = 0.988506
   F1        = 0.174797


Total scoring time: 33.314 seconds
Refined model CLL: -0.185249


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.984909
   AUC PR    = 0.256692
   CLL	      = -0.163537
   Precision = 0.153178 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.265662


Total learning time: 55.542 seconds
Total inference time: 16.067 seconds
AUC ROC: 0.984909
Total revision time: 55.542
Best scored revision CLL: -0.176765


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:28:43
{'AUC ROC': 0.984909, 'AUC PR': 0.256692, 'CLL': -0.163537, 'Precision': [0.153178, 0.5], 'Recall': 1.0, 'F1': 0.265662, 'Learning time': 55.542, 'Inference time': 16.067, 'parameter': {'AUC ROC': 0.984909, 'AUC PR': 0.256692, 'CLL': -0.163537, 'Precision': [0.153178, 0.5], 'Recall': 1.0, 'F1': 0.265662, 'Learning time': 2.909, 'Inference time': 16.067}}


Starting fold 2

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos	 examples: 265
Target test neg examples: 35157

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;true;false
0;false,true,true;follows(F, G), follows(G, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(H, I), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;false;true
1;false,true,false;follows(E, G), follows(G, E).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J), follows(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(D, C), recursion_accounttype(D, B).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), follows(A, D).;false;false
3;false;follows(E, A), follows(A, E).;true;true
3;false,true;follows(A, F), follows(E, F).;true;true
3;false,true,true;follows(E, G), recursion_accounttype(G, B).;false;false
3;false,true,false;follows(E, H), recursion_accounttype(H, B).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
3;false,false,false;follows(J, A).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(A, D).;true;false
4;true,true;recursion_accounttype(D, B).;false;true
4;true,true,false;tweets(C, E), follows(D, A).;false;false
4;false;follows(F, A).;false;true
4;false,false;tweets(A, G).;true;true
4;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
4;false,false,false;follows(A, I), recursion_accounttype(I, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), follows(D, A).;false;false
5;false;follows(E, A).;true;true
5;false,true;follows(E, F), follows(F, A).;false;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;tweets(A, D), follows(E, C).;false;false
6;false;follows(F, A).;true;true
6;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;false,false;tweets(A, I).;true;true
6;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
6;false,false,false;follows(A, K), follows(K, L).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G).;true;true
7;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
7;false,false,false;tweets(A, I).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(C, E), follows(E, A).;true;false
8;true,false,true;recursion_accounttype(E, B), follows(A, F).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H), follows(H, I).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
9;true;recursion_accounttype(D, B).;true;false
9;true,true;follows(A, E), follows(E, D).;false;false
9;false;follows(A, F), recursion_accounttype(F, B).;true;true
9;false,true;follows(A, G), follows(G, F).;false;false
9;false,false;tweets(A, H).;true;true
9;false,false,true;follows(A, I).;false;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7152917922423694;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6933137702643475;  // std dev = 3.539, 91.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=76 */
%   | | | else return -0.14185106490048832;  // std dev = 0.000, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.058148935099512286;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.7299398576848132;  // std dev = 0.038, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6473839334745777;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(E, G), interaction(G, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7551805016408267;  // std dev = 0.098, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), interaction(I, A) )
%   | | | then return 0.06733244116348772;  // std dev = 4.362, 134.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=31 */
%   | | | else return 0.1260146321293543;  // std dev = 4.996, 154.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=45 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0.2509220325135542;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.14907796748644583;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5802008546095058;  // std dev = 0.087, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4726973431619358;  // std dev = 0.946, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5890416338733632;  // std dev = 0.132, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5769174291507397;  // std dev = 3.427, 90.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=76 */
%   | | else return -0.13706008337876152;  // std dev = 0.107, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.546532596709799;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.08639392415382607;  // std dev = 1.705, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.4348200809038003;  // std dev = 0.155, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.04832794682483612;  // std dev = 1.030, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.47838866524261253;  // std dev = 1.424, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return -0.1343286835120163;  // std dev = 0.480, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6051903781626086;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14140033113408246;  // std dev = 0.268, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.36423922943096176;  // std dev = 0.949, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.07417857817053931;  // std dev = 4.786, 200.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=57 */
%   | | | else return 0.11488698170473587;  // std dev = 1.655, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.3294015322387618;  // std dev = 0.055, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(C, E), interaction(D, A) )
%   | | | then return 0.3093607111195521;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.31042410282734223;  // std dev = 0.980, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(F, A) )
%   | then return 0.06008637818293959;  // std dev = 5.356, 281.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=82 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.7840876249869233;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.21591237501307664;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3111642138744869;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.15582212051336466;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.12511292550458625;  // std dev = 1.290, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else return 0.10360716406159035;  // std dev = 1.188, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then return 0.03907841328851141;  // std dev = 3.368, 121.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4207036390066696;  // std dev = 2.431, 55.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=48 */
%   | | | else return -0.13799233317339651;  // std dev = 0.056, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.28446244784946256;  // std dev = 1.155, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.18159765876761336;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(E, C) )
%   | then return 0.14191674735585375;  // std dev = 0.982, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.2956962270137676;  // std dev = 0.100, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.2957347319758056;  // std dev = 0.022, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3132291368011685;  // std dev = 3.521, 94.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=78 */
%   | | else return -0.12506149099753702;  // std dev = 0.149, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3771072392471583;  // std dev = 0.796, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.15614993538723015;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.041484168643918296;  // std dev = 0.223, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.16392760234944784;  // std dev = 0.905, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.23323390792856377;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return -0.49301127142182977;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.22672980769857692;  // std dev = 3.662, 99.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=82 */
%   | | else return -0.11156351113339871;  // std dev = 0.138, 181.000 (wgt'ed) examples reached here.  /* #neg=181 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.40742518929502813;  // std dev = 0.240, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.13552225849902827;  // std dev = 0.015, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.20090366079546002;  // std dev = 0.135, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then if ( recursion_proteinclass(E, B), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19092111751946247;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.02382421191391133;  // std dev = 0.887, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(G, A) )
%   | then return -8.587177114233335E-4;  // std dev = 4.189, 284.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=82 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3627531846481038;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.04573788455191163;  // std dev = 0.854, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, D) )
%   | | then return 0.26681573510121626;  // std dev = 0.432, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return 0.03539771446318743;  // std dev = 1.119, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | else return -0.03164495999271614;  // std dev = 3.940, 240.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=58 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14264656453892988;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, H) )
%   | | then if ( interaction(A, I) )
%   | | | then return 0.11716026237415068;  // std dev = 0.666, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.008280112576098796;  // std dev = 0.376, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.10276768352812041;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.023788825340246463;  // std dev = 0.734, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */


Results
   AUC ROC   = 0.988009
   AUC PR    = 0.318169
   CLL	      = -0.139205
   Precision = 0.185768 at threshold = 0.5
   Recall    = 0.935849
   F1        = 0.31


Total learning time: 2.853 seconds
Total inference time: 13.082 seconds
AUC ROC: 0.988009


Results scoring model
   AUC ROC   = 0.977169
   AUC PR    = 0.172424
   CLL	      = -0.176667
   Precision = 0.079816 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.147832


Total scoring time: 8.839 seconds
Parameter learned model CLL: -0.176667


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,true': 'interaction(F, G), interaction(G, A)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.309, 2, 12], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [1.0, 2, 2], 'false,true,false': [0.0, 0, 5], 'false,false,true,true': [3.539, 15, 76], 'false,false,true,false': [0.0, 183, 0], 'false,false,false,true': [1.789, 16, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(E, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), interaction(I, A)', 'false,false,false': 'phenotype(A, J), interaction(A, K)'}, {'true,true': [0.038, 0, 8], 'true,false': [0.949, 1, 9], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.098, 0, 5], 'false,false,true,true': [4.362, 103, 31], 'false,false,true,false': [4.996, 109, 45], 'false,false,false,true': [1.549, 6, 4], 'false,false,false,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.087, 0, 10], 'true,false': [0.946, 1, 7], 'false,true,true,true': [0.132, 0, 6], 'false,true,true,false': [3.427, 14, 76], 'false,true,false': [0.107, 167, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.705, 11, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'false': 'interaction(E, A), interaction(A, E)', 'false,true': 'interaction(A, F), interaction(E, F)', 'false,true,true': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(E, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.155, 0, 13], 'true,false': [1.03, 3, 3], 'false,true,true,true': [1.424, 2, 14], 'false,true,true,false': [0.48, 42, 0], 'false,true,false,true': [0.015, 0, 5], 'false,true,false,false': [0.268, 15, 0], 'false,false,true': [0.949, 1, 8], 'false,false,false,true': [4.786, 143, 57], 'false,false,false,false': [1.655, 9, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'true,true,false': 'phenotype(C, E), interaction(D, A)', 'false': 'interaction(F, A)', 'false,false': 'phenotype(A, G)', 'false,false,true': 'phenotype(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), recursion_proteinclass(I, B)'}, {'true,true,true': [0.055, 0, 5], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.98, 1, 10], 'false,true': [5.356, 199, 82], 'false,false,true,true': [0.0, 0, 4], 'false,false,true,false': [0.0, 11, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true,true': [1.29, 2, 11], 'true,false': [1.188, 2, 6], 'false,true,true': [3.368, 87, 34], 'false,true,false,true': [2.431, 7, 48], 'false,true,false,false': [0.056, 89, 0], 'false,false,true,true': [1.155, 2, 5], 'false,false,true,false': [0.0, 8, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D), interaction(E, C)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(A, G), interaction(G, H)', 'false,false': 'phenotype(A, I)', 'false,false,true': 'phenotype(J, I), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K), interaction(K, L)'}, {'true,true': [0.982, 1, 8], 'true,false': [0.1, 0, 9], 'false,true,true,true': [0.022, 0, 4], 'false,true,true,false': [3.521, 16, 78], 'false,true,false': [0.149, 206, 0], 'false,false,true,true': [0.796, 1, 4], 'false,false,true,false': [0.0, 3, 0], 'false,false,false,true': [0.223, 1, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.905, 1, 12], 'true,false': [0.023, 0, 5], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [3.662, 17, 82], 'false,true,false': [0.138, 181, 0], 'false,false,true,true': [0.24, 0, 5], 'false,false,true,false': [0.015, 14, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(C, E), interaction(E, A)', 'true,false,true': 'recursion_proteinclass(E, B), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.135, 0, 9], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.015, 0, 4], 'true,false,false': [0.887, 1, 4], 'false,true': [4.189, 202, 82], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.854, 16, 4], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(E, D)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(A, G), interaction(G, F)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'interaction(A, I)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true': [0.432, 0, 28], 'true,true,false': [1.119, 4, 8], 'true,false': [3.94, 182, 58], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 1], 'false,false,true,true': [0.666, 4, 4], 'false,false,true,false': [0.376, 3, 1], 'false,false,false,true': [5.27e-09, 7, 0], 'false,false,false,false': [0.734, 10, 4]}]]
[{'': [0.09418282548476423, 0.2038806772373023], 'false': [0.23140495867768587, 0.19806562080614667], 'false,true': [0.22222222222222224, 0.0], 'false,true,true': [0.0, 0.25], 'false,false': [0.20043689061750794, 0.15999999999999986], 'false,false,true': [0.13766453326892855, -2.0627094446587609e-16], 'false,false,false': [0.15999999999999986, nan], 'true': [0.0, 0.12244897959183662]}, {'': [0.051763980262908404, 0.16229185660618745], 'false': [0.0016262707086132724, 0.15661807142611545], 'false,false': [0.15359185237323378, 0.22222222222222218], 'false,false,false': [0.23999999999999994, 0.0], 'false,false,true': [0.1419945796480883, 0.1620807554435011], 'true': [0.00018257746809546838, 0.08999999999999986], 'false,true': [0.0, 0.001912494353329297], 'false,true,false': [nan, 0.001912494353329297]}, {'': [0.05302883326833285, 0.16494424362608617], 'false': [0.1631633837004217, 0.1941461185991448], 'false,false': [0.0, 0.1938562182985728], 'false,false,false': [0.1938562182985728, nan], 'false,true': [0.12250301020331911, 6.832213348823102e-05], 'false,true,true': [0.0029150248988574954, 0.13046635528568978], 'true': [0.0007518794275663155, 0.1119544672506482], 'false,false,true': [nan, 0.0]}, {'': [0.08938529548819048, 0.12067074243176582], 'false': [0.11246785104891807, 0.1228787110730596], 'false,false': [0.09996312208662822, 0.12049427213600815], 'false,false,false': [0.11453641925328262, 0.2105975152188969], 'false,true': [0.11393776091887192, 0.10812234033338937], 'false,true,true': [0.126780859644789, 0.005480310648730137], 'false,true,false': [4.705804235274336e-05, 0.00479801262836751], 'true': [0.0018584377004376216, 0.1768220730021538]}, {'': [0.053612669357077945, 0.10646293450388535], 'false': [0.10207008945233804, 0.17903823539098496], 'false,false': [0.19555555555555557, 0.054519059126250574], 'false,false,true': [0.0, -1.0092936587501423e-17], 'false,false,false': [0.0, 0.0], 'true': [0.0005122889172603744, 0.08733553098206147], 'true,true': [0.000602451766698242, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.14663539536118503, 0.10754071869687354], 'true': [0.12808978332213572, 0.17648570677806116], 'false': [0.10550260467156714, 0.14305032226848435], 'false,false': [0.14305032226848435, nan], 'false,false,true': [0.19068999260508052, 0.0], 'false,true': [0.09376709534152282, 0.11476136444587175], 'false,true,false': [0.10748779060237268, 3.567648309416838e-05]}, {'': [0.06005142260112582, 0.08458484646659306], 'false': [0.0826974901742362, 0.12457474325080937], 'false,false': [0.14580708258608657, 0.02492429410734057], 'false,false,true': [0.12665512677559457, 0.0], 'false,true': [0.12655666548460506, 0.0001075147162556104], 'false,true,true': [0.00011598728455847196, 0.13192462786792522], 'true': [0.10716962478153406, 0.0011091562387882299], 'false,false,false': [0.02492429410734057, nan]}, {'': [0.04651700723233512, 0.07383376965228865], 'false': [0.07475526235736149, 0.06020425561303962], 'false,true': [0.13926053673078162, 0.000104711528447206], 'false,true,true': [0.0, 0.13548693660923733], 'false,false': [0.06020425561303962, nan], 'false,false,true': [0.011513903002881309, 1.684329476691377e-05], 'true': [0.06303149913568463, 0.00011023206644112937]}, {'': [0.0507776619283274, 0.060498537856972144], 'false': [0.06180117426103986, 0.042279904262050146], 'true': [0.002030881853122791, 0.0942390665121806], 'true,false': [5.3399590060815294e-05, 0.15717809966634289], 'false,false': [0.042279904262050146, nan], 'false,false,true': [0.0, 0.03644794930295399], 'true,false,true': [nan, 5.3399590060815294e-05]}, {'': [0.06860536057528287, 0.038832517075078204], 'true': [0.047190048209892574, 0.06468069879389643], 'true,true': [0.006650169261945171, 0.10429508889522036], 'false': [0.0, 0.039550087851955275], 'false,false': [0.05136673223483109, 0.029214718290077952], 'false,false,true': [0.05542023673290304, 0.03535646522532303], 'false,false,false': [3.96508223080413e-18, 0.03848322745613391], 'false,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), phenotype(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,true;interaction(F, G), interaction(G, A).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;phenotype(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,false;interaction(H, A).;true;true
1;false,false,false;phenotype(A, J), interaction(A, K).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(C, D), interaction(A, D).;true;true
3;false;interaction(E, A), interaction(A, E).;true;true
3;false,true;interaction(A, F), interaction(E, F).;true;true
3;false,true,false;interaction(E, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), interaction(A, D).;true;true
4;true,true;recursion_proteinclass(D, B).;true;true
4;false;interaction(F, A).;true;true
4;false,false;phenotype(A, G).;true;true
4;false,false,true;phenotype(H, G), recursion_proteinclass(H, B).;true;true
4;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false;interaction(E, A).;true;true
5;false,true;interaction(E, F), interaction(F, A).;true;true
5;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
5;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;phenotype(A, D), interaction(E, C).;true;true
6;false;interaction(F, A).;true;true
6;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
6;false,true,true;interaction(A, G), interaction(G, H).;true;true
6;false,false;phenotype(A, I).;true;true
6;false,false,true;phenotype(J, I), recursion_proteinclass(J, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, D).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,true,true;interaction(F, E), interaction(A, F).;true;true
7;false,false;interaction(H, G), recursion_proteinclass(H, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(C, E), interaction(E, A).;true;true
8;false;interaction(G, A).;true;true
8;false,false;recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
9;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
9;false,false;phenotype(A, H).;true;true
9;false,false,false;interaction(A, J).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7152917922423694;  // std dev = 0.350, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7418698653320703;  // std dev = 2.973, 86.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=76 */
%   | | | else return -0.14185106490048813;  // std dev = 0.000, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.19148226843284566;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.7299398576848132;  // std dev = 0.038, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7473839334745777;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.5786537370877302;  // std dev = 0.771, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.08113877127236896;  // std dev = 6.212, 267.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=66 */
%   | | | else return 0.11871406341754498;  // std dev = 2.337, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0.23320549123154835;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.5615689993929355;  // std dev = 0.014, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.33459866128191884;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.5853545542655132;  // std dev = 0.006, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(A, H) )
%   | | | then return 0.4412214063525022;  // std dev = 2.383, 29.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=21 */
%   | | | else return 0.6005546926616034;  // std dev = 2.646, 69.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=61 */
%   | | else return -0.1354274906983249;  // std dev = 0.071, 201.000 (wgt'ed) examples reached here.  /* #neg=201 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5898141960184213;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.08395135589477055;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.027275264059690035;  // std dev = 1.276, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3731706313445059;  // std dev = 0.242, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.15288392665123451;  // std dev = 0.329, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.012476682627866342;  // std dev = 2.723, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6308278544381716;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1196088160496047;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( phenotype(A, I), interaction(G, J) )
%   | | | then return 0.23659171414142488;  // std dev = 1.044, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.051512264157588646;  // std dev = 1.579, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | else if ( location(A, K) )
%   | | | then return 0.11430140648366066;  // std dev = 4.415, 166.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=57 */
%   | | | else return 0.2660332974373501;  // std dev = 1.038, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.3348175327651476;  // std dev = 0.013, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.4142244881094276;  // std dev = 0.039, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), complex(A, G) )
%   | | then if ( interaction(F, A), complex(F, H) )
%   | | | then return 0.05258770270305328;  // std dev = 1.927, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return -0.02152058440268384;  // std dev = 1.772, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | else if ( location(A, I) )
%   | | | then return 0.0886273713839667;  // std dev = 4.547, 176.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=59 */
%   | | | else return -0.0338678397240791;  // std dev = 1.602, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5790655256527522;  // std dev = 0.880, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.2143220317212789;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.3543923120328667;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then return 0.03936559065785857;  // std dev = 0.422, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.3190126514500503;  // std dev = 0.035, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.05601036206094822;  // std dev = 3.466, 109.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=33 */
%   | | | else return -0.09006775843088374;  // std dev = 0.741, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.43926459346211405;  // std dev = 2.099, 53.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | | else return -0.13797261101380456;  // std dev = 0.128, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( interaction(J, K), recursion_proteinclass(J, B) )
%   | | then if ( enzyme(A, L) )
%   | | | then return 0.4098426258462594;  // std dev = 0.855, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2612926658639768;  // std dev = 0.591, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.1763892244529593;  // std dev = 0.017, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(E, C) )
%   | then return 0.24590352966285955;  // std dev = 0.014, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.27534967209621364;  // std dev = 0.050, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.047437395001808734;  // std dev = 0.760, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.09155395750031174;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(I, A) )
%   | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | then return 0.39678367727592906;  // std dev = 0.258, 89.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=82 */
%   | | else return -0.13202419225705644;  // std dev = 0.030, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
%   | else if ( phenotype(A, K) )
%   | | then if ( phenotype(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.17205548215718677;  // std dev = 1.417, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.15367897523208504;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.0435793996207319;  // std dev = 0.262, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.20322983535589562;  // std dev = 0.012, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.23257224502332854;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, F) )
%   | | then return 0.23147791206697785;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.2395419307043268;  // std dev = 1.027, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1778389811719558;  // std dev = 3.945, 104.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=82 */
%   | | else return -0.1145803031788259;  // std dev = 0.013, 188.000 (wgt'ed) examples reached here.  /* #neg=188 */
%   | else if ( interaction(I, J), recursion_proteinclass(I, B) )
%   | | then return 0.3543826776581817;  // std dev = 0.685, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.15070042773041892;  // std dev = 0.014, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then return -0.15882872501264408;  // std dev = 0.819, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.18262069533419853;  // std dev = 0.026, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.2188555073886976;  // std dev = 0.063, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( enzyme(G, I), phenotype(A, J) )
%   | | | then return 0.07537746117504618;  // std dev = 1.953, 50.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=21 */
%   | | | else return 0.018350059706851395;  // std dev = 2.917, 158.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=51 */
%   | | else return -0.0254336205764304;  // std dev = 0.236, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | else if ( recursion_proteinclass(K, B) )
%   | | then if ( complex(A, L) )
%   | | | then return 0.1734499082993931;  // std dev = 0.587, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.05708888711957787;  // std dev = 0.908, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.12445786343106262;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, A), phenotype(A, F) )
%   | | then return -6.0758772827869865E-5;  // std dev = 0.935, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.17937158825821267;  // std dev = 0.031, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( location(A, G), enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2673315604331891;  // std dev = 1.214, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return -0.15596192596256253;  // std dev = 1.233, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.03714454575299985;  // std dev = 1.858, 51.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=11 */
%   | | | else return 0.021659119480269967;  // std dev = 2.692, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
%   else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | then return 0.14345512233419644;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, M) )
%   | | then return -0.02455584847109013;  // std dev = 0.251, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else return -0.019078682595266225;  // std dev = 0.168, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */


Results
   AUC ROC   = 0.986815
   AUC PR    = 0.308247
   CLL	      = -0.153729
   Precision = 0.166782 at threshold = 0.5
   Recall    = 0.909434
   F1        = 0.281871


Total learning time: 6.352 seconds
Total inference time: 50.833 seconds
AUC ROC: 0.986815


Results scoring model
   AUC ROC   = 0.976109
   AUC PR    = 0.155422
   CLL	      = -0.187043
   Precision = 0.07855 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.145658


Total scoring time: 17.063 seconds
Refined model CLL: -0.187043


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.988009
   AUC PR    = 0.318169
   CLL	      = -0.139205
   Precision = 0.185768 at threshold = 0.5
   Recall    = 0.935849
   F1        = 0.31


Total learning time: 35.107 seconds
Total inference time: 13.082 seconds
AUC ROC: 0.988009
Total revision time: 35.107
Best scored revision CLL: -0.176667


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:30:23
{'AUC ROC': 0.988009, 'AUC PR': 0.318169, 'CLL': -0.139205, 'Precision': [0.185768, 0.5], 'Recall': 0.935849, 'F1': 0.31, 'Learning time': 35.107, 'Inference time': 13.082, 'parameter': {'AUC ROC': 0.988009, 'AUC PR': 0.318169, 'CLL': -0.139205, 'Precision': [0.185768, 0.5], 'Recall': 0.935849, 'F1': 0.31, 'Learning time': 2.853, 'Inference time': 13.082}}


Starting fold 3

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos	 examples: 277
Target test neg examples: 38883

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;true;false
0;false,true,true;follows(F, G), follows(G, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(H, I), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;false;true
1;false,true,false;follows(E, G), follows(G, E).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J), follows(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(D, C), recursion_accounttype(D, B).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), follows(A, D).;false;false
3;false;follows(E, A), follows(A, E).;true;true
3;false,true;follows(A, F), follows(E, F).;true;true
3;false,true,true;follows(E, G), recursion_accounttype(G, B).;false;false
3;false,true,false;follows(E, H), recursion_accounttype(H, B).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
3;false,false,false;follows(J, A).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(A, D).;true;false
4;true,true;recursion_accounttype(D, B).;false;true
4;true,true,false;tweets(C, E), follows(D, A).;false;false
4;false;follows(F, A).;false;true
4;false,false;tweets(A, G).;true;true
4;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
4;false,false,false;follows(A, I), recursion_accounttype(I, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), follows(D, A).;false;false
5;false;follows(E, A).;true;true
5;false,true;follows(E, F), follows(F, A).;false;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;tweets(A, D), follows(E, C).;false;false
6;false;follows(F, A).;true;true
6;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;false,false;tweets(A, I).;true;true
6;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
6;false,false,false;follows(A, K), follows(K, L).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G).;true;true
7;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
7;false,false,false;tweets(A, I).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(C, E), follows(E, A).;true;false
8;true,false,true;recursion_accounttype(E, B), follows(A, F).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H), follows(H, I).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
9;true;recursion_accounttype(D, B).;true;false
9;true,true;follows(A, E), follows(E, D).;false;false
9;false;follows(A, F), recursion_accounttype(F, B).;true;true
9;false,true;follows(A, G), follows(G, F).;false;false
9;false,false;tweets(A, H).;true;true
9;false,false,true;follows(A, I).;false;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 8.43e-08, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.14185106490048785;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.18018283340459706;  // std dev = 3.589, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   | | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.7518526675222027;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(E, G), interaction(G, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4131227916369946;  // std dev = 1.146, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), interaction(I, A) )
%   | | | then return 0.04787188470019249;  // std dev = 2.131, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | | else return 0.0985095435952898;  // std dev = 4.805, 166.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=44 */
%   | | else if ( function(A, J), interaction(A, K) )
%   | | | then return 0.18678058833717842;  // std dev = 3.601, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6379378292780871;  // std dev = 0.065, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7007903797400471;  // std dev = 0.027, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | else return -0.1357065876159456;  // std dev = 0.026, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.588232901061704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6671659814821149;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.09968170125780164;  // std dev = 3.667, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.07564486009906046;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.4333914774256058;  // std dev = 0.082, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3448917192727465;  // std dev = 0.747, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5481475466354448;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11612117004119289;  // std dev = 9.13e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5355775586651995;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.12142034661292182;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.05881864953876778;  // std dev = 3.973, 176.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=49 */
%   | | | else return 0.14308242505331265;  // std dev = 3.605, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.3172626480444869;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3260527368871007;  // std dev = 0.023, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.06687322368004098;  // std dev = 3.960, 185.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=56 */
%   | else if ( function(A, F) )
%   | | then if ( function(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5540607439155509;  // std dev = 2.012, 27.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=22 */
%   | | | else return -0.23168911156634592;  // std dev = 0.034, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.2530407883214063;  // std dev = 0.001, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.25941235373414157;  // std dev = 0.019, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then return 0.013865910976451894;  // std dev = 1.564, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.48879847396792503;  // std dev = 0.294, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.13348812077404937;  // std dev = 0.068, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6188795506557531;  // std dev = 0.545, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.22661914112575832;  // std dev = 0.430, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), interaction(E, C) )
%   | then return 0.21103057342285161;  // std dev = 0.019, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.20817399067216102;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.38870512429605675;  // std dev = 0.439, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.12017626381213298;  // std dev = 0.078, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | else if ( function(A, I) )
%   | | then if ( function(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3324911911966215;  // std dev = 1.616, 27.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=22 */
%   | | | else return -0.16054896469114588;  // std dev = 0.018, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.17909470686048115;  // std dev = 0.015, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.1757050595235686;  // std dev = 0.000826, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3023576284992266;  // std dev = 0.392, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1079952654337475;  // std dev = 0.064, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.39565669050066443;  // std dev = 0.417, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.17394079984102734;  // std dev = 0.523, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.15461277702710335;  // std dev = 0.013, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then if ( recursion_proteinclass(E, B), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.152344289920043;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.15150961187737483;  // std dev = 6.13e-05, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then return -0.004798749218564791;  // std dev = 2.249, 201.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=56 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.07135577032957852;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.01676254944730072;  // std dev = 1.909, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | else if ( function(A, J) )
%   | | | then return -0.014401821350861673;  // std dev = 0.481, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, D) )
%   | | then return 0.15180024037357953;  // std dev = 0.106, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.001568740989420721;  // std dev = 0.315, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else return -0.007063822840725977;  // std dev = 1.969, 160.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=43 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, F) )
%   | | then return 0.0667696602876342;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.13504156688933316;  // std dev = 0.061, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( function(A, H) )
%   | | then if ( interaction(A, I) )
%   | | | then return -0.006617971377275584;  // std dev = 1.899, 85.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=23 */
%   | | | else return 0.010329527882994244;  // std dev = 0.833, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.980236
   AUC PR    = 0.208495
   CLL	      = -0.181033
   Precision = 0.111022 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.199856


Total learning time: 1.521 seconds
Total inference time: 21.216 seconds
AUC ROC: 0.980236


Results scoring model
   AUC ROC   = 0.996491
   AUC PR    = 0.511404
   CLL	      = -0.1307
   Precision = 0.522727 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.686567


Total scoring time: 3.233 seconds
Parameter learned model CLL: -0.1307


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,true': 'interaction(F, G), interaction(G, A)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.0, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false': [0.913, 1, 5], 'false,false,true,true': [8.43e-08, 0, 52], 'false,false,true,false': [0.0, 128, 0], 'false,false,false,true': [3.589, 40, 19], 'false,false,false,false': [0.894, 4, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(E, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), interaction(I, A)', 'false,false,false': 'function(A, J), interaction(A, K)'}, {'true,true': [5.16e-08, 0, 14], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.146, 2, 4], 'false,false,true,true': [2.131, 31, 8], 'false,false,true,false': [4.805, 122, 44], 'false,false,false,true': [3.601, 37, 20], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 4], 'false,true,true,true': [0.065, 0, 4], 'false,true,true,false': [0.027, 0, 52], 'false,true,false': [0.026, 142, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.667, 46, 19], 'false,false,false,false': [0.866, 3, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'false': 'interaction(E, A), interaction(A, E)', 'false,true': 'interaction(A, F), interaction(E, F)', 'false,true,true': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(E, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.082, 0, 8], 'true,false': [0.747, 1, 6], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [9.13e-09, 14, 0], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [5.27e-09, 6, 0], 'false,false,true': [2.11e-08, 0, 6], 'false,false,false,true': [3.973, 127, 49], 'false,false,false,false': [3.605, 37, 20]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,false': 'function(A, F)', 'false,false,true': 'function(G, F), recursion_proteinclass(G, B)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.023, 0, 9], 'false,true': [3.96, 129, 56], 'false,false,true,true': [2.012, 5, 22], 'false,false,true,false': [0.034, 33, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true,true': [0.001, 0, 6], 'true,false': [0.019, 0, 8], 'false,true,true': [1.564, 29, 8], 'false,true,false,true': [0.294, 0, 48], 'false,true,false,false': [0.068, 129, 0], 'false,false,true,true': [0.545, 0, 22], 'false,false,true,false': [0.43, 45, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D), interaction(E, C)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(A, G), interaction(G, H)', 'false,false': 'function(A, I)', 'false,false,true': 'function(J, I), recursion_proteinclass(J, B)'}, {'true,true': [0.019, 0, 13], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.439, 0, 56], 'false,true,false': [0.078, 146, 0], 'false,false,true,true': [1.616, 5, 22], 'false,false,true,false': [0.018, 25, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.015, 0, 9], 'true,false': [0.000826, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.392, 0, 56], 'false,true,false': [0.064, 123, 0], 'false,false,true,true': [0.417, 0, 22], 'false,false,true,false': [0.523, 40, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(C, E), interaction(E, A)', 'true,false,true': 'recursion_proteinclass(E, B), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'function(A, J)'}, {'true,true': [0.013, 0, 8], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [6.13e-05, 0, 5], 'false,true': [2.249, 145, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.909, 44, 20], 'false,false,false,true': [0.481, 2, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(E, D)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(A, G), interaction(G, F)', 'false,false': 'function(A, H)', 'false,false,true': 'interaction(A, I)'}, {'true,true,true': [0.106, 0, 11], 'true,true,false': [0.315, 4, 3], 'true,false': [1.969, 117, 43], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.061, 0, 2], 'false,false,true,true': [1.899, 62, 23], 'false,false,true,false': [0.833, 19, 9], 'false,false,false': [0.0, 0, 0]}]]
[{'': [-2.5376526277146434e-16, 0.21418707639561335], 'false': [0.12244897959183662, 0.2080085998387544], 'false,false': [0.20543209876543284, 0.21484374999999956], 'false,false,false': [0.21832806664751458, 0.16000000000000003], 'false,false,true': [1.3664283380001927e-16, -2.7755575615628914e-17], 'false,true': [0.0, 0.1388888888888887], 'false,true,true': [nan, 0.0], 'true': [-2.5376526277146434e-16, -2.5376526277146434e-16]}, {'': [1.9032394707859825e-16, 0.16205486524562576], 'false': [0.1855909670621342, 0.1568841601787215], 'false,true': [0.0, 0.21877014054521007], 'false,true,false': [nan, 0.21877014054521007], 'false,false': [0.1351500557566443, 0.22755072680789443], 'false,false,false': [0.22755072680789443, nan], 'false,false,true': [0.1163996417431714, 0.1390674553241794], 'true': [1.9032394707859825e-16, nan]}, {'': [-2.5376526277146434e-16, 0.1582808319903504], 'false': [0.14051353503300204, 0.2076930753797516], 'false,false': [0.0015576077961637624, 0.2057729123115238], 'false,false,false': [0.2068639053254433, 0.18750000000000006], 'false,true': [0.0003514485852769462, 4.669340621741479e-06], 'false,false,true': [0.0, 0.0], 'false,true,true': [0.0010639340591918067, 1.4467503248601824e-05], 'true': [-1.7763568394002506e-16, 0.0]}, {'': [0.03962312861262, 0.11903339610069644], 'false': [0.04903934272942898, 0.12450778218861742], 'false,false': [7.401486830834377e-17, 0.12484456532815423], 'false,false,false': [0.0896921165779352, 0.22802207962870985], 'false,true': [0.027455737739436385, 0.08093367141371989], 'false,true,false': [0.0, 4.625929269271485e-18], 'true': [0.0008472755143743294, 0.07976121212666816], 'false,true,true': [0.0, 5.9476233462061954e-18]}, {'': [5.441469774874237e-05, 0.11851674305469637], 'false': [0.0847764607891153, 0.22026301107754107], 'false,false': [0.22026301107754107, nan], 'false,false,true': [0.14985796587199823, 3.586304756542764e-05], 'true': [0.0, 5.7050206150889414e-05], 'true,true': [0.0, nan]}, {'': [3.6337870046389475e-05, 0.09665975259719481], 'false': [0.07521906828304993, 0.16485413178058145], 'false,false': [0.16485413178058145, nan], 'false,false,true': [0.013517553154707151, 0.004108115020493219], 'false,true': [0.06608083709822746, 0.07705012775247973], 'false,true,false': [0.0018010611849767304, 3.5378802844089867e-05], 'true': [2.4984892047867174e-07, 4.60052376870107e-05]}, {'': [2.507067286234526e-05, 0.06566085220483671], 'false': [0.05287227081014201, 0.11091932439383669], 'false,false': [0.11091932439383669, nan], 'false,false,true': [0.09674032217698854, 1.3568449926206761e-05], 'false,true': [0.0034411662841395646, 4.1181364669988757e-05], 'false,true,true': [nan, 0.0034411662841395646], 'true': [2.641632437291234e-05, 0.0]}, {'': [1.9289982786127986e-05, 0.048517850614601024], 'false': [0.037082028440863515, 0.08148909024784798], 'false,false': [0.08148909024784798, nan], 'false,false,true': [0.007910633865673327, 0.006832908643879953], 'false,true': [0.0027471412805666973, 3.3658985772985466e-05], 'false,true,true': [nan, 0.0027471412805667133], 'true': [2.582728858444325e-05, 1.365908050776632e-07]}, {'': [1.4650092876643856e-05, 0.03325681669157464], 'false': [0.025157330496776074, 0.05711456084857923], 'false,false': [0.056186529166314544, 0.07722094838080967], 'false,false,false': [0.07722094838080967, nan], 'false,false,true': [0.0, 0.056944984634072056], 'true': [2.1799362094381686e-05, 9.738814585324995e-08], 'true,false': [0.0, 7.51202536286577e-10], 'true,false,true': [nan, 0.0]}, {'': [0.023861750360039485, 0.03752264665980943], 'false': [0.002270995655770623, 0.038118270550344474], 'false,false': [0.0381182705503445, nan], 'false,false,true': [0.042444930364372614, 0.0247677188076323], 'true': [0.011729059260315472, 0.024231144463530425], 'true,true': [0.0010209029318129401, 0.014181579346272071], 'false,true': [0.0, 0.0018528090733122317]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), function(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false,true;interaction(A, I), interaction(I, H).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(C, D), interaction(A, D).;true;true
3;false;interaction(E, A), interaction(A, E).;true;true
3;false,true;interaction(A, F), interaction(E, F).;true;true
3;false,true,true;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;false,true,false;interaction(E, H), recursion_proteinclass(H, B).;true;true
3;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), interaction(A, D).;true;true
4;false;interaction(E, A).;true;true
4;false,false;function(G, F), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, D), interaction(D, A).;true;true
5;false;interaction(E, A).;true;true
5;false,true;interaction(E, F), interaction(F, A).;true;true
5;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;function(A, D), interaction(E, C).;true;true
6;false;interaction(F, A).;true;true
6;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
6;false,false;function(J, I), recursion_proteinclass(J, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, D).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(C, E), interaction(E, A).;true;true
8;false;interaction(G, A).;true;true
8;false,false;interaction(A, H), interaction(H, I).;true;true
8;false,false,true;recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
9;true;recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(E, D).;true;true
9;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
9;false,true;interaction(A, G), interaction(G, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8392810105712104;  // std dev = 0.991, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.14185106490048804;  // std dev = 0.000, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.06867525088898598;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.1718744252955908;  // std dev = 3.314, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, D) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then if ( enzyme(G, I), enzyme(H, I) )
%   | | | then return -0.12544463852839136;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.11278985248044639;  // std dev = 2.879, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | else if ( complex(A, J), enzyme(A, K) )
%   | | | then return 0.11168498020623027;  // std dev = 2.419, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return 0.17184941382529967;  // std dev = 4.985, 134.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=46 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6931680801793708;  // std dev = 0.045, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.1355203899407027;  // std dev = 0.055, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return -0.143476483064297;  // std dev = 0.029, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.06302968890347468;  // std dev = 1.946, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.19714867698860586;  // std dev = 3.041, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.41751358415830986;  // std dev = 1.05e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.21026806671640896;  // std dev = 0.718, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( interaction(A, G), interaction(F, G) )
%   | | then return -0.0836671426422755;  // std dev = 0.203, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5386132262067607;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.10130359404485818;  // std dev = 0.023, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.08305183083429137;  // std dev = 3.349, 92.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=28 */
%   | | | else return 0.04321707636843501;  // std dev = 4.303, 157.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=41 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.23005553403648232;  // std dev = 0.304, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.48363556514646944;  // std dev = 0.641, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return -0.12557468916567716;  // std dev = 0.099, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.17328128614742894;  // std dev = 0.713, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.06194280279801821;  // std dev = 2.935, 95.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=29 */
%   | else if ( function(I, J), recursion_proteinclass(I, B) )
%   | | then if ( location(A, K) )
%   | | | then return 0.39493461265163043;  // std dev = 2.629, 31.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   | | | else return 0.0499557479437044;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return -0.2170705810101227;  // std dev = 0.020, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2726324935996477;  // std dev = 0.019, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.06739001383282756;  // std dev = 0.532, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.017824348361077033;  // std dev = 1.393, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4161992391383969;  // std dev = 1.013, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.12686189042524806;  // std dev = 0.160, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6547864359155701;  // std dev = 0.439, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.219933462323925;  // std dev = 0.208, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.01217713791912902;  // std dev = 1.675, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.10662001231603171;  // std dev = 2.021, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), interaction(E, C) )
%   | then return 0.22209924160143538;  // std dev = 0.018, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.22214835466052407;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.30572299281490134;  // std dev = 0.950, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return 0.36380999407805975;  // std dev = 0.428, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.11585822052281058;  // std dev = 0.015, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | else if ( function(I, J), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.18362951023106203;  // std dev = 2.834, 39.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=21 */
%   | | | else return -0.0455031320114857;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(A, M) )
%   | | | then return -0.15733991430636282;  // std dev = 0.044, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.1984555006215466;  // std dev = 0.069, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.1861591596320957;  // std dev = 0.019, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.18613994619437835;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.2393009462944558;  // std dev = 0.988, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return 0.28604452156947135;  // std dev = 0.378, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.10655679496358825;  // std dev = 0.012, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.46516782156548614;  // std dev = 0.368, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.19760098275389554;  // std dev = 0.349, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.10766436665996058;  // std dev = 1.431, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.28699926137695103;  // std dev = 1.535, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.15964850535745823;  // std dev = 0.018, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.15956865853113203;  // std dev = 3.41e-06, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F) )
%   | | then if ( enzyme(F, G) )
%   | | | then return -0.04076565786361331;  // std dev = 0.691, 31.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=4 */
%   | | | else return -0.006319429419699858;  // std dev = 1.025, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.010016444011436022;  // std dev = 1.540, 85.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=27 */
%   | | | else return -0.028720188118695672;  // std dev = 1.075, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.19016968343524387;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.03761172584208179;  // std dev = 2.686, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | else return 0.691393732889067;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, D) )
%   | | then return 0.16088197674003285;  // std dev = 0.056, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.13931017577030236;  // std dev = 9.70e-06, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.0039202602983506325;  // std dev = 0.157, 141.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=43 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, F) )
%   | | then return -0.33740939798948677;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.10467016824057396;  // std dev = 0.039, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3803115257442975;  // std dev = 0.060, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.13618034410440574;  // std dev = 0.248, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(A, K), enzyme(A, L) )
%   | | | then return -0.038011568968302586;  // std dev = 1.636, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return -0.008070985397432128;  // std dev = 2.144, 58.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */


Results
   AUC ROC   = 0.982883
   AUC PR    = 0.225027
   CLL	      = -0.183334
   Precision = 0.09967 at threshold = 0.5
   Recall    = 0.981949
   F1        = 0.180971


Total learning time: 5.569 seconds
Total inference time: 39.065 seconds
AUC ROC: 0.982883


Results scoring model
   AUC ROC   = 0.994204
   AUC PR    = 0.542009
   CLL	      = -0.148082
   Precision = 0.445055 at threshold = 0.5
   Recall    = 0.880435
   F1        = 0.591241


Total scoring time: 9.03 seconds
Refined model CLL: -0.148082


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.980236
   AUC PR    = 0.208495
   CLL	      = -0.181033
   Precision = 0.111022 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.199856


Total learning time: 19.353 seconds
Total inference time: 21.216 seconds
AUC ROC: 0.980236
Total revision time: 19.353
Best scored revision CLL: -0.1307


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:31:43
{'AUC ROC': 0.980236, 'AUC PR': 0.208495, 'CLL': -0.181033, 'Precision': [0.111022, 0.5], 'Recall': 1.0, 'F1': 0.199856, 'Learning time': 19.353, 'Inference time': 21.216, 'parameter': {'AUC ROC': 0.980236, 'AUC PR': 0.208495, 'CLL': -0.181033, 'Precision': [0.111022, 0.5], 'Recall': 1.0, 'F1': 0.199856, 'Learning time': 1.521, 'Inference time': 21.216}}


Starting fold 4

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos	 examples: 283
Target test neg examples: 40479

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;true;false
0;false,true,true;follows(F, G), follows(G, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(H, I), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;false;true
1;false,true,false;follows(E, G), follows(G, E).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J), follows(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(D, C), recursion_accounttype(D, B).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), follows(A, D).;false;false
3;false;follows(E, A), follows(A, E).;true;true
3;false,true;follows(A, F), follows(E, F).;true;true
3;false,true,true;follows(E, G), recursion_accounttype(G, B).;false;false
3;false,true,false;follows(E, H), recursion_accounttype(H, B).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
3;false,false,false;follows(J, A).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(A, D).;true;false
4;true,true;recursion_accounttype(D, B).;false;true
4;true,true,false;tweets(C, E), follows(D, A).;false;false
4;false;follows(F, A).;false;true
4;false,false;tweets(A, G).;true;true
4;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
4;false,false,false;follows(A, I), recursion_accounttype(I, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), follows(D, A).;false;false
5;false;follows(E, A).;true;true
5;false,true;follows(E, F), follows(F, A).;false;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;tweets(A, D), follows(E, C).;false;false
6;false;follows(F, A).;true;true
6;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;false,false;tweets(A, I).;true;true
6;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
6;false,false,false;follows(A, K), follows(K, L).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G).;true;true
7;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
7;false,false,false;tweets(A, I).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(C, E), follows(E, A).;true;false
8;true,false,true;recursion_accounttype(E, B), follows(A, F).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H), follows(H, I).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
9;true;recursion_accounttype(D, B).;true;false
9;true,true;follows(A, E), follows(E, D).;false;false
9;false;follows(A, F), recursion_accounttype(F, B).;true;true
9;false,true;follows(A, G), follows(G, F).;false;false
9;false,false;tweets(A, H).;true;true
9;false,false,true;follows(A, I).;false;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7748156017661781;  // std dev = 1.658, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | | | else return -0.14185106490048766;  // std dev = 7.45e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.17064893509951212;  // std dev = 3.708, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | | else return 0.2812258581764354;  // std dev = 2.519, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.6709416005653103;  // std dev = 0.982, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, E), interaction(E, G) )
%   | | | then return 0.7733921696315487;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.7733921696315487;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.04933742102932022;  // std dev = 2.878, 69.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=14 */
%   | | | else return 0.1343504636033096;  // std dev = 3.138, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | | else if ( function(A, J), interaction(K, A) )
%   | | | then return 0.1469523944027466;  // std dev = 4.603, 98.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=31 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.5727250005118766;  // std dev = 0.034, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.3443603485772917;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.5928761360959484;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7163681805381265;  // std dev = 0.049, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.135109203492003;  // std dev = 0.049, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0.6116309857707802;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6116309857707802;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.10905225942517038;  // std dev = 3.757, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | | else return 0.1769846696500537;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.42325892654626507;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.4703872452160784;  // std dev = 0.043, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5264600420779433;  // std dev = 0.024, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.11728342270310382;  // std dev = 0.012, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.5505068147594084;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.11891259905863204;  // std dev = 0.011, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.4904319164879635;  // std dev = 0.066, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.04924243827482951;  // std dev = 3.189, 111.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=29 */
%   | | | else return 0.10465729980532798;  // std dev = 4.598, 98.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=31 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.32627653192631717;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( function(C, E), interaction(A, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.39347533312667526;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.3724285284793266;  // std dev = 0.061, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F) )
%   | then return 0.033661190776993186;  // std dev = 3.368, 141.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=36 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4965383261590821;  // std dev = 2.864, 45.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=34 */
%   | | | else return -0.23059420659080446;  // std dev = 0.110, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.2630426584547548;  // std dev = 0.044, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.01124517533919654;  // std dev = 1.221, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return 0.006135280511561507;  // std dev = 2.240, 77.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=15 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.48654949935920544;  // std dev = 0.311, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.13044201980087833;  // std dev = 0.053, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5826337673958651;  // std dev = 1.423, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | | | else return -0.24008192133567932;  // std dev = 0.744, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D), interaction(C, E) )
%   | then return 0.23199103402773494;  // std dev = 0.134, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.28550573549213437;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.21182359494983372;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.43922508473664273;  // std dev = 0.523, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.11923332450379379;  // std dev = 0.067, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( function(A, I) )
%   | | then if ( function(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.2978445668427737;  // std dev = 2.373, 46.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=34 */
%   | | | else return -0.1563786615429788;  // std dev = 0.067, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.13033450226488572;  // std dev = 0.934, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.20765106562134125;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F), interaction(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.30965387208294454;  // std dev = 1.018, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | else return -0.10833904790598188;  // std dev = 0.060, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.39886607639201155;  // std dev = 1.138, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | | | else return -0.1958284124577295;  // std dev = 0.769, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.1657509688058865;  // std dev = 0.070, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then if ( recursion_proteinclass(E, B), interaction(F, A) )
%   | | | then return 0.1572368003880522;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.15892900736366278;  // std dev = 0.017, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.22214160663970609;  // std dev = 0.016, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G) )
%   | then return -0.006073854311401419;  // std dev = 1.993, 142.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=36 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.4232064857316163;  // std dev = 0.624, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.014148860518472894;  // std dev = 1.992, 70.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=22 */
%   | | else if ( function(A, J) )
%   | | | then return -8.581535320361316E-4;  // std dev = 1.379, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(D, E) )
%   | | then return 0.15479418905735817;  // std dev = 0.119, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.2037186822052937;  // std dev = 0.198, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.0080617464729985;  // std dev = 2.045, 105.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=28 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0.12126327786671165;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.18917033999598734;  // std dev = 0.664, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( function(A, H) )
%   | | then if ( interaction(I, A) )
%   | | | then return -0.010291300064784539;  // std dev = 2.612, 113.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=33 */
%   | | | else return -0.012544025288624012;  // std dev = 0.511, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.988031
   AUC PR    = 0.262611
   CLL	      = -0.168551
   Precision = 0.1806 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.305946


Total learning time: 1.913 seconds
Total inference time: 22.524 seconds
AUC ROC: 0.988031


Results scoring model
   AUC ROC   = 0.991154
   AUC PR    = 0.321566
   CLL	      = -0.153552
   Precision = 0.296552 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.457447


Total scoring time: 3.812 seconds
Parameter learned model CLL: -0.153552


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(A, F)', 'false,true,true': 'interaction(G, F), interaction(A, G)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.943, 1, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false': [1.195, 2, 5], 'false,false,true,true': [1.658, 3, 33], 'false,false,true,false': [7.45e-08, 77, 0], 'false,false,false,true': [3.708, 44, 20], 'false,false,false,false': [2.519, 15, 11]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, E), interaction(E, G)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'function(A, J), interaction(K, A)'}, {'true,true': [0.982, 1, 16], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 4], 'false,false,true,true': [2.878, 55, 14], 'false,false,true,false': [3.138, 44, 19], 'false,false,false,true': [4.603, 67, 31], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(H, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true': [0.034, 0, 10], 'true,false': [1.225, 2, 6], 'false,true,true,true': [0.046, 0, 3], 'false,true,true,false': [0.049, 0, 33], 'false,true,false': [0.049, 101, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 2], 'false,false,false,true': [3.757, 48, 20], 'false,false,false,false': [2.613, 18, 11]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'false': 'interaction(A, E), interaction(E, A)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false,true,true': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(H, E), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.016, 0, 9], 'true,false': [0.043, 0, 6], 'false,true,true,true': [0.024, 0, 2], 'false,true,true,false': [0.012, 19, 0], 'false,true,false,true': [0.017, 0, 3], 'false,true,false,false': [0.011, 7, 0], 'false,false,true': [0.066, 0, 6], 'false,false,false,true': [3.189, 82, 29], 'false,false,false,false': [4.598, 67, 31]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'true,true,false': 'function(C, E), interaction(A, D)', 'false': 'interaction(A, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true,true': [0.0, 0, 8], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.061, 0, 7], 'false,true': [3.368, 105, 36], 'false,false,true,true': [2.864, 11, 34], 'false,false,true,false': [0.11, 52, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true,true': [0.044, 0, 11], 'true,false': [1.221, 2, 5], 'false,true,true': [2.24, 62, 15], 'false,true,false,true': [0.311, 0, 21], 'false,true,false,false': [0.053, 47, 0], 'false,false,true,true': [1.423, 2, 34], 'false,false,true,false': [0.744, 69, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D), interaction(C, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(G, A), interaction(H, G)', 'false,false': 'function(A, I)', 'false,false,true': 'function(J, I), recursion_proteinclass(J, B)'}, {'true,true': [0.134, 0, 13], 'true,false': [0.041, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.523, 0, 35], 'false,true,false': [0.067, 100, 0], 'false,false,true,true': [2.373, 12, 34], 'false,false,true,false': [0.067, 38, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F), interaction(F, A)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [0.934, 1, 13], 'true,false': [0.05, 0, 3], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.018, 1, 36], 'false,true,false': [0.06, 94, 0], 'false,false,true,true': [1.138, 1, 34], 'false,false,true,false': [0.769, 67, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)', 'true,false': 'interaction(E, C), interaction(A, E)', 'true,false,true': 'recursion_proteinclass(E, B), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'function(A, J)'}, {'true,true': [0.07, 0, 9], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.017, 0, 2], 'true,false,false': [0.016, 0, 4], 'false,true': [1.993, 106, 36], 'false,false,true,true': [0.624, 2, 1], 'false,false,true,false': [1.992, 48, 22], 'false,false,false,true': [1.379, 25, 11], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(D, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, A), interaction(F, G)', 'false,false': 'function(A, H)', 'false,false,true': 'interaction(I, A)'}, {'true,true,true': [0.119, 0, 14], 'true,true,false': [0.198, 0, 5], 'true,false': [2.045, 77, 28], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.664, 1, 2], 'false,false,true,true': [2.612, 80, 33], 'false,false,true,false': [0.511, 9, 3], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.055363321799307655, 0.22169313357741435], 'false': [0.1874999999999999, 0.21587517289912447], 'false,false': [0.20675072441068348, 0.22580246913580385], 'false,false,false': [0.21484374999999956, 0.24408284023668594], 'false,false,true': [0.07638888888889046, 7.209240419643874e-17], 'false,true': [0.0, 0.20408163265306106], 'true': [-2.220446049250313e-16, 0.09876543209876527], 'false,true,true': [nan, 0.0]}, {'': [0.056693271511133576, 0.1788768032897903], 'false': [0.00040378227802510364, 0.1727848270990514], 'false,false': [0.13913522265511324, 0.2162414855626336], 'false,false,false': [0.2162414855626336, nan], 'false,false,true': [0.12001301849128199, 0.15630072547533183], 'true': [0.056693271511133576, nan], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 0.0]}, {'': [0.09627499108988394, 0.171891090620953], 'false': [0.1374346431153528, 0.21715869688338263], 'false,false': [0.0, 0.21689744252808202], 'false,false,false': [0.2076124567474046, 0.23543400713436388], 'false,true': [0.0012899796809339786, 2.4206018965765914e-05], 'true': [0.00011702207147799016, 0.18750000000000003], 'false,true,true': [0.0007034887726510656, 7.243994952300558e-05], 'false,false,true': [0.0, 0.0]}, {'': [0.0006731582648901242, 0.14050183612489942], 'false': [0.05873771862567508, 0.15107319722045917], 'false,false': [0.0007206347444935387, 0.15057849907774415], 'false,false,false': [0.09162259238854682, 0.21572418026410153], 'false,true': [0.03574304231573613, 0.09414674395237255], 'false,true,false': [9.801889259627068e-05, 1.6634927615725793e-05], 'false,true,true': [0.0002905694562891914, 7.676949974459066e-06], 'true': [2.7522081253314764e-05, 0.00030896548795929696]}, {'': [0.0008549337229400156, 0.13706982464858403], 'false': [0.08045678982952446, 0.2161994873069202], 'false,false': [0.2161994873069202, nan], 'false,false,true': [0.18232202103532613, 0.00023325317660089368], 'true': [0.0004459929760755414, 0.000538896840205884], 'true,true': [-4.163336342344337e-17, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.09804997878145955, 0.11738726937768948], 'false': [0.07412658656027464, 0.17706366420336103], 'false,false': [0.17706366420336103, nan], 'false,false,true': [0.05626822982016192, 0.008020704704079094], 'true': [0.000173234147595786, 0.21311064191438517], 'false,true': [0.06517387145168442, 0.08271777590460745], 'false,true,false': [0.004596850260269908, 6.038167930927728e-05]}, {'': [0.0016616057149496793, 0.08432420084854568], 'false': [0.06175020275560497, 0.11822521624648404], 'false,false': [0.11822521624648404, nan], 'false,false,true': [0.12245592396097947, 0.00011976065893509454], 'false,true': [0.00899088949633415, 4.519894821121362e-05], 'false,true,true': [0.0, 0.007811343232337263], 'true': [0.0013781592865927522, 0.0005630171619937138]}, {'': [0.05231541973794612, 0.06736919146107712], 'false': [0.04335207023926808, 0.09821346737373737], 'false,false': [0.09821346737373737, nan], 'false,false,true': [0.03703299685702773, 0.00881896635085103], 'true': [0.062290739846844266, 0.0008409898040955081], 'false,true': [0.02802153300283187, 3.857565647638912e-05], 'false,true,true': [nan, 0.028021533002831896]}, {'': [0.0009816007744119087, 0.042950467466135275], 'false': [0.027966148668903, 0.06246542464454996], 'false,false': [0.0672182807745181, 0.0528217949698748], 'false,false,true': [0.129876267016984, 0.056672128963413886], 'false,false,false': [0.0528217949698748, nan], 'true': [0.0005406231713681721, 0.0010736225277489678], 'true,false': [9.140308099064853e-05, 6.708850623676765e-05], 'true,false,true': [0.0, 0.00013615010000320518]}, {'': [0.0382292633476037, 0.059201794241738714], 'false': [0.12822254001226271, 0.05667647963373277], 'false,true': [0.0, 0.14687112890818593], 'false,false': [0.05667647963373274, nan], 'false,false,true': [0.06038808826032778, 0.02172091080703861], 'true': [0.003277378121888009, 0.039822075829829585], 'true,true': [0.0010191440979911584, 0.00783672368264381]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), function(A, D).;true;true
0;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(F, A), interaction(A, F).;true;true
0;false,false;interaction(A, H).;true;true
0;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(G, E), interaction(E, G).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
2;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false,true;interaction(I, A), interaction(H, I).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, C), interaction(D, A).;true;true
3;false;interaction(A, E), interaction(E, A).;true;true
3;false,true;interaction(F, A), interaction(F, E).;true;true
3;false,true,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,false;interaction(H, E), recursion_proteinclass(H, B).;true;true
3;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), interaction(D, A).;true;true
4;true,true;recursion_proteinclass(D, B).;true;true
4;false;interaction(A, F).;true;true
4;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), interaction(A, D).;true;true
5;false;interaction(A, E).;true;true
5;false,true;interaction(F, E), interaction(A, F).;true;true
5;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;function(A, D), interaction(C, E).;true;true
6;false;interaction(A, F).;true;true
6;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
6;false,true,true;interaction(G, A), interaction(H, G).;true;true
6;false,false;function(J, I), recursion_proteinclass(J, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, A).;true;true
7;false;interaction(A, E).;true;true
7;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(E, C), interaction(A, E).;true;true
8;true,false,true;recursion_proteinclass(E, B), interaction(F, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
9;true;recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(D, E).;true;true
9;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
9;false,true;interaction(G, A), interaction(F, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(E, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(A, G) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8010060779566543;  // std dev = 1.373, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | | else return -0.14185106490048763;  // std dev = 8.43e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.1914822684328457;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.11856560176617824;  // std dev = 4.300, 96.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=25 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then return 0.7281276940338212;  // std dev = 0.018, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4405589193574927;  // std dev = 0.456, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, E), interaction(E, G) )
%   | | | then return 0.21947341221095448;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(H, A), complex(A, I) )
%   | | | then return -0.16650024874280106;  // std dev = 0.172, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.05830188964273448;  // std dev = 3.051, 73.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=16 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.13216167382560254;  // std dev = 4.872, 123.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=36 */
%   | | | else return 0.2243714676640959;  // std dev = 2.436, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.5662487107771504;  // std dev = 0.026, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then return 0.10537930268133794;  // std dev = 1.036, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.6173371507900676;  // std dev = 0.090, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.5946210836197362;  // std dev = 0.096, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7066898702193148;  // std dev = 0.081, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.13470046566550137;  // std dev = 0.012, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.12346641509364778;  // std dev = 3.732, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | | | else return 0.24471813830858952;  // std dev = 2.522, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.41224004187214436;  // std dev = 0.001, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E) )
%   | | then return 0.5125333646651535;  // std dev = 0.136, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.19854919409186744;  // std dev = 0.759, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.03784572926995343;  // std dev = 0.206, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.546045185108801;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12359312204812092;  // std dev = 0.010, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.47078899642949446;  // std dev = 0.096, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.020699774844263708;  // std dev = 3.152, 81.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=18 */
%   | | | else return 0.10075037625641077;  // std dev = 4.613, 134.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=42 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.3346420258366652;  // std dev = 0.048, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.39335445518494455;  // std dev = 0.093, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( enzyme(A, H), interaction(F, F) )
%   | | | then return 0.31279559765737486;  // std dev = 0.540, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.011334603466996133;  // std dev = 2.260, 72.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=15 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.16371847372339654;  // std dev = 0.828, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.06718209418292004;  // std dev = 2.043, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | else if ( function(K, L), recursion_proteinclass(K, B) )
%   | | then if ( phenotype(A, M) )
%   | | | then return 0.24216624603727602;  // std dev = 3.240, 45.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=22 */
%   | | | else return 0.5313297449153793;  // std dev = 1.735, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | else return -0.21643683143889209;  // std dev = 0.015, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.28373336473391503;  // std dev = 0.070, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), interaction(A, E) )
%   | | then if ( interaction(F, A), interaction(A, F) )
%   | | | then return -0.08079680552078218;  // std dev = 0.486, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | | else return -0.0014148972594866605;  // std dev = 2.262, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.479760801045858;  // std dev = 0.295, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.14020400189754878;  // std dev = 0.114, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6864153742307412;  // std dev = 0.404, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.21715857380582654;  // std dev = 0.168, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return -0.035584156389072245;  // std dev = 1.844, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.07917458884791394;  // std dev = 3.340, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D), interaction(C, E) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then return 0.20296343824757246;  // std dev = 0.007, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.3032662633780637;  // std dev = 0.177, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.032771838106931794;  // std dev = 0.872, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.2183037361876924;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3884623148314308;  // std dev = 1.322, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | else return -0.12288715748596686;  // std dev = 0.019, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( function(J, K), recursion_proteinclass(J, B) )
%   | | then if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.5581023570284166;  // std dev = 0.823, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.2135761025532219;  // std dev = 3.256, 49.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=27 */
%   | | else return -0.17884592565980412;  // std dev = 0.025, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then if ( recursion_proteinclass(E, B), phenotype(A, G) )
%   | | | then return -0.028360837990027504;  // std dev = 0.699, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.21250302911213967;  // std dev = 0.186, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.2125116105586339;  // std dev = 1.052, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.22720815264779579;  // std dev = 0.060, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, H) )
%   | then return -0.00952462870549884;  // std dev = 0.190, 156.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=36 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( complex(I, K) )
%   | | | then return 0.06662910412639311;  // std dev = 2.343, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | | else return -0.008964838990204992;  // std dev = 2.887, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.18186267714718363;  // std dev = 0.924, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.13460556881562233;  // std dev = 0.944, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1857099081045645;  // std dev = 0.045, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(F, A), interaction(F, D) )
%   | | then if ( enzyme(D, G), complex(D, H) )
%   | | | then return 0.04679303419740258;  // std dev = 0.513, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.04658994127846001;  // std dev = 1.252, 45.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=7 */
%   | | else if ( location(D, E), phenotype(D, I) )
%   | | | then return 0.002026560716946553;  // std dev = 1.335, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | | else return 0.07308893724645574;  // std dev = 1.209, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(L, J), complex(L, K) )
%   | | | then return 0.20461391395335032;  // std dev = 1.748, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return -0.029624928914182808;  // std dev = 1.386, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.022699040596291135;  // std dev = 2.751, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | | else return -0.010092297621029362;  // std dev = 1.321, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(D, E) )
%   | | then return 0.19303845034256492;  // std dev = 0.076, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.036010962954093576;  // std dev = 0.422, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else return -0.026650794712291096;  // std dev = 0.186, 139.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=28 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0.25347022965763355;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.11699677175520425;  // std dev = 0.775, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), interaction(J, J) )
%   | | | then return 0.18047447861260774;  // std dev = 1.290, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.03501640291410203;  // std dev = 3.179, 72.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=24 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.11937613758236543;  // std dev = 1.653, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.07951665053884265;  // std dev = 0.762, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.967909
   AUC PR    = 0.228298
   CLL	      = -0.230129
   Precision = 0.125 at threshold = 0.5
   Recall    = 0.689046
   F1        = 0.211612


Total learning time: 8.642 seconds
Total inference time: 148.982 seconds
AUC ROC: 0.967909


Results scoring model
   AUC ROC   = 0.976761
   AUC PR    = 0.288041
   CLL	      = -0.204647
   Precision = 0.250996 at threshold = 0.5
   Recall    = 0.732558
   F1        = 0.373887


Total scoring time: 11.654 seconds
Refined model CLL: -0.204647


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.988031
   AUC PR    = 0.262611
   CLL	      = -0.168551
   Precision = 0.1806 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.305946


Total learning time: 26.021 seconds
Total inference time: 22.524 seconds
AUC ROC: 0.988031
Total revision time: 26.021
Best scored revision CLL: -0.153552


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:35:01
{'AUC ROC': 0.988031, 'AUC PR': 0.262611, 'CLL': -0.168551, 'Precision': [0.1806, 0.5], 'Recall': 1.0, 'F1': 0.305946, 'Learning time': 26.021, 'Inference time': 22.524, 'parameter': {'AUC ROC': 0.988031, 'AUC PR': 0.262611, 'CLL': -0.168551, 'Precision': [0.1806, 0.5], 'Recall': 1.0, 'F1': 0.305946, 'Learning time': 1.913, 'Inference time': 22.524}}


Starting fold 1

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos	 examples: 282
Target test neg examples: 39912

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;true;false
0;false,true,true;follows(F, G), follows(G, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(H, I), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;false;true
1;false,true,false;follows(E, G), follows(G, E).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J), follows(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(D, C), recursion_accounttype(D, B).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), follows(A, D).;false;false
3;false;follows(E, A), follows(A, E).;true;true
3;false,true;follows(A, F), follows(E, F).;true;true
3;false,true,true;follows(E, G), recursion_accounttype(G, B).;false;false
3;false,true,false;follows(E, H), recursion_accounttype(H, B).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
3;false,false,false;follows(J, A).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(A, D).;true;false
4;true,true;recursion_accounttype(D, B).;false;true
4;true,true,false;tweets(C, E), follows(D, A).;false;false
4;false;follows(F, A).;false;true
4;false,false;tweets(A, G).;true;true
4;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
4;false,false,false;follows(A, I), recursion_accounttype(I, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), follows(D, A).;false;false
5;false;follows(E, A).;true;true
5;false,true;follows(E, F), follows(F, A).;false;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;tweets(A, D), follows(E, C).;false;false
6;false;follows(F, A).;true;true
6;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;false,false;tweets(A, I).;true;true
6;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
6;false,false,false;follows(A, K), follows(K, L).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G).;true;true
7;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
7;false,false,false;tweets(A, I).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(C, E), follows(E, A).;true;false
8;true,false,true;recursion_accounttype(E, B), follows(A, F).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H), follows(H, I).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
9;true;recursion_accounttype(D, B).;true;false
9;true,true;follows(A, E), follows(E, D).;false;false
9;false;follows(A, F), recursion_accounttype(F, B).;true;true
9;false,true;follows(A, G), follows(G, F).;false;false
9;false,false;tweets(A, H).;true;true
9;false,false,true;follows(A, I).;false;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8287371703936293;  // std dev = 0.985, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | | else return -0.14185106490048766;  // std dev = 7.60e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.18558256341809498;  // std dev = 4.988, 113.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=37 */
%   | | | else return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.636140078877621;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.7670719622367217;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, E), interaction(E, G) )
%   | | | then return -0.23292803776327828;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.7670719622367217;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.07064692205443346;  // std dev = 3.086, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.14681640898354142;  // std dev = 2.806, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | else if ( function(A, J), interaction(K, A) )
%   | | | then return 0.15611889994817363;  // std dev = 5.205, 124.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.5758380177364986;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5758380177364986;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6741835002685574;  // std dev = 0.979, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | else return -0.1368920610281141;  // std dev = 0.043, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0.6046262796882593;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.271292946354926;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.10261088512745302;  // std dev = 5.121, 127.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=37 */
%   | | | else return 0.17888139958427685;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.43535180882513136;  // std dev = 0.021, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5382963863899124;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5563674696777198;  // std dev = 4.71e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.11835548982080984;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.5563674696777199;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11835548982080976;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.43287590919988467;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.044687565780838365;  // std dev = 2.667, 81.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=21 */
%   | | | else return 0.12961053606359513;  // std dev = 5.154, 119.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=40 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.3305986196978008;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3310097352493245;  // std dev = 0.000475, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then return 0.03250134369930419;  // std dev = 3.049, 133.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=33 */
%   | else if ( function(A, F) )
%   | | then if ( function(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.3962895756074302;  // std dev = 3.871, 67.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=43 */
%   | | | else return -0.22785927228673675;  // std dev = 0.038, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.26195747736207287;  // std dev = 0.000374, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2621472999359837;  // std dev = 0.000391, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return 0.045151153985854765;  // std dev = 2.051, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.518260377860945;  // std dev = 2.98e-08, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.13531758319743986;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5883801014143839;  // std dev = 1.885, 47.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=43 */
%   | | | else return -0.2158736387804124;  // std dev = 0.395, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D), interaction(C, E) )
%   | then return 0.11536491446300924;  // std dev = 0.842, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.2146728928047492;  // std dev = 0.000341, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.35631319650355003;  // std dev = 1.420, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | else return -0.11916217962224805;  // std dev = 0.058, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( function(A, I) )
%   | | then if ( function(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.32497143334824097;  // std dev = 2.826, 57.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=43 */
%   | | | else return -0.16678024402346955;  // std dev = 0.233, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.19271764621328358;  // std dev = 0.019, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.18081539482390085;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F), interaction(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3056629042185099;  // std dev = 0.918, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | else return -0.10668526889495485;  // std dev = 0.046, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.30928977867400637;  // std dev = 2.438, 52.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=43 */
%   | | | else return -0.1770540121203346;  // std dev = 0.729, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.16544727995948366;  // std dev = 0.013, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then if ( recursion_proteinclass(E, B), interaction(F, A) )
%   | | | then return 0.16741595407528975;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.741316301001662;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.15478065823428966;  // std dev = 0.001, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G) )
%   | then return 0.0036150086933529504;  // std dev = 2.012, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.0320619076291358;  // std dev = 0.964, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.025480902406439056;  // std dev = 2.984, 102.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=37 */
%   | | else if ( function(A, J) )
%   | | | then return -0.04774611631197127;  // std dev = 0.987, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(D, E) )
%   | | then return 0.16649113301186486;  // std dev = 0.963, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else return 0.19654287605413417;  // std dev = 0.072, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.051732463128857396;  // std dev = 1.363, 50.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=8 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return -0.48873945911153643;  // std dev = 0.714, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.12190294932485335;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( function(A, H) )
%   | | then if ( interaction(I, A) )
%   | | | then return 0.01004812485538283;  // std dev = 3.225, 165.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=51 */
%   | | | else return 0.01731030127869479;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.988778
   AUC PR    = 0.307876
   CLL	      = -0.167698
   Precision = 0.208799 at threshold = 0.5
   Recall    = 0.992908
   F1        = 0.34504


Total learning time: 2.445 seconds
Total inference time: 18.514 seconds
AUC ROC: 0.988778


Results scoring model
   AUC ROC   = 0.988652
   AUC PR    = 0.358754
   CLL	      = -0.168675
   Precision = 0.19863 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.331429


Total scoring time: 6.55 seconds
Parameter learned model CLL: -0.168675


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(A, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.0, 0, 4], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.866, 1, 3], 'false,false,true,true': [0.985, 1, 33], 'false,false,true,false': [7.6e-08, 80, 0], 'false,false,false,true': [4.988, 76, 37], 'false,false,false,false': [1.369, 5, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, E), interaction(E, G)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'function(A, J), interaction(K, A)'}, {'true,true': [0.957, 1, 11], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 2, 0], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [3.086, 56, 17], 'false,false,true,false': [2.806, 34, 16], 'false,false,false,true': [5.205, 84, 40], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(H, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.0, 0, 3], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.979, 1, 33], 'false,true,false': [0.043, 96, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.816, 1, 2], 'false,false,false,true': [5.121, 90, 37], 'false,false,false,false': [1.369, 5, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'false': 'interaction(A, E), interaction(E, A)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false,true,true': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(H, E), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.021, 0, 9], 'true,false': [0.0, 0, 2], 'false,true,true,true': [4.71e-08, 0, 11], 'false,true,true,false': [0.0, 47, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 1, 0], 'false,false,true': [1.05e-08, 0, 3], 'false,false,false,true': [2.667, 60, 21], 'false,false,false,false': [5.154, 79, 40]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,false': 'function(A, F)', 'false,false,true': 'function(G, F), recursion_proteinclass(G, B)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.000475, 0, 4], 'false,true': [3.049, 100, 33], 'false,false,true,true': [3.871, 24, 43], 'false,false,true,false': [0.038, 68, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true,true': [0.000374, 0, 8], 'true,false': [0.000391, 0, 3], 'false,true,true': [2.051, 40, 17], 'false,true,false,true': [2.98e-08, 0, 16], 'false,true,false,false': [0.0, 33, 0], 'false,false,true,true': [1.885, 4, 43], 'false,false,true,false': [0.395, 68, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D), interaction(C, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(G, A), interaction(H, G)', 'false,false': 'function(A, I)', 'false,false,true': 'function(J, I), recursion_proteinclass(J, B)'}, {'true,true': [0.842, 1, 8], 'true,false': [0.000341, 0, 3], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.42, 2, 33], 'false,true,false': [0.058, 98, 0], 'false,false,true,true': [2.826, 14, 43], 'false,false,true,false': [0.233, 62, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F), interaction(F, A)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [0.019, 0, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.918, 1, 33], 'false,true,false': [0.046, 102, 0], 'false,false,true,true': [2.438, 9, 43], 'false,false,true,false': [0.729, 90, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)', 'true,false': 'interaction(E, C), interaction(A, E)', 'true,false,true': 'recursion_proteinclass(E, B), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'function(A, J)'}, {'true,true': [0.013, 0, 8], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.001, 0, 2], 'false,true': [2.012, 75, 33], 'false,false,true,true': [0.964, 1, 3], 'false,false,true,false': [2.984, 65, 37], 'false,false,false,true': [0.987, 7, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(D, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, A), interaction(F, G)', 'false,false': 'function(A, H)', 'false,false,true': 'interaction(I, A)'}, {'true,true,true': [0.963, 1, 19], 'true,true,false': [0.072, 0, 2], 'true,false': [1.363, 42, 8], 'false,true,true': [0.714, 2, 1], 'false,true,false': [0.014, 0, 3], 'false,false,true,true': [3.225, 114, 51], 'false,false,true,false': [0.433, 5, 3], 'false,false,false': [0.0, 0, 0]}]]
[{'': [-1.6148698540002277e-16, 0.21687295390486988], 'false': [0.18750000000000006, 0.21414214576731574], 'false,false': [0.20567867036011217, 0.22129635953828417], 'false,false,false': [0.22022084736471287, 0.2343749999999999], 'false,false,true': [0.028546712802769686, 7.216449660063518e-17], 'false,true': [nan, 0.18750000000000006], 'true': [-2.5376526277146434e-16, 0.0]}, {'': [0.07638888888888891, 0.18383558017787485], 'false': [0.24000000000000005, 0.18157384240905441], 'false,true': [0.0, 0.25], 'false,true,false': [0.0, 0.0], 'false,false': [0.14284078974104314, 0.21851494323362197], 'false,false,false': [0.21851494323362197, nan], 'false,false,true': [0.13042951219878762, 0.15751791573362595], 'true': [0.07638888888888891, nan]}, {'': [-8.074349270001139e-17, 0.17362842714591867], 'false': [0.13443511674599304, 0.20954832926668773], 'false,false': [0.18749999999999997, 0.20843890512839833], 'false,false,false': [0.206460412920825, 0.23437500000000006], 'false,false,true': [0.0, 0.22222222222222224], 'false,true': [0.02816962381198017, 1.9417940798978812e-05], 'false,true,true': [nan, 0.02816962381197996], 'true': [-5.551115123125783e-17, -3.700743415417188e-17]}, {'': [0.0016166245572862938, 0.1484863874852409], 'false': [0.07284017153191263, 0.16924976140337555], 'false,false': [3.700743415417188e-17, 0.17010357601351378], 'false,false,false': [0.08782495493563813, 0.2231875277981104], 'false,true': [0.06996575632059845, 0.11381276801861363], 'false,true,false': [0.0, 0.0], 'false,true,true': [2.0185873175002846e-16, -9.448706592554524e-18], 'true': [4.904063163434379e-05, 0.0]}, {'': [5.959792721958608e-08, 0.14025440397660288], 'false': [0.06988400449985072, 0.20837109963551417], 'false,false': [0.20837109963551417, nan], 'false,false,true': [0.22360692732463694, 2.1257495565206533e-05], 'true': [-1.586032892321652e-17, 5.633866556609135e-08], 'true,true': [-1.586032892321652e-17, nan]}, {'': [3.372696191015414e-08, 0.13880104770680712], 'false': [0.08336094307230546, 0.18858332069292572], 'false,false': [0.18858332069292572, nan], 'false,false,true': [0.07563207072913498, 0.0022983783391325877], 'false,true': [0.07376755531047918, 0.09393697285451577], 'false,true,false': [5.551115123125783e-17, -1.3457248783335231e-17], 'true': [1.7442620570129463e-08, 5.094633793537954e-08]}, {'': [0.060862666349283105, 0.09254383772214718], 'false': [0.05902119966412108, 0.12792872792216756], 'false,false': [0.12792872792216756, nan], 'false,false,true': [0.14013504900543833, 0.0008771775270501344], 'true': [0.0786846902586585, 3.869941432125638e-08], 'false,true': [0.05760181992958159, 3.421749736714485e-05], 'false,true,true': [nan, 0.05760181992958159]}, {'': [4.491740068045637e-05, 0.06997380939081374], 'false': [0.03809308894759451, 0.10049691586525053], 'false,false': [0.10049691586525053, nan], 'false,false,true': [0.11430312554684624, 0.0059032714208210844], 'false,true': [0.024786310232731937, 2.092788504568989e-05], 'false,true,true': [nan, 0.02478631023273191], 'true': [3.6530632736136995e-05, 0.0]}, {'': [0.06259458131576287, 0.0666135830673699], 'false': [0.03750140247743215, 0.09359796714729632], 'false,false': [0.09277278589264913, 0.09741165912669006], 'false,false,false': [0.09741165912669006, nan], 'false,false,true': [0.2325061431219152, 0.08729141206781162], 'true': [1.978187803732337e-05, 0.1520061239091229], 'true,false': [0.20644857785431053, 6.061278634457434e-07], 'true,false,true': [0.0, 0.0]}, {'': [0.04913595496453632, 0.06632937832236414], 'false': [0.17813914179409318, 0.06119261231344344], 'false,true': [0.16977044661169657, 6.576148599254233e-05], 'false,false': [0.06119261231344342, nan], 'false,false,true': [0.06302026149288688, 0.023447047588251647], 'true': [0.04248966447944549, 0.037142683428742156], 'true,true': [0.046394559343086963, 0.0026197092431412203]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), function(A, D).;true;true
0;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
0;false,false;interaction(A, G).;true;true
0;false,false,true;interaction(H, G), recursion_proteinclass(H, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(G, E), interaction(E, G).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
2;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false,true;interaction(I, A), interaction(H, I).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, C), interaction(D, A).;true;true
3;false;interaction(A, E), interaction(E, A).;true;true
3;false,true;interaction(F, A), interaction(F, E).;true;true
3;false,true,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,false;interaction(H, E), recursion_proteinclass(H, B).;true;true
3;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), interaction(D, A).;true;true
4;false;interaction(A, E).;true;true
4;false,false;function(G, F), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), interaction(A, D).;true;true
5;false;interaction(A, E).;true;true
5;false,true;interaction(F, E), interaction(A, F).;true;true
5;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
5;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;true;function(A, D), interaction(C, E).;true;true
6;false;interaction(A, F).;true;true
6;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
6;false,false;function(J, I), recursion_proteinclass(J, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, A).;true;true
7;false;interaction(A, E).;true;true
7;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(E, C), interaction(A, E).;true;true
8;true,false,true;recursion_proteinclass(E, B), interaction(F, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
9;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
9;false,true;interaction(G, A), interaction(F, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995116;  // std dev = 2.23e-07, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return -0.14185106490048766;  // std dev = 7.88e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.1386367399775605;  // std dev = 4.068, 82.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=23 */
%   | | | else return 0.2534977723088147;  // std dev = 3.206, 43.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, D), interaction(D, A) )
%   | | then return -0.011253626583595515;  // std dev = 0.844, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.7580193346218546;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.7670719622367217;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7670719622367217;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, G), location(A, H) )
%   | | then if ( enzyme(A, I), interaction(J, A) )
%   | | | then return 0.16499594141325843;  // std dev = 2.270, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return 0.0744040424493728;  // std dev = 3.244, 78.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=19 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.11314819234951766;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.22951159938741414;  // std dev = 4.660, 93.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=37 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.581091835556805;  // std dev = 0.055, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5947969362557473;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.6934823391508549;  // std dev = 0.064, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return 0.5042141989424536;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.13956620815748277;  // std dev = 0.007, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return -0.06204038697840738;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.6046262796882593;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.04620597532787306;  // std dev = 3.268, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | | | else return 0.08934207248317494;  // std dev = 4.291, 89.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=26 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.4370814907641117;  // std dev = 0.063, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.21848035643001787;  // std dev = 0.781, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.05032437656914085;  // std dev = 1.011, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return 0.015263576321361202;  // std dev = 0.267, 53.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.5047141418990957;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1356493043150418;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.4485837160184789;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, J) )
%   | | | then return 0.09628385944809208;  // std dev = 5.791, 187.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=59 */
%   | | | else return 0.04731168031756894;  // std dev = 0.765, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.3356131534384068;  // std dev = 0.060, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.35496684033269116;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.4798140809984231;  // std dev = 0.635, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return -0.13392421913351663;  // std dev = 0.377, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.021476265284192476;  // std dev = 1.287, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.14153437488642537;  // std dev = 1.586, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else if ( function(K, L), recursion_proteinclass(K, B) )
%   | | then if ( enzyme(A, M) )
%   | | | then return 0.37946888508232884;  // std dev = 2.448, 26.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   | | | else return 0.21982217263229775;  // std dev = 3.783, 59.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=27 */
%   | | else return -0.2248315563116667;  // std dev = 0.017, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.2666672266137563;  // std dev = 0.051, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.28185459026206705;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.06650841699051997;  // std dev = 1.738, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | | else return -0.034568104771020174;  // std dev = 0.884, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.44247728409471115;  // std dev = 0.209, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.13721883134103088;  // std dev = 0.141, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | then if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return 0.13513076952312844;  // std dev = 1.907, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.36183173216010733;  // std dev = 3.562, 55.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=36 */
%   | | else return -0.1885080530191986;  // std dev = 0.015, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D), interaction(C, E) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.19812159017213138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.23062895337113223;  // std dev = 0.123, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.22855555856471702;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), enzyme(A, J) )
%   | | | then return 0.2828467499313457;  // std dev = 0.855, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.40134551077082664;  // std dev = 0.354, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.12145913755066891;  // std dev = 0.016, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( function(K, L), recursion_proteinclass(K, B) )
%   | | then if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.2390755285400574;  // std dev = 3.933, 67.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=40 */
%   | | | else return -0.03503268369293909;  // std dev = 1.419, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return -0.1632216912302729;  // std dev = 0.013, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.1946398017567518;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.03958854281073912;  // std dev = 0.716, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.17873729892205514;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.2765724060313987;  // std dev = 0.181, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | else return -0.10880816152798053;  // std dev = 0.013, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5096277733938147;  // std dev = 1.434, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | | else return -0.23519046547105174;  // std dev = 0.869, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return -0.04559964101433366;  // std dev = 2.923, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | | else return -0.08629867699172263;  // std dev = 1.201, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), interaction(A, A) )
%   | | then return 0.1403453644726815;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1905807700726326;  // std dev = 0.069, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.1537765054669927;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then return -0.09495979834658318;  // std dev = 0.005, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.10484471137663307;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( complex(H, J), complex(A, J) )
%   | | | then return -0.06279252581698411;  // std dev = 0.913, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.015515534486715965;  // std dev = 1.619, 78.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=27 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.048655121093903624;  // std dev = 2.724, 59.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | | | else return -0.005499526152569897;  // std dev = 3.488, 106.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=30 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.147272421877346;  // std dev = 0.030, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(F, A) )
%   | | then if ( complex(F, G), interaction(A, F) )
%   | | | then return -0.07411015814928082;  // std dev = 1.202, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return -0.001265589268904071;  // std dev = 1.168, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else return 0.22694459193406127;  // std dev = 0.407, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.2028046105383162;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(A, I) )
%   | | then if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.012969487126935398;  // std dev = 1.935, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return 0.11018901233966891;  // std dev = 1.342, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.038605887197575725;  // std dev = 1.900, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | | else return -0.01456709526440864;  // std dev = 2.931, 79.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=21 */


Results
   AUC ROC   = 0.983663
   AUC PR    = 0.299338
   CLL	      = -0.188614
   Precision = 0.176471 at threshold = 0.5
   Recall    = 0.765957
   F1        = 0.286853


Total learning time: 15.93 seconds
Total inference time: 185.864 seconds
AUC ROC: 0.983663


Results scoring model
   AUC ROC   = 0.978968
   AUC PR    = 0.351382
   CLL	      = -0.197503
   Precision = 0.186544 at threshold = 0.5
   Recall    = 0.701149
   F1        = 0.294686


Total scoring time: 31.865 seconds
Refined model CLL: -0.197503


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.988778
   AUC PR    = 0.307876
   CLL	      = -0.167698
   Precision = 0.208799 at threshold = 0.5
   Recall    = 0.992908
   F1        = 0.34504


Total learning time: 56.78999999999999 seconds
Total inference time: 18.514 seconds
AUC ROC: 0.988778
Total revision time: 56.78999999999999
Best scored revision CLL: -0.168675


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:39:23
{'AUC ROC': 0.988778, 'AUC PR': 0.307876, 'CLL': -0.167698, 'Precision': [0.208799, 0.5], 'Recall': 0.992908, 'F1': 0.34504, 'Learning time': 56.78999999999999, 'Inference time': 18.514, 'parameter': {'AUC ROC': 0.988778, 'AUC PR': 0.307876, 'CLL': -0.167698, 'Precision': [0.208799, 0.5], 'Recall': 0.992908, 'F1': 0.34504, 'Learning time': 2.445, 'Inference time': 18.514}}


Starting fold 2

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos	 examples: 265
Target test neg examples: 35157

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;true;false
0;false,true,true;follows(F, G), follows(G, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(H, I), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;false;true
1;false,true,false;follows(E, G), follows(G, E).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J), follows(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(D, C), recursion_accounttype(D, B).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), follows(A, D).;false;false
3;false;follows(E, A), follows(A, E).;true;true
3;false,true;follows(A, F), follows(E, F).;true;true
3;false,true,true;follows(E, G), recursion_accounttype(G, B).;false;false
3;false,true,false;follows(E, H), recursion_accounttype(H, B).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
3;false,false,false;follows(J, A).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(A, D).;true;false
4;true,true;recursion_accounttype(D, B).;false;true
4;true,true,false;tweets(C, E), follows(D, A).;false;false
4;false;follows(F, A).;false;true
4;false,false;tweets(A, G).;true;true
4;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
4;false,false,false;follows(A, I), recursion_accounttype(I, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), follows(D, A).;false;false
5;false;follows(E, A).;true;true
5;false,true;follows(E, F), follows(F, A).;false;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;tweets(A, D), follows(E, C).;false;false
6;false;follows(F, A).;true;true
6;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;false,false;tweets(A, I).;true;true
6;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
6;false,false,false;follows(A, K), follows(K, L).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G).;true;true
7;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
7;false,false,false;tweets(A, I).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(C, E), follows(E, A).;true;false
8;true,false,true;recursion_accounttype(E, B), follows(A, F).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H), follows(H, I).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
9;true;recursion_accounttype(D, B).;true;false
9;true,true;follows(A, E), follows(E, D).;false;false
9;false;follows(A, F), recursion_accounttype(F, B).;true;true
9;false,true;follows(A, G), follows(G, F).;false;false
9;false,false;tweets(A, H).;true;true
9;false,false,true;follows(A, I).;false;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7265699877310904;  // std dev = 2.084, 38.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=33 */
%   | | | else return -0.14185106490048766;  // std dev = 7.60e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.14981560176617834;  // std dev = 5.454, 144.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=42 */
%   | | | else return 0.24276431971489695;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.6204217234140724;  // std dev = 1.322, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.49134331246396057;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(G, E), interaction(E, G) )
%   | | | then return 0.7413433124639606;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7413433124639606;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return 0.05174980909395418;  // std dev = 3.578, 101.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=21 */
%   | | | else return 0.08778637381708676;  // std dev = 2.621, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | else if ( function(A, J), interaction(K, A) )
%   | | | then return 0.1758334147766227;  // std dev = 5.576, 139.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=47 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.585039814964125;  // std dev = 0.030, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.47882522808730177;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.3751140429531847;  // std dev = 0.700, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.6013010434446419;  // std dev = 2.081, 38.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=33 */
%   | | else return -0.13348016516629144;  // std dev = 0.100, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0.41300836199708435;  // std dev = 0.936, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.07728035809792108;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.1343285004882277;  // std dev = 5.342, 131.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=42 */
%   | | | else return 0.03731135390986244;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.4126497601679484;  // std dev = 0.917, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.02160562299343384;  // std dev = 1.003, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.6035739758971542;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.11674917182120745;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.5708490033616815;  // std dev = 0.140, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.13417061232868943;  // std dev = 0.270, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.47506833150498495;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.08593011963459656;  // std dev = 2.267, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | | else return 0.08814575952915908;  // std dev = 5.754, 159.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=47 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.337096490147193;  // std dev = 1.05e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( function(C, E), interaction(A, D) )
%   | | | then return 0.337096490147193;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3735111178639782;  // std dev = 0.120, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, F) )
%   | then return 0.02846174530740681;  // std dev = 3.374, 141.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=36 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4867392111914768;  // std dev = 3.682, 71.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=52 */
%   | | | else return -0.2223358472886876;  // std dev = 0.001, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.2794504347509926;  // std dev = 0.116, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.28272541264546713;  // std dev = 0.028, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return -0.002263993842664504;  // std dev = 2.634, 95.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=21 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5048330175740351;  // std dev = 0.307, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.12514655251129422;  // std dev = 0.066, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5557166880231147;  // std dev = 2.227, 58.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=52 */
%   | | | else return -0.2105831928943668;  // std dev = 0.502, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D), interaction(C, E) )
%   | then return 0.1567438205704037;  // std dev = 0.832, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.00944200530716055;  // std dev = 0.898, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.2670895162079371;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2957317509004841;  // std dev = 2.232, 40.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=33 */
%   | | else return -0.1140884508382077;  // std dev = 0.103, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( function(A, I) )
%   | | then if ( function(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.26065913337807517;  // std dev = 3.425, 76.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=52 */
%   | | | else return -0.1597053689224927;  // std dev = 0.179, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.08806229985960731;  // std dev = 1.345, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.20661612692695008;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F), interaction(F, A) )
%   | | | then return -0.3750761292500913;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3707128213227641;  // std dev = 0.438, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return -0.10151362094785149;  // std dev = 0.080, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3709033335095154;  // std dev = 2.082, 58.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=52 */
%   | | | else return -0.18275909424690767;  // std dev = 0.766, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.19657844473515304;  // std dev = 0.123, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then if ( recursion_proteinclass(E, B), interaction(F, A) )
%   | | | then return 0.17705244621200855;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.21705187262783676;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1808844005602976;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G) )
%   | then return -0.004239756031609172;  // std dev = 2.280, 137.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=36 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.17488332996260494;  // std dev = 0.248, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.0026157979702892313;  // std dev = 3.260, 135.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=42 */
%   | | else if ( function(A, J) )
%   | | | then return -0.004990993933734709;  // std dev = 1.062, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(D, E) )
%   | | then return 0.21242296571917346;  // std dev = 0.843, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | else return -0.04433710407616185;  // std dev = 1.063, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else return -0.0405764935302582;  // std dev = 1.638, 107.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=17 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0.10239469229939674;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.06689898626045673;  // std dev = 0.861, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( function(A, H) )
%   | | then if ( interaction(I, A) )
%   | | | then return 0.018094366382058767;  // std dev = 3.314, 145.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=47 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.99136
   AUC PR    = 0.327413
   CLL	      = -0.156314
   Precision = 0.275468 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.431948


Total learning time: 2.385 seconds
Total inference time: 17.764 seconds
AUC ROC: 0.99136


Results scoring model
   AUC ROC   = 0.981337
   AUC PR    = 0.178871
   CLL	      = -0.181438
   Precision = 0.123077 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.219178


Total scoring time: 7.678 seconds
Parameter learned model CLL: -0.181438


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(A, F)', 'false,true,true': 'interaction(G, F), interaction(A, G)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.949, 1, 9], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.943, 1, 8], 'false,false,true,true': [2.084, 5, 33], 'false,false,true,false': [7.6e-08, 113, 0], 'false,false,false,true': [5.454, 102, 42], 'false,false,false,false': [1.754, 8, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, E), interaction(E, G)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), interaction(A, I)', 'false,false,false': 'function(A, J), interaction(K, A)'}, {'true,true': [1.322, 2, 16], 'true,false': [0.0, 0, 0], 'false,true,true': [0.866, 1, 3], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.49e-08, 0, 3], 'false,false,true,true': [3.578, 80, 21], 'false,false,true,false': [2.621, 37, 12], 'false,false,false,true': [5.576, 92, 47], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(I, A), interaction(H, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true': [0.03, 0, 9], 'true,false': [0.935, 1, 7], 'false,true,true,true': [0.7, 1, 3], 'false,true,true,false': [2.081, 5, 33], 'false,true,false': [0.1, 102, 0], 'false,false,true,true': [0.936, 1, 4], 'false,false,true,false': [0.707, 1, 1], 'false,false,false,true': [5.342, 89, 42], 'false,false,false,false': [1.952, 16, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'false': 'interaction(A, E), interaction(E, A)', 'false,true': 'interaction(F, A), interaction(F, E)', 'false,true,true': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(H, E), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.917, 1, 15], 'true,false': [1.003, 2, 2], 'false,true,true,true': [0.0, 0, 13], 'false,true,true,false': [0.0, 30, 0], 'false,true,false,true': [0.14, 0, 8], 'false,true,false,false': [0.27, 18, 0], 'false,false,true': [0.029, 0, 5], 'false,false,false,true': [2.267, 35, 14], 'false,false,false,false': [5.754, 112, 47]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'true,true,false': 'function(C, E), interaction(A, D)', 'false': 'interaction(A, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true,true': [1.05e-08, 0, 5], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.12, 0, 9], 'false,true': [3.374, 105, 36], 'false,false,true,true': [3.682, 19, 52], 'false,false,true,false': [0.001, 71, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), interaction(A, F)', 'false,true,false': 'interaction(G, E), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true,true': [0.116, 0, 11], 'true,false': [0.028, 0, 5], 'false,true,true': [2.634, 74, 21], 'false,true,false,true': [0.307, 0, 15], 'false,true,false,false': [0.066, 35, 0], 'false,false,true,true': [2.227, 6, 52], 'false,false,true,false': [0.502, 97, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D), interaction(C, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(G, A), interaction(H, G)', 'false,false': 'function(A, I)', 'false,false,true': 'function(J, I), recursion_proteinclass(J, B)'}, {'true,true': [0.832, 1, 13], 'true,false': [0.898, 1, 3], 'false,true,true,true': [0.0, 0, 3], 'false,true,true,false': [2.232, 7, 33], 'false,true,false': [0.103, 107, 0], 'false,false,true,true': [3.425, 24, 52], 'false,false,true,false': [0.179, 78, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F), interaction(F, A)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [1.345, 2, 15], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.438, 0, 36], 'false,true,false': [0.08, 86, 0], 'false,false,true,true': [2.082, 6, 52], 'false,false,true,false': [0.766, 87, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), recursion_proteinclass(D, B)', 'true,false': 'interaction(E, C), interaction(A, E)', 'true,false,true': 'recursion_proteinclass(E, B), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'function(A, J)'}, {'true,true': [0.123, 0, 9], 'true,false,true,true': [0.0, 0, 2], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.014, 0, 4], 'false,true': [2.28, 101, 36], 'false,false,true,true': [0.248, 0, 5], 'false,false,true,false': [3.26, 93, 42], 'false,false,false,true': [1.062, 15, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(D, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, A), interaction(F, G)', 'false,false': 'function(A, H)', 'false,false,true': 'interaction(I, A)'}, {'true,true,true': [0.843, 1, 28], 'true,true,false': [1.063, 7, 5], 'true,false': [1.638, 90, 17], 'false,true,true': [0.019, 0, 4], 'false,true,false': [0.861, 1, 3], 'false,false,true,true': [3.314, 98, 47], 'false,false,true,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}]]
[{'': [0.055363321799307655, 0.20015031050987006], 'false': [0.15999999999999986, 0.19227525721032254], 'false,false': [0.17078198324635002, 0.20974481723396582], 'false,false,false': [0.2065972222222234, 0.2366863905325442], 'false,false,true': [0.11426592797784099, 5.1089909097794814e-17], 'false,true': [0.0, 0.09876543209876527], 'true': [-2.5376526277146434e-16, 0.08999999999999977], 'false,true,true': [0.0, nan]}, {'': [0.0971526053976909, 0.18422424704025403], 'false': [0.09876543209876543, 0.1789470770468401], 'false,false': [0.13140960825204262, 0.22369949208602086], 'false,false,false': [0.22369949208602086, nan], 'false,false,true': [0.12672493920367048, 0.14019134926312254], 'false,true': [0.18750000000000003, 0.0], 'true': [0.0971526053976909, nan], 'false,true,false': [0.0, 7.401486830834377e-17]}, {'': [0.054334592318788094, 0.1804931545084994], 'false': [0.1399464257391236, 0.21577642732268393], 'false,false': [0.21953285211028342, 0.21390937949827732], 'false,false,true': [0.17514219506807774, 0.25], 'false,false,false': [0.21781947438960436, 0.18140589569161011], 'false,true': [0.11924021316432254, 9.855558760220453e-05], 'false,true,true': [0.12261365693760265, 0.11401267961106946], 'true': [0.00010082621320241082, 0.10937499999999997]}, {'': [0.1168576313158933, 0.16503348689599784], 'false': [0.10951669348383343, 0.18301617401110373], 'false,false': [0.00016811525091182667, 0.1838877745830973], 'false,false,false': [0.10489802107308153, 0.20822937234817082], 'true': [0.052556699233751086, 0.2517289458696137], 'false,true': [0.10944160112718553, 0.10943299535807892], 'false,true,true': [0.0, -2.4054832200211726e-17], 'false,true,false': [0.002433383261307931, 0.004049098971215316]}, {'': [0.001228310748262157, 0.153890549404317], 'false': [0.08074074704583539, 0.22116323917126351], 'false,false': [0.22116323917126351, nan], 'false,false,true': [0.19093273280872655, 2.625447665844375e-08], 'true': [6.344131569286608e-17, 0.0016035275660745512], 'true,true': [2.2204460492503132e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.0008982987191429731, 0.1270075508801875], 'false': [0.07824271318128713, 0.17113059297375247], 'false,false': [0.17113059297375247, nan], 'false,false,true': [0.08550185675596626, 0.002599026191964226], 'false,true': [0.07301026486711241, 0.08532079922616069], 'false,true,false': [0.006302255188997208, 0.00012361191033352092], 'true': [0.0012325873981328622, 0.00015548985772135816]}, {'': [0.0870377616449677, 0.09478078051446553], 'false': [0.06730614217267052, 0.12054586461993501], 'false,false': [0.12054586461993501, nan], 'false,false,true': [0.15434037677997087, 0.00041216461808034593], 'true': [0.049477199325550926, 0.20162364382304565], 'false,true': [0.11590078530233704, 9.942439930608101e-05], 'false,true,true': [-9.25185853854297e-18, 0.12453610855292985]}, {'': [0.10124004157313277, 0.08066172936153487], 'true': [0.10641450425224079, 0.0], 'false': [0.04899083938318481, 0.10751916506936095], 'false,false': [0.10751916506936095, nan], 'false,false,true': [0.0747614508760126, 0.006740807634604942], 'false,true': [0.01979940306708222, 7.361228272811162e-05], 'false,true,true': [0.0, 0.005316922734354012]}, {'': [0.0010679376627308404, 0.05782177985550953], 'false': [0.037937317917117235, 0.07478907396746351], 'false,false': [0.07738601769223599, 0.05644481666693944], 'false,false,true': [0.012317630793044248, 0.07873609714137864], 'false,false,false': [0.05644481666693944, nan], 'true': [0.0016827694155874633, 0.00020146092939570974], 'true,false': [0.00035554535857672726, 4.720936346983701e-05], 'true,false,true': [0.0, 0.0]}, {'': [0.040667747241156314, 0.07698921388741709], 'false': [0.09984465245203022, 0.07572821789525849], 'false,true': [8.912989180792294e-05, 0.18527000021208903], 'false,false': [0.07572821789525849, nan], 'false,false,true': [0.07572821789525849, nan], 'true': [0.05849840040059504, 0.02507288677248714], 'true,true': [0.02447779776275496, 0.09408445995103736]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), function(A, D).;true;true
0;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(F, A), interaction(A, F).;true;true
0;false,false;interaction(A, H).;true;true
0;false,false,true;interaction(I, H), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,false;interaction(G, E), interaction(E, G).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
2;false;interaction(A, E).;true;true
2;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(A, E), interaction(E, A).;true;true
3;false,true;interaction(F, A), interaction(F, E).;true;true
3;false,true,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,false;interaction(H, E), recursion_proteinclass(H, B).;true;true
3;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), interaction(D, A).;true;true
4;true,true;recursion_proteinclass(D, B).;true;true
4;false;interaction(A, F).;true;true
4;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, C), interaction(A, D).;true;true
5;false;interaction(A, E).;true;true
5;false,true;interaction(F, E), interaction(A, F).;true;true
5;false,true,false;interaction(G, E), recursion_proteinclass(G, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
6;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
6;false,true,true;interaction(G, A), interaction(H, G).;true;true
6;false,false;function(J, I), recursion_proteinclass(J, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, A).;true;true
7;false;interaction(A, E).;true;true
7;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
7;false,true,true;interaction(E, F), interaction(F, A).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, A), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(E, C), interaction(A, E).;true;true
8;true,false,true;recursion_proteinclass(E, B), interaction(F, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
9;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
9;false,true;interaction(G, A), interaction(F, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.7265699877310904;  // std dev = 2.084, 38.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=33 */
%   | | | else return -0.14185106490048763;  // std dev = 8.43e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( phenotype(A, I), location(A, J) )
%   | | | then return 0.18373033044834824;  // std dev = 4.346, 86.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=28 */
%   | | | else return 0.12575456890232928;  // std dev = 3.730, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7272428531314968;  // std dev = 0.082, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, D), interaction(D, F) )
%   | | | then return 0.4378340619645058;  // std dev = 0.690, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, G), location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3078802084538734;  // std dev = 3.186, 47.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=23 */
%   | | | else return -0.1398326253212069;  // std dev = 0.134, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.2373442366427353;  // std dev = 2.576, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.13698449523730846;  // std dev = 5.357, 141.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=42 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), phenotype(A, F) )
%   | | then return 0.3234997784775694;  // std dev = 0.797, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.5801840122032583;  // std dev = 0.093, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5534470773005027;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.40638362346234275;  // std dev = 1.663, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return 0.6855877331766921;  // std dev = 0.176, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return -0.13735613437244515;  // std dev = 0.217, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.20217476805785609;  // std dev = 4.169, 75.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=29 */
%   | | | else return 0.11353556469131623;  // std dev = 3.549, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.4504106885250399;  // std dev = 0.103, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( phenotype(A, E), enzyme(A, F) )
%   | | then return -0.37518213326404276;  // std dev = 0.169, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.3532191290393312;  // std dev = 0.198, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(H, A), interaction(H, G) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.5063923054437854;  // std dev = 1.009, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.12590878986895682;  // std dev = 0.294, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return 0.05645303019238662;  // std dev = 0.299, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.2472645370880124;  // std dev = 0.911, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( location(A, K), complex(A, L) )
%   | | | then return -0.016538292778193166;  // std dev = 2.795, 69.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=12 */
%   | | | else return 0.09917180354416892;  // std dev = 5.448, 157.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=49 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.3408718640239554;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3816258171931405;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.3561065632715231;  // std dev = 0.090, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.10533894586935787;  // std dev = 0.067, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(A, F), phenotype(F, G) )
%   | | | then return 0.07148808380659086;  // std dev = 3.057, 100.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=34 */
%   | | | else return -0.058861340531135065;  // std dev = 0.734, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | else if ( function(H, I), recursion_proteinclass(H, B) )
%   | | then if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.2772261470956724;  // std dev = 4.109, 72.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=38 */
%   | | | else return 0.5303756275487235;  // std dev = 1.747, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | else return -0.20852393269823566;  // std dev = 0.244, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.27367154621190726;  // std dev = 0.022, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then return -0.19276322593439388;  // std dev = 1.027, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.2674155470385076;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), interaction(A, H) )
%   | | then return 0.013810345426131184;  // std dev = 0.266, 84.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=21 */
%   | | else return 0.11729642129317236;  // std dev = 0.320, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6113587187399279;  // std dev = 1.815, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | | else return -0.2085498787356553;  // std dev = 0.445, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.09782286523891368;  // std dev = 1.074, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.007345388678830238;  // std dev = 2.002, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), interaction(A, F) )
%   | | then return -0.24273618593935775;  // std dev = 0.972, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.20689442051566087;  // std dev = 0.036, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2571708366557415;  // std dev = 0.058, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.31581863092042145;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.43572183086522254;  // std dev = 0.980, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | else return -0.1270870371567896;  // std dev = 0.028, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( function(J, K), recursion_proteinclass(J, B) )
%   | | then if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.1420509672977929;  // std dev = 2.368, 35.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   | | | else return 0.2858995794254823;  // std dev = 2.970, 51.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=33 */
%   | | else return -0.15528928262347708;  // std dev = 0.020, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.21165817681787627;  // std dev = 0.054, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.18743004148390674;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F), interaction(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32466318422850177;  // std dev = 0.983, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | else return -0.11640943239679379;  // std dev = 0.031, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( phenotype(G, I), complex(G, J) )
%   | | | then return 0.04434821524547877;  // std dev = 2.111, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return -0.03356269327563811;  // std dev = 1.393, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return 0.20463792943192619;  // std dev = 1.058, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.06659446709752351;  // std dev = 3.119, 69.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=26 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.16941601228217193;  // std dev = 0.044, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then if ( recursion_proteinclass(E, B), interaction(F, A) )
%   | | | then return 0.15629046426683857;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.48891839240825785;  // std dev = 0.799, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.11053219421099737;  // std dev = 1.120, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( location(A, G), interaction(A, H) )
%   | then return -0.03484373552752799;  // std dev = 0.197, 153.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=34 */
%   | else if ( enzyme(A, I), phenotype(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.45506617042283104;  // std dev = 0.170, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.16072484782508034;  // std dev = 0.331, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( location(A, L) )
%   | | | then return -0.011863851562411196;  // std dev = 3.945, 128.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=38 */
%   | | | else return 0.0742503568895302;  // std dev = 1.060, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( enzyme(A, E), phenotype(A, F) )
%   | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.24573189620367883;  // std dev = 0.119, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return -0.16652355229202906;  // std dev = 0.171, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then return -0.013189589491302178;  // std dev = 0.182, 87.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=23 */
%   | | else return 0.008778011877662405;  // std dev = 0.166, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | then return 0.16649991402542405;  // std dev = 0.041, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( interaction(L, A), phenotype(A, M) )
%   | | | then return 0.07207547113853731;  // std dev = 2.098, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return -0.030420655915303907;  // std dev = 3.374, 107.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=28 */
%   | | else if ( enzyme(A, N) )
%   | | | then return 0.03155784798088473;  // std dev = 0.672, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.24430095208893196;  // std dev = 0.902, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */


Results
   AUC ROC   = 0.98543
   AUC PR    = 0.330847
   CLL	      = -0.189614
   Precision = 0.289773 at threshold = 0.5
   Recall    = 0.769811
   F1        = 0.421053


Total learning time: 12.81 seconds
Total inference time: 124.216 seconds
AUC ROC: 0.98543


Results scoring model
   AUC ROC   = 0.979459
   AUC PR    = 0.235797
   CLL	      = -0.206332
   Precision = 0.115666 at threshold = 0.5
   Recall    = 0.759615
   F1        = 0.200762


Total scoring time: 25.557 seconds
Refined model CLL: -0.206332


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.99136
   AUC PR    = 0.327413
   CLL	      = -0.156314
   Precision = 0.275468 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.431948


Total learning time: 48.42999999999999 seconds
Total inference time: 17.764 seconds
AUC ROC: 0.99136
Total revision time: 48.42999999999999
Best scored revision CLL: -0.181438


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:42:34
{'AUC ROC': 0.99136, 'AUC PR': 0.327413, 'CLL': -0.156314, 'Precision': [0.275468, 0.5], 'Recall': 1.0, 'F1': 0.431948, 'Learning time': 48.42999999999999, 'Inference time': 17.764, 'parameter': {'AUC ROC': 0.99136, 'AUC PR': 0.327413, 'CLL': -0.156314, 'Precision': [0.275468, 0.5], 'Recall': 1.0, 'F1': 0.431948, 'Learning time': 2.385, 'Inference time': 17.764}}


Starting fold 3

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos	 examples: 277
Target test neg examples: 38883

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;true;false
0;false,true,true;follows(F, G), follows(G, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(H, I), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;false;true
1;false,true,false;follows(E, G), follows(G, E).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J), follows(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(D, C), recursion_accounttype(D, B).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), follows(A, D).;false;false
3;false;follows(E, A), follows(A, E).;true;true
3;false,true;follows(A, F), follows(E, F).;true;true
3;false,true,true;follows(E, G), recursion_accounttype(G, B).;false;false
3;false,true,false;follows(E, H), recursion_accounttype(H, B).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
3;false,false,false;follows(J, A).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(A, D).;true;false
4;true,true;recursion_accounttype(D, B).;false;true
4;true,true,false;tweets(C, E), follows(D, A).;false;false
4;false;follows(F, A).;false;true
4;false,false;tweets(A, G).;true;true
4;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
4;false,false,false;follows(A, I), recursion_accounttype(I, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), follows(D, A).;false;false
5;false;follows(E, A).;true;true
5;false,true;follows(E, F), follows(F, A).;false;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;tweets(A, D), follows(E, C).;false;false
6;false;follows(F, A).;true;true
6;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;false,false;tweets(A, I).;true;true
6;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
6;false,false,false;follows(A, K), follows(K, L).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G).;true;true
7;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
7;false,false,false;tweets(A, I).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(C, E), follows(E, A).;true;false
8;true,false,true;recursion_accounttype(E, B), follows(A, F).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H), follows(H, I).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
9;true;recursion_accounttype(D, B).;true;false
9;true,true;follows(A, E), follows(E, D).;false;false
9;false;follows(A, F), recursion_accounttype(F, B).;true;true
9;false,true;follows(A, G), follows(G, F).;false;false
9;false,false;tweets(A, H).;true;true
9;false,false,true;follows(A, I).;false;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 8.43e-08, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.14185106490048796;  // std dev = 0.000, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.2381489350995123;  // std dev = 3.432, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(E, G), interaction(G, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7417903431046247;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), interaction(I, A) )
%   | | | then return 0.043538971619477895;  // std dev = 2.137, 40.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | | else return 0.12406136303222001;  // std dev = 4.705, 149.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=44 */
%   | | else if ( function(A, J), interaction(A, K) )
%   | | | then return 0.10780535274033684;  // std dev = 3.788, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4131227970388623;  // std dev = 0.757, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.6963570399866968;  // std dev = 0.044, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | else return -0.13905871975527714;  // std dev = 0.199, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5498490269177946;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.11707190515672386;  // std dev = 3.630, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | | else return 0.12484238893409534;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.421371629486348;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.33907995179198747;  // std dev = 0.750, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5503178581075884;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11533472370403292;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5303209155469054;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.12380852556943243;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.06549130514284036;  // std dev = 3.876, 171.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=49 */
%   | | | else return 0.08450405867513924;  // std dev = 3.760, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.3198719317826484;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15498950253230814;  // std dev = 1.210, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.042152486052436905;  // std dev = 4.035, 209.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=56 */
%   | else if ( function(A, F) )
%   | | then if ( function(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5030688343760221;  // std dev = 2.298, 29.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=22 */
%   | | | else return -0.22290812172883426;  // std dev = 0.023, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.2601530730725791;  // std dev = 0.030, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2940523091183261;  // std dev = 0.022, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then return 0.02592315884865713;  // std dev = 1.559, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4684944255371277;  // std dev = 1.018, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.1347577345347578;  // std dev = 0.049, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6360206835860989;  // std dev = 0.618, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.22168424328750394;  // std dev = 0.409, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), interaction(E, C) )
%   | then return 0.2264199102842503;  // std dev = 0.055, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.23155631429369472;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3754998664440974;  // std dev = 1.088, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.120416510892335;  // std dev = 0.063, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | else if ( function(A, I) )
%   | | then if ( function(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.27912262927273834;  // std dev = 2.003, 30.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=22 */
%   | | | else return -0.15601389555813347;  // std dev = 0.029, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.08731343819852225;  // std dev = 0.943, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.1947983076435728;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3090592118103849;  // std dev = 0.394, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.10691912545924513;  // std dev = 0.068, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.42475520884672446;  // std dev = 0.480, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.17602942651771378;  // std dev = 0.530, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.17298150517896393;  // std dev = 0.042, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then if ( recursion_proteinclass(E, B), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16982568590671077;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.16801884137866574;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then return 0.0017066109446404424;  // std dev = 2.322, 188.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=56 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.06931059868234368;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.030044135500631012;  // std dev = 1.765, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | else if ( function(A, J) )
%   | | | then return 0.002409379409175738;  // std dev = 0.460, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, D) )
%   | | then return 0.16697574970502763;  // std dev = 0.117, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.08776241025174214;  // std dev = 0.225, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.006620243632685598;  // std dev = 2.128, 154.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=43 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, F) )
%   | | then return 0.06497088822356445;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.10725781865162459;  // std dev = 0.058, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( function(A, H) )
%   | | then if ( interaction(A, I) )
%   | | | then return 2.0310174910818878E-5;  // std dev = 2.063, 73.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=23 */
%   | | | else return 0.01915794631747529;  // std dev = 0.827, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.980264
   AUC PR    = 0.209709
   CLL	      = -0.180921
   Precision = 0.110933 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.199712


Total learning time: 1.771 seconds
Total inference time: 23.536 seconds
AUC ROC: 0.980264


Results scoring model
   AUC ROC   = 0.996535
   AUC PR    = 0.533403
   CLL	      = -0.130175
   Precision = 0.513966 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.678967


Total scoring time: 3.272 seconds
Parameter learned model CLL: -0.130175


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,true': 'interaction(F, G), interaction(G, A)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.0, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.707, 1, 1], 'false,true,false': [0.0, 0, 5], 'false,false,true,true': [8.43e-08, 0, 52], 'false,false,true,false': [0.0, 138, 0], 'false,false,false,true': [3.432, 31, 19], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(E, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), interaction(I, A)', 'false,false,false': 'function(A, J), interaction(A, K)'}, {'true,true': [5.16e-08, 0, 14], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.077, 0, 4], 'false,false,true,true': [2.137, 32, 8], 'false,false,true,false': [4.705, 105, 44], 'false,false,false,true': [3.788, 51, 20], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 4], 'false,true,true,true': [0.757, 1, 4], 'false,true,true,false': [0.044, 0, 52], 'false,true,false': [0.199, 155, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.63, 43, 19], 'false,false,false,false': [0.816, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'false': 'interaction(E, A), interaction(A, E)', 'false,true': 'interaction(A, F), interaction(E, F)', 'false,true,true': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(E, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.033, 0, 8], 'true,false': [0.75, 1, 6], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 13, 0], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [5.27e-09, 9, 0], 'false,false,true': [2.11e-08, 0, 6], 'false,false,false,true': [3.876, 122, 49], 'false,false,false,false': [3.76, 48, 20]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,false': 'function(A, F)', 'false,false,true': 'function(G, F), recursion_proteinclass(G, B)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [1.21, 2, 9], 'false,true': [4.035, 153, 56], 'false,false,true,true': [2.298, 7, 22], 'false,false,true,false': [0.023, 36, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true,true': [0.03, 0, 6], 'true,false': [0.022, 0, 8], 'false,true,true': [1.559, 27, 8], 'false,true,false,true': [1.018, 1, 48], 'false,true,false,false': [0.049, 103, 0], 'false,false,true,true': [0.618, 0, 22], 'false,false,true,false': [0.409, 48, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D), interaction(E, C)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(A, G), interaction(G, H)', 'false,false': 'function(A, I)', 'false,false,true': 'function(J, I), recursion_proteinclass(J, B)'}, {'true,true': [0.055, 0, 13], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.088, 1, 56], 'false,true,false': [0.063, 142, 0], 'false,false,true,true': [2.003, 8, 22], 'false,false,true,false': [0.029, 45, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.943, 1, 9], 'true,false': [0.005, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.394, 0, 56], 'false,true,false': [0.068, 136, 0], 'false,false,true,true': [0.48, 0, 22], 'false,false,true,false': [0.53, 44, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(C, E), interaction(E, A)', 'true,false,true': 'recursion_proteinclass(E, B), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'function(A, J)'}, {'true,true': [0.042, 0, 8], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.013, 0, 5], 'false,true': [2.322, 132, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.765, 39, 20], 'false,false,false,true': [0.46, 1, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(E, D)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(A, G), interaction(G, F)', 'false,false': 'function(A, H)', 'false,false,true': 'interaction(A, I)'}, {'true,true,true': [0.117, 0, 11], 'true,true,false': [0.225, 1, 3], 'true,false': [2.128, 111, 43], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.058, 0, 2], 'false,false,true,true': [2.063, 50, 23], 'false,false,true,false': [0.827, 17, 9], 'false,false,false': [0.0, 0, 0]}]]
[{'': [-2.5376526277146434e-16, 0.21512556249092818], 'false': [0.12244897959183662, 0.209002117341713], 'false,false': [0.19878116343490385, 0.236686390532544], 'false,false,false': [0.23559999999999953, 0.25], 'false,false,true': [1.3664283380001927e-16, -7.079683055580708e-17], 'false,true': [0.25, 0.0], 'false,true,true': [nan, 0.25], 'true': [-2.5376526277146434e-16, -2.5376526277146434e-16]}, {'': [1.9032394707859825e-16, 0.1638079743601757], 'false': [0.0011067675655841065, 0.15869173063972095], 'false,false': [0.1423736041768692, 0.20212967479586413], 'false,false,false': [0.20212967479586413, nan], 'false,false,true': [0.1142218419944282, 0.1485588796715973], 'false,true': [0.0, 0.001494136213538555], 'false,true,false': [nan, 0.001494136213538555], 'true': [1.9032394707859825e-16, nan]}, {'': [-2.5376526277146434e-16, 0.1530760641254593], 'false': [0.13377944392867175, 0.21211531604237424], 'false,false': [7.610452803896717e-06, 0.21298859695991076], 'false,false,false': [0.21253902185223744, 0.22222222222222218], 'false,true': [0.016499416913380235, 0.0002553391497825218], 'false,true,true': [0.11452497323538142, 3.689700443549198e-05], 'false,false,true': [0.0, 0.0], 'true': [-1.7763568394002506e-16, 0.0]}, {'': [0.03925027914645982, 0.11610088923135665], 'false': [0.045440030822474095, 0.12198902391915352], 'false,false': [7.401486830834377e-17, 0.12210929531123467], 'false,false,false': [0.08787210193290468, 0.20794713132900774], 'false,true': [0.02938884528439902, 0.06365236250605871], 'false,true,false': [0.0, 3.0839528461809902e-18], 'true': [0.000139833155211877, 0.08033624092508453], 'false,true,true': [0.0, -4.270088556250602e-18]}, {'': [0.097357509681184, 0.11023003599191891], 'false': [0.07791414155052599, 0.21149751905250735], 'false,false': [0.21149751905250735, nan], 'false,false,true': [0.18212814794487897, 1.4122448924810035e-05], 'true': [0.0, 0.1331152308365396], 'true,true': [0.0, nan]}, {'': [0.0003833045869631814, 0.10596834935146199], 'false': [0.08334584552700942, 0.16638068174470755], 'false,false': [0.16638068174470755, nan], 'false,false,true': [0.017344522998428955, 0.0034822023867773035], 'false,true': [0.06944722909247396, 0.08633250397727764], 'false,true,false': [0.021158258673105616, 2.3613899531592147e-05], 'true': [0.00015423626800483334, 6.260945283106945e-05]}, {'': [0.0002143341719271219, 0.06792810291431481], 'false': [0.05623531301619871, 0.09894361608065304], 'false,false': [0.09894361608065304, nan], 'false,false,true': [0.1337242840324893, 1.898601600730644e-05], 'false,true': [0.020770540138777462, 2.8036678647676068e-05], 'false,true,true': [nan, 0.020770540138777462], 'true': [0.0002289369411966677, 0.0]}, {'': [0.06185360918371227, 0.04974493526460965], 'true': [0.0889271249099475, 4.579624828721096e-06], 'false': [0.03658261673845231, 0.08796349096113393], 'false,false': [0.08796349096113393, nan], 'false,false,true': [0.010493963018725678, 0.006384195569010739], 'false,true': [0.0027746523331214157, 3.413327732613583e-05], 'false,true,true': [nan, 0.002774652333121384]}, {'': [0.0001462423660132106, 0.035026025022264144], 'false': [0.028671966369565656, 0.0537002537219033], 'false,false': [0.05193569855867307, 0.10586244538486234], 'false,false,false': [0.10586244538486234, nan], 'false,false,true': [0.0, 0.05279026705042537], 'true': [0.0002249686071322428, 2.8857017604064228e-05], 'true,false': [0.0, 3.408430660012396e-05], 'true,false,true': [nan, 0.0]}, {'': [0.029162304681607912, 0.048781627000081984], 'false': [0.001513053202709145, 0.04998564338943285], 'false,false': [0.04998564338943288, nan], 'false,false,true': [0.05831711490638003, 0.026323372419238284], 'true': [0.005509584190286436, 0.029402723005623837], 'true,true': [0.0012471933298378389, 0.012629673415136385], 'false,true': [0.0, 0.0016735183090545187]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), function(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false,true;interaction(A, I), interaction(I, H).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(C, D), interaction(A, D).;true;true
3;false;interaction(E, A), interaction(A, E).;true;true
3;false,true;interaction(A, F), interaction(E, F).;true;true
3;false,true,true;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;false,true,false;interaction(E, H), recursion_proteinclass(H, B).;true;true
3;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), interaction(A, D).;true;true
4;false;interaction(E, A).;true;true
4;false,false;function(G, F), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, D), interaction(D, A).;true;true
5;false;interaction(E, A).;true;true
5;false,true;interaction(E, F), interaction(F, A).;true;true
5;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;true;function(A, D), interaction(E, C).;true;true
6;false;interaction(F, A).;true;true
6;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
6;false,false;function(J, I), recursion_proteinclass(J, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, D).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(C, E), interaction(E, A).;true;true
8;false;interaction(G, A).;true;true
8;false,false;interaction(A, H), interaction(H, I).;true;true
8;false,false,true;recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
9;true;recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(E, D).;true;true
9;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
9;false,true;interaction(A, G), interaction(G, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8392810105712104;  // std dev = 0.991, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.14185106490048804;  // std dev = 0.000, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.08542166237223962;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.20698614440183793;  // std dev = 3.125, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.7401919213324014;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( enzyme(I, J), enzyme(A, J) )
%   | | | then return -0.04657221398084005;  // std dev = 1.245, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return 0.07414907872902539;  // std dev = 2.837, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | | else if ( interaction(K, A), phenotype(A, L) )
%   | | | then return 0.07258778212270517;  // std dev = 2.781, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | | | else return 0.17343479614734833;  // std dev = 4.792, 123.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, F) )
%   | | then return 0.5524396893462122;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.5804598822597753;  // std dev = 0.061, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.5741865208814027;  // std dev = 0.065, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6788043903376505;  // std dev = 0.983, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | else return -0.1388005912753611;  // std dev = 0.007, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(A, K) )
%   | | | then return 0.17654473007810395;  // std dev = 3.389, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | | else return 0.055272417728576315;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.4167004557372071;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.42792702768030183;  // std dev = 0.067, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5517553391084247;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11591786259937242;  // std dev = 0.021, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5519483944887208;  // std dev = 0.000273, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.11183129598787511;  // std dev = 0.018, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.4253136736499707;  // std dev = 0.071, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.11858049599383;  // std dev = 3.273, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
%   | | | else return 0.048293717939874005;  // std dev = 4.343, 152.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=41 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.31972599500011106;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3301027987923358;  // std dev = 0.029, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1068994418797855;  // std dev = 0.000183, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.058755217903210026;  // std dev = 2.223, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.032236120281582674;  // std dev = 2.077, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | | else return 0.08084467065342102;  // std dev = 2.523, 68.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   | else if ( function(H, I), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.2125964956575514;  // std dev = 1.314, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.5765842715530191;  // std dev = 1.801, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | | else return -0.21733433729797405;  // std dev = 0.019, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2591964624213136;  // std dev = 0.021, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return -0.027236326527045863;  // std dev = 1.001, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return 0.08382035328344024;  // std dev = 1.109, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.483104247449961;  // std dev = 0.405, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.13660113164968105;  // std dev = 0.111, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), interaction(K, J) )
%   | | | then return -0.03608425858244666;  // std dev = 2.291, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.11151667699324319;  // std dev = 0.991, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.12967172567600846;  // std dev = 2.121, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return -0.059403594543152506;  // std dev = 1.155, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), interaction(E, C) )
%   | then if ( phenotype(A, F), complex(A, G) )
%   | | then return -0.04457091765050783;  // std dev = 0.870, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.2099652823667594;  // std dev = 0.016, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.18345764862618708;  // std dev = 0.625, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(H, A) )
%   | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.4729197304654571;  // std dev = 0.107, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3702503948991397;  // std dev = 0.385, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.1240233253584161;  // std dev = 0.013, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
%   | else if ( function(K, L), recursion_proteinclass(K, B) )
%   | | then if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.030065050094885862;  // std dev = 2.601, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.29787949629220867;  // std dev = 1.971, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | else return -0.19624924936642082;  // std dev = 0.020, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.20176361204372462;  // std dev = 0.038, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.1787928219960053;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.2757808222195051;  // std dev = 0.316, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.31092958052054614;  // std dev = 0.181, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return -0.1103055693519852;  // std dev = 0.013, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.6109867551248391;  // std dev = 0.388, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1875473496686468;  // std dev = 0.304, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.11969809544559307;  // std dev = 1.624, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.259415600428117;  // std dev = 1.532, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.16101670799974416;  // std dev = 0.018, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.1466084215627892;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.004354096518245569;  // std dev = 0.943, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.12499115921582024;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.02721842326487719;  // std dev = 1.084, 64.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=12 */
%   | | | else return -0.011655608538139198;  // std dev = 2.050, 146.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=40 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.16718530107949803;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.01779441278743339;  // std dev = 2.941, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | else return 0.031067643511339366;  // std dev = 0.568, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.1503173246065661;  // std dev = 0.031, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return -0.03861378737310646;  // std dev = 0.119, 61.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=8 */
%   | | else return -0.0018193593326391272;  // std dev = 0.159, 119.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=35 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(H, G) )
%   | | then return -0.2865443995885719;  // std dev = 0.611, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.14087577481970281;  // std dev = 0.041, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, I) )
%   | | then if ( location(A, J), location(I, J) )
%   | | | then return -0.0472390441138432;  // std dev = 2.558, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | | | else return 0.04019709837285264;  // std dev = 1.859, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return -0.008868661271690531;  // std dev = 0.404, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.09960879744696988;  // std dev = 0.586, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */


Results
   AUC ROC   = 0.97736
   AUC PR    = 0.172351
   CLL	      = -0.187591
   Precision = 0.102859 at threshold = 0.5
   Recall    = 0.935018
   F1        = 0.185331


Total learning time: 6.875 seconds
Total inference time: 42.515 seconds
AUC ROC: 0.97736


Results scoring model
   AUC ROC   = 0.989961
   AUC PR    = 0.485299
   CLL	      = -0.164284
   Precision = 0.21875 at threshold = 0.5
   Recall    = 0.836957
   F1        = 0.346847


Total scoring time: 8.923 seconds
Refined model CLL: -0.164284


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.980264
   AUC PR    = 0.209709
   CLL	      = -0.180921
   Precision = 0.110933 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.199712


Total learning time: 20.841 seconds
Total inference time: 23.536 seconds
AUC ROC: 0.980264
Total revision time: 20.841
Best scored revision CLL: -0.130175


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:44:02
{'AUC ROC': 0.980264, 'AUC PR': 0.209709, 'CLL': -0.180921, 'Precision': [0.110933, 0.5], 'Recall': 1.0, 'F1': 0.199712, 'Learning time': 20.841, 'Inference time': 23.536, 'parameter': {'AUC ROC': 0.980264, 'AUC PR': 0.209709, 'CLL': -0.180921, 'Precision': [0.110933, 0.5], 'Recall': 1.0, 'F1': 0.199712, 'Learning time': 1.771, 'Inference time': 23.536}}


Starting fold 4

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos	 examples: 283
Target test neg examples: 40479

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;true;false
0;false,true,true;follows(F, G), follows(G, A).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(H, I), recursion_accounttype(I, B).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;false;true
1;false,true,false;follows(E, G), follows(G, E).;false;false
1;false,false;follows(H, A).;true;true
1;false,false,true;follows(H, I), follows(I, A).;false;false
1;false,false,false;tweets(A, J), follows(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(D, C), recursion_accounttype(D, B).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
2;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
2;false,false,true;follows(A, I), follows(I, H).;false;false
2;false,false,false;follows(A, J), follows(J, K).;false;false
3;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
3;true;follows(C, D), follows(A, D).;false;false
3;false;follows(E, A), follows(A, E).;true;true
3;false,true;follows(A, F), follows(E, F).;true;true
3;false,true,true;follows(E, G), recursion_accounttype(G, B).;false;false
3;false,true,false;follows(E, H), recursion_accounttype(H, B).;false;false
3;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
3;false,false,false;follows(J, A).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(D, C), follows(A, D).;true;false
4;true,true;recursion_accounttype(D, B).;false;true
4;true,true,false;tweets(C, E), follows(D, A).;false;false
4;false;follows(F, A).;false;true
4;false,false;tweets(A, G).;true;true
4;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
4;false,false,false;follows(A, I), recursion_accounttype(I, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(C, D), follows(D, A).;false;false
5;false;follows(E, A).;true;true
5;false,true;follows(E, F), follows(F, A).;false;true
5;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
5;false,false;follows(A, H).;true;true
5;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;tweets(A, J).;false;false
6;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
6;true;tweets(A, D), follows(E, C).;false;false
6;false;follows(F, A).;true;true
6;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
6;false,true,true;follows(A, G), follows(G, H).;false;false
6;false,false;tweets(A, I).;true;true
6;false,false,true;tweets(J, I), recursion_accounttype(J, B).;false;false
6;false,false,false;follows(A, K), follows(K, L).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, D).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G).;true;true
7;false,false,true;follows(H, G), recursion_accounttype(H, B).;false;false
7;false,false,false;tweets(A, I).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(A, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(C, E), follows(E, A).;true;false
8;true,false,true;recursion_accounttype(E, B), follows(A, F).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H), follows(H, I).;true;true
8;false,false,true;recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
9;true;recursion_accounttype(D, B).;true;false
9;true,true;follows(A, E), follows(E, D).;false;false
9;false;follows(A, F), recursion_accounttype(F, B).;true;true
9;false,true;follows(A, G), follows(G, F).;false;false
9;false,false;tweets(A, H).;true;true
9;false,false,true;follows(A, I).;false;false
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8211118980624753;  // std dev = 1.388, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.1418510649004879;  // std dev = 0.000, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.09499104036267027;  // std dev = 2.621, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | | else return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.7473839334745775;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(E, G), interaction(G, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7418018292218529;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), interaction(I, A) )
%   | | | then return 0.05619992320473209;  // std dev = 2.726, 61.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=13 */
%   | | | else return 0.1143617888009389;  // std dev = 4.519, 138.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=39 */
%   | | else if ( function(A, J), interaction(A, K) )
%   | | | then return 0.14366745794486235;  // std dev = 2.900, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.4125092938891416;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5757948206715454;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6876770247896472;  // std dev = 0.994, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | else return -0.13772862256054827;  // std dev = 0.281, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.5842183774655159;  // std dev = 0.000959, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.08489634382614508;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.09927303819888446;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.09003068405623393;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.4219360081372857;  // std dev = 0.028, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.3379786200859383;  // std dev = 0.787, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11676996802753796;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5245352421441767;  // std dev = 0.121, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.11939860736695652;  // std dev = 0.008, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16188174087795335;  // std dev = 1.216, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.07761649745960184;  // std dev = 3.928, 158.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=48 */
%   | | | else return 0.1734550456635676;  // std dev = 2.763, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.3197491615020284;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( function(C, E), interaction(D, A) )
%   | | | then return 0.29785690698006817;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07490131989863022;  // std dev = 1.405, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else if ( interaction(F, A) )
%   | then return 0.05698849711835323;  // std dev = 4.079, 189.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=56 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3964523502384502;  // std dev = 2.215, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | | | else return -0.21753644803199693;  // std dev = 0.019, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.2749225332175276;  // std dev = 0.159, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.06152997906589223;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then return -0.023385607921532083;  // std dev = 2.284, 75.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.42770489828737757;  // std dev = 1.674, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | | else return -0.13730345652593834;  // std dev = 0.037, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.626096423917882;  // std dev = 0.631, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.2238685373557759;  // std dev = 0.240, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), interaction(E, C) )
%   | then return 0.2519175653870744;  // std dev = 0.267, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.1420886934713613;  // std dev = 0.997, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4168428985813863;  // std dev = 0.514, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.12020319337191067;  // std dev = 0.084, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | else if ( function(A, I) )
%   | | then if ( function(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.24599453806849006;  // std dev = 1.771, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | | | else return -0.15199062142852077;  // std dev = 0.013, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.11975161079961824;  // std dev = 1.012, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.3669323141526471;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2408862650199351;  // std dev = 2.171, 61.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   | | else return -0.10889208691417691;  // std dev = 0.071, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.43253016330115135;  // std dev = 0.539, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.14979296477785248;  // std dev = 0.217, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.15960383325769964;  // std dev = 0.067, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then if ( recursion_proteinclass(E, B), interaction(A, F) )
%   | | | then return 0.14161110602868499;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.28359858179790043;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.02421118774994535;  // std dev = 1.102, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(G, A) )
%   | then return -0.005575591325232221;  // std dev = 2.565, 212.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=56 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.1921937923689551;  // std dev = 0.253, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0221652396106556;  // std dev = 1.403, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( function(A, J) )
%   | | | then return 0.010780845293866623;  // std dev = 0.838, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, D) )
%   | | then return 0.1641865271232564;  // std dev = 0.189, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.002999566989889189;  // std dev = 0.995, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.004368000742403442;  // std dev = 2.391, 137.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=37 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, F) )
%   | | then return 0.09720273045951662;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.1972502993337548;  // std dev = 0.844, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( function(A, H) )
%   | | then if ( interaction(A, I) )
%   | | | then return -0.04474590617826357;  // std dev = 1.961, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   | | | else return 0.006924597676704702;  // std dev = 1.180, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.981295
   AUC PR    = 0.20342
   CLL	      = -0.164924
   Precision = 0.121564 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.216775


Total learning time: 2.017 seconds
Total inference time: 20.753 seconds
AUC ROC: 0.981295


Results scoring model
   AUC ROC   = 0.990136
   AUC PR    = 0.394314
   CLL	      = -0.142209
   Precision = 0.245714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.394495


Total scoring time: 3.606 seconds
Parameter learned model CLL: -0.142209


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,true': 'interaction(F, G), interaction(G, A)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.0, 0, 7], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.926, 1, 6], 'false,false,true,true': [1.388, 2, 52], 'false,false,true,false': [0.0, 133, 0], 'false,false,false,true': [2.621, 29, 9], 'false,false,false,false': [1.449, 7, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(E, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), interaction(I, A)', 'false,false,false': 'function(A, J), interaction(A, K)'}, {'true,true': [5.16e-08, 0, 15], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.025, 0, 5], 'false,false,true,true': [2.726, 48, 13], 'false,false,true,false': [4.519, 99, 39], 'false,false,false,true': [2.9, 28, 12], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.926, 1, 6], 'false,true,true,true': [0.03, 0, 4], 'false,true,true,false': [0.994, 1, 52], 'false,true,false': [0.281, 137, 0], 'false,false,true,true': [0.000959, 0, 2], 'false,false,true,false': [0.707, 1, 1], 'false,false,false,true': [2.558, 24, 9], 'false,false,false,false': [1.477, 8, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'false': 'interaction(E, A), interaction(A, E)', 'false,true': 'interaction(A, F), interaction(E, F)', 'false,true,true': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,true,false': 'interaction(E, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.028, 0, 10], 'true,false': [0.787, 1, 6], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 20, 0], 'false,true,false,true': [0.121, 0, 5], 'false,true,false,false': [0.008, 7, 0], 'false,false,true': [1.216, 2, 5], 'false,false,false,true': [3.928, 110, 48], 'false,false,false,false': [2.763, 21, 12]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'true,true,false': 'function(C, E), interaction(D, A)', 'false': 'interaction(F, A)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true,true': [0.0, 0, 8], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 0], 'true,false': [1.405, 3, 6], 'false,true': [4.079, 133, 56], 'false,false,true,true': [2.215, 7, 15], 'false,false,true,false': [0.019, 32, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true,true': [0.159, 0, 11], 'true,false': [1.155, 2, 4], 'false,true,true': [2.284, 61, 14], 'false,true,false,true': [1.674, 3, 42], 'false,true,false,false': [0.037, 76, 0], 'false,false,true,true': [0.631, 0, 15], 'false,false,true,false': [0.24, 21, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D), interaction(E, C)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(A, G), interaction(G, H)', 'false,false': 'function(A, I)', 'false,false,true': 'function(J, I), recursion_proteinclass(J, B)'}, {'true,true': [0.267, 0, 13], 'true,false': [0.997, 2, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.514, 0, 56], 'false,true,false': [0.084, 130, 0], 'false,false,true,true': [1.771, 7, 15], 'false,false,true,false': [0.013, 20, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [1.012, 1, 12], 'true,false': [0.065, 0, 3], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.171, 5, 56], 'false,true,false': [0.071, 134, 0], 'false,false,true,true': [0.539, 0, 15], 'false,false,true,false': [0.217, 21, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(C, E), interaction(E, A)', 'true,false,true': 'recursion_proteinclass(E, B), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'function(A, J)'}, {'true,true': [0.067, 0, 9], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [1.102, 2, 4], 'false,true': [2.565, 156, 56], 'false,false,true,true': [0.253, 0, 3], 'false,false,true,false': [1.403, 17, 9], 'false,false,false,true': [0.838, 5, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(E, D)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(A, G), interaction(G, F)', 'false,false': 'function(A, H)', 'false,false,true': 'interaction(A, I)'}, {'true,true,true': [0.189, 0, 14], 'true,true,false': [0.995, 2, 4], 'true,false': [2.391, 100, 37], 'false,true,true': [0.055, 0, 3], 'false,true,false': [0.844, 1, 2], 'false,false,true,true': [1.961, 49, 15], 'false,false,true,false': [1.18, 21, 11], 'false,false,false': [0.0, 0, 0]}]]
[{'': [-2.3684757858670006e-16, 0.206811292316551], 'false': [0.10937499999999978, 0.19817111815301167], 'false,false': [0.20074923503674763, 0.18749999999999947], 'false,false,true': [0.035665294924554274, -5.0085249231210067e-17], 'false,false,false': [0.18074792243767326, 0.20999999999999988], 'false,true': [0.0, 0.12244897959183662], 'false,true,true': [0.0, nan], 'true': [-2.220446049250313e-16, -2.5376526277146434e-16]}, {'': [1.7763568394002506e-16, 0.15957202738121792], 'false': [9.53874119027682e-05, 0.15262491481245719], 'false,false': [0.1406667738754366, 0.2102668560694359], 'false,false,false': [0.2102668560694359, nan], 'false,false,true': [0.12182675744203715, 0.14795766773302715], 'false,true': [0.0, 0.0001246395515533294], 'false,true,false': [nan, 0.0001246395515533294], 'true': [1.7763568394002506e-16, nan]}, {'': [0.05859374999999983, 0.1558333294980928], 'false': [0.14443055892646048, 0.201756023270346], 'false,false': [0.18733085313863235, 0.19836312389615954], 'false,false,false': [0.19834710743801684, 0.19834710743801656], 'false,false,true': [4.5963838618545694e-07, 0.25], 'false,true': [0.01817326175838586, 0.0005768764758531078], 'true': [-1.4802973661668753e-16, 0.12244897959183675], 'false,true,true': [0.0002247503418562613, 0.01864943638669451]}, {'': [0.038203606329325235, 0.11710813997736483], 'false': [0.054792787927482815, 0.12538036573298905], 'false,false': [0.21139494450398563, 0.12206593114990918], 'false,false,false': [0.09764930365613482, 0.23137169857034856], 'false,true': [-2.7755575615628915e-18, 0.10199888983332861], 'false,true,false': [0.0029048025911065254, 9.212993035656195e-06], 'true': [7.844665434622033e-05, 0.08852174191048605], 'false,true,true': [nan, -2.7755575615628915e-18]}, {'': [0.12435972514193708, 0.10897226223700035], 'true': [4.733538844976021e-05, 0.2192895093611176], 'false': [0.0880122375382588, 0.1818699981007318], 'false,false': [0.1818699981007318, nan], 'false,false,true': [0.22299480355757434, 1.1335518876200157e-05], 'true,true': [-4.163336342344337e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.09031130047752982, 0.1056739972849801], 'false': [0.08912790402255388, 0.18824969785398019], 'false,false': [0.18824969785398019, nan], 'false,false,true': [0.0265243215681832, 0.002750975692018701], 'true': [0.0022882243224266715, 0.2222222222222222], 'false,true': [0.06952662792359159, 0.09773553629119541], 'false,true,false': [0.06225858551562674, 1.8073124895168797e-05]}, {'': [0.09059438876128087, 0.07177930012424255], 'true': [0.0055025152314684455, 0.24842932383581426], 'false': [0.06215242966832635, 0.11422928312050422], 'false,false': [0.11422928312050422, nan], 'false,false,true': [0.1426420526032711, 7.900547628786337e-06], 'false,true': [0.0047251274295671475, 5.466558957106537e-05], 'false,true,true': [nan, 0.0047251274295671475]}, {'': [0.0735778971717787, 0.0580522776543206], 'true': [0.07877930922912099, 0.0013960760838409025], 'false': [0.050493148223421366, 0.09180347329930821], 'false,false': [0.09180347329930821, nan], 'false,false,true': [0.019390290243895127, 0.0022354148585311527], 'false,true': [0.0772575045378605, 3.738113471002971e-05], 'false,true,true': [nan, 0.07725750453786051]}, {'': [0.08111232163561863, 0.03793147129329649], 'true': [0.0004987269228917463, 0.16358196031955624], 'true,false': [0.0050401108188283875, 0.20240878527328457], 'false': [0.03103663102437423, 0.07613770517613923], 'false,false': [0.07273857602415698, 0.08780158781959757], 'false,false,false': [0.08780158781959757, nan], 'false,false,true': [0.021253298108620897, 0.07568852548823028], 'true,false,true': [0.0, 0.0]}, {'': [0.04526732311952074, 0.06024957215359864], 'false': [0.14102242433595738, 0.05517148582859086], 'false,true': [0.0010181135924540302, 0.2376754417022421], 'false,false': [0.05517148582859085, nan], 'false,false,true': [0.060107539576148415, 0.04351948435439156], 'true': [0.057201213378648454, 0.041739384763588794], 'true,true': [0.002548573604255045, 0.16515820647353305]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), function(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false,true;interaction(A, I), interaction(I, H).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(C, D), interaction(A, D).;true;true
3;false;interaction(E, A), interaction(A, E).;true;true
3;false,true;interaction(A, F), interaction(E, F).;true;true
3;false,true,false;interaction(E, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, C), interaction(A, D).;true;true
4;true,true;recursion_proteinclass(D, B).;true;true
4;false;interaction(F, A).;true;true
4;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, D), interaction(D, A).;true;true
5;false;interaction(E, A).;true;true
5;false,true;interaction(E, F), interaction(F, A).;true;true
5;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
6;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
6;false,false;function(J, I), recursion_proteinclass(J, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, D).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(H, G), recursion_proteinclass(H, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(A, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(C, E), interaction(E, A).;true;true
8;true,false,true;recursion_proteinclass(E, B), interaction(A, F).;true;true
9;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
9;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
9;false,true;interaction(A, G), interaction(G, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8036034805540578;  // std dev = 1.684, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.06504548682365029;  // std dev = 2.181, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.17393840878372288;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.21947341221095437;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.5528067455442878;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.09334545661472846;  // std dev = 4.574, 146.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=38 */
%   | | | else return 0.16426072303636638;  // std dev = 3.874, 78.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5684513190374351;  // std dev = 0.037, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5749937601830103;  // std dev = 0.108, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5858810722996695;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6035441018410503;  // std dev = 2.333, 58.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=52 */
%   | | else return -0.13622226958612993;  // std dev = 0.008, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.5757095271152078;  // std dev = 0.029, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.09605261748413116;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.20784108399874046;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.05004059428196612;  // std dev = 1.963, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.42614363057845556;  // std dev = 0.037, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( complex(A, E) )
%   | | then return 0.09214847112562859;  // std dev = 0.833, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.4820238216195464;  // std dev = 0.105, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( interaction(A, G), interaction(F, G) )
%   | | then return -0.10248940801727309;  // std dev = 0.007, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0.15549271615386903;  // std dev = 0.330, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( enzyme(I, J), location(I, K) )
%   | | | then return 0.07212374779712777;  // std dev = 2.091, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return 0.15342358241704537;  // std dev = 2.665, 64.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=26 */
%   | | else if ( location(A, L) )
%   | | | then return 0.02850069640393769;  // std dev = 3.645, 103.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=24 */
%   | | | else return 0.06408063114638894;  // std dev = 1.048, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.3357258951969589;  // std dev = 0.039, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.25556698969807;  // std dev = 0.361, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F) )
%   | | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5254832617219624;  // std dev = 0.252, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.1273506868369296;  // std dev = 0.347, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.11031041088966385;  // std dev = 2.069, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | | else return 0.06039482103056531;  // std dev = 3.001, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
%   | else if ( function(J, K), recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.2841854652637097;  // std dev = 1.920, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.7895512776514939;  // std dev = 0.036, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.20770340948405455;  // std dev = 0.017, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.27658653937162536;  // std dev = 0.039, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.03198939775736254;  // std dev = 1.117, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then return 0.027458943663388292;  // std dev = 0.259, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.44072891798288355;  // std dev = 1.404, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.14436040666806907;  // std dev = 0.389, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( enzyme(H, I) )
%   | | | then return -0.0553117502135838;  // std dev = 1.328, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.12249874455303791;  // std dev = 1.318, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.20171184919250748;  // std dev = 1.426, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.41449499671550755;  // std dev = 0.701, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then return 0.23498835810498456;  // std dev = 0.076, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2002824902138677;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.31900199130289414;  // std dev = 0.131, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.41021945387374686;  // std dev = 0.454, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0.3230577352348057;  // std dev = 0.981, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return -0.11990074595498357;  // std dev = 0.018, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | else if ( function(K, L), recursion_proteinclass(K, B) )
%   | | then if ( interaction(A, M), recursion_proteinclass(M, B) )
%   | | | then return 0.03590643527862511;  // std dev = 0.927, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.34995656241054723;  // std dev = 1.977, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | else return -0.1911167139044104;  // std dev = 0.028, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then return 0.20713411398286366;  // std dev = 0.057, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.17737682481608003;  // std dev = 1.020, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.2383052899007986;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( location(A, I), complex(A, J) )
%   | | | then return 0.18728928994780733;  // std dev = 0.879, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.2723280733180958;  // std dev = 1.680, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | else return -0.11007174914322176;  // std dev = 0.017, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   | else if ( interaction(K, L), recursion_proteinclass(K, B) )
%   | | then if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.004271241509201308;  // std dev = 2.098, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.17921299929025827;  // std dev = 1.479, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else return -0.19744171763659693;  // std dev = 0.103, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then return 0.15737981929020622;  // std dev = 0.025, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.10590442832401681;  // std dev = 0.734, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.22592793526625923;  // std dev = 0.052, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( location(A, G), interaction(H, A) )
%   | then if ( interaction(A, I), enzyme(I, J) )
%   | | then return -0.060343303130138665;  // std dev = 0.190, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | else return -0.006160276086598249;  // std dev = 0.195, 161.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=45 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then if ( phenotype(K, M), interaction(K, N) )
%   | | | then return 0.01659666195947426;  // std dev = 1.087, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.11063756268243277;  // std dev = 1.514, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( interaction(A, P), phenotype(P, Q) )
%   | | | then return 0.04941639661834402;  // std dev = 1.006, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.02288373655570635;  // std dev = 1.129, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.1681426829529486;  // std dev = 0.044, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then return -0.03386722716070819;  // std dev = 0.135, 42.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=7 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.03361529863947417;  // std dev = 1.465, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | | else return -0.01629793772861799;  // std dev = 1.243, 59.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.21530370516405065;  // std dev = 0.091, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, K), phenotype(K, L) )
%   | | then if ( interaction(K, M), enzyme(M, N) )
%   | | | then return -0.1645421552139219;  // std dev = 1.226, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return -0.05566910068671392;  // std dev = 1.985, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | else if ( phenotype(A, P), enzyme(A, Q) )
%   | | | then return 0.12515813688953226;  // std dev = 0.718, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.028506435514288414;  // std dev = 1.434, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */


Results
   AUC ROC   = 0.981255
   AUC PR    = 0.212681
   CLL	      = -0.176127
   Precision = 0.103231 at threshold = 0.5
   Recall    = 0.925795
   F1        = 0.18575


Total learning time: 6.61 seconds
Total inference time: 71.955 seconds
AUC ROC: 0.981255


Results scoring model
   AUC ROC   = 0.987142
   AUC PR    = 0.360109
   CLL	      = -0.165853
   Precision = 0.163482 at threshold = 0.5
   Recall    = 0.895349
   F1        = 0.276481


Total scoring time: 8.162 seconds
Refined model CLL: -0.165853


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.981295
   AUC PR    = 0.20342
   CLL	      = -0.164924
   Precision = 0.121564 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.216775


Total learning time: 20.395000000000003 seconds
Total inference time: 20.753 seconds
AUC ROC: 0.981295
Total revision time: 20.395000000000003
Best scored revision CLL: -0.142209


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:45:55
{'AUC ROC': 0.981295, 'AUC PR': 0.20342, 'CLL': -0.164924, 'Precision': [0.121564, 0.5], 'Recall': 1.0, 'F1': 0.216775, 'Learning time': 20.395000000000003, 'Inference time': 20.753, 'parameter': {'AUC ROC': 0.981295, 'AUC PR': 0.20342, 'CLL': -0.164924, 'Precision': [0.121564, 0.5], 'Recall': 1.0, 'F1': 0.216775, 'Learning time': 2.017, 'Inference time': 20.753}}


