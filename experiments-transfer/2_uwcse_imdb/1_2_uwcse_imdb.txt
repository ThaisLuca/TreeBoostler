Starting experiment #1 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.8025933795439567;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( publication(I, A), tempadvisedby(J, B) )
%   | | then if ( projectmember(K, B) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08542166237223962;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( publication(L, B), ta(M, A, N) )
%   | | | then return 0.6476226193100377;  // std dev = 2.513, 38.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=30 */
%   | | | else return 0.4996583690617759;  // std dev = 3.491, 53.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=34 */
%   else return -0.14185106490048818;  // std dev = 0.000, 186.000 (wgt'ed) examples reached here.  /* #neg=186 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.7287119984673663;  // std dev = 0.086, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( publication(C, E), ta(F, E, G) )
%   | | | then return 0.498810173033329;  // std dev = 0.888, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.7305483838299364;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(H, A), tempadvisedby(I, B) )
%   | | then if ( publication(J, I) )
%   | | | then return -0.15257082685518708;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.3273398704177903;  // std dev = 1.964, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( publication(K, B) )
%   | | | then return 0.5436058921527488;  // std dev = 3.504, 70.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=54 */
%   | | | else return 0.3741277674731853;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   else return -0.12544463852839133;  // std dev = 4.71e-08, 179.000 (wgt'ed) examples reached here.  /* #neg=179 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.5868433845788021;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.34064523977005706;  // std dev = 1.215, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0.5727974281776735;  // std dev = 0.169, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(F, B), publication(G, A) )
%   | | then if ( publication(G, H), professor(H) )
%   | | | then return 0.016209811344826092;  // std dev = 1.816, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.5966528124504481;  // std dev = 0.878, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( ta(I, A, J), publication(K, B) )
%   | | | then return 0.48637018852021446;  // std dev = 2.048, 31.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | | | else return 0.3501474117407755;  // std dev = 3.459, 54.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=35 */
%   else return -0.11231637819360633;  // std dev = 7.60e-08, 184.000 (wgt'ed) examples reached here.  /* #neg=184 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( ta(D, A, E) )
%   | | then if ( ta(F, G, E), tempadvisedby(G, B) )
%   | | | then return 0.17532334545939512;  // std dev = 0.884, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3743359514738037;  // std dev = 0.897, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.43315596727923694;  // std dev = 0.130, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( publication(H, A) )
%   | | then if ( ta(I, A, J), publication(K, B) )
%   | | | then return 0.513922223710419;  // std dev = 0.965, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.06282313989948281;  // std dev = 2.645, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | else if ( tempadvisedby(L, B), ta(M, L, N) )
%   | | | then return 0.35149874159377203;  // std dev = 2.143, 27.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
%   | | | else return 0.24468837573066074;  // std dev = 3.345, 51.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=34 */
%   else return -0.10159632948783645;  // std dev = 0.000, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3448024168983095;  // std dev = 0.224, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), professor(E) )
%   | | | then return -0.013408452093778023;  // std dev = 2.470, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | | else return 0.5432815650859326;  // std dev = 0.307, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.14647230567661657;  // std dev = 2.900, 40.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=27 */
%   | | | else return 0.2231198066769618;  // std dev = 2.986, 41.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=28 */
%   else return -0.09269127618926096;  // std dev = 2.11e-08, 175.000 (wgt'ed) examples reached here.  /* #neg=175 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( hasposition(D, C), projectmember(E, D) )
%   | then if ( publication(F, B), publication(F, A) )
%   | | then if ( ta(G, A, H), tempadvisedby(I, B) )
%   | | | then return 0.20914060550358982;  // std dev = 0.897, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.2687073515033251;  // std dev = 0.161, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( ta(J, A, K), tempadvisedby(L, B) )
%   | | | then return 0.2304400341954777;  // std dev = 2.322, 27.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
%   | | | else return 0.10587490937636955;  // std dev = 3.904, 75.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=43 */
%   | else if ( tempadvisedby(M, B) )
%   | | then return -0.23025488470584898;  // std dev = 0.880, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( publication(N, B), ta(P, A, Q) )
%   | | | then return 0.25116850075256536;  // std dev = 0.918, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.03154180357588129;  // std dev = 1.391, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( ta(R, A, S) )
%   | then return -0.10054808741627523;  // std dev = 0.074, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.08377314237040062;  // std dev = 0.057, 159.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=1 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then if ( publication(E, C) )
%   | | then if ( ta(F, C, G) )
%   | | | then return 0.127726829942956;  // std dev = 1.080, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.20914289852934806;  // std dev = 1.813, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( publication(D, H), ta(I, H, J) )
%   | | | then return 0.23159599046261894;  // std dev = 1.520, 31.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | | | else return 0.1216497183184723;  // std dev = 1.930, 25.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | else if ( publication(K, A), ta(L, A, M) )
%   | | then if ( publication(K, N), professor(N) )
%   | | | then return 0.11344349207735258;  // std dev = 1.454, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return -0.09301955854805773;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(P, B), ta(Q, A, R) )
%   | | | then return 0.3154502084918134;  // std dev = 0.950, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.17267827292714055;  // std dev = 2.892, 48.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=34 */
%   else return -0.07861943096957975;  // std dev = 0.007, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then if ( publication(C, B) )
%   | | | then return 0.1506037198764989;  // std dev = 0.844, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.35116790210588816;  // std dev = 0.917, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( publication(C, B) )
%   | | | then return 0.1164200531486528;  // std dev = 1.645, 33.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=30 */
%   | | | else return -0.03144779609810764;  // std dev = 2.372, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | else if ( ta(G, A, H), tempadvisedby(I, B) )
%   | | then if ( ta(G, I, J) )
%   | | | then return -0.35673763492133226;  // std dev = 0.836, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.09137968014006577;  // std dev = 1.925, 20.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | else if ( projectmember(K, B) )
%   | | | then return 0.4305592150054185;  // std dev = 0.039, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.19261566209987724;  // std dev = 2.616, 44.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=35 */
%   else return -0.07308244583618129;  // std dev = 0.007, 201.000 (wgt'ed) examples reached here.  /* #neg=201 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( hasposition(D, C), projectmember(E, D) )
%   | then if ( tempadvisedby(F, B), publication(G, F) )
%   | | then if ( ta(H, A, I) )
%   | | | then return 0.2988288986650377;  // std dev = 0.127, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.15443177643396647;  // std dev = 0.849, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else if ( publication(J, A), tempadvisedby(K, B) )
%   | | | then return 0.0023139299339908492;  // std dev = 2.340, 40.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=24 */
%   | | | else return 0.08789426806025753;  // std dev = 3.825, 83.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=63 */
%   | else if ( publication(L, A), publication(L, B) )
%   | | then return 0.22997334675984923;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(M, B) )
%   | | | then return -0.24296102555934845;  // std dev = 1.437, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.008992351264996534;  // std dev = 1.240, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( ta(N, A, P) )
%   | then return -0.07690088202921702;  // std dev = 0.065, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.06486387598362993;  // std dev = 0.044, 143.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=1 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then if ( publication(E, B) )
%   | | then if ( ta(F, G, D), publication(E, G) )
%   | | | then return 0.2398745262215287;  // std dev = 0.407, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.07372846786446648;  // std dev = 2.264, 34.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   | | else return 0.4925882274073808;  // std dev = 0.144, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(H, B), publication(H, A) )
%   | | then if ( tempadvisedby(I, B) )
%   | | | then return 0.1754777174187186;  // std dev = 0.114, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.06459178420147778;  // std dev = 0.959, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( publication(J, A), publication(K, B) )
%   | | | then return -0.05352217505292795;  // std dev = 1.367, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.08847561410935213;  // std dev = 3.027, 46.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=32 */
%   else return -0.06408635802097215;  // std dev = 0.010, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;ta(G, A, H).;false;false
0;true,false;publication(I, A), tempadvisedby(J, B).;true;true
0;true,false,true;projectmember(K, B).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B).;false;true
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,true;publication(J, I).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, B).;false;false
2;true,false;publication(F, B), publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;ta(I, A, J), publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;ta(F, G, E), tempadvisedby(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;ta(I, A, J), publication(K, B).;false;false
3;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A).;true;true
4;true,false,true;publication(D, E), professor(E).;false;false
4;true,false,false;ta(F, A, G).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;ta(G, A, H), tempadvisedby(I, B).;false;false
5;true,true,false;ta(J, A, K), tempadvisedby(L, B).;false;false
5;true,false;tempadvisedby(M, B).;false;true
5;true,false,false;publication(N, B), ta(P, A, Q).;false;false
5;false;ta(R, A, S).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, B).;true;true
6;true,true;publication(E, C).;true;true
6;true,true,true;ta(F, C, G).;false;false
6;true,true,false;publication(D, H), ta(I, H, J).;false;false
6;true,false;publication(K, A), ta(L, A, M).;true;true
6;true,false,true;publication(K, N), professor(N).;false;false
6;true,false,false;publication(P, B), ta(Q, A, R).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A).;true;true
7;true,true;ta(D, A, E), tempadvisedby(F, B).;true;true
7;true,true,true;publication(C, B).;false;false
7;true,true,false;publication(C, B).;false;false
7;true,false;ta(G, A, H), tempadvisedby(I, B).;true;true
7;true,false,true;ta(G, I, J).;false;false
7;true,false,false;projectmember(K, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;true,true;tempadvisedby(F, B), publication(G, F).;true;true
8;true,true,true;ta(H, A, I).;false;false
8;true,true,false;publication(J, A), tempadvisedby(K, B).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, B).;false;false
8;false;ta(N, A, P).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D).;true;true
9;true,true;publication(E, B).;true;false
9;true,true,true;ta(F, G, D), publication(E, G).;false;false
9;true,false;publication(H, B), publication(H, A).;true;true
9;true,false,true;tempadvisedby(I, B).;false;false
9;true,false,false;publication(J, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( genre(B, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7.60e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360617;  // std dev = 9.42e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783637;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0926912761892609;  // std dev = 6.32e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.13905044463091665;  // std dev = 0.161, 85.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=56 */
%   | | else return -0.0851847513883968;  // std dev = 5.67e-09, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0851847513883969;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.21901867471313075;  // std dev = 0.056, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08377239624001802;  // std dev = 0.085, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1932103735454293;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( movie(C, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09620982315150749;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07668547953896424;  // std dev = 0.072, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, F) )
%   | | then return 0.01258997490582881;  // std dev = 0.115, 155.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06789125111879704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1587085517587254;  // std dev = 0.250, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07269083525060352;  // std dev = 0.080, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075502
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.638 seconds
Total inference time: 4.695 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073109
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.739 seconds
Parameter learned model CLL: -0.073109


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'genre(B, E)'}, {'true,true': [0.0, 0, 56], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.6e-08, 113, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true': [0.0, 0, 56], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 114, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true,true': [1.03e-07, 0, 56], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.42e-08, 121, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, B)'}, {'true,true': [0.0, 0, 56], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 121, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 56], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.32e-08, 113, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, B), movie(E, A)'}, {'true,true,true': [0.161, 29, 56], 'true,true,false': [5.67e-09, 95, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.056, 2, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.085, 111, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 56], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.86e-09, 3, 0], 'true,false': [0.0, 0, 0], 'false': [0.072, 106, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, F)'}, {'true,true,true': [0.115, 99, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.25, 1, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.08, 123, 0]}]]
[{'': [0.017236072637734554, 5.1089909097794814e-17], 'true': [-1.2688263138573217e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.05371895283263886, -5.843279076974508e-18], 'true': [-1.9032394707859825e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.9032394707859825e-16, nan]}, {'': [0.021515213257540407, 7.340317518182853e-17], 'true': [1.9032394707859825e-16, 2.3129646346357427e-18], 'true,true': [1.9032394707859825e-16, nan], 'true,true,true': [1.9032394707859825e-16, nan], 'true,false': [2.3129646346357427e-18, nan], 'true,false,true': [2.3129646346357427e-18, nan]}, {'': [0.02355453548953108, -2.3856031934094273e-17], 'true': [-3.489272363107635e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.010633911082358413, 3.53699370677041e-17], 'true': [-1.2688263138573217e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.02482756116930627, 1.3877787807814458e-18], 'true': [0.02482756116930627, nan], 'true,true': [0.026038594122871017, 3.272236283105724e-17]}, {'': [0.0031672184927811287, 6.440370086636661e-05], 'true': [0.0031672184927811287, nan], 'true,true': [0.0031672184927811287, nan]}, {'': [0.0040426200640688095, 4.8757808771887936e-05], 'true': [0.0040426200640688095, nan], 'true,true': [-5.551115123125783e-17, 1.1564823173178713e-18], 'true,true,false': [nan, 1.1564823173178713e-18]}, {'': [0.013155309376458396, 0.0], 'true': [0.013155309376458396, nan], 'true,true': [0.013155309376458396, nan]}, {'': [0.0010973008950413128, 5.2261247742372833e-05], 'true': [0.0010973008950413128, nan], 'true,true': [0.0010973008950413128, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839138;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1123163781936062;  // std dev = 8.30e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10159632948783634;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.0926912761892609;  // std dev = 6.32e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( director(B) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.0851847513883969;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return -0.08518475138839683;  // std dev = 4.21e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return -0.08518475138839691;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.19945291311954882;  // std dev = 0.054, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.20013989995374792;  // std dev = 0.052, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.07877675473109154;  // std dev = 7.45e-08, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.16884878151164862;  // std dev = 0.051, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.16939971619516644;  // std dev = 0.049, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06842697784420264;  // std dev = 5.77e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.15507629822565266;  // std dev = 0.000607, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.11008685813912675;  // std dev = 0.000105, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06842697784420275;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13582530801917828;  // std dev = 0.000543, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09975181391785326;  // std dev = 0.000133, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06419184008202626;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067088
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.668 seconds
Total inference time: 2.581 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064524
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.321 seconds
Refined model CLL: -0.064524


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067088
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.366 seconds
Total inference time: 2.581 seconds
AUC ROC: 1.0
Total revision time: 6.366
Best scored revision CLL: -0.064524


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:00:38
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067088, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.366, 'Inference time': 2.581, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075502, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.638, 'Inference time': 4.695}}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;ta(G, A, H).;false;false
0;true,false;publication(I, A), tempadvisedby(J, B).;true;true
0;true,false,true;projectmember(K, B).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B).;false;true
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,true;publication(J, I).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, B).;false;false
2;true,false;publication(F, B), publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;ta(I, A, J), publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;ta(F, G, E), tempadvisedby(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;ta(I, A, J), publication(K, B).;false;false
3;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A).;true;true
4;true,false,true;publication(D, E), professor(E).;false;false
4;true,false,false;ta(F, A, G).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;ta(G, A, H), tempadvisedby(I, B).;false;false
5;true,true,false;ta(J, A, K), tempadvisedby(L, B).;false;false
5;true,false;tempadvisedby(M, B).;false;true
5;true,false,false;publication(N, B), ta(P, A, Q).;false;false
5;false;ta(R, A, S).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, B).;true;true
6;true,true;publication(E, C).;true;true
6;true,true,true;ta(F, C, G).;false;false
6;true,true,false;publication(D, H), ta(I, H, J).;false;false
6;true,false;publication(K, A), ta(L, A, M).;true;true
6;true,false,true;publication(K, N), professor(N).;false;false
6;true,false,false;publication(P, B), ta(Q, A, R).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A).;true;true
7;true,true;ta(D, A, E), tempadvisedby(F, B).;true;true
7;true,true,true;publication(C, B).;false;false
7;true,true,false;publication(C, B).;false;false
7;true,false;ta(G, A, H), tempadvisedby(I, B).;true;true
7;true,false,true;ta(G, I, J).;false;false
7;true,false,false;projectmember(K, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;true,true;tempadvisedby(F, B), publication(G, F).;true;true
8;true,true,true;ta(H, A, I).;false;false
8;true,true,false;publication(J, A), tempadvisedby(K, B).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, B).;false;false
8;false;ta(N, A, P).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D).;true;true
9;true,true;publication(E, B).;true;false
9;true,true,true;ta(F, G, D), publication(E, G).;false;false
9;true,false;publication(H, B), publication(H, A).;true;true
9;true,false,true;tempadvisedby(I, B).;false;false
9;true,false,false;publication(J, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( genre(B, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7.30e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839133;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360618;  // std dev = 8.82e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926083;  // std dev = 7.45e-08, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.13914144917475565;  // std dev = 0.161, 88.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=58 */
%   | | else return -0.08518475138839682;  // std dev = 5.10e-09, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839691;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.20974039200173694;  // std dev = 0.076, 62.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08294210209186614;  // std dev = 0.081, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.19464652539637922;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( movie(C, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09540606110401106;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0780908321858708;  // std dev = 0.077, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, F) )
%   | | then return 0.006587710119219085;  // std dev = 0.113, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06785486929156458;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14493952111280517;  // std dev = 0.543, 63.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.072432785913771;  // std dev = 0.069, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075018
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.58 seconds
Total inference time: 4.392 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072853
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.028 seconds
Parameter learned model CLL: -0.072853


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'genre(B, E)'}, {'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.3e-08, 114, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true': [0.0, 0, 58], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 112, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true,true': [1.19e-07, 0, 58], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.82e-08, 114, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, B)'}, {'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 107, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-08, 130, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, B), movie(E, A)'}, {'true,true,true': [0.161, 30, 58], 'true,true,false': [5.1e-09, 82, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.076, 4, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.081, 116, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 58], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 10, 0], 'true,false': [0.0, 0, 0], 'false': [0.077, 101, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, F)'}, {'true,true,true': [0.113, 116, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.543, 5, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.069, 89, 0]}]]
[{'': [0.08496093749999956, 4.674623261579606e-17], 'true': [-3.675221047035001e-16, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan]}, {'': [0.0606524673676469, -5.9476233462061954e-18], 'true': [-1.2250736823450003e-16, -2.3129646346357427e-18], 'true,false': [-2.3129646346357427e-18, nan], 'true,false,true': [-2.3129646346357427e-18, nan], 'true,true': [-1.2250736823450003e-16, nan]}, {'': [0.042839038720619955, 6.817158923136926e-17], 'true': [2.4501473646900006e-16, -1.982541115402065e-18], 'true,true': [2.4501473646900006e-16, nan], 'true,true,true': [2.4501473646900006e-16, nan], 'true,false': [-1.982541115402065e-18, nan], 'true,false,true': [-1.982541115402065e-18, nan]}, {'': [0.01968953885342776, 0.0], 'true': [-3.3689526264487507e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.012487180976206418, 4.2700885562506023e-17], 'true': [-1.5313421029312505e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.026038594122871045, -1.1564823173178713e-18], 'true': [0.026038594122871045, nan], 'true,true': [0.0260287470305688, 2.572467983887558e-17]}, {'': [0.005740837514403656, 5.719113179988185e-05], 'true': [0.005740837514403656, nan], 'true,true': [0.005740837514403656, nan]}, {'': [0.01055270149278293, 5.935237486868491e-05], 'true': [0.01055270149278293, nan], 'true,true': [-6.891039463190627e-17, -1.3877787807814458e-18], 'true,true,false': [nan, -1.3877787807814458e-18]}, {'': [0.012734616984839086, 0.0], 'true': [0.012734616984839086, nan], 'true,true': [0.012734616984839086, nan]}, {'': [0.004678110737750693, 5.3352274786721114e-05], 'true': [0.004678110737750693, nan], 'true,true': [0.004678110737750693, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048763;  // std dev = 8.43e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1254446385283913;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.11231637819360622;  // std dev = 7.88e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.10159632948783633;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926103;  // std dev = 2.79e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.08518475138839687;  // std dev = 1.67e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839682;  // std dev = 4.71e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else return -0.0851847513883969;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.19601797894855336;  // std dev = 0.061, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.2023593958796219;  // std dev = 0.285, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   else return -0.07877675473109158;  // std dev = 5.87e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.15425899492881226;  // std dev = 0.079, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0.1645298459749849;  // std dev = 0.059, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333717;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06842697784420265;  // std dev = 5.00e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.15610148823080128;  // std dev = 0.008, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10931972450762258;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13662299851169232;  // std dev = 0.007, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09931851110929837;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06419184008202626;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066932
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.633 seconds
Total inference time: 2.606 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064982
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.309 seconds
Refined model CLL: -0.064982


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066932
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.55 seconds
Total inference time: 2.606 seconds
AUC ROC: 1.0
Total revision time: 6.55
Best scored revision CLL: -0.064982


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:00:52
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066932, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.55, 'Inference time': 2.606, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075018, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.58, 'Inference time': 4.392}}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;ta(G, A, H).;false;false
0;true,false;publication(I, A), tempadvisedby(J, B).;true;true
0;true,false,true;projectmember(K, B).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B).;false;true
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,true;publication(J, I).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, B).;false;false
2;true,false;publication(F, B), publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;ta(I, A, J), publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;ta(F, G, E), tempadvisedby(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;ta(I, A, J), publication(K, B).;false;false
3;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A).;true;true
4;true,false,true;publication(D, E), professor(E).;false;false
4;true,false,false;ta(F, A, G).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;ta(G, A, H), tempadvisedby(I, B).;false;false
5;true,true,false;ta(J, A, K), tempadvisedby(L, B).;false;false
5;true,false;tempadvisedby(M, B).;false;true
5;true,false,false;publication(N, B), ta(P, A, Q).;false;false
5;false;ta(R, A, S).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, B).;true;true
6;true,true;publication(E, C).;true;true
6;true,true,true;ta(F, C, G).;false;false
6;true,true,false;publication(D, H), ta(I, H, J).;false;false
6;true,false;publication(K, A), ta(L, A, M).;true;true
6;true,false,true;publication(K, N), professor(N).;false;false
6;true,false,false;publication(P, B), ta(Q, A, R).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A).;true;true
7;true,true;ta(D, A, E), tempadvisedby(F, B).;true;true
7;true,true,true;publication(C, B).;false;false
7;true,true,false;publication(C, B).;false;false
7;true,false;ta(G, A, H), tempadvisedby(I, B).;true;true
7;true,false,true;ta(G, I, J).;false;false
7;true,false,false;projectmember(K, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;true,true;tempadvisedby(F, B), publication(G, F).;true;true
8;true,true,true;ta(H, A, I).;false;false
8;true,true,false;publication(J, A), tempadvisedby(K, B).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, B).;false;false
8;false;ta(N, A, P).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D).;true;true
9;true,true;publication(E, B).;true;false
9;true,true,true;ta(F, G, D), publication(E, G).;false;false
9;true,false;publication(H, B), publication(H, A).;true;true
9;true,false,true;tempadvisedby(I, B).;false;false
9;true,false,false;publication(J, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 8.09e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( genre(B, E) )
%   | | | then return -0.1418510649004877;  // std dev = 2.79e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.1418510649004877;  // std dev = 2.58e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048793;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #neg=318 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.1254446385283912;  // std dev = 5.48e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839183;  // std dev = 0.000, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.1123163781936063;  // std dev = 4.47e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936069;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583096;  // std dev = 2.79e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.10159632948783623;  // std dev = 3.80e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783655;  // std dev = 0.000, 264.000 (wgt'ed) examples reached here.  /* #neg=264 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.09269127618926108;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926071;  // std dev = 9.88e-08, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.17371928675050763;  // std dev = 0.145, 234.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=178 */
%   | | else return -0.08518475138839678;  // std dev = 5.74e-09, 198.000 (wgt'ed) examples reached here.  /* #neg=198 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 4.37e-09, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1400005566153117;  // std dev = 0.135, 246.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08272834392186049;  // std dev = 0.141, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.20021773720357325;  // std dev = 1.52e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else if ( movie(C, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0895547266320411;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07668085987182753;  // std dev = 0.132, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, F) )
%   | | then return 0.03259452149568147;  // std dev = 0.122, 405.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06795764328881498;  // std dev = 4.27e-09, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.11057431300564628;  // std dev = 1.565, 228.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07018720332472964;  // std dev = 0.139, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0754
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.516 seconds
Total inference time: 3.906 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078154
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.826 seconds
Parameter learned model CLL: -0.078154


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'genre(B, E)'}, {'true,true': [8.09e-08, 0, 178], 'true,false,true,true': [2.79e-08, 31, 0], 'true,false,true,false': [2.58e-08, 29, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 318, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true': [0.0, 0, 178], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.48e-08, 54, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 291, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true,true': [5.9e-07, 0, 178], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.47e-08, 64, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 297, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, B)'}, {'true,true': [2.79e-08, 0, 178], 'true,false,true,true': [3.8e-08, 56, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 264, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [3.58e-07, 0, 178], 'true,false,true,true': [0.0, 67, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.88e-08, 287, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, B), movie(E, A)'}, {'true,true,true': [0.145, 56, 178], 'true,true,false': [5.74e-09, 198, 0], 'true,false': [0.0, 0, 0], 'false': [4.37e-09, 125, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.135, 68, 178], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.141, 297, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, B)'}, {'true,true,true': [1.52e-07, 0, 178], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 68, 0], 'true,false': [0.0, 0, 0], 'false': [0.132, 296, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, F)'}, {'true,true,true': [0.122, 227, 178], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.27e-09, 106, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.565, 50, 178], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.139, 289, 0]}]]
[{'': [0.18854600663795507, -8.3790416952842e-18], 'true': [6.706246045376226e-15, 6.29126380620922e-17], 'true,false': [6.29126380620922e-17, nan], 'true,false,true': [2.5069552168955147e-17, 2.2970131543968756e-17]}, {'': [0.1274873134255186, -6.409534987526676e-17], 'true': [-3.193450497798203e-15, 5.551115123125783e-17], 'true,false': [5.551115123125783e-17, nan], 'true,false,true': [5.551115123125783e-17, nan], 'true,true': [-3.193450497798203e-15, nan]}, {'': [0.08671807746810797, -9.121024175371657e-17], 'true': [1.9559884299013994e-15, 3.122502256758253e-17], 'true,true': [1.9559884299013994e-15, nan], 'true,true,true': [1.9559884299013994e-15, nan], 'true,false': [3.122502256758253e-17, nan], 'true,false,true': [3.122502256758253e-17, nan]}, {'': [0.049056319329002125, -6.560408781875925e-17], 'true': [7.983626244495507e-16, 2.577303450022685e-17], 'true,false': [2.577303450022685e-17, nan], 'true,false,true': [2.577303450022685e-17, nan]}, {'': [0.03395550104462099, 3.4041681591293996e-17], 'true': [7.185263620045957e-16, -1.6570492904853082e-18], 'true,false': [-1.6570492904853082e-18, nan], 'true,false,true': [-1.6570492904853082e-18, nan]}, {'': [0.028064388510531717, 1.865174681370263e-17], 'true': [0.028064388510531717, nan], 'true,true': [0.021088499179884562, 3.252168455972681e-17]}, {'': [0.018284937153244255, 6.72005137313625e-05], 'true': [0.018284937153244255, nan], 'true,true': [0.018284937153244255, nan]}, {'': [0.016794726187640774, 5.874822942094056e-05], 'true': [0.016794726187640774, nan], 'true,true': [1.29733926473052e-16, -1.3061447348531253e-17], 'true,true,false': [nan, -1.3061447348531253e-17]}, {'': [0.014856850820736019, 1.885284381438945e-17], 'true': [0.014856850820736019, nan], 'true,true': [0.014856850820736019, nan]}, {'': [0.01074614352734627, 6.638114678800429e-05], 'true': [0.01074614352734627, nan], 'true,true': [0.01074614352734627, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
0;true,false;genre(B, E).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( genre(B, D) )
%   | | then return -0.1418510649004877;  // std dev = 2.58e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.14185106490048804;  // std dev = 0.000, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839133;  // std dev = 2.11e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.12544463852839136;  // std dev = 1.05e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.12544463852839186;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3.94e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.5553664367462835;  // std dev = 3.94e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.1123163781936064;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.11231637819360642;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.11231637819360678;  // std dev = 0.000, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831014;  // std dev = 1.83e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.41751358415831014;  // std dev = 1.83e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783634;  // std dev = 1.05e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.10159632948783656;  // std dev = 0.000, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015017;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32071184716015017;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09269127618926103;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else if ( female(A) )
%   | then return -0.09269127618926103;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( actor(A) )
%   | | then return -0.09269127618926104;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926096;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.09269127618926103;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.08518475138839678;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( female(A) )
%   | | | then return 0.2551722425694897;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.2551722425694897;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return -0.08518475138839678;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( female(B) )
%   | then return -0.08518475138839678;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.08518475138839678;  // std dev = 1.49e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253556;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109179;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109157;  // std dev = 4.71e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | | else return -0.07877675473109154;  // std dev = 5.77e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | else if ( female(B) )
%   | | | then return -0.0787767547310917;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.0787767547310917;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.07877675473109166;  // std dev = 5.27e-09, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.10789607010874987;  // std dev = 0.112, 123.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=89 */
%   | | else return 0.12392636177884597;  // std dev = 0.102, 113.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=89 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else return -0.07324622576333703;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else return -0.07324622576333702;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420261;  // std dev = 6.45e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.06842697784420261;  // std dev = 1.29e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( female(A) )
%   | | | then return 0.16191605539233936;  // std dev = 5.58e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.1597525286386276;  // std dev = 7.30e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420261;  // std dev = 1.49e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | | else return -0.06842697784420261;  // std dev = 1.49e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else if ( female(A) )
%   | | | then return -0.08091606090995244;  // std dev = 1.67e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.08211624930258549;  // std dev = 5.27e-09, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.06842697784420261;  // std dev = 1.83e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.14112755410589803;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.13945510523333673;  // std dev = 9.86e-09, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.0750988803522117;  // std dev = 1.86e-09, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.0761354780100177;  // std dev = 2.28e-09, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( female(B) )
%   | then return -0.06419184008202622;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 175.000 (wgt'ed) examples reached here.  /* #neg=175 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064129
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.741 seconds
Total inference time: 2.751 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067429
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.843 seconds
Refined model CLL: -0.067429


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064129
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.926 seconds
Total inference time: 2.751 seconds
AUC ROC: 1.0
Total revision time: 9.926
Best scored revision CLL: -0.067429


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:01:10
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064129, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.926, 'Inference time': 2.751, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.0754, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.516, 'Inference time': 3.906}}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;ta(G, A, H).;false;false
0;true,false;publication(I, A), tempadvisedby(J, B).;true;true
0;true,false,true;projectmember(K, B).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B).;false;true
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,true;publication(J, I).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, B).;false;false
2;true,false;publication(F, B), publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;ta(I, A, J), publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;ta(F, G, E), tempadvisedby(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;ta(I, A, J), publication(K, B).;false;false
3;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A).;true;true
4;true,false,true;publication(D, E), professor(E).;false;false
4;true,false,false;ta(F, A, G).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;ta(G, A, H), tempadvisedby(I, B).;false;false
5;true,true,false;ta(J, A, K), tempadvisedby(L, B).;false;false
5;true,false;tempadvisedby(M, B).;false;true
5;true,false,false;publication(N, B), ta(P, A, Q).;false;false
5;false;ta(R, A, S).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, B).;true;true
6;true,true;publication(E, C).;true;true
6;true,true,true;ta(F, C, G).;false;false
6;true,true,false;publication(D, H), ta(I, H, J).;false;false
6;true,false;publication(K, A), ta(L, A, M).;true;true
6;true,false,true;publication(K, N), professor(N).;false;false
6;true,false,false;publication(P, B), ta(Q, A, R).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A).;true;true
7;true,true;ta(D, A, E), tempadvisedby(F, B).;true;true
7;true,true,true;publication(C, B).;false;false
7;true,true,false;publication(C, B).;false;false
7;true,false;ta(G, A, H), tempadvisedby(I, B).;true;true
7;true,false,true;ta(G, I, J).;false;false
7;true,false,false;projectmember(K, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;true,true;tempadvisedby(F, B), publication(G, F).;true;true
8;true,true,true;ta(H, A, I).;false;false
8;true,true,false;publication(J, A), tempadvisedby(K, B).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, B).;false;false
8;false;ta(N, A, P).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D).;true;true
9;true,true;publication(E, B).;true;false
9;true,true,true;ta(F, G, D), publication(E, G).;false;false
9;true,false;publication(H, B), publication(H, A).;true;true
9;true,false,true;tempadvisedby(I, B).;false;false
9;true,false,false;publication(J, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 3.33e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( genre(B, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7.74e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839158;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360624;  // std dev = 5.77e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783616;  // std dev = 5.37e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926105;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.15792738715295065;  // std dev = 0.154, 63.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=45 */
%   | | else return -0.08518475138839679;  // std dev = 2.28e-09, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 1.61e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.21334836214882538;  // std dev = 0.062, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0838543022367365;  // std dev = 0.075, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.191160059385723;  // std dev = 3.94e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(C, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0957178973067701;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07883928525585641;  // std dev = 0.079, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, F) )
%   | | then return -0.003634499133349093;  // std dev = 0.108, 153.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0677499073519179;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14331515742787423;  // std dev = 0.482, 49.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07147913479900284;  // std dev = 0.068, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.383 seconds
Total inference time: 4.912 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073835
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.459 seconds
Parameter learned model CLL: -0.073835


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'genre(B, E)'}, {'true,true': [3.33e-08, 0, 45], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.74e-08, 82, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 68, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true,true': [0.0, 0, 45], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.77e-08, 74, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, B)'}, {'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.37e-08, 72, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [2.98e-08, 0, 45], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 76, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, B), movie(E, A)'}, {'true,true,true': [0.154, 18, 45], 'true,true,false': [2.28e-09, 56, 0], 'true,false': [0.0, 0, 0], 'false': [1.61e-09, 11, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.062, 2, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.075, 77, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, B)'}, {'true,true,true': [3.94e-08, 0, 45], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 4, 0], 'true,false': [0.0, 0, 0], 'false': [0.079, 86, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, F)'}, {'true,true,true': [0.108, 108, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.482, 4, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.068, 80, 0]}]]
[{'': [0.10380622837370317, 7.311224796312007e-17], 'true': [1.105288700071267e-15, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan]}, {'': [0.015181896531630958, -3.591898020846095e-17], 'true': [-9.473903143468002e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-9.473903143468002e-16, nan]}, {'': [0.05193310189730332, 4.50090415388577e-17], 'true': [-3.947459643111668e-17, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan], 'true,false,true': [-1.982541115402065e-18, nan], 'true,true': [-3.947459643111668e-17, nan], 'true,true,true': [-3.947459643111668e-17, nan]}, {'': [0.027973194025505906, 4.0091387000352874e-17], 'true': [-4.144832625267251e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.015381192815554305, 0.0], 'true': [1.973729821555834e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.027240788186501132, 2.523234146875356e-18], 'true': [0.027240788186501132, nan], 'true,true': [0.023641404762458917, 5.9476233462061954e-18]}, {'': [0.0037927592849825035, 7.347724271545596e-05], 'true': [0.0037927592849825035, nan], 'true,true': [0.0037927592849825035, nan]}, {'': [0.006169851381295636, 7.301324711758899e-05], 'true': [0.006169851381295636, nan], 'true,true': [3.454027187722709e-17, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.011661455838854726, 0.0], 'true': [0.011661455838854726, nan], 'true,true': [0.011661455838854726, nan]}, {'': [0.004733846211742744, 5.783642624029653e-05], 'true': [0.004733846211742744, nan], 'true,true': [0.004733846211742744, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048766;  // std dev = 6.83e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.12544463852839144;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360622;  // std dev = 6.66e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783626;  // std dev = 4.71e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926098;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926107;  // std dev = 1.05e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.0851847513883968;  // std dev = 2.17e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839679;  // std dev = 1.67e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07877675473109164;  // std dev = 4.47e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527736;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.15074463211279177;  // std dev = 0.077, 38.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06842697784420268;  // std dev = 2.79e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.1553441574418963;  // std dev = 0.010, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08416041364535154;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1360340735551691;  // std dev = 0.009, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07853446126341444;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06419184008202626;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065123
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.425 seconds
Total inference time: 2.712 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064678
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.194 seconds
Refined model CLL: -0.064678


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065123
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.461 seconds
Total inference time: 2.712 seconds
AUC ROC: 1.0
Total revision time: 5.461
Best scored revision CLL: -0.064678


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:01:23
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065123, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.461, 'Inference time': 2.712, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.07421, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.383, 'Inference time': 4.912}}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;ta(G, A, H).;false;false
0;true,false;publication(I, A), tempadvisedby(J, B).;true;true
0;true,false,true;projectmember(K, B).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B).;false;true
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,true;publication(J, I).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, B).;false;false
2;true,false;publication(F, B), publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;ta(I, A, J), publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;ta(F, G, E), tempadvisedby(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;ta(I, A, J), publication(K, B).;false;false
3;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A).;true;true
4;true,false,true;publication(D, E), professor(E).;false;false
4;true,false,false;ta(F, A, G).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;ta(G, A, H), tempadvisedby(I, B).;false;false
5;true,true,false;ta(J, A, K), tempadvisedby(L, B).;false;false
5;true,false;tempadvisedby(M, B).;false;true
5;true,false,false;publication(N, B), ta(P, A, Q).;false;false
5;false;ta(R, A, S).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, B).;true;true
6;true,true;publication(E, C).;true;true
6;true,true,true;ta(F, C, G).;false;false
6;true,true,false;publication(D, H), ta(I, H, J).;false;false
6;true,false;publication(K, A), ta(L, A, M).;true;true
6;true,false,true;publication(K, N), professor(N).;false;false
6;true,false,false;publication(P, B), ta(Q, A, R).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A).;true;true
7;true,true;ta(D, A, E), tempadvisedby(F, B).;true;true
7;true,true,true;publication(C, B).;false;false
7;true,true,false;publication(C, B).;false;false
7;true,false;ta(G, A, H), tempadvisedby(I, B).;true;true
7;true,false,true;ta(G, I, J).;false;false
7;true,false,false;projectmember(K, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;true,true;tempadvisedby(F, B), publication(G, F).;true;true
8;true,true,true;ta(H, A, I).;false;false
8;true,true,false;publication(J, A), tempadvisedby(K, B).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, B).;false;false
8;false;ta(N, A, P).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D).;true;true
9;true,true;publication(E, B).;true;false
9;true,true,true;ta(F, G, D), publication(E, G).;false;false
9;true,false;publication(H, B), publication(H, A).;true;true
9;true,false,true;tempadvisedby(I, B).;false;false
9;true,false,false;publication(J, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 3.33e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( genre(B, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7.60e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283914;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360622;  // std dev = 6.50e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783616;  // std dev = 5.58e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.09269127618926098;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 1.05e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.15792738715295065;  // std dev = 0.154, 63.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=45 */
%   | | else return -0.08518475138839683;  // std dev = 4.66e-09, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839691;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.21969890816795398;  // std dev = 0.044, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08332293098614571;  // std dev = 0.077, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.19018007668881415;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(C, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09626898807515676;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07642286527284484;  // std dev = 0.068, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, F) )
%   | | then return -0.0014505334625923541;  // std dev = 0.109, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06793632682343129;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14711521567999616;  // std dev = 0.421, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07301010168088473;  // std dev = 0.081, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074308
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.378 seconds
Total inference time: 4.998 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072929
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.274 seconds
Parameter learned model CLL: -0.072929


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'genre(B, E)'}, {'true,true': [3.33e-08, 0, 45], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.6e-08, 78, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 90, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true,true': [0.0, 0, 45], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.5e-08, 81, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, B)'}, {'true,true': [0.0, 0, 45], 'true,false,true,true': [5.27e-09, 9, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.58e-08, 73, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [2.98e-08, 0, 45], 'true,false,true,true': [1.86e-09, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-08, 87, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, B), movie(E, A)'}, {'true,true,true': [0.154, 18, 45], 'true,true,false': [4.66e-09, 62, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.044, 1, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.077, 86, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 45], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false': [0.068, 89, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, F)'}, {'true,true,true': [0.109, 102, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.421, 3, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.081, 97, 0]}]]
[{'': [0.04074241738343243, 7.401486830834377e-17], 'true': [1.105288700071267e-15, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, 0.0]}, {'': [0.05351918877289897, -1.7270135938613546e-17], 'true': [-9.473903143468002e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-9.473903143468002e-16, nan]}, {'': [0.03342110014406096, 5.208453695772339e-17], 'true': [-3.947459643111668e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-3.947459643111668e-17, nan], 'true,true,true': [-3.947459643111668e-17, nan]}, {'': [0.03742709756190387, 4.258389683493751e-17], 'true': [-4.144832625267251e-16, 3.0839528461809902e-18], 'true,false': [3.0839528461809902e-18, nan], 'true,false,true': [3.0839528461809902e-18, nan]}, {'': [0.010013797405959831, 1.2761184191093753e-18], 'true': [1.973729821555834e-17, 1.1564823173178713e-18], 'true,false': [1.1564823173178713e-18, nan], 'true,false,true': [1.1564823173178713e-18, nan]}, {'': [0.026690200320625645, 0.0], 'true': [0.026690200320625645, nan], 'true,true': [0.023641404762458917, 2.238352872228138e-17]}, {'': [0.0019797271409561536, 6.820347118869196e-05], 'true': [0.0019797271409561536, nan], 'true,true': [0.0019797271409561536, nan]}, {'': [0.0017449848779238159, 5.142801462422947e-05], 'true': [0.0017449848779238159, nan], 'true,true': [-5.921189464667501e-17, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.011921421825705866, -5.782411586589357e-19], 'true': [0.011921421825705866, nan], 'true,true': [0.011921421825705866, nan]}, {'': [0.003688294132370868, 6.781728904678801e-05], 'true': [0.003688294132370868, nan], 'true,true': [0.003688294132370868, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
0;true,false;genre(B, E).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( genre(B, D) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048766;  // std dev = 7.74e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1254446385283915;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.1123163781936064;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.1123163781936064;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(A) )
%   | then return -0.10159632948783633;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783633;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014955;  // std dev = 6.45e-09, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.32071184716014955;  // std dev = 6.45e-09, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( female(A) )
%   | then return -0.09269127618926104;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.09269127618926103;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( director(B) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839685;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.08518475138839685;  // std dev = 1.18e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839682;  // std dev = 1.39e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.08518475138839682;  // std dev = 1.75e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 7.90e-09, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then return -0.07877675473109177;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109175;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.07877675473109176;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.06842697784420274;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 3.73e-09, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06419184008202626;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064087
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.886 seconds
Total inference time: 2.746 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.341 seconds
Refined model CLL: -0.063719


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064087
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.8790000000000004 seconds
Total inference time: 2.746 seconds
AUC ROC: 1.0
Total revision time: 5.8790000000000004
Best scored revision CLL: -0.063719


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:01:38
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064087, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.8790000000000004, 'Inference time': 2.746, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.074308, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.378, 'Inference time': 4.998}}


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;ta(G, A, H).;false;false
0;true,false;publication(I, A), tempadvisedby(J, B).;true;true
0;true,false,true;projectmember(K, B).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B).;false;true
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,true;publication(J, I).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, B).;false;false
2;true,false;publication(F, B), publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;ta(I, A, J), publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;ta(F, G, E), tempadvisedby(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;ta(I, A, J), publication(K, B).;false;false
3;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A).;true;true
4;true,false,true;publication(D, E), professor(E).;false;false
4;true,false,false;ta(F, A, G).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;ta(G, A, H), tempadvisedby(I, B).;false;false
5;true,true,false;ta(J, A, K), tempadvisedby(L, B).;false;false
5;true,false;tempadvisedby(M, B).;false;true
5;true,false,false;publication(N, B), ta(P, A, Q).;false;false
5;false;ta(R, A, S).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, B).;true;true
6;true,true;publication(E, C).;true;true
6;true,true,true;ta(F, C, G).;false;false
6;true,true,false;publication(D, H), ta(I, H, J).;false;false
6;true,false;publication(K, A), ta(L, A, M).;true;true
6;true,false,true;publication(K, N), professor(N).;false;false
6;true,false,false;publication(P, B), ta(Q, A, R).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A).;true;true
7;true,true;ta(D, A, E), tempadvisedby(F, B).;true;true
7;true,true,true;publication(C, B).;false;false
7;true,true,false;publication(C, B).;false;false
7;true,false;ta(G, A, H), tempadvisedby(I, B).;true;true
7;true,false,true;ta(G, I, J).;false;false
7;true,false,false;projectmember(K, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;true,true;tempadvisedby(F, B), publication(G, F).;true;true
8;true,true,true;ta(H, A, I).;false;false
8;true,true,false;publication(J, A), tempadvisedby(K, B).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, B).;false;false
8;false;ta(N, A, P).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D).;true;true
9;true,true;publication(E, B).;true;false
9;true,true,true;ta(F, G, D), publication(E, G).;false;false
9;true,false;publication(H, B), publication(H, A).;true;true
9;true,false,true;tempadvisedby(I, B).;false;false
9;true,false,false;publication(J, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( genre(B, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7.30e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839136;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 8.16e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926101;  // std dev = 3.49e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.15012378764421608;  // std dev = 0.157, 81.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=56 */
%   | | else return -0.08533794577208792;  // std dev = 0.001, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839691;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.19736617513555255;  // std dev = 0.093, 62.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08329479198082163;  // std dev = 0.090, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.19486480795576305;  // std dev = 3.65e-08, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( movie(C, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10255246120793657;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0777495895129084;  // std dev = 0.077, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, F) )
%   | | then return 0.012108633622200252;  // std dev = 0.115, 157.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0678541452520266;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14716028542728102;  // std dev = 0.500, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07350234037439966;  // std dev = 0.074, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076151
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.497 seconds
Total inference time: 4.708 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073443
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.67 seconds
Parameter learned model CLL: -0.073443


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'genre(B, E)'}, {'true,true': [0.0, 0, 56], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.3e-08, 114, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true': [0.0, 0, 56], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 104, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true,true': [1.03e-07, 0, 56], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.16e-08, 103, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 56], 'true,false': [0.0, 0, 0], 'false': [0.0, 106, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 56], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.49e-08, 102, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, B), movie(E, A)'}, {'true,true,true': [0.157, 25, 56], 'true,true,false': [0.001, 98, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.093, 6, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.09, 125, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, B)'}, {'true,true,true': [3.65e-08, 0, 56], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 4, 0], 'true,false': [0.0, 0, 0], 'false': [0.077, 95, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, F)'}, {'true,true,true': [0.115, 101, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.5, 4, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.074, 87, 0]}]]
[{'': [0.03329369797859664, 4.674623261579606e-17], 'true': [-1.2688263138573217e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.023767921937009287, -8.540177112501205e-18], 'true': [-1.9032394707859825e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.9032394707859825e-16, nan]}, {'': [0.007683847065712494, 6.467318590049455e-17], 'true': [1.9032394707859825e-16, 0.0], 'true,true': [1.9032394707859825e-16, nan], 'true,true,true': [1.9032394707859825e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [-3.489272363107635e-16, 0.0], 'true': [-3.489272363107635e-16, nan]}, {'': [0.00307395351787302, 1.1972993402820316e-17], 'true': [-1.2688263138573217e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.024921757272897766, 0.0], 'true': [0.024921757272897766, nan], 'true,true': [0.0247187984560994, 1.126488921365798e-06]}, {'': [0.008588589379661086, 6.494515844211346e-05], 'true': [0.008588589379661086, nan], 'true,true': [0.008588589379661086, nan]}, {'': [0.005503993102022671, 6.163528512372311e-05], 'true': [0.005503993102022671, nan], 'true,true': [2.3790493384824782e-17, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.013191522333803605, 5.782411586589357e-19], 'true': [0.013191522333803605, nan], 'true,true': [0.013191522333803605, nan]}, {'': [0.004172185014804615, 6.367261081131844e-05], 'true': [0.004172185014804615, nan], 'true,true': [0.004172185014804615, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839133;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1123163781936062;  // std dev = 8.16e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10159632948783634;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09269127618926101;  // std dev = 3.49e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.08518475138839686;  // std dev = 1.83e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return 0.25517224256948967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08518475138839683;  // std dev = 3.41e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.0851847513883969;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109155;  // std dev = 6.50e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527736;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333713;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06842697784420264;  // std dev = 5.27e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.1527438580936708;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801079;  // std dev = 5.16e-08, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202626;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064216
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.642 seconds
Total inference time: 2.395 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.481 seconds
Refined model CLL: -0.063421


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064216
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.289999999999999 seconds
Total inference time: 2.395 seconds
AUC ROC: 1.0
Total revision time: 6.289999999999999
Best scored revision CLL: -0.063421


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:01:52
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064216, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.289999999999999, 'Inference time': 2.395, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076151, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.497, 'Inference time': 4.708}}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;ta(G, A, H).;false;false
0;true,false;publication(I, A), tempadvisedby(J, B).;true;true
0;true,false,true;projectmember(K, B).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B).;false;true
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,true;publication(J, I).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, B).;false;false
2;true,false;publication(F, B), publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;ta(I, A, J), publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;ta(F, G, E), tempadvisedby(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;ta(I, A, J), publication(K, B).;false;false
3;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A).;true;true
4;true,false,true;publication(D, E), professor(E).;false;false
4;true,false,false;ta(F, A, G).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;ta(G, A, H), tempadvisedby(I, B).;false;false
5;true,true,false;ta(J, A, K), tempadvisedby(L, B).;false;false
5;true,false;tempadvisedby(M, B).;false;true
5;true,false,false;publication(N, B), ta(P, A, Q).;false;false
5;false;ta(R, A, S).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, B).;true;true
6;true,true;publication(E, C).;true;true
6;true,true,true;ta(F, C, G).;false;false
6;true,true,false;publication(D, H), ta(I, H, J).;false;false
6;true,false;publication(K, A), ta(L, A, M).;true;true
6;true,false,true;publication(K, N), professor(N).;false;false
6;true,false,false;publication(P, B), ta(Q, A, R).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A).;true;true
7;true,true;ta(D, A, E), tempadvisedby(F, B).;true;true
7;true,true,true;publication(C, B).;false;false
7;true,true,false;publication(C, B).;false;false
7;true,false;ta(G, A, H), tempadvisedby(I, B).;true;true
7;true,false,true;ta(G, I, J).;false;false
7;true,false,false;projectmember(K, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;true,true;tempadvisedby(F, B), publication(G, F).;true;true
8;true,true,true;ta(H, A, I).;false;false
8;true,true,false;publication(J, A), tempadvisedby(K, B).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, B).;false;false
8;false;ta(N, A, P).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D).;true;true
9;true,true;publication(E, B).;true;false
9;true,true,true;ta(F, G, D), publication(E, G).;false;false
9;true,false;publication(H, B), publication(H, A).;true;true
9;true,false,true;tempadvisedby(I, B).;false;false
9;true,false,false;publication(J, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( genre(B, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839136;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360618;  // std dev = 8.43e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783637;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 1.05e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.10835157850922493;  // std dev = 0.169, 102.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=58 */
%   | | else return -0.08518475138839678;  // std dev = 4.17e-09, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 1.32e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.192963660479314;  // std dev = 0.107, 67.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08283142673627959;  // std dev = 0.070, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.20221148241792103;  // std dev = 8.16e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( movie(C, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09396796156178629;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07719617727492187;  // std dev = 0.065, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, F) )
%   | | then return 0.00787928915765488;  // std dev = 0.115, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06791848465229662;  // std dev = 1.32e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1392350138201125;  // std dev = 0.682, 66.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07201492001491876;  // std dev = 0.068, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074677
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.63 seconds
Total inference time: 3.915 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07246
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.91 seconds
Parameter learned model CLL: -0.07246


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'genre(B, E)'}, {'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.16e-08, 88, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true': [0.0, 0, 58], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 107, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true,true': [1.19e-07, 0, 58], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 9, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.43e-08, 106, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, B)'}, {'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 120, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 58], 'true,false,true,true': [2.63e-09, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-08, 93, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, B), movie(E, A)'}, {'true,true,true': [0.169, 44, 58], 'true,true,false': [4.17e-09, 97, 0], 'true,false': [0.0, 0, 0], 'false': [1.32e-09, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.107, 9, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.07, 109, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, B)'}, {'true,true,true': [8.16e-08, 0, 58], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 6, 0], 'true,false': [0.0, 0, 0], 'false': [0.065, 101, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, F)'}, {'true,true,true': [0.115, 118, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.32e-09, 7, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.682, 8, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.068, 114, 0]}]]
[{'': [0.08496093749999956, 7.569702440626067e-17], 'true': [-3.675221047035001e-16, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan]}, {'': [0.04308576245887642, -1.0375916117992117e-17], 'true': [-1.2250736823450003e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.2250736823450003e-16, nan]}, {'': [0.05183955851928754, 6.70323335622736e-17], 'true': [2.4501473646900006e-16, -1.5419764230904951e-18], 'true,true': [2.4501473646900006e-16, nan], 'true,true,true': [2.4501473646900006e-16, nan], 'true,false': [-1.5419764230904951e-18, nan], 'true,false,true': [-1.5419764230904951e-18, nan]}, {'': [0.02589512227052241, -2.2204460492503132e-17], 'true': [-3.3689526264487507e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.014520006238641608, 1.1937881985216738e-18], 'true': [-1.5313421029312505e-16, 1.1564823173178713e-18], 'true,false': [1.1564823173178713e-18, nan], 'true,false,true': [1.1564823173178713e-18, nan]}, {'': [0.02392270649534627, 1.5419764230904951e-18], 'true': [0.02392270649534627, nan], 'true,true': [0.02841513247535529, 1.7168397288017885e-17]}, {'': [0.01145837378152612, 4.5352731226659784e-05], 'true': [0.01145837378152612, nan], 'true,true': [0.01145837378152612, nan]}, {'': [0.007452965707171171, 4.224071527526013e-05], 'true': [0.007452965707171171, nan], 'true,true': [1.148506577198438e-16, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.013198474845898821, 9.912705577010326e-19], 'true': [0.013198474845898821, nan], 'true,true': [0.013198474845898821, nan]}, {'': [0.007052781206082498, 4.049983553557628e-05], 'true': [0.007052781206082498, nan], 'true,true': [0.007052781206082498, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048768;  // std dev = 6.32e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839138;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11231637819360618;  // std dev = 9.31e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.10159632948783631;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.09269127618926086;  // std dev = 7.15e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.08518475138839689;  // std dev = 7.45e-09, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839682;  // std dev = 4.94e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else return -0.0851847513883969;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07877675473109158;  // std dev = 6.14e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.16517541567343866;  // std dev = 0.053, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.1645793615698468;  // std dev = 0.055, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333713;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06842697784420265;  // std dev = 4.53e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.15434396563710032;  // std dev = 0.000282, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.08526611558517523;  // std dev = 5.56e-05, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06842697784420275;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1352549734213433;  // std dev = 0.000252, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07881569722525365;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06419184008202626;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065376
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.405 seconds
Total inference time: 2.272 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064082
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.262 seconds
Refined model CLL: -0.064082


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065376
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.207000000000001 seconds
Total inference time: 2.272 seconds
AUC ROC: 1.0
Total revision time: 6.207000000000001
Best scored revision CLL: -0.064082


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:02:05
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065376, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.207000000000001, 'Inference time': 2.272, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.074677, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.63, 'Inference time': 3.915}}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;ta(G, A, H).;false;false
0;true,false;publication(I, A), tempadvisedby(J, B).;true;true
0;true,false,true;projectmember(K, B).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B).;false;true
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,true;publication(J, I).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, B).;false;false
2;true,false;publication(F, B), publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;ta(I, A, J), publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;ta(F, G, E), tempadvisedby(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;ta(I, A, J), publication(K, B).;false;false
3;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A).;true;true
4;true,false,true;publication(D, E), professor(E).;false;false
4;true,false,false;ta(F, A, G).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;ta(G, A, H), tempadvisedby(I, B).;false;false
5;true,true,false;ta(J, A, K), tempadvisedby(L, B).;false;false
5;true,false;tempadvisedby(M, B).;false;true
5;true,false,false;publication(N, B), ta(P, A, Q).;false;false
5;false;ta(R, A, S).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, B).;true;true
6;true,true;publication(E, C).;true;true
6;true,true,true;ta(F, C, G).;false;false
6;true,true,false;publication(D, H), ta(I, H, J).;false;false
6;true,false;publication(K, A), ta(L, A, M).;true;true
6;true,false,true;publication(K, N), professor(N).;false;false
6;true,false,false;publication(P, B), ta(Q, A, R).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A).;true;true
7;true,true;ta(D, A, E), tempadvisedby(F, B).;true;true
7;true,true,true;publication(C, B).;false;false
7;true,true,false;publication(C, B).;false;false
7;true,false;ta(G, A, H), tempadvisedby(I, B).;true;true
7;true,false,true;ta(G, I, J).;false;false
7;true,false,false;projectmember(K, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;true,true;tempadvisedby(F, B), publication(G, F).;true;true
8;true,true,true;ta(H, A, I).;false;false
8;true,true,false;publication(J, A), tempadvisedby(K, B).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, B).;false;false
8;false;ta(N, A, P).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D).;true;true
9;true,true;publication(E, B).;true;false
9;true,true,true;ta(F, G, D), publication(E, G).;false;false
9;true,false;publication(H, B), publication(H, A).;true;true
9;true,false,true;tempadvisedby(I, B).;false;false
9;true,false,false;publication(J, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 8.09e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( genre(B, E) )
%   | | | then return -0.1418510649004877;  // std dev = 3.33e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 1.12e-07, 333.000 (wgt'ed) examples reached here.  /* #neg=333 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.12544463852839116;  // std dev = 6.66e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839194;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.11231637819360644;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360689;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583096;  // std dev = 2.79e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.10159632948783621;  // std dev = 4.21e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783656;  // std dev = 0.000, 312.000 (wgt'ed) examples reached here.  /* #neg=312 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.09269127618926107;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926068;  // std dev = 1.05e-07, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.17595121811377404;  // std dev = 0.144, 232.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=178 */
%   | | else return -0.08518475138839678;  // std dev = 5.51e-09, 210.000 (wgt'ed) examples reached here.  /* #neg=210 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 4.56e-09, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1415113444984297;  // std dev = 0.134, 244.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08255244508402042;  // std dev = 0.140, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.19961908573034037;  // std dev = 1.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else if ( movie(C, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08967798464329138;  // std dev = 2.47e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07644678890381595;  // std dev = 0.131, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, F) )
%   | | then return 0.03031608938081366;  // std dev = 0.121, 414.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06798361513104005;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1015008273257386;  // std dev = 1.687, 239.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.071940416610157;  // std dev = 0.159, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075201
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.403 seconds
Total inference time: 4.044 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077939
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.873 seconds
Parameter learned model CLL: -0.077939


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'genre(B, E)'}, {'true,true': [8.09e-08, 0, 178], 'true,false,true,true': [3.33e-08, 34, 0], 'true,false,true,false': [7.45e-09, 20, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.12e-07, 333, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true': [0.0, 0, 178], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [6.66e-08, 66, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 317, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true,true': [5.9e-07, 0, 178], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 41, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 293, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, B)'}, {'true,true': [2.79e-08, 0, 178], 'true,false,true,true': [4.21e-08, 59, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 312, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [3.58e-07, 0, 178], 'true,false,true,true': [0.0, 62, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-07, 302, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, B), movie(E, A)'}, {'true,true,true': [0.144, 54, 178], 'true,true,false': [5.51e-09, 210, 0], 'true,false': [0.0, 0, 0], 'false': [4.56e-09, 131, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.134, 66, 178], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.14, 297, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, B)'}, {'true,true,true': [1.58e-07, 0, 178], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [2.47e-08, 58, 0], 'true,false': [0.0, 0, 0], 'false': [0.131, 303, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, F)'}, {'true,true,true': [0.121, 236, 178], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 110, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.687, 61, 178], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.159, 300, 0]}]]
[{'': [0.17858204518431028, 3.734083446186713e-17], 'true': [6.706246045376226e-15, 5.756711979537848e-17], 'true,false': [5.756711979537848e-17, nan], 'true,false,true': [3.2653618371328135e-17, 2.7755575615628915e-18]}, {'': [0.14086836113344384, -7.564926603124095e-17], 'true': [-3.193450497798203e-15, 6.728624391667616e-17], 'true,false': [6.728624391667616e-17, nan], 'true,false,true': [6.728624391667616e-17, nan], 'true,true': [-3.193450497798203e-15, nan]}, {'': [0.06783534311815023, -8.790844427066086e-17], 'true': [1.9559884299013994e-15, -1.3539305178355567e-17], 'true,true': [1.9559884299013994e-15, nan], 'true,true,true': [1.9559884299013994e-15, nan], 'true,false': [-1.3539305178355567e-17, nan], 'true,false,true': [-1.3539305178355567e-17, nan]}, {'': [0.050384153641418704, -5.408778837917429e-17], 'true': [7.983626244495507e-16, 3.010774304068221e-17], 'true,false': [3.010774304068221e-17, nan], 'true,false,true': [3.010774304068221e-17, nan]}, {'': [0.03274437575471844, 3.676235180878002e-17], 'true': [7.185263620045957e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.027864339252511403, 2.1187462302006806e-17], 'true': [0.027864339252511403, nan], 'true,true': [0.02068745902619883, 3.066330258488528e-17]}, {'': [0.017993100447766225, 6.563064876327226e-05], 'true': [0.017993100447766225, nan], 'true,true': [0.017993100447766225, nan]}, {'': [0.015513581133725059, 5.635396025275777e-05], 'true': [0.015513581133725059, nan], 'true,true': [1.3971345927867138e-16, 1.0527976957652346e-17], 'true,true,false': [nan, 1.0527976957652346e-17]}, {'': [0.01467489322532658, -4.037174635000569e-18], 'true': [0.01467489322532658, nan], 'true,true': [0.01467489322532658, nan]}, {'': [0.0119132851017168, 8.400566912606008e-05], 'true': [0.0119132851017168, nan], 'true,true': [0.0119132851017168, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
0;true,false;genre(B, E).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( genre(B, D) )
%   | | then return -0.14185106490048768;  // std dev = 4.08e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.141851064900488;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #neg=315 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839147;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.1254446385283918;  // std dev = 0.000, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3.94e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.5553664367462835;  // std dev = 3.94e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.11231637819360642;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return -0.1123163781936069;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831014;  // std dev = 1.83e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.41751358415831014;  // std dev = 1.83e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783634;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.10159632948783633;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.10159632948783655;  // std dev = 0.000, 273.000 (wgt'ed) examples reached here.  /* #neg=273 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015017;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32071184716015017;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09269127618926104;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.092691276189261;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return -0.09269127618926098;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926094;  // std dev = 1.05e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else if ( actor(A) )
%   | | | then return -0.09269127618926098;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return -0.09269127618926103;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.08518475138839678;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( female(A) )
%   | | | then return 0.2551722425694897;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.2551722425694897;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return -0.08518475138839678;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return -0.08518475138839679;  // std dev = 1.05e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( actor(B) )
%   | then return -0.08518475138839678;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return -0.08518475138839678;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253556;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109176;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.07877675473109176;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.0787767547310915;  // std dev = 6.99e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | | | else return -0.07877675473109157;  // std dev = 4.71e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( female(B) )
%   | | | then return -0.0787767547310917;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return -0.07877675473109168;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return -0.07877675473109169;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.11718541861501068;  // std dev = 0.107, 117.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=89 */
%   | | else return 0.12392636177884597;  // std dev = 0.102, 113.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=89 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else return -0.07324622576333702;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.16065945329561157;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.1597525286386276;  // std dev = 7.30e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420262;  // std dev = 7.45e-09, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.06842697784420262;  // std dev = 1.05e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( actor(B) )
%   | | then return -0.06842697784420261;  // std dev = 1.05e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | else if ( female(A) )
%   | | | then return -0.0816095921779678;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.08211624930258549;  // std dev = 9.13e-09, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return -0.06842697784420261;  // std dev = 1.49e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1401567042739722;  // std dev = 5.59e-09, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.13945510523333673;  // std dev = 9.86e-09, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.07569812251868978;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.07613547801001773;  // std dev = 5.27e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(B) )
%   | then return -0.06419184008202623;  // std dev = 0.000, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064131
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.03 seconds
Total inference time: 2.617 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067454
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.012 seconds
Refined model CLL: -0.067454


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064131
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.318000000000001 seconds
Total inference time: 2.617 seconds
AUC ROC: 1.0
Total revision time: 10.318000000000001
Best scored revision CLL: -0.067454


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:02:23
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064131, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.318000000000001, 'Inference time': 2.617, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075201, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.403, 'Inference time': 4.044}}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;ta(G, A, H).;false;false
0;true,false;publication(I, A), tempadvisedby(J, B).;true;true
0;true,false,true;projectmember(K, B).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B).;false;true
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,true;publication(J, I).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, B).;false;false
2;true,false;publication(F, B), publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;ta(I, A, J), publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;ta(F, G, E), tempadvisedby(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;ta(I, A, J), publication(K, B).;false;false
3;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A).;true;true
4;true,false,true;publication(D, E), professor(E).;false;false
4;true,false,false;ta(F, A, G).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;ta(G, A, H), tempadvisedby(I, B).;false;false
5;true,true,false;ta(J, A, K), tempadvisedby(L, B).;false;false
5;true,false;tempadvisedby(M, B).;false;true
5;true,false,false;publication(N, B), ta(P, A, Q).;false;false
5;false;ta(R, A, S).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, B).;true;true
6;true,true;publication(E, C).;true;true
6;true,true,true;ta(F, C, G).;false;false
6;true,true,false;publication(D, H), ta(I, H, J).;false;false
6;true,false;publication(K, A), ta(L, A, M).;true;true
6;true,false,true;publication(K, N), professor(N).;false;false
6;true,false,false;publication(P, B), ta(Q, A, R).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A).;true;true
7;true,true;ta(D, A, E), tempadvisedby(F, B).;true;true
7;true,true,true;publication(C, B).;false;false
7;true,true,false;publication(C, B).;false;false
7;true,false;ta(G, A, H), tempadvisedby(I, B).;true;true
7;true,false,true;ta(G, I, J).;false;false
7;true,false,false;projectmember(K, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;true,true;tempadvisedby(F, B), publication(G, F).;true;true
8;true,true,true;ta(H, A, I).;false;false
8;true,true,false;publication(J, A), tempadvisedby(K, B).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, B).;false;false
8;false;ta(N, A, P).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D).;true;true
9;true,true;publication(E, B).;true;false
9;true,true,true;ta(F, G, D), publication(E, G).;false;false
9;true,false;publication(H, B), publication(H, A).;true;true
9;true,false,true;tempadvisedby(I, B).;false;false
9;true,false,false;publication(J, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 3.33e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( genre(B, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8.30e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839152;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360624;  // std dev = 6.05e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783626;  // std dev = 4.71e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.1541287599882421;  // std dev = 0.156, 64.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=45 */
%   | | else return -0.08518475138839679;  // std dev = 3.09e-09, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1858356271293404;  // std dev = 0.104, 52.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08486845795863436;  // std dev = 0.081, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.19604822636483452;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(C, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0933628490588741;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07818223398481561;  // std dev = 0.072, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, F) )
%   | | then return 0.02661477490522947;  // std dev = 0.119, 108.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06772735616692799;  // std dev = 9.31e-10, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14280119217015633;  // std dev = 0.481, 49.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0757004423635583;  // std dev = 0.078, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075482
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.374 seconds
Total inference time: 4.736 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075211
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.452 seconds
Parameter learned model CLL: -0.075211


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'genre(B, E)'}, {'true,true': [3.33e-08, 0, 45], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.3e-08, 89, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 8, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 74, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true,true': [0.0, 0, 45], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.05e-08, 75, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, B)'}, {'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.71e-08, 95, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [2.98e-08, 0, 45], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 83, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, B), movie(E, A)'}, {'true,true,true': [0.156, 19, 45], 'true,true,false': [3.09e-09, 46, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.104, 7, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.081, 82, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 45], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 8, 0], 'true,false': [0.0, 0, 0], 'false': [0.072, 77, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, F)'}, {'true,true,true': [0.119, 63, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.31e-10, 8, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.481, 4, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.078, 81, 0]}]]
[{'': [0.11649408284023735, 7.734137924355023e-17], 'true': [1.105288700071267e-15, -7.93016446160826e-18], 'true,false': [-7.93016446160826e-18, nan], 'true,false,true': [-7.93016446160826e-18, nan]}, {'': [0.09149132947221877, -2.700542492331462e-17], 'true': [-9.473903143468002e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-9.473903143468002e-16, nan]}, {'': [0.0181629835776121, 4.884981308350689e-17], 'true': [-3.947459643111668e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-3.947459643111668e-17, nan], 'true,true,true': [-3.947459643111668e-17, nan]}, {'': [0.01097906709828568, 2.337311630789803e-17], 'true': [-4.144832625267251e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.015381192815554305, 0.0], 'true': [1.973729821555834e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.02800334163288783, 0.0], 'true': [0.02800334163288783, nan], 'true,true': [0.024181070618242588, 1.0860877414811314e-17]}, {'': [0.010891955298598962, 7.992674999608266e-05], 'true': [0.010891955298598962, nan], 'true,true': [0.010891955298598962, nan]}, {'': [0.010734481099340219, 6.716164302940707e-05], 'true': [0.010734481099340219, nan], 'true,true': [-9.86864910777917e-18, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.014110001290640566, 8.673617379884035e-19], 'true': [0.014110001290640566, nan], 'true,true': [0.014110001290640566, nan]}, {'': [0.004729467264991186, 7.485738907495352e-05], 'true': [0.004729467264991186, nan], 'true,true': [0.004729467264991186, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1254446385283915;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1123163781936062;  // std dev = 7.88e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783615;  // std dev = 5.96e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.09269127618926108;  // std dev = 1.05e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.08518475138839689;  // std dev = 9.13e-09, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839682;  // std dev = 3.57e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.0851847513883969;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07877675473109161;  // std dev = 5.37e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.12345162842200284;  // std dev = 0.103, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | else return 0.16318856866146558;  // std dev = 0.057, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06842697784420267;  // std dev = 3.49e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else if ( female(A) )
%   | | then return 0.15981626317797581;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.14123704566141804;  // std dev = 0.055, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   else return -0.06842697784420275;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13760004501315934;  // std dev = 0.007, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09638035425466343;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06419184008202626;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066387
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.507 seconds
Total inference time: 2.369 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065712
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.068 seconds
Refined model CLL: -0.065712


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066387
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.401 seconds
Total inference time: 2.369 seconds
AUC ROC: 1.0
Total revision time: 5.401
Best scored revision CLL: -0.065712


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:02:36
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066387, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.401, 'Inference time': 2.369, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075482, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.374, 'Inference time': 4.736}}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;ta(G, A, H).;false;false
0;true,false;publication(I, A), tempadvisedby(J, B).;true;true
0;true,false,true;projectmember(K, B).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B).;false;true
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,true;publication(J, I).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, B).;false;false
2;true,false;publication(F, B), publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;ta(I, A, J), publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;ta(F, G, E), tempadvisedby(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;ta(I, A, J), publication(K, B).;false;false
3;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A).;true;true
4;true,false,true;publication(D, E), professor(E).;false;false
4;true,false,false;ta(F, A, G).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;ta(G, A, H), tempadvisedby(I, B).;false;false
5;true,true,false;ta(J, A, K), tempadvisedby(L, B).;false;false
5;true,false;tempadvisedby(M, B).;false;true
5;true,false,false;publication(N, B), ta(P, A, Q).;false;false
5;false;ta(R, A, S).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, B).;true;true
6;true,true;publication(E, C).;true;true
6;true,true,true;ta(F, C, G).;false;false
6;true,true,false;publication(D, H), ta(I, H, J).;false;false
6;true,false;publication(K, A), ta(L, A, M).;true;true
6;true,false,true;publication(K, N), professor(N).;false;false
6;true,false,false;publication(P, B), ta(Q, A, R).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A).;true;true
7;true,true;ta(D, A, E), tempadvisedby(F, B).;true;true
7;true,true,true;publication(C, B).;false;false
7;true,true,false;publication(C, B).;false;false
7;true,false;ta(G, A, H), tempadvisedby(I, B).;true;true
7;true,false,true;ta(G, I, J).;false;false
7;true,false,false;projectmember(K, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;true,true;tempadvisedby(F, B), publication(G, F).;true;true
8;true,true,true;ta(H, A, I).;false;false
8;true,true,false;publication(J, A), tempadvisedby(K, B).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, B).;false;false
8;false;ta(N, A, P).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D).;true;true
9;true,true;publication(E, B).;true;false
9;true,true,true;ta(F, G, D), publication(E, G).;false;false
9;true,false;publication(H, B), publication(H, A).;true;true
9;true,false,true;tempadvisedby(I, B).;false;false
9;true,false,false;publication(J, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 3.33e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( genre(B, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7.88e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283914;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360622;  // std dev = 6.50e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783621;  // std dev = 5.27e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.15044701365937074;  // std dev = 0.157, 65.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=45 */
%   | | else return -0.08518475138839679;  // std dev = 2.28e-09, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.20849292525702331;  // std dev = 0.074, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08522609610123638;  // std dev = 0.081, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.19307466634544845;  // std dev = 3.94e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(C, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09529845437761829;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0784730727419188;  // std dev = 0.077, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, F) )
%   | | then return 0.0032527688397645735;  // std dev = 0.111, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06768642257701547;  // std dev = 9.31e-10, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1437442892599555;  // std dev = 0.483, 49.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0732641371878806;  // std dev = 0.070, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074159
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.37 seconds
Total inference time: 4.902 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072808
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.348 seconds
Parameter learned model CLL: -0.072808


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'genre(B, E)'}, {'true,true': [3.33e-08, 0, 45], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.88e-08, 83, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 92, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true,true': [0.0, 0, 45], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.5e-08, 80, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, B)'}, {'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.27e-08, 89, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [2.98e-08, 0, 45], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 80, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, B), movie(E, A)'}, {'true,true,true': [0.157, 20, 45], 'true,true,false': [2.28e-09, 60, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.074, 3, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.081, 82, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, B)'}, {'true,true,true': [3.94e-08, 0, 45], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false': [0.077, 87, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, F)'}, {'true,true,true': [0.111, 96, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.31e-10, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.483, 4, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.07, 72, 0]}]]
[{'': [0.09000000000000079, 7.490661370964911e-17], 'true': [1.105288700071267e-15, -2.7755575615628915e-18], 'true,false': [-2.7755575615628915e-18, nan], 'true,false,true': [0.0, 0.0]}, {'': [0.02908546225525768, -1.68946982008176e-17], 'true': [-9.473903143468002e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-9.473903143468002e-16, nan]}, {'': [0.03342110014406096, 5.2735593669694933e-17], 'true': [-3.947459643111668e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-3.947459643111668e-17, nan], 'true,true,true': [-3.947459643111668e-17, nan]}, {'': [0.01097906709828568, 3.118604001756058e-17], 'true': [-4.144832625267251e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.006962966417181677, -1.3877787807814458e-18], 'true': [1.973729821555834e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.026690200320625645, 0.0], 'true': [0.026690200320625645, nan], 'true,true': [0.0246765905331228, 5.551115123125783e-18]}, {'': [0.005501591269364938, 8.021700792385835e-05], 'true': [0.005501591269364938, nan], 'true,true': [0.005501591269364938, nan]}, {'': [0.003388100999547528, 6.758549725714442e-05], 'true': [0.003388100999547528, nan], 'true,true': [3.454027187722709e-17, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.012266956225488063, 6.938893903907229e-19], 'true': [0.012266956225488063, nan], 'true,true': [0.012266956225488063, nan]}, {'': [0.00475952070190551, 6.744306120829959e-05], 'true': [0.00475952070190551, nan], 'true,true': [0.00475952070190551, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
0;true,false;genre(B, E).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( genre(B, D) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048766;  // std dev = 7.60e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839138;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( female(B) )
%   | then return -0.11231637819360636;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360635;  // std dev = 3.73e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.11231637819360639;  // std dev = 1.86e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( female(B) )
%   | then return -0.10159632948783635;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014955;  // std dev = 6.45e-09, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.32071184716014955;  // std dev = 6.45e-09, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(A) )
%   | then return -0.09269127618926105;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839683;  // std dev = 1.18e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.08518475138839687;  // std dev = 9.31e-10, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.19721273866020397;  // std dev = 0.059, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( female(B) )
%   | then return -0.07877675473109177;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109175;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.07877675473109176;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.17709649774527747;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.1789321307316314;  // std dev = 1.83e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.09513825319918075;  // std dev = 0.000933, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420275;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.06842697784420275;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.1534239466280894;  // std dev = 0.000695, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08717455305702487;  // std dev = 0.000814, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( movie(D, A), movie(D, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.134537803986786;  // std dev = 0.000623, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08079162494060424;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202626;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065287
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.151 seconds
Total inference time: 2.509 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064329
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.4 seconds
Refined model CLL: -0.064329


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065287
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.269 seconds
Total inference time: 2.509 seconds
AUC ROC: 1.0
Total revision time: 6.269
Best scored revision CLL: -0.064329


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:02:50
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065287, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.269, 'Inference time': 2.509, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.074159, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.37, 'Inference time': 4.902}}


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;ta(G, A, H).;false;false
0;true,false;publication(I, A), tempadvisedby(J, B).;true;true
0;true,false,true;projectmember(K, B).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B).;false;true
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,true;publication(J, I).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, B).;false;false
2;true,false;publication(F, B), publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;ta(I, A, J), publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;ta(F, G, E), tempadvisedby(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;ta(I, A, J), publication(K, B).;false;false
3;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A).;true;true
4;true,false,true;publication(D, E), professor(E).;false;false
4;true,false,false;ta(F, A, G).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;ta(G, A, H), tempadvisedby(I, B).;false;false
5;true,true,false;ta(J, A, K), tempadvisedby(L, B).;false;false
5;true,false;tempadvisedby(M, B).;false;true
5;true,false,false;publication(N, B), ta(P, A, Q).;false;false
5;false;ta(R, A, S).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, B).;true;true
6;true,true;publication(E, C).;true;true
6;true,true,true;ta(F, C, G).;false;false
6;true,true,false;publication(D, H), ta(I, H, J).;false;false
6;true,false;publication(K, A), ta(L, A, M).;true;true
6;true,false,true;publication(K, N), professor(N).;false;false
6;true,false,false;publication(P, B), ta(Q, A, R).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A).;true;true
7;true,true;ta(D, A, E), tempadvisedby(F, B).;true;true
7;true,true,true;publication(C, B).;false;false
7;true,true,false;publication(C, B).;false;false
7;true,false;ta(G, A, H), tempadvisedby(I, B).;true;true
7;true,false,true;ta(G, I, J).;false;false
7;true,false,false;projectmember(K, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;true,true;tempadvisedby(F, B), publication(G, F).;true;true
8;true,true,true;ta(H, A, I).;false;false
8;true,true,false;publication(J, A), tempadvisedby(K, B).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, B).;false;false
8;false;ta(N, A, P).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D).;true;true
9;true,true;publication(E, B).;true;false
9;true,true,true;ta(F, G, D), publication(E, G).;false;false
9;true,false;publication(H, B), publication(H, A).;true;true
9;true,false,true;tempadvisedby(I, B).;false;false
9;true,false,false;publication(J, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( genre(B, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7.30e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839133;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 8.02e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783624;  // std dev = 4.83e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 4.47e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.13905044463091665;  // std dev = 0.161, 85.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=56 */
%   | | else return -0.08518475138839682;  // std dev = 5.35e-09, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0851847513883969;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.20909216039832332;  // std dev = 0.077, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08381307481165351;  // std dev = 0.082, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1947624336629967;  // std dev = 5.58e-08, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( movie(C, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09535013096005249;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07721668793495945;  // std dev = 0.069, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, F) )
%   | | then return 0.002693833374697722;  // std dev = 0.112, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06785506989304163;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1569104833566744;  // std dev = 0.352, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07216636191779133;  // std dev = 0.071, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074897
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.477 seconds
Total inference time: 4.299 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072479
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.714 seconds
Parameter learned model CLL: -0.072479


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'genre(B, E)'}, {'true,true': [0.0, 0, 56], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.3e-08, 114, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true': [0.0, 0, 56], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 111, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true,true': [1.03e-07, 0, 56], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.02e-08, 100, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, B)'}, {'true,true': [0.0, 0, 56], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.83e-08, 93, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 56], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.47e-08, 103, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, B), movie(E, A)'}, {'true,true,true': [0.161, 29, 56], 'true,true,false': [5.35e-09, 85, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.077, 4, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.082, 103, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, B)'}, {'true,true,true': [5.58e-08, 0, 56], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 7, 0], 'true,false': [0.0, 0, 0], 'false': [0.069, 89, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, F)'}, {'true,true,true': [0.112, 120, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.352, 2, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.071, 90, 0]}]]
[{'': [0.04826199367997677, 4.674623261579606e-17], 'true': [-1.2688263138573217e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.07050730987310383, -8.001607384685813e-18], 'true': [-1.9032394707859825e-16, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan], 'true,false,true': [-1.982541115402065e-18, nan], 'true,true': [-1.9032394707859825e-16, nan]}, {'': [0.03896693930775117, 6.439293542825907e-17], 'true': [1.9032394707859825e-16, 0.0], 'true,true': [1.9032394707859825e-16, nan], 'true,true,true': [1.9032394707859825e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.016767339707732778, 2.5069552168955147e-17], 'true': [-3.489272363107635e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.005689964312795762, 1.9401955770148367e-17], 'true': [-1.2688263138573217e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.025589652844890513, 0.0], 'true': [0.025589652844890513, nan], 'true,true': [0.026038594122871017, 3.004132890162188e-17]}, {'': [0.005919179449841971, 6.472325781334464e-05], 'true': [0.005919179449841971, nan], 'true,true': [0.005919179449841971, nan]}, {'': [0.00831262223725071, 5.334490953652798e-05], 'true': [0.00831262223725071, nan], 'true,true': [5.551115123125783e-17, -1.982541115402065e-18], 'true,true,false': [nan, -1.982541115402065e-18]}, {'': [0.012489301805447117, 0.0], 'true': [0.012489301805447117, nan], 'true,true': [0.012489301805447117, nan]}, {'': [0.0021360981875101683, 5.5447693076111144e-05], 'true': [0.0021360981875101683, nan], 'true,true': [0.0021360981875101683, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1254446385283913;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360624;  // std dev = 7.60e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.10159632948783633;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926092;  // std dev = 5.87e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.08518475138839687;  // std dev = 1.29e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0.25517224256948967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08518475138839682;  // std dev = 4.83e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else return -0.0851847513883969;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07877675473109158;  // std dev = 6.23e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527736;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06842697784420264;  // std dev = 5.67e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.1527438580936708;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06842697784420275;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13052985684853646;  // std dev = 0.196, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   else return -0.06419184008202626;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065326
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.685 seconds
Total inference time: 2.535 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063846
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.274 seconds
Refined model CLL: -0.063846


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065326
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.1499999999999995 seconds
Total inference time: 2.535 seconds
AUC ROC: 1.0
Total revision time: 6.1499999999999995
Best scored revision CLL: -0.063846


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:03:04
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065326, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.1499999999999995, 'Inference time': 2.535, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.074897, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.477, 'Inference time': 4.299}}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;ta(G, A, H).;false;false
0;true,false;publication(I, A), tempadvisedby(J, B).;true;true
0;true,false,true;projectmember(K, B).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B).;false;true
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,true;publication(J, I).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, B).;false;false
2;true,false;publication(F, B), publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;ta(I, A, J), publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;ta(F, G, E), tempadvisedby(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;ta(I, A, J), publication(K, B).;false;false
3;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A).;true;true
4;true,false,true;publication(D, E), professor(E).;false;false
4;true,false,false;ta(F, A, G).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;ta(G, A, H), tempadvisedby(I, B).;false;false
5;true,true,false;ta(J, A, K), tempadvisedby(L, B).;false;false
5;true,false;tempadvisedby(M, B).;false;true
5;true,false,false;publication(N, B), ta(P, A, Q).;false;false
5;false;ta(R, A, S).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, B).;true;true
6;true,true;publication(E, C).;true;true
6;true,true,true;ta(F, C, G).;false;false
6;true,true,false;publication(D, H), ta(I, H, J).;false;false
6;true,false;publication(K, A), ta(L, A, M).;true;true
6;true,false,true;publication(K, N), professor(N).;false;false
6;true,false,false;publication(P, B), ta(Q, A, R).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A).;true;true
7;true,true;ta(D, A, E), tempadvisedby(F, B).;true;true
7;true,true,true;publication(C, B).;false;false
7;true,true,false;publication(C, B).;false;false
7;true,false;ta(G, A, H), tempadvisedby(I, B).;true;true
7;true,false,true;ta(G, I, J).;false;false
7;true,false,false;projectmember(K, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;true,true;tempadvisedby(F, B), publication(G, F).;true;true
8;true,true,true;ta(H, A, I).;false;false
8;true,true,false;publication(J, A), tempadvisedby(K, B).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, B).;false;false
8;false;ta(N, A, P).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D).;true;true
9;true,true;publication(E, B).;true;false
9;true,true,true;ta(F, G, D), publication(E, G).;false;false
9;true,false;publication(H, B), publication(H, A).;true;true
9;true,false,true;tempadvisedby(I, B).;false;false
9;true,false,false;publication(J, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( genre(B, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839133;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360618;  // std dev = 9.06e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0926912761892608;  // std dev = 7.74e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.1526550757147046;  // std dev = 0.156, 83.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=58 */
%   | | else return -0.08518475138839682;  // std dev = 5.19e-09, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0851847513883969;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2029679108690625;  // std dev = 0.083, 63.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08369482615375486;  // std dev = 0.082, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.19359196319909225;  // std dev = 2.11e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( movie(C, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0948231700325325;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07879397438423437;  // std dev = 0.089, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, F) )
%   | | then return 0.009526243659114744;  // std dev = 0.113, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0677628428117603;  // std dev = 1.86e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.13674246682890687;  // std dev = 0.629, 65.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07310673104843537;  // std dev = 0.085, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075175
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.695 seconds
Total inference time: 4.646 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073097
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.779 seconds
Parameter learned model CLL: -0.073097


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'genre(B, E)'}, {'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.69e-08, 102, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true': [0.0, 0, 58], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 112, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true,true': [1.19e-07, 0, 58], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.06e-08, 116, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, B)'}, {'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 113, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 58], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.74e-08, 129, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, B), movie(E, A)'}, {'true,true,true': [0.156, 25, 58], 'true,true,false': [5.19e-09, 74, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.083, 5, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.082, 97, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, B)'}, {'true,true,true': [2.11e-08, 0, 58], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false': [0.089, 112, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, F)'}, {'true,true,true': [0.113, 110, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.86e-09, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.629, 7, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.085, 121, 0]}]]
[{'': [0.09609467455621257, 7.401486830834377e-17], 'true': [-3.675221047035001e-16, -7.93016446160826e-18], 'true,false': [-7.93016446160826e-18, nan], 'true,false,true': [-7.93016446160826e-18, nan]}, {'': [0.04308576245887642, -5.9476233462061954e-18], 'true': [-1.2250736823450003e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.2250736823450003e-16, nan]}, {'': [0.03257296522956836, 7.082457226057034e-17], 'true': [2.4501473646900006e-16, 0.0], 'true,true': [2.4501473646900006e-16, nan], 'true,true,true': [2.4501473646900006e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.02589512227052241, -1.1789979022568034e-17], 'true': [-3.3689526264487507e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.007991661590093457, 4.6474452193611206e-17], 'true': [-1.5313421029312505e-16, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan], 'true,false,true': [2.3129646346357427e-18, nan]}, {'': [0.026985672283483808, 0.0], 'true': [0.026985672283483808, nan], 'true,true': [0.024382665239841866, 2.700542492331462e-17]}, {'': [0.00684310832708122, 6.965978837305268e-05], 'true': [0.00684310832708122, nan], 'true,true': [0.00684310832708122, nan]}, {'': [0.002680350425814959, 7.010454188764923e-05], 'true': [0.002680350425814959, nan], 'true,true': [7.656710514656252e-18, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.012807170193249184, 2.0816681711721684e-18], 'true': [0.012807170193249184, nan], 'true,true': [0.012807170193249184, nan]}, {'': [0.006082418573446108, 5.967640489636186e-05], 'true': [0.006082418573446108, nan], 'true,true': [0.006082418573446108, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048766;  // std dev = 7.60e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.12544463852839133;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360618;  // std dev = 9.31e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10159632948783624;  // std dev = 4.83e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.09269127618926093;  // std dev = 5.77e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( director(B) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.08518475138839693;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.08518475138839682;  // std dev = 5.05e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else return -0.08518475138839689;  // std dev = 3.73e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07877675473109157;  // std dev = 6.32e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.16517541567343866;  // std dev = 0.053, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.15325433360159993;  // std dev = 0.073, 42.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 2.58e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06842697784420265;  // std dev = 5.27e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.15531635143801528;  // std dev = 0.006, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.0846625036504799;  // std dev = 0.001, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06842697784420275;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1360122193390619;  // std dev = 0.005, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07804078853304358;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06419184008202626;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065363
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.566 seconds
Total inference time: 2.394 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064071
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.468 seconds
Refined model CLL: -0.064071


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065363
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.508 seconds
Total inference time: 2.394 seconds
AUC ROC: 1.0
Total revision time: 6.508
Best scored revision CLL: -0.064071


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:03:18
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065363, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.508, 'Inference time': 2.394, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075175, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.695, 'Inference time': 4.646}}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;ta(G, A, H).;false;false
0;true,false;publication(I, A), tempadvisedby(J, B).;true;true
0;true,false,true;projectmember(K, B).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B).;false;true
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,true;publication(J, I).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, B).;false;false
2;true,false;publication(F, B), publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;ta(I, A, J), publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;ta(F, G, E), tempadvisedby(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;ta(I, A, J), publication(K, B).;false;false
3;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A).;true;true
4;true,false,true;publication(D, E), professor(E).;false;false
4;true,false,false;ta(F, A, G).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;ta(G, A, H), tempadvisedby(I, B).;false;false
5;true,true,false;ta(J, A, K), tempadvisedby(L, B).;false;false
5;true,false;tempadvisedby(M, B).;false;true
5;true,false,false;publication(N, B), ta(P, A, Q).;false;false
5;false;ta(R, A, S).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, B).;true;true
6;true,true;publication(E, C).;true;true
6;true,true,true;ta(F, C, G).;false;false
6;true,true,false;publication(D, H), ta(I, H, J).;false;false
6;true,false;publication(K, A), ta(L, A, M).;true;true
6;true,false,true;publication(K, N), professor(N).;false;false
6;true,false,false;publication(P, B), ta(Q, A, R).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A).;true;true
7;true,true;ta(D, A, E), tempadvisedby(F, B).;true;true
7;true,true,true;publication(C, B).;false;false
7;true,true,false;publication(C, B).;false;false
7;true,false;ta(G, A, H), tempadvisedby(I, B).;true;true
7;true,false,true;ta(G, I, J).;false;false
7;true,false,false;projectmember(K, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;true,true;tempadvisedby(F, B), publication(G, F).;true;true
8;true,true,true;ta(H, A, I).;false;false
8;true,true,false;publication(J, A), tempadvisedby(K, B).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, B).;false;false
8;false;ta(N, A, P).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D).;true;true
9;true,true;publication(E, B).;true;false
9;true,true,true;ta(F, G, D), publication(E, G).;false;false
9;true,false;publication(H, B), publication(H, A).;true;true
9;true,false,true;tempadvisedby(I, B).;false;false
9;true,false,false;publication(J, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 8.09e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( genre(B, E) )
%   | | | then return -0.1418510649004877;  // std dev = 2.98e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.1418510649004877;  // std dev = 2.36e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048807;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.1254446385283912;  // std dev = 5.48e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839186;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.1123163781936063;  // std dev = 4.34e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936068;  // std dev = 0.000, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583096;  // std dev = 2.79e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.10159632948783619;  // std dev = 4.71e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783655;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.09269127618926108;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0926912761892606;  // std dev = 5.58e-08, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.17483046287985915;  // std dev = 0.145, 233.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=178 */
%   | | else return -0.08518475138839678;  // std dev = 5.74e-09, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 2.79e-09, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.152059703062799;  // std dev = 0.128, 233.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08213769976307532;  // std dev = 0.135, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1981170898156211;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else if ( movie(C, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09054284408039853;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07705898886469022;  // std dev = 0.137, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, F) )
%   | | then return 0.025009690501168063;  // std dev = 0.120, 433.000 (wgt'ed) examples reached here.  /* #neg=255 #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06797110510829607;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.09883362156123399;  // std dev = 1.717, 242.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07019851383650212;  // std dev = 0.137, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07496
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.516 seconds
Total inference time: 3.929 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077848
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.058 seconds
Parameter learned model CLL: -0.077848


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'genre(B, E)'}, {'true,true': [8.09e-08, 0, 178], 'true,false,true,true': [2.98e-08, 32, 0], 'true,false,true,false': [2.36e-08, 27, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 297, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true': [0.0, 0, 178], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.48e-08, 54, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 320, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true,true': [5.9e-07, 0, 178], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.34e-08, 63, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 295, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, B)'}, {'true,true': [2.79e-08, 0, 178], 'true,false,true,true': [4.71e-08, 64, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 304, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [3.58e-07, 0, 178], 'true,false,true,true': [0.0, 54, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.58e-08, 323, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, B), movie(E, A)'}, {'true,true,true': [0.145, 55, 178], 'true,true,false': [5.74e-09, 203, 0], 'true,false': [0.0, 0, 0], 'false': [2.79e-09, 90, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.128, 55, 178], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.135, 307, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 178], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 74, 0], 'true,false': [0.0, 0, 0], 'false': [0.137, 297, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, F)'}, {'true,true,true': [0.12, 255, 178], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 113, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.717, 64, 178], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.137, 296, 0]}]]
[{'': [0.18697146112624974, -6.579099405186112e-17], 'true': [6.706246045376226e-15, 6.39789539614497e-17], 'true,false': [6.39789539614497e-17, nan], 'true,false,true': [2.7755575615628914e-17, 2.05596856412066e-17]}, {'': [0.1274873134255186, -6.106226635438361e-17], 'true': [-3.193450497798203e-15, 5.551115123125783e-17], 'true,false': [5.551115123125783e-17, nan], 'true,false,true': [5.551115123125783e-17, nan], 'true,true': [-3.193450497798203e-15, nan]}, {'': [0.08607298476402121, -8.430168051391019e-17], 'true': [1.9559884299013994e-15, 2.995839907718676e-17], 'true,true': [1.9559884299013994e-15, nan], 'true,true,true': [1.9559884299013994e-15, nan], 'true,false': [2.995839907718676e-17, nan], 'true,false,true': [2.995839907718676e-17, nan]}, {'': [0.05241889841987445, -5.697197100050146e-17], 'true': [7.983626244495507e-16, 3.469446951953614e-17], 'true,false': [3.469446951953614e-17, nan], 'true,false,true': [3.469446951953614e-17, nan]}, {'': [0.030520054115287472, 9.62422436207566e-18], 'true': [7.185263620045957e-16, -3.0839528461809902e-18], 'true,false': [-3.0839528461809902e-18, nan], 'true,false,true': [-3.0839528461809902e-18, nan]}, {'': [0.027985694461349724, 8.635067969306773e-18], 'true': [0.027985694461349724, nan], 'true,true': [0.020890085060692638, 3.281447363424108e-17]}, {'': [0.01646461159312226, 5.947664263405549e-05], 'true': [0.01646461159312226, nan], 'true,true': [0.01646461159312226, nan]}, {'': [0.017283180123429054, 6.316403099887551e-05], 'true': [0.017283180123429054, nan], 'true,true': [-4.989766402809692e-18, -4.50090415388577e-18], 'true,true,false': [nan, -4.50090415388577e-18]}, {'': [0.014415024633442556, -1.964996503761339e-17], 'true': [0.014415024633442556, nan], 'true,true': [0.014415024633442556, nan]}, {'': [0.012189223324109641, 6.333731334156856e-05], 'true': [0.012189223324109641, nan], 'true,true': [0.012189223324109641, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
0;true,false;genre(B, E).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( genre(B, D) )
%   | | then return -0.1418510649004877;  // std dev = 2.36e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.1418510649004877;  // std dev = 2.36e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.1418510649004881;  // std dev = 0.000, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839136;  // std dev = 1.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return -0.1254446385283919;  // std dev = 0.000, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3.94e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.5553664367462835;  // std dev = 3.94e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.1123163781936064;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.1123163781936064;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.11231637819360678;  // std dev = 0.000, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831014;  // std dev = 1.83e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.41751358415831014;  // std dev = 1.83e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return -0.10159632948783655;  // std dev = 0.000, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015017;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32071184716015017;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09269127618926104;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return -0.09269127618926061;  // std dev = 3.65e-08, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.08518475138839678;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( female(A) )
%   | | | then return 0.2551722425694897;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.2551722425694897;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return -0.08518475138839678;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else return -0.08518475138839679;  // std dev = 7.45e-09, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else if ( female(B) )
%   | then return -0.08518475138839678;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return -0.08518475138839678;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253556;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109176;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.07877675473109176;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109154;  // std dev = 5.77e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | | else return -0.07877675473109154;  // std dev = 5.77e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( female(B) )
%   | | | then return -0.0787767547310917;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -0.0787767547310917;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return -0.07877675473109166;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.11557159112027893;  // std dev = 0.108, 118.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=89 */
%   | | else return 0.10789607010874987;  // std dev = 0.112, 123.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=89 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.07324622576333703;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return -0.07324622576333703;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333703;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.16087719389047994;  // std dev = 6.66e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.16191605539233936;  // std dev = 5.58e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420265;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.06842697784420267;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420262;  // std dev = 1.67e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | | else return -0.06842697784420262;  // std dev = 1.49e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else if ( female(A) )
%   | | | then return -0.0814887183094566;  // std dev = 9.13e-09, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.08091606090995242;  // std dev = 1.58e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.06842697784420261;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.14032503515630523;  // std dev = 5.89e-09, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.14112755410589803;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.07559372981194516;  // std dev = 2.08e-09, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.0750988803522117;  // std dev = 1.86e-09, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( female(B) )
%   | then return -0.06419184008202623;  // std dev = 0.000, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06412
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.39 seconds
Total inference time: 2.757 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067411
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.957 seconds
Refined model CLL: -0.067411


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06412
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.921000000000001 seconds
Total inference time: 2.757 seconds
AUC ROC: 1.0
Total revision time: 9.921000000000001
Best scored revision CLL: -0.067411


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:03:35
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06412, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.921000000000001, 'Inference time': 2.757, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.07496, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.516, 'Inference time': 3.929}}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;ta(G, A, H).;false;false
0;true,false;publication(I, A), tempadvisedby(J, B).;true;true
0;true,false,true;projectmember(K, B).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B).;false;true
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,true;publication(J, I).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, B).;false;false
2;true,false;publication(F, B), publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;ta(I, A, J), publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;ta(F, G, E), tempadvisedby(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;ta(I, A, J), publication(K, B).;false;false
3;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A).;true;true
4;true,false,true;publication(D, E), professor(E).;false;false
4;true,false,false;ta(F, A, G).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;ta(G, A, H), tempadvisedby(I, B).;false;false
5;true,true,false;ta(J, A, K), tempadvisedby(L, B).;false;false
5;true,false;tempadvisedby(M, B).;false;true
5;true,false,false;publication(N, B), ta(P, A, Q).;false;false
5;false;ta(R, A, S).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, B).;true;true
6;true,true;publication(E, C).;true;true
6;true,true,true;ta(F, C, G).;false;false
6;true,true,false;publication(D, H), ta(I, H, J).;false;false
6;true,false;publication(K, A), ta(L, A, M).;true;true
6;true,false,true;publication(K, N), professor(N).;false;false
6;true,false,false;publication(P, B), ta(Q, A, R).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A).;true;true
7;true,true;ta(D, A, E), tempadvisedby(F, B).;true;true
7;true,true,true;publication(C, B).;false;false
7;true,true,false;publication(C, B).;false;false
7;true,false;ta(G, A, H), tempadvisedby(I, B).;true;true
7;true,false,true;ta(G, I, J).;false;false
7;true,false,false;projectmember(K, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;true,true;tempadvisedby(F, B), publication(G, F).;true;true
8;true,true,true;ta(H, A, I).;false;false
8;true,true,false;publication(J, A), tempadvisedby(K, B).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, B).;false;false
8;false;ta(N, A, P).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D).;true;true
9;true,true;publication(E, B).;true;false
9;true,true,true;ta(F, G, D), publication(E, G).;false;false
9;true,false;publication(H, B), publication(H, A).;true;true
9;true,false,true;tempadvisedby(I, B).;false;false
9;true,false,false;publication(J, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 3.33e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( genre(B, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8.56e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283914;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360622;  // std dev = 6.32e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783615;  // std dev = 5.67e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.09269127618926098;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.15044701365937074;  // std dev = 0.157, 65.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=45 */
%   | | else return -0.08518475138839682;  // std dev = 4.47e-09, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0851847513883969;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1813920120505974;  // std dev = 0.110, 53.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08292275989761327;  // std dev = 0.071, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.19733205517862748;  // std dev = 3.33e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(C, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09298739285037055;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07809058899395951;  // std dev = 0.074, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, F) )
%   | | then return 0.01955721094840802;  // std dev = 0.117, 117.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06785610808920138;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14462591095902305;  // std dev = 0.483, 49.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07223559193871897;  // std dev = 0.065, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075351
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.257 seconds
Total inference time: 4.288 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075059
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.291 seconds
Parameter learned model CLL: -0.075059


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'genre(B, E)'}, {'true,true': [3.33e-08, 0, 45], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.56e-08, 94, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 92, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true,true': [0.0, 0, 45], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.32e-08, 79, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, B)'}, {'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.67e-08, 74, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [2.98e-08, 0, 45], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 85, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, B), movie(E, A)'}, {'true,true,true': [0.157, 20, 45], 'true,true,false': [4.47e-09, 58, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.11, 8, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.071, 82, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, B)'}, {'true,true,true': [3.33e-08, 0, 45], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 5, 0], 'true,false': [0.0, 0, 0], 'false': [0.074, 86, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, F)'}, {'true,true,true': [0.117, 72, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.483, 4, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.065, 79, 0]}]]
[{'': [0.05859375000000089, 7.795182938857482e-17], 'true': [1.105288700071267e-15, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.06424978612186535, -1.68946982008176e-17], 'true': [-9.473903143468002e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-9.473903143468002e-16, nan]}, {'': [0.05193310189730332, 5.0592441628488145e-17], 'true': [-3.947459643111668e-17, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan], 'true,false,true': [-1.982541115402065e-18, nan], 'true,true': [-3.947459643111668e-17, nan], 'true,true,true': [-3.947459643111668e-17, nan]}, {'': [0.027973194025505906, 4.350874015422911e-17], 'true': [-4.144832625267251e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.006962966417181677, -1.3061447348531253e-18], 'true': [1.973729821555834e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.026876100238583604, 1.5419764230904951e-18], 'true': [0.026876100238583604, nan], 'true,true': [0.0246765905331228, 1.914177628664063e-17]}, {'': [0.012033384392658653, 6.111772032294435e-05], 'true': [0.012033384392658653, nan], 'true,true': [0.012033384392658653, nan]}, {'': [0.0075856843713475895, 6.409566899562032e-05], 'true': [0.0075856843713475895, nan], 'true,true': [2.4671622769447922e-17, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.013795746577902246, -1.6012832085939759e-18], 'true': [0.013795746577902246, nan], 'true,true': [0.013795746577902246, nan]}, {'': [0.004767974680692077, 5.34119927399195e-05], 'true': [0.004767974680692077, nan], 'true,true': [0.004767974680692077, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048766;  // std dev = 7.88e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839138;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360624;  // std dev = 6.23e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10159632948783616;  // std dev = 5.77e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.09269127618926107;  // std dev = 1.83e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.08518475138839691;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839682;  // std dev = 4.08e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.08518475138839689;  // std dev = 3.73e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07877675473109161;  // std dev = 5.37e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1562346041195595;  // std dev = 0.069, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.16994384850217423;  // std dev = 0.247, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06842697784420267;  // std dev = 3.80e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.15410971791091826;  // std dev = 0.005, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08522507567490371;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06842697784420275;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13507251226348066;  // std dev = 0.005, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0792090535292069;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06419184008202626;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065122
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.492 seconds
Total inference time: 2.667 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064695
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.028 seconds
Refined model CLL: -0.064695


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065122
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.068 seconds
Total inference time: 2.667 seconds
AUC ROC: 1.0
Total revision time: 5.068
Best scored revision CLL: -0.064695


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:03:48
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065122, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.068, 'Inference time': 2.667, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075351, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.257, 'Inference time': 4.288}}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;ta(G, A, H).;false;false
0;true,false;publication(I, A), tempadvisedby(J, B).;true;true
0;true,false,true;projectmember(K, B).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B).;false;true
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,true;publication(J, I).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, B).;false;false
2;true,false;publication(F, B), publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;ta(I, A, J), publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;ta(F, G, E), tempadvisedby(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;ta(I, A, J), publication(K, B).;false;false
3;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A).;true;true
4;true,false,true;publication(D, E), professor(E).;false;false
4;true,false,false;ta(F, A, G).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;ta(G, A, H), tempadvisedby(I, B).;false;false
5;true,true,false;ta(J, A, K), tempadvisedby(L, B).;false;false
5;true,false;tempadvisedby(M, B).;false;true
5;true,false,false;publication(N, B), ta(P, A, Q).;false;false
5;false;ta(R, A, S).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, B).;true;true
6;true,true;publication(E, C).;true;true
6;true,true,true;ta(F, C, G).;false;false
6;true,true,false;publication(D, H), ta(I, H, J).;false;false
6;true,false;publication(K, A), ta(L, A, M).;true;true
6;true,false,true;publication(K, N), professor(N).;false;false
6;true,false,false;publication(P, B), ta(Q, A, R).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A).;true;true
7;true,true;ta(D, A, E), tempadvisedby(F, B).;true;true
7;true,true,true;publication(C, B).;false;false
7;true,true,false;publication(C, B).;false;false
7;true,false;ta(G, A, H), tempadvisedby(I, B).;true;true
7;true,false,true;ta(G, I, J).;false;false
7;true,false,false;projectmember(K, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;true,true;tempadvisedby(F, B), publication(G, F).;true;true
8;true,true,true;ta(H, A, I).;false;false
8;true,true,false;publication(J, A), tempadvisedby(K, B).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, B).;false;false
8;false;ta(N, A, P).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D).;true;true
9;true,true;publication(E, B).;true;false
9;true,true,true;ta(F, G, D), publication(E, G).;false;false
9;true,false;publication(H, B), publication(H, A).;true;true
9;true,false,true;tempadvisedby(I, B).;false;false
9;true,false,false;publication(J, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 3.33e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( genre(B, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 6.66e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 7.74e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783623;  // std dev = 5.16e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 1.49e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.1305344701342073;  // std dev = 0.164, 71.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   | | else return -0.08518475138839683;  // std dev = 4.56e-09, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839691;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2117929664113046;  // std dev = 0.075, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08189430953527006;  // std dev = 0.058, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.19567604579384298;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(C, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09558335313318998;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07525008209869419;  // std dev = 0.054, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, F) )
%   | | then return 0.00709152000954719;  // std dev = 0.112, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06810123557960046;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15490952680972012;  // std dev = 0.351, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07240094239763215;  // std dev = 0.067, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074593
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.399 seconds
Total inference time: 4.675 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073191
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.472 seconds
Parameter learned model CLL: -0.073191


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'genre(B, E)'}, {'true,true': [3.33e-08, 0, 45], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.66e-08, 67, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 94, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true,true': [0.0, 0, 45], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.74e-08, 95, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, B)'}, {'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.16e-08, 94, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [2.98e-08, 0, 45], 'true,false,true,true': [0.0, 9, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 91, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, B), movie(E, A)'}, {'true,true,true': [0.164, 26, 45], 'true,true,false': [4.56e-09, 62, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.075, 3, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.058, 77, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 45], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 12, 0], 'true,false': [0.0, 0, 0], 'false': [0.054, 94, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, F)'}, {'true,true,true': [0.112, 91, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.351, 2, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.067, 91, 0]}]]
[{'': [0.10380622837370317, 6.628197161941232e-17], 'true': [1.105288700071267e-15, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [0.0, 0.0]}, {'': [0.04182928783975578, -1.4173059888831785e-17], 'true': [-9.473903143468002e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-9.473903143468002e-16, nan]}, {'': [0.04627685204491952, 6.310741403132469e-17], 'true': [-3.947459643111668e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-3.947459643111668e-17, nan], 'true,true,true': [-3.947459643111668e-17, nan]}, {'': [0.024252759220113572, 2.834611977766357e-17], 'true': [-4.144832625267251e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.023736408665978845, 2.4400506035717728e-18], 'true': [1.973729821555834e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.025933507717267983, 0.0], 'true': [0.025933507717267983, nan], 'true,true': [0.02688676324205059, 2.1488187573390126e-17]}, {'': [0.005628717522984772, 4.373616580677364e-05], 'true': [0.005628717522984772, nan], 'true,true': [0.005628717522984772, nan]}, {'': [0.01409950761163484, 3.05750323213107e-05], 'true': [0.01409950761163484, nan], 'true,true': [-9.86864910777917e-18, -3.469446951953614e-18], 'true,true,false': [nan, -3.469446951953614e-18]}, {'': [0.012626545947116827, 5.782411586589357e-19], 'true': [0.012626545947116827, nan], 'true,true': [0.012626545947116827, nan]}, {'': [0.002626819143366228, 4.9449070650763574e-05], 'true': [0.002626819143366228, nan], 'true,true': [0.002626819143366228, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
0;true,false;genre(B, E).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( genre(B, D) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048766;  // std dev = 7.30e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.11231637819360638;  // std dev = 2.28e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( female(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1123163781936064;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( female(B) )
%   | then return -0.10159632948783635;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014955;  // std dev = 6.45e-09, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.32071184716014955;  // std dev = 6.45e-09, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(A) )
%   | then return -0.09269127618926105;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( female(A), actor(B) )
%   | | | then return -0.08518475138839685;  // std dev = 1.05e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.08589965851228866;  // std dev = 0.010, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.20975771563253556;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.08571550390406095;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(B) )
%   | then return -0.07877675473109177;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( actor(A) )
%   | | | then return -0.07874433855106848;  // std dev = 0.000100, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.0792323117536352;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 1.32e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( actor(A) )
%   | | | then return -0.07321146220219596;  // std dev = 9.47e-05, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420275;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.06842697784420275;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420274;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.06840088689392017;  // std dev = 0.000105, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( female(A) )
%   | | then return 0.14331114422561797;  // std dev = 0.045, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.1429010262313548;  // std dev = 0.046, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.06842697784420272;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13510547241185228;  // std dev = 4.93e-09, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.11689033246282121;  // std dev = 0.061, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else if ( female(A) )
%   | then return -0.06419184008202623;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( female(B) )
%   | | then return -0.0641918400820262;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( actor(A) )
%   | | | then return -0.06417418648062088;  // std dev = 0.000105, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06701
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.584 seconds
Total inference time: 3.252 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065211
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.389 seconds
Refined model CLL: -0.065211


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06701
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.844 seconds
Total inference time: 3.252 seconds
AUC ROC: 1.0
Total revision time: 6.844
Best scored revision CLL: -0.065211


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:04:04
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06701, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.844, 'Inference time': 3.252, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.074593, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.399, 'Inference time': 4.675}}


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;ta(G, A, H).;false;false
0;true,false;publication(I, A), tempadvisedby(J, B).;true;true
0;true,false,true;projectmember(K, B).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B).;false;true
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,true;publication(J, I).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, B).;false;false
2;true,false;publication(F, B), publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;ta(I, A, J), publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;ta(F, G, E), tempadvisedby(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;ta(I, A, J), publication(K, B).;false;false
3;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A).;true;true
4;true,false,true;publication(D, E), professor(E).;false;false
4;true,false,false;ta(F, A, G).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;ta(G, A, H), tempadvisedby(I, B).;false;false
5;true,true,false;ta(J, A, K), tempadvisedby(L, B).;false;false
5;true,false;tempadvisedby(M, B).;false;true
5;true,false,false;publication(N, B), ta(P, A, Q).;false;false
5;false;ta(R, A, S).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, B).;true;true
6;true,true;publication(E, C).;true;true
6;true,true,true;ta(F, C, G).;false;false
6;true,true,false;publication(D, H), ta(I, H, J).;false;false
6;true,false;publication(K, A), ta(L, A, M).;true;true
6;true,false,true;publication(K, N), professor(N).;false;false
6;true,false,false;publication(P, B), ta(Q, A, R).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A).;true;true
7;true,true;ta(D, A, E), tempadvisedby(F, B).;true;true
7;true,true,true;publication(C, B).;false;false
7;true,true,false;publication(C, B).;false;false
7;true,false;ta(G, A, H), tempadvisedby(I, B).;true;true
7;true,false,true;ta(G, I, J).;false;false
7;true,false,false;projectmember(K, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;true,true;tempadvisedby(F, B), publication(G, F).;true;true
8;true,true,true;ta(H, A, I).;false;false
8;true,true,false;publication(J, A), tempadvisedby(K, B).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, B).;false;false
8;false;ta(N, A, P).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D).;true;true
9;true,true;publication(E, B).;true;false
9;true,true,true;ta(F, G, D), publication(E, G).;false;false
9;true,false;publication(H, B), publication(H, A).;true;true
9;true,false,true;tempadvisedby(I, B).;false;false
9;true,false,false;publication(J, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( genre(B, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8.94e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839133;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360618;  // std dev = 8.82e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 2.98e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926101;  // std dev = 3.65e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.15917411606854734;  // std dev = 0.153, 78.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=56 */
%   | | else return -0.0851847513883968;  // std dev = 5.51e-09, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839691;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1966079606529144;  // std dev = 0.090, 62.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0833700129234063;  // std dev = 0.086, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.19356712819371508;  // std dev = 7.60e-08, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( movie(C, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09427868937164999;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07692325043472978;  // std dev = 0.073, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, F) )
%   | | then return 0.011894556369124646;  // std dev = 0.114, 157.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0679016688678057;  // std dev = 9.31e-10, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15909095513612148;  // std dev = 0.249, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07270062160182265;  // std dev = 0.082, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075635
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.619 seconds
Total inference time: 4.473 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073434
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.977 seconds
Parameter learned model CLL: -0.073434


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'genre(B, E)'}, {'true,true': [0.0, 0, 56], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.94e-08, 104, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true': [0.0, 0, 56], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 107, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true,true': [1.03e-07, 0, 56], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.82e-08, 114, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, B)'}, {'true,true': [0.0, 0, 56], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.98e-08, 102, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 56], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.65e-08, 101, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, B), movie(E, A)'}, {'true,true,true': [0.153, 22, 56], 'true,true,false': [5.51e-09, 92, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.09, 6, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.086, 107, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, B)'}, {'true,true,true': [7.6e-08, 0, 56], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [3.73e-09, 5, 0], 'true,false': [0.0, 0, 0], 'false': [0.073, 92, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, F)'}, {'true,true,true': [0.114, 101, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.31e-10, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.249, 1, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.082, 113, 0]}]]
[{'': [0.07524858908895435, 7.686159401251084e-17], 'true': [-1.2688263138573217e-16, -2.7755575615628915e-18], 'true,false': [-2.7755575615628915e-18, nan], 'true,false,true': [-2.7755575615628915e-18, nan]}, {'': [0.03445358635281509, -6.22554967079527e-18], 'true': [-1.9032394707859825e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.9032394707859825e-16, nan]}, {'': [0.014842341924197077, 6.817158923136926e-17], 'true': [1.9032394707859825e-16, 0.0], 'true,true': [1.9032394707859825e-16, nan], 'true,true,true': [1.9032394707859825e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.016767339707732778, 8.707631565687502e-18], 'true': [-3.489272363107635e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.008248078116164221, 1.31907686094078e-17], 'true': [-1.2688263138573217e-16, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan], 'true,false,true': [2.3129646346357427e-18, nan]}, {'': [0.025589652844890513, -1.1564823173178713e-18], 'true': [0.025589652844890513, nan], 'true,true': [0.02345799346975871, 3.0169103930031426e-17]}, {'': [0.008125365157192593, 6.920150829378353e-05], 'true': [0.008125365157192593, nan], 'true,true': [0.008125365157192593, nan]}, {'': [0.006234738004075501, 5.726095111222501e-05], 'true': [0.006234738004075501, nan], 'true,true': [1.030921380009074e-16, 2.7755575615628915e-18], 'true,true,false': [nan, 2.7755575615628915e-18]}, {'': [0.013059398343374225, 6.938893903907229e-19], 'true': [0.013059398343374225, nan], 'true,true': [0.013059398343374225, nan]}, {'': [0.001085622185486164, 5.9711281606061134e-05], 'true': [0.001085622185486164, nan], 'true,true': [0.001085622185486164, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048777;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839105;  // std dev = 8.02e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.11231637819360621;  // std dev = 8.69e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1015963294878363;  // std dev = 1.49e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926096;  // std dev = 5.05e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.08518475138839691;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0.25517224256948967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08518475138839682;  // std dev = 4.47e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else return -0.08518475138839691;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109154;  // std dev = 7.15e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527736;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333709;  // std dev = 1.83e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06842697784420265;  // std dev = 5.87e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.1527438580936708;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06842697784420275;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13400703000801087;  // std dev = 2.79e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.12122000613123426;  // std dev = 0.049, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   else return -0.06419184008202626;  // std dev = 1.05e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065317
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.591 seconds
Total inference time: 2.212 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063845
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.471 seconds
Refined model CLL: -0.063845


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065317
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.658 seconds
Total inference time: 2.212 seconds
AUC ROC: 1.0
Total revision time: 6.658
Best scored revision CLL: -0.063845


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:04:18
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065317, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.658, 'Inference time': 2.212, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075635, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.619, 'Inference time': 4.473}}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;ta(G, A, H).;false;false
0;true,false;publication(I, A), tempadvisedby(J, B).;true;true
0;true,false,true;projectmember(K, B).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B).;false;true
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,true;publication(J, I).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, B).;false;false
2;true,false;publication(F, B), publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;ta(I, A, J), publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;ta(F, G, E), tempadvisedby(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;ta(I, A, J), publication(K, B).;false;false
3;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A).;true;true
4;true,false,true;publication(D, E), professor(E).;false;false
4;true,false,false;ta(F, A, G).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;ta(G, A, H), tempadvisedby(I, B).;false;false
5;true,true,false;ta(J, A, K), tempadvisedby(L, B).;false;false
5;true,false;tempadvisedby(M, B).;false;true
5;true,false,false;publication(N, B), ta(P, A, Q).;false;false
5;false;ta(R, A, S).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, B).;true;true
6;true,true;publication(E, C).;true;true
6;true,true,true;ta(F, C, G).;false;false
6;true,true,false;publication(D, H), ta(I, H, J).;false;false
6;true,false;publication(K, A), ta(L, A, M).;true;true
6;true,false,true;publication(K, N), professor(N).;false;false
6;true,false,false;publication(P, B), ta(Q, A, R).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A).;true;true
7;true,true;ta(D, A, E), tempadvisedby(F, B).;true;true
7;true,true,true;publication(C, B).;false;false
7;true,true,false;publication(C, B).;false;false
7;true,false;ta(G, A, H), tempadvisedby(I, B).;true;true
7;true,false,true;ta(G, I, J).;false;false
7;true,false,false;projectmember(K, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;true,true;tempadvisedby(F, B), publication(G, F).;true;true
8;true,true,true;ta(H, A, I).;false;false
8;true,true,false;publication(J, A), tempadvisedby(K, B).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, B).;false;false
8;false;ta(N, A, P).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D).;true;true
9;true,true;publication(E, B).;true;false
9;true,true,true;ta(F, G, D), publication(E, G).;false;false
9;true,false;publication(H, B), publication(H, A).;true;true
9;true,false,true;tempadvisedby(I, B).;false;false
9;true,false,false;publication(J, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( genre(B, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 8.30e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.09269127618926098;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926093;  // std dev = 5.67e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.1526550757147046;  // std dev = 0.156, 83.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=58 */
%   | | else return -0.08518475138839683;  // std dev = 4.93e-09, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0851847513883969;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2029679108690625;  // std dev = 0.083, 63.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08350506693780076;  // std dev = 0.088, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.19359196319909225;  // std dev = 2.11e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( movie(C, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0948231700325325;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0778715893320056;  // std dev = 0.083, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, F) )
%   | | then return 0.015095042381968434;  // std dev = 0.114, 158.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06783313190318091;  // std dev = 9.31e-10, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15071734013602314;  // std dev = 0.424, 61.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0726465592295744;  // std dev = 0.078, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.533 seconds
Total inference time: 3.848 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073572
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.685 seconds
Parameter learned model CLL: -0.073572


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'genre(B, E)'}, {'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.16e-08, 111, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true': [0.0, 0, 58], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 118, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true,true': [1.19e-07, 0, 58], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.3e-08, 112, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, B)'}, {'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 106, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.67e-08, 111, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, B), movie(E, A)'}, {'true,true,true': [0.156, 25, 58], 'true,true,false': [4.93e-09, 70, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.083, 5, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.088, 113, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, B)'}, {'true,true,true': [2.11e-08, 0, 58], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 6, 0], 'true,false': [0.0, 0, 0], 'false': [0.083, 108, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, F)'}, {'true,true,true': [0.114, 100, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.31e-10, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.424, 3, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.078, 102, 0]}]]
[{'': [0.04676162321956422, 6.00120553851436e-17], 'true': [-3.675221047035001e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.052161020059183986, -3.7634678800852764e-18], 'true': [-1.2250736823450003e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.2250736823450003e-16, nan]}, {'': [0.03257296522956836, 6.145877457746403e-17], 'true': [2.4501473646900006e-16, 0.0], 'true,true': [2.4501473646900006e-16, nan], 'true,true,true': [2.4501473646900006e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.01968953885342776, 0.0], 'true': [-3.3689526264487507e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.01642278575441154, 2.900582676948607e-17], 'true': [-1.5313421029312505e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.027267046314734887, -9.912705577010326e-19], 'true': [0.027267046314734887, nan], 'true,true': [0.024382665239841866, 2.5376526277146434e-17]}, {'': [0.00684310832708122, 6.786927098393651e-05], 'true': [0.00684310832708122, nan], 'true,true': [0.00684310832708122, nan]}, {'': [0.007067330224316763, 6.3595357173931e-05], 'true': [0.007067330224316763, nan], 'true,true': [7.656710514656252e-18, -2.3129646346357427e-18], 'true,true,false': [nan, -2.3129646346357427e-18]}, {'': [0.01309265526519613, 1.5419764230904951e-18], 'true': [0.01309265526519613, nan], 'true,true': [0.01309265526519613, nan]}, {'': [0.0029524296243483776, 6.018214456400577e-05], 'true': [0.0029524296243483776, nan], 'true,true': [0.0029524296243483776, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.12544463852839136;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.1123163781936062;  // std dev = 7.74e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1015963294878363;  // std dev = 2.11e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.092691276189261;  // std dev = 3.80e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( director(B) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.08518475138839693;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.08518475138839682;  // std dev = 4.71e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else return -0.0851847513883969;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109155;  // std dev = 6.58e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1543380683354034;  // std dev = 0.072, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0.15325433360159993;  // std dev = 0.073, 42.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333717;  // std dev = 0.000, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06842697784420265;  // std dev = 4.59e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else return 0.15173530500069277;  // std dev = 0.238, 59.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=58 */
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13687311049128958;  // std dev = 0.000463, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09687513441481764;  // std dev = 0.000104, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06419184008202626;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066781
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.567 seconds
Total inference time: 2.422 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064887
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.424 seconds
Refined model CLL: -0.064887


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066781
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.209 seconds
Total inference time: 2.422 seconds
AUC ROC: 1.0
Total revision time: 6.209
Best scored revision CLL: -0.064887


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:04:31
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066781, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.209, 'Inference time': 2.422, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075637, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.533, 'Inference time': 3.848}}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;ta(G, A, H).;false;false
0;true,false;publication(I, A), tempadvisedby(J, B).;true;true
0;true,false,true;projectmember(K, B).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B).;false;true
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,true;publication(J, I).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, B).;false;false
2;true,false;publication(F, B), publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;ta(I, A, J), publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;ta(F, G, E), tempadvisedby(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;ta(I, A, J), publication(K, B).;false;false
3;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A).;true;true
4;true,false,true;publication(D, E), professor(E).;false;false
4;true,false,false;ta(F, A, G).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;ta(G, A, H), tempadvisedby(I, B).;false;false
5;true,true,false;ta(J, A, K), tempadvisedby(L, B).;false;false
5;true,false;tempadvisedby(M, B).;false;true
5;true,false,false;publication(N, B), ta(P, A, Q).;false;false
5;false;ta(R, A, S).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, B).;true;true
6;true,true;publication(E, C).;true;true
6;true,true,true;ta(F, C, G).;false;false
6;true,true,false;publication(D, H), ta(I, H, J).;false;false
6;true,false;publication(K, A), ta(L, A, M).;true;true
6;true,false,true;publication(K, N), professor(N).;false;false
6;true,false,false;publication(P, B), ta(Q, A, R).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A).;true;true
7;true,true;ta(D, A, E), tempadvisedby(F, B).;true;true
7;true,true,true;publication(C, B).;false;false
7;true,true,false;publication(C, B).;false;false
7;true,false;ta(G, A, H), tempadvisedby(I, B).;true;true
7;true,false,true;ta(G, I, J).;false;false
7;true,false,false;projectmember(K, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;true,true;tempadvisedby(F, B), publication(G, F).;true;true
8;true,true,true;ta(H, A, I).;false;false
8;true,true,false;publication(J, A), tempadvisedby(K, B).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, B).;false;false
8;false;ta(N, A, P).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D).;true;true
9;true,true;publication(E, B).;true;false
9;true,true,true;ta(F, G, D), publication(E, G).;false;false
9;true,false;publication(H, B), publication(H, A).;true;true
9;true,false,true;tempadvisedby(I, B).;false;false
9;true,false,false;publication(J, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 8.09e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( genre(B, E) )
%   | | | then return -0.14185106490048768;  // std dev = 3.94e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048796;  // std dev = 0.000, 312.000 (wgt'ed) examples reached here.  /* #neg=312 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.12544463852839147;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839183;  // std dev = 0.000, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.1123163781936063;  // std dev = 3.33e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360683;  // std dev = 0.000, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583096;  // std dev = 2.79e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.10159632948783621;  // std dev = 3.94e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783656;  // std dev = 0.000, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.09269127618926107;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926068;  // std dev = 9.88e-08, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.1693679583784252;  // std dev = 0.148, 238.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=178 */
%   | | else return -0.08518475138839678;  // std dev = 5.51e-09, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 4.37e-09, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.14984118140987973;  // std dev = 0.131, 236.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08208964404129672;  // std dev = 0.131, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.19934017920927258;  // std dev = 5.16e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else if ( movie(C, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09036032614771941;  // std dev = 3.25e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.076293846530944;  // std dev = 0.120, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, F) )
%   | | then return 0.029169783214241476;  // std dev = 0.121, 417.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06802264014865393;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.10864778073699867;  // std dev = 1.591, 230.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07086665103145341;  // std dev = 0.145, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075138
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.414 seconds
Total inference time: 4.025 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078063
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.789 seconds
Parameter learned model CLL: -0.078063


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'genre(B, E)'}, {'true,true': [8.09e-08, 0, 178], 'true,false,true,true': [3.94e-08, 38, 0], 'true,false,true,false': [1.49e-08, 23, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 312, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true': [0.0, 0, 178], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 68, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 284, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true,true': [5.9e-07, 0, 178], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [3.33e-08, 52, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 272, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, B)'}, {'true,true': [2.79e-08, 0, 178], 'true,false,true,true': [3.94e-08, 57, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 306, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [3.58e-07, 0, 178], 'true,false,true,true': [0.0, 57, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.88e-08, 300, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, B), movie(E, A)'}, {'true,true,true': [0.148, 60, 178], 'true,true,false': [5.51e-09, 203, 0], 'true,false': [0.0, 0, 0], 'false': [4.37e-09, 126, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.131, 58, 178], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.131, 298, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, B)'}, {'true,true,true': [5.16e-08, 0, 178], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [3.25e-08, 54, 0], 'true,false': [0.0, 0, 0], 'false': [0.12, 276, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, F)'}, {'true,true,true': [0.121, 239, 178], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 121, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.591, 52, 178], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.145, 296, 0]}]]
[{'': [0.19008770854852555, -2.2773805633336544e-17], 'true': [6.706246045376226e-15, 6.188128333976282e-17], 'true,false': [6.188128333976282e-17, nan], 'true,false,true': [4.0902953538821554e-17, 9.654113257610057e-18]}, {'': [0.142786739818863, -5.942038723345908e-17], 'true': [-3.193450497798203e-15, -6.530723674265627e-18], 'true,false': [-6.530723674265627e-18, nan], 'true,false,true': [-6.530723674265627e-18, nan], 'true,true': [-3.193450497798203e-15, nan]}, {'': [0.07800241889762492, -7.34706413354883e-17], 'true': [1.9559884299013994e-15, 2.1350442781253012e-17], 'true,true': [1.9559884299013994e-15, nan], 'true,true,true': [1.9559884299013994e-15, nan], 'true,false': [2.1350442781253012e-17, nan], 'true,false,true': [2.1350442781253012e-17, nan]}, {'': [0.04950827323520463, -5.514833324935418e-17], 'true': [7.983626244495507e-16, 2.7268635692547703e-17], 'true,false': [2.7268635692547703e-17, nan], 'true,false,true': [2.7268635692547703e-17, nan]}, {'': [0.03139833656387848, 3.256654205567126e-17], 'true': [7.185263620045957e-16, -1.947759692324836e-18], 'true,false': [-1.947759692324836e-18, nan], 'true,false,true': [-1.947759692324836e-18, nan]}, {'': [0.027884825461067256, 1.938484646170908e-17], 'true': [0.027884825461067256, nan], 'true,true': [0.02184171305043828, 3.062684205862501e-17]}, {'': [0.017030546753206643, 5.716268532121649e-05], 'true': [0.017030546753206643, nan], 'true,true': [0.017030546753206643, nan]}, {'': [0.01498774508607635, 5.2169130297284695e-05], 'true': [0.01498774508607635, nan], 'true,true': [1.4969299208429077e-17, 1.9531701359146273e-17], 'true,true,false': [nan, 1.9531701359146273e-17]}, {'': [0.014688834814187642, -1.4680635036365707e-17], 'true': [0.014688834814187642, nan], 'true,true': [0.014688834814187642, nan]}, {'': [0.011006465790507574, 7.124219956732502e-05], 'true': [0.011006465790507574, nan], 'true,true': [0.011006465790507574, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
0;true,false;genre(B, E).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( genre(B, D) )
%   | | then return -0.1418510649004877;  // std dev = 3.33e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return -0.14185106490048807;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839136;  // std dev = 1.05e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.1254446385283919;  // std dev = 0.000, 313.000 (wgt'ed) examples reached here.  /* #neg=313 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3.94e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.5553664367462835;  // std dev = 3.94e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360642;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.11231637819360643;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.1123163781936069;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831014;  // std dev = 1.83e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.41751358415831014;  // std dev = 1.83e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783628;  // std dev = 3.95e-09, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.10159632948783656;  // std dev = 0.000, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015017;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32071184716015017;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09269127618926104;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else if ( female(A) )
%   | then return -0.09269127618926079;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( actor(A) )
%   | | then return -0.09269127618926089;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | else return -0.09269127618926075;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.08518475138839678;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( female(A) )
%   | | | then return 0.2551722425694897;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.2551722425694897;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return -0.08518475138839678;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 2.17e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.08518475138839683;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( female(B) )
%   | then return -0.08518475138839678;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return -0.08518475138839678;  // std dev = 1.05e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253556;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109154;  // std dev = 5.58e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | | else return -0.07877675473109155;  // std dev = 5.05e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109168;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.07877675473109166;  // std dev = 5.27e-09, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.07877675473109168;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.07877675473109166;  // std dev = 1.61e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.11089015764382566;  // std dev = 0.110, 121.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=89 */
%   | | else return 0.11089015764382566;  // std dev = 0.110, 121.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=89 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else return -0.07324622576333702;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420261;  // std dev = 6.45e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.06842697784420262;  // std dev = 6.45e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0.1615101711309241;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420261;  // std dev = 1.49e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | | else return -0.06842697784420261;  // std dev = 1.83e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else if ( female(A) )
%   | | | then return -0.08113900674398099;  // std dev = 1.18e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.081139006743981;  // std dev = 7.45e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( actor(B) )
%   | then return -0.06842697784420261;  // std dev = 1.32e-09, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else return -0.06842697784420261;  // std dev = 2.46e-09, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.14081412781431443;  // std dev = 4.17e-09, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.14081412781431443;  // std dev = 4.17e-09, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07529158797280286;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( actor(A) )
%   | then return -0.06419184008202623;  // std dev = 0.000, 192.000 (wgt'ed) examples reached here.  /* #neg=192 */
%   | else return -0.06419184008202622;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064121
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.076 seconds
Total inference time: 2.865 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067405
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.879 seconds
Refined model CLL: -0.067405


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064121
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.158 seconds
Total inference time: 2.865 seconds
AUC ROC: 1.0
Total revision time: 10.158
Best scored revision CLL: -0.067405


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:04:49
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064121, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.158, 'Inference time': 2.865, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075138, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.414, 'Inference time': 4.025}}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;ta(G, A, H).;false;false
0;true,false;publication(I, A), tempadvisedby(J, B).;true;true
0;true,false,true;projectmember(K, B).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B).;false;true
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,true;publication(J, I).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, B).;false;false
2;true,false;publication(F, B), publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;ta(I, A, J), publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;ta(F, G, E), tempadvisedby(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;ta(I, A, J), publication(K, B).;false;false
3;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A).;true;true
4;true,false,true;publication(D, E), professor(E).;false;false
4;true,false,false;ta(F, A, G).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;ta(G, A, H), tempadvisedby(I, B).;false;false
5;true,true,false;ta(J, A, K), tempadvisedby(L, B).;false;false
5;true,false;tempadvisedby(M, B).;false;true
5;true,false,false;publication(N, B), ta(P, A, Q).;false;false
5;false;ta(R, A, S).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, B).;true;true
6;true,true;publication(E, C).;true;true
6;true,true,true;ta(F, C, G).;false;false
6;true,true,false;publication(D, H), ta(I, H, J).;false;false
6;true,false;publication(K, A), ta(L, A, M).;true;true
6;true,false,true;publication(K, N), professor(N).;false;false
6;true,false,false;publication(P, B), ta(Q, A, R).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A).;true;true
7;true,true;ta(D, A, E), tempadvisedby(F, B).;true;true
7;true,true,true;publication(C, B).;false;false
7;true,true,false;publication(C, B).;false;false
7;true,false;ta(G, A, H), tempadvisedby(I, B).;true;true
7;true,false,true;ta(G, I, J).;false;false
7;true,false,false;projectmember(K, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;true,true;tempadvisedby(F, B), publication(G, F).;true;true
8;true,true,true;ta(H, A, I).;false;false
8;true,true,false;publication(J, A), tempadvisedby(K, B).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, B).;false;false
8;false;ta(N, A, P).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D).;true;true
9;true,true;publication(E, B).;true;false
9;true,true,true;ta(F, G, D), publication(E, G).;false;false
9;true,false;publication(H, B), publication(H, A).;true;true
9;true,false,true;tempadvisedby(I, B).;false;false
9;true,false,false;publication(J, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 3.33e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( genre(B, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 6.14e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283914;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360624;  // std dev = 5.87e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783621;  // std dev = 5.27e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.1305344701342073;  // std dev = 0.164, 71.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   | | else return -0.08518475138839679;  // std dev = 2.08e-09, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 9.31e-10, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.20017017756560876;  // std dev = 0.093, 50.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08306339258683697;  // std dev = 0.065, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.19751179340308944;  // std dev = 4.47e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(C, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09458330778366757;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07736209669330574;  // std dev = 0.059, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, F) )
%   | | then return 0.013202669958951026;  // std dev = 0.116, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06789330063084204;  // std dev = 9.31e-10, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14548344480762826;  // std dev = 0.487, 49.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07234480802235353;  // std dev = 0.065, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074818
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.386 seconds
Total inference time: 4.51 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074407
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.318 seconds
Parameter learned model CLL: -0.074407


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'genre(B, E)'}, {'true,true': [3.33e-08, 0, 45], 'true,false,true,true': [0.0, 10, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.14e-08, 61, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 8, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 94, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true,true': [0.0, 0, 45], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.87e-08, 74, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, B)'}, {'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.27e-08, 89, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [2.98e-08, 0, 45], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 83, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, B), movie(E, A)'}, {'true,true,true': [0.164, 26, 45], 'true,true,false': [2.08e-09, 63, 0], 'true,false': [0.0, 0, 0], 'false': [9.31e-10, 6, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.093, 5, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.065, 76, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, B)'}, {'true,true,true': [4.47e-08, 0, 45], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 5, 0], 'true,false': [0.0, 0, 0], 'false': [0.059, 69, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, F)'}, {'true,true,true': [0.116, 80, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.31e-10, 8, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.487, 4, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.065, 91, 0]}]]
[{'': [0.14876033057851296, 6.188128333976282e-17], 'true': [1.105288700071267e-15, -1.1102230246251566e-17], 'true,false': [-1.1102230246251566e-17, nan], 'true,false,true': [-1.1102230246251566e-17, nan]}, {'': [0.09149132947221877, -1.6535236536970416e-17], 'true': [-9.473903143468002e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-9.473903143468002e-16, nan]}, {'': [0.03342110014406096, 4.650934292348629e-17], 'true': [-3.947459643111668e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-3.947459643111668e-17, nan], 'true,true,true': [-3.947459643111668e-17, nan]}, {'': [0.027973194025505906, 3.118604001756058e-17], 'true': [-4.144832625267251e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.012812322212040247, 0.0], 'true': [1.973729821555834e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.025838201590603453, 1.1564823173178713e-18], 'true': [0.025838201590603453, nan], 'true,true': [0.02688676324205059, 5.28677630773884e-18]}, {'': [0.008645710115304546, 5.512579231895257e-05], 'true': [0.008645710115304546, nan], 'true,true': [0.008645710115304546, nan]}, {'': [0.007678759332357181, 5.1093862594521216e-05], 'true': [0.007678759332357181, nan], 'true,true': [4.4408920985006264e-17, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.013528674065922279, 8.673617379884035e-19], 'true': [0.013528674065922279, nan], 'true,true': [0.013528674065922279, nan]}, {'': [0.004839107744761826, 4.614865784107936e-05], 'true': [0.004839107744761826, nan], 'true,true': [0.004839107744761826, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048763;  // std dev = 8.30e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839152;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.11231637819360622;  // std dev = 6.50e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783617;  // std dev = 5.77e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926105;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.0851847513883968;  // std dev = 1.90e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07877675473109162;  // std dev = 4.59e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527736;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.1450012767826346;  // std dev = 0.084, 39.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333706;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06842697784420267;  // std dev = 3.94e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.15591718678252803;  // std dev = 0.012, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08403067966018729;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06842697784420272;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13647998185120494;  // std dev = 0.011, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07749419799917713;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06419184008202626;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06512
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.41 seconds
Total inference time: 2.565 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064673
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.072 seconds
Refined model CLL: -0.064673


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06512
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.186 seconds
Total inference time: 2.565 seconds
AUC ROC: 1.0
Total revision time: 5.186
Best scored revision CLL: -0.064673


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:05:02
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06512, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.186, 'Inference time': 2.565, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.074818, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.386, 'Inference time': 4.51}}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;ta(G, A, H).;false;false
0;true,false;publication(I, A), tempadvisedby(J, B).;true;true
0;true,false,true;projectmember(K, B).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B).;false;true
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,true;publication(J, I).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, B).;false;false
2;true,false;publication(F, B), publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;ta(I, A, J), publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;ta(F, G, E), tempadvisedby(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;ta(I, A, J), publication(K, B).;false;false
3;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A).;true;true
4;true,false,true;publication(D, E), professor(E).;false;false
4;true,false,false;ta(F, A, G).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;ta(G, A, H), tempadvisedby(I, B).;false;false
5;true,true,false;ta(J, A, K), tempadvisedby(L, B).;false;false
5;true,false;tempadvisedby(M, B).;false;true
5;true,false,false;publication(N, B), ta(P, A, Q).;false;false
5;false;ta(R, A, S).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, B).;true;true
6;true,true;publication(E, C).;true;true
6;true,true,true;ta(F, C, G).;false;false
6;true,true,false;publication(D, H), ta(I, H, J).;false;false
6;true,false;publication(K, A), ta(L, A, M).;true;true
6;true,false,true;publication(K, N), professor(N).;false;false
6;true,false,false;publication(P, B), ta(Q, A, R).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A).;true;true
7;true,true;ta(D, A, E), tempadvisedby(F, B).;true;true
7;true,true,true;publication(C, B).;false;false
7;true,true,false;publication(C, B).;false;false
7;true,false;ta(G, A, H), tempadvisedby(I, B).;true;true
7;true,false,true;ta(G, I, J).;false;false
7;true,false,false;projectmember(K, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;true,true;tempadvisedby(F, B), publication(G, F).;true;true
8;true,true,true;ta(H, A, I).;false;false
8;true,true,false;publication(J, A), tempadvisedby(K, B).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, B).;false;false
8;false;ta(N, A, P).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D).;true;true
9;true,true;publication(E, B).;true;false
9;true,true,true;ta(F, G, D), publication(E, G).;false;false
9;true,false;publication(H, B), publication(H, A).;true;true
9;true,false,true;tempadvisedby(I, B).;false;false
9;true,false,false;publication(J, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 3.33e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( genre(B, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 7.88e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360624;  // std dev = 5.77e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783616;  // std dev = 5.77e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926108;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.1367872011928335;  // std dev = 0.162, 69.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   | | else return -0.08529848661265235;  // std dev = 0.000917, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0851847513883969;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.18238430273272224;  // std dev = 0.113, 53.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08466854583541081;  // std dev = 0.078, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.19934618609914267;  // std dev = 1.49e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(C, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10118537375261431;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07696394976355181;  // std dev = 0.064, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, F) )
%   | | then return 0.013200335477683695;  // std dev = 0.117, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06781695651089374;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15125771246526995;  // std dev = 0.438, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07254773517828018;  // std dev = 0.072, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075297
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.429 seconds
Total inference time: 4.837 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073678
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.43 seconds
Parameter learned model CLL: -0.073678


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'genre(B, E)'}, {'true,true': [3.33e-08, 0, 45], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.88e-08, 86, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 97, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true,true': [0.0, 0, 45], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 8, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.77e-08, 72, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 45], 'true,false': [0.0, 0, 0], 'false': [5.77e-08, 82, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [2.98e-08, 0, 45], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 77, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, B), movie(E, A)'}, {'true,true,true': [0.162, 24, 45], 'true,true,false': [0.000917, 66, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.113, 8, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.078, 87, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, B)'}, {'true,true,true': [1.49e-08, 0, 45], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 5, 0], 'true,false': [0.0, 0, 0], 'false': [0.064, 80, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, F)'}, {'true,true,true': [0.117, 80, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.438, 3, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.072, 94, 0]}]]
[{'': [0.05859375000000089, 7.229359230117299e-17], 'true': [1.105288700071267e-15, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, 0.0]}, {'': [0.02908546225525768, -1.1445598192011922e-17], 'true': [-9.473903143468002e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-9.473903143468002e-16, nan]}, {'': [0.05713354321530112, 4.625929269271486e-17], 'true': [-3.947459643111668e-17, -1.734723475976807e-18], 'true,false': [-1.734723475976807e-18, nan], 'true,false,true': [-1.734723475976807e-18, nan], 'true,true': [-3.947459643111668e-17, nan], 'true,true,true': [-3.947459643111668e-17, nan]}, {'': [-4.144832625267251e-16, 4.06179155350667e-17], 'true': [-4.144832625267251e-16, nan]}, {'': [0.003792764093983301, -1.4418480839287748e-18], 'true': [1.973729821555834e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.025755894045049032, 0.0], 'true': [0.025755894045049032, nan], 'true,true': [0.0262781587907861, 8.408205803926242e-07]}, {'': [0.012782715862353484, 6.960090785743974e-05], 'true': [0.012782715862353484, nan], 'true,true': [0.012782715862353484, nan]}, {'': [0.008128729662023715, 5.101478215091548e-05], 'true': [0.008128729662023715, nan], 'true,true': [4.934324553889585e-18, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.013776312088259987, -5.782411586589357e-19], 'true': [0.013776312088259987, nan], 'true,true': [0.013776312088259987, nan]}, {'': [0.003992433956319791, 5.4518243029205364e-05], 'true': [0.003992433956319791, nan], 'true,true': [0.003992433956319791, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
0;true,false;genre(B, E).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( genre(B, D) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048766;  // std dev = 6.99e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1254446385283914;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.10159632948783635;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783635;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014955;  // std dev = 6.45e-09, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.32071184716014955;  // std dev = 6.45e-09, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09269127618926104;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839686;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.08518475138839683;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839685;  // std dev = 1.18e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.08518475138839683;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839683;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.08518475138839686;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.08518475138839683;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.20975771563253556;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(B) )
%   | then return -0.07877675473109177;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.07877675473109176;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.06842697784420265;  // std dev = 1.44e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420268;  // std dev = 9.13e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.06842697784420265;  // std dev = 1.44e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.0684269778442027;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.12574874375425962;  // std dev = 0.040, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.12538968783018345;  // std dev = 0.040, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.06419184008202626;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0651
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.24 seconds
Total inference time: 3.543 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064239
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.322 seconds
Refined model CLL: -0.064239


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0651
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.421 seconds
Total inference time: 3.543 seconds
AUC ROC: 1.0
Total revision time: 6.421
Best scored revision CLL: -0.064239


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:05:17
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.0651, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.421, 'Inference time': 3.543, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075297, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.429, 'Inference time': 4.837}}


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;ta(G, A, H).;false;false
0;true,false;publication(I, A), tempadvisedby(J, B).;true;true
0;true,false,true;projectmember(K, B).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B).;false;true
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,true;publication(J, I).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, B).;false;false
2;true,false;publication(F, B), publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;ta(I, A, J), publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;ta(F, G, E), tempadvisedby(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;ta(I, A, J), publication(K, B).;false;false
3;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A).;true;true
4;true,false,true;publication(D, E), professor(E).;false;false
4;true,false,false;ta(F, A, G).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;ta(G, A, H), tempadvisedby(I, B).;false;false
5;true,true,false;ta(J, A, K), tempadvisedby(L, B).;false;false
5;true,false;tempadvisedby(M, B).;false;true
5;true,false,false;publication(N, B), ta(P, A, Q).;false;false
5;false;ta(R, A, S).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, B).;true;true
6;true,true;publication(E, C).;true;true
6;true,true,true;ta(F, C, G).;false;false
6;true,true,false;publication(D, H), ta(I, H, J).;false;false
6;true,false;publication(K, A), ta(L, A, M).;true;true
6;true,false,true;publication(K, N), professor(N).;false;false
6;true,false,false;publication(P, B), ta(Q, A, R).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A).;true;true
7;true,true;ta(D, A, E), tempadvisedby(F, B).;true;true
7;true,true,true;publication(C, B).;false;false
7;true,true,false;publication(C, B).;false;false
7;true,false;ta(G, A, H), tempadvisedby(I, B).;true;true
7;true,false,true;ta(G, I, J).;false;false
7;true,false,false;projectmember(K, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;true,true;tempadvisedby(F, B), publication(G, F).;true;true
8;true,true,true;ta(H, A, I).;false;false
8;true,true,false;publication(J, A), tempadvisedby(K, B).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, B).;false;false
8;false;ta(N, A, P).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D).;true;true
9;true,true;publication(E, B).;true;false
9;true,true,true;ta(F, G, D), publication(E, G).;false;false
9;true,false;publication(H, B), publication(H, A).;true;true
9;true,false,true;tempadvisedby(I, B).;false;false
9;true,false,false;publication(J, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( genre(B, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048788;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839108;  // std dev = 7.88e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 8.16e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926085;  // std dev = 7.45e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.15306514438212374;  // std dev = 0.156, 80.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=56 */
%   | | else return -0.08518475138839682;  // std dev = 4.93e-09, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0851847513883969;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.20678684003399875;  // std dev = 0.076, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08528092714791506;  // std dev = 0.089, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.19293261231406816;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( movie(C, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09515146293644743;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07816677339754215;  // std dev = 0.083, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, F) )
%   | | then return 0.006586571093595864;  // std dev = 0.112, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06770229320185489;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14313174263123166;  // std dev = 0.539, 61.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07218020958052394;  // std dev = 0.077, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075077
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.473 seconds
Total inference time: 4.345 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072812
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.525 seconds
Parameter learned model CLL: -0.072812


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'genre(B, E)'}, {'true,true': [0.0, 0, 56], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 130, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true': [0.0, 0, 56], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.88e-08, 111, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true,true': [1.03e-07, 0, 56], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.16e-08, 103, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, B)'}, {'true,true': [0.0, 0, 56], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 116, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 56], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-08, 125, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, B), movie(E, A)'}, {'true,true,true': [0.156, 24, 56], 'true,true,false': [4.93e-09, 78, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.076, 4, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.089, 97, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 56], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false': [0.083, 103, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, F)'}, {'true,true,true': [0.112, 112, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.539, 5, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.077, 107, 0]}]]
[{'': [0.07524858908895435, -3.75767792950053e-17], 'true': [-1.2688263138573217e-16, -2.7755575615628915e-18], 'true,false': [-2.7755575615628915e-18, nan], 'true,false,true': [-2.7755575615628915e-18, nan]}, {'': [0.023767921937009287, 5.601125169280069e-17], 'true': [-1.9032394707859825e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.9032394707859825e-16, nan]}, {'': [0.021515213257540407, 6.467318590049455e-17], 'true': [1.9032394707859825e-16, 2.3129646346357427e-18], 'true,true': [1.9032394707859825e-16, nan], 'true,true,true': [1.9032394707859825e-16, nan], 'true,false': [2.3129646346357427e-18, nan], 'true,false,true': [2.3129646346357427e-18, nan]}, {'': [0.008971822673578602, -1.5313421029312504e-17], 'true': [-3.489272363107635e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.008248078116164221, 4.4408920985006264e-17], 'true': [-1.2688263138573217e-16, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan], 'true,false,true': [2.3129646346357427e-18, nan]}, {'': [0.026505950553417354, 0.0], 'true': [0.026505950553417354, nan], 'true,true': [0.024327005500570226, 2.5620531337503614e-17]}, {'': [0.005824754761083032, 8.20446231811366e-05], 'true': [0.005824754761083032, nan], 'true,true': [0.005824754761083032, nan]}, {'': [0.0027631250458530383, 6.674760736181533e-05], 'true': [0.0027631250458530383, nan], 'true,true': [-6.344131569286608e-17, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.012532102202278825, -9.912705577010326e-19], 'true': [0.012532102202278825, nan], 'true,true': [0.012532102202278825, nan]}, {'': [0.004761346028782255, 5.52549882284813e-05], 'true': [0.004761346028782255, nan], 'true,true': [0.004761346028782255, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048766;  // std dev = 7.30e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839133;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360618;  // std dev = 9.06e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.1015963294878363;  // std dev = 2.58e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926098;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926092;  // std dev = 5.96e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( director(B) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.08518475138839693;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.0851847513883968;  // std dev = 5.37e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else return -0.08518475138839691;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2097577156325355;  // std dev = 2.98e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.19114258851230148;  // std dev = 0.071, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   else return -0.07877675473109157;  // std dev = 6.32e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17850981811196914;  // std dev = 0.010, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.09476974723112301;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06842697784420265;  // std dev = 4.71e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.15381543795963634;  // std dev = 0.009, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.08753616174511172;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06842697784420275;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13484323238488985;  // std dev = 0.008, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.0803349024173833;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06419184008202626;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065505
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.557 seconds
Total inference time: 2.522 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063916
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.313 seconds
Refined model CLL: -0.063916


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065505
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.867999999999999 seconds
Total inference time: 2.522 seconds
AUC ROC: 1.0
Total revision time: 5.867999999999999
Best scored revision CLL: -0.063916


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:05:31
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065505, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.867999999999999, 'Inference time': 2.522, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075077, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.473, 'Inference time': 4.345}}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;ta(G, A, H).;false;false
0;true,false;publication(I, A), tempadvisedby(J, B).;true;true
0;true,false,true;projectmember(K, B).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B).;false;true
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,true;publication(J, I).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, B).;false;false
2;true,false;publication(F, B), publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;ta(I, A, J), publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;ta(F, G, E), tempadvisedby(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;ta(I, A, J), publication(K, B).;false;false
3;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A).;true;true
4;true,false,true;publication(D, E), professor(E).;false;false
4;true,false,false;ta(F, A, G).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;ta(G, A, H), tempadvisedby(I, B).;false;false
5;true,true,false;ta(J, A, K), tempadvisedby(L, B).;false;false
5;true,false;tempadvisedby(M, B).;false;true
5;true,false,false;publication(N, B), ta(P, A, Q).;false;false
5;false;ta(R, A, S).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, B).;true;true
6;true,true;publication(E, C).;true;true
6;true,true,true;ta(F, C, G).;false;false
6;true,true,false;publication(D, H), ta(I, H, J).;false;false
6;true,false;publication(K, A), ta(L, A, M).;true;true
6;true,false,true;publication(K, N), professor(N).;false;false
6;true,false,false;publication(P, B), ta(Q, A, R).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A).;true;true
7;true,true;ta(D, A, E), tempadvisedby(F, B).;true;true
7;true,true,true;publication(C, B).;false;false
7;true,true,false;publication(C, B).;false;false
7;true,false;ta(G, A, H), tempadvisedby(I, B).;true;true
7;true,false,true;ta(G, I, J).;false;false
7;true,false,false;projectmember(K, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;true,true;tempadvisedby(F, B), publication(G, F).;true;true
8;true,true,true;ta(H, A, I).;false;false
8;true,true,false;publication(J, A), tempadvisedby(K, B).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, B).;false;false
8;false;ta(N, A, P).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D).;true;true
9;true,true;publication(E, B).;true;false
9;true,true,true;ta(F, G, D), publication(E, G).;false;false
9;true,false;publication(H, B), publication(H, A).;true;true
9;true,false,true;tempadvisedby(I, B).;false;false
9;true,false,false;publication(J, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( genre(B, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839136;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360617;  // std dev = 1.01e-07, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783638;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.09269127618926098;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926087;  // std dev = 6.83e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.14171991125019417;  // std dev = 0.160, 87.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=58 */
%   | | else return -0.08518475138839683;  // std dev = 4.56e-09, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839691;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2047411077950591;  // std dev = 0.083, 63.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08400081801750522;  // std dev = 0.086, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.19502629221209972;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( movie(C, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0949754759893451;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0759256123187715;  // std dev = 0.070, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, F) )
%   | | then return 0.007471458447769661;  // std dev = 0.113, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06792488978885614;  // std dev = 1.32e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15274345799369343;  // std dev = 0.427, 61.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07268808265881076;  // std dev = 0.077, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075164
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.58 seconds
Total inference time: 4.276 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073011
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.748 seconds
Parameter learned model CLL: -0.073011


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'genre(B, E)'}, {'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.69e-08, 104, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true': [0.0, 0, 58], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 105, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true,true': [1.19e-07, 0, 58], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.01e-07, 134, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, B)'}, {'true,true': [0.0, 0, 58], 'true,false,true,true': [5.27e-09, 9, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 122, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 8, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.83e-08, 120, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, B), movie(E, A)'}, {'true,true,true': [0.16, 29, 58], 'true,true,false': [4.56e-09, 70, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.083, 5, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.086, 111, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 58], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 4, 0], 'true,false': [0.0, 0, 0], 'false': [0.07, 117, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, F)'}, {'true,true,true': [0.113, 115, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.32e-09, 12, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.427, 3, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.077, 104, 0]}]]
[{'': [0.03222222222222181, 7.259150545626024e-17], 'true': [-3.675221047035001e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.052161020059183986, -8.458842092382146e-18], 'true': [-1.2250736823450003e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.2250736823450003e-16, nan]}, {'': [0.0378756149402803, 7.622426736232418e-17], 'true': [2.4501473646900006e-16, 0.0], 'true,true': [2.4501473646900006e-16, nan], 'true,true,true': [2.4501473646900006e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.03133571028662497, -2.5480528434019987e-17], 'true': [-3.3689526264487507e-16, 3.0839528461809902e-18], 'true,false': [3.0839528461809902e-18, nan], 'true,false,true': [3.0839528461809902e-18, nan]}, {'': [0.018204452266139013, 3.8857805861880476e-17], 'true': [-1.5313421029312505e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.026985672283483808, 0.0], 'true': [0.026985672283483808, nan], 'true,true': [0.025742862963566385, 2.2204460492503132e-17]}, {'': [0.006929515376844501, 6.737425438801308e-05], 'true': [0.006929515376844501, nan], 'true,true': [0.006929515376844501, nan]}, {'': [0.005075816318915627, 4.2058876834665744e-05], 'true': [0.005075816318915627, nan], 'true,true': [-2.2970131543968756e-17, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.012745313935830506, 1.734723475976807e-18], 'true': [0.012745313935830506, nan], 'true,true': [0.012745313935830506, nan]}, {'': [0.002990727847502204, 5.647139391951477e-05], 'true': [0.002990727847502204, nan], 'true,true': [0.002990727847502204, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048763;  // std dev = 8.43e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.12544463852839133;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11231637819360621;  // std dev = 7.30e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10159632948783638;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.09269127618926103;  // std dev = 2.98e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( director(B) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.08518475138839693;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return -0.08518475138839682;  // std dev = 4.83e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else return -0.08518475138839691;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.19533099211435406;  // std dev = 0.063, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   else return -0.07877675473109154;  // std dev = 7.07e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1316791554196148;  // std dev = 0.102, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | else return 0.1655398323383958;  // std dev = 0.060, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06842697784420265;  // std dev = 5.05e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.1570257460429703;  // std dev = 0.009, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10895770252041442;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06842697784420275;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13734122498206702;  // std dev = 0.008, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09879531026325435;  // std dev = 0.002, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.06419184008202626;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066905
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.491 seconds
Total inference time: 2.335 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064968
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.463 seconds
Refined model CLL: -0.064968


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066905
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.282000000000001 seconds
Total inference time: 2.335 seconds
AUC ROC: 1.0
Total revision time: 6.282000000000001
Best scored revision CLL: -0.064968


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:05:44
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066905, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.282000000000001, 'Inference time': 2.335, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075164, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.58, 'Inference time': 4.276}}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;ta(G, A, H).;false;false
0;true,false;publication(I, A), tempadvisedby(J, B).;true;true
0;true,false,true;projectmember(K, B).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B).;false;true
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,true;publication(J, I).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, B).;false;false
2;true,false;publication(F, B), publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;ta(I, A, J), publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;ta(F, G, E), tempadvisedby(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;ta(I, A, J), publication(K, B).;false;false
3;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A).;true;true
4;true,false,true;publication(D, E), professor(E).;false;false
4;true,false,false;ta(F, A, G).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;ta(G, A, H), tempadvisedby(I, B).;false;false
5;true,true,false;ta(J, A, K), tempadvisedby(L, B).;false;false
5;true,false;tempadvisedby(M, B).;false;true
5;true,false,false;publication(N, B), ta(P, A, Q).;false;false
5;false;ta(R, A, S).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, B).;true;true
6;true,true;publication(E, C).;true;true
6;true,true,true;ta(F, C, G).;false;false
6;true,true,false;publication(D, H), ta(I, H, J).;false;false
6;true,false;publication(K, A), ta(L, A, M).;true;true
6;true,false,true;publication(K, N), professor(N).;false;false
6;true,false,false;publication(P, B), ta(Q, A, R).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A).;true;true
7;true,true;ta(D, A, E), tempadvisedby(F, B).;true;true
7;true,true,true;publication(C, B).;false;false
7;true,true,false;publication(C, B).;false;false
7;true,false;ta(G, A, H), tempadvisedby(I, B).;true;true
7;true,false,true;ta(G, I, J).;false;false
7;true,false,false;projectmember(K, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;true,true;tempadvisedby(F, B), publication(G, F).;true;true
8;true,true,true;ta(H, A, I).;false;false
8;true,true,false;publication(J, A), tempadvisedby(K, B).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, B).;false;false
8;false;ta(N, A, P).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D).;true;true
9;true,true;publication(E, B).;true;false
9;true,true,true;ta(F, G, D), publication(E, G).;false;false
9;true,false;publication(H, B), publication(H, A).;true;true
9;true,false,true;tempadvisedby(I, B).;false;false
9;true,false,false;publication(J, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 8.09e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( genre(B, E) )
%   | | | then return -0.1418510649004877;  // std dev = 2.58e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.1418510649004877;  // std dev = 2.11e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048788;  // std dev = 6.66e-08, 319.000 (wgt'ed) examples reached here.  /* #neg=319 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.12544463852839116;  // std dev = 6.66e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839186;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.11231637819360629;  // std dev = 4.83e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360692;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583096;  // std dev = 2.79e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.10159632948783613;  // std dev = 5.96e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783656;  // std dev = 0.000, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.09269127618926108;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0926912761892607;  // std dev = 9.66e-08, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.1828840314633892;  // std dev = 0.139, 226.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=178 */
%   | | else return -0.08518475138839678;  // std dev = 5.59e-09, 181.000 (wgt'ed) examples reached here.  /* #neg=181 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 3.84e-09, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.14063616625293054;  // std dev = 0.134, 244.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08301704221852568;  // std dev = 0.140, 262.000 (wgt'ed) examples reached here.  /* #neg=262 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1986530102795113;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else if ( movie(C, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08960656438074528;  // std dev = 1.67e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07630391137715876;  // std dev = 0.131, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, F) )
%   | | then return 0.02931868627549356;  // std dev = 0.121, 416.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06796323321671169;  // std dev = 3.84e-09, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.09805570725340096;  // std dev = 1.723, 243.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07048402581348229;  // std dev = 0.144, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075337
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.768 seconds
Total inference time: 6.146 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07796
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.183 seconds
Parameter learned model CLL: -0.07796


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'genre(B, E)'}, {'true,true': [8.09e-08, 0, 178], 'true,false,true,true': [2.58e-08, 29, 0], 'true,false,true,false': [2.11e-08, 26, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.66e-08, 319, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true': [0.0, 0, 178], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [6.66e-08, 65, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 300, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true,true': [5.9e-07, 0, 178], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [4.83e-08, 67, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 314, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, B)'}, {'true,true': [2.79e-08, 0, 178], 'true,false,true,true': [5.96e-08, 79, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 285, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [3.58e-07, 0, 178], 'true,false,true,true': [0.0, 49, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.66e-08, 291, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, B), movie(E, A)'}, {'true,true,true': [0.139, 48, 178], 'true,true,false': [5.59e-09, 181, 0], 'true,false': [0.0, 0, 0], 'false': [3.84e-09, 111, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.134, 66, 178], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.14, 262, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 178], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.67e-08, 58, 0], 'true,false': [0.0, 0, 0], 'false': [0.131, 304, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, F)'}, {'true,true,true': [0.121, 238, 178], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.84e-09, 106, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.723, 65, 178], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.144, 293, 0]}]]
[{'': [0.18033119048058202, 1.3921291844829548e-17], 'true': [6.706246045376226e-15, 6.055761952500853e-17], 'true,false': [6.055761952500853e-17, nan], 'true,false,true': [2.2970131543968756e-17, 1.708035422500241e-17]}, {'': [0.1398781850534626, -6.809367884367626e-17], 'true': [-3.193450497798203e-15, 6.832141690000964e-17], 'true,false': [6.832141690000964e-17, nan], 'true,false,true': [6.832141690000964e-17, nan], 'true,true': [-3.193450497798203e-15, nan]}, {'': [0.08857334229290718, -9.475788872596878e-17], 'true': [1.9559884299013994e-15, 3.4798035100191475e-17], 'true,true': [1.9559884299013994e-15, nan], 'true,true,true': [1.9559884299013994e-15, nan], 'true,false': [3.4798035100191475e-17, nan], 'true,false,true': [3.4798035100191475e-17, nan]}, {'': [0.057371934330445094, -6.077010240053489e-17], 'true': [7.983626244495507e-16, 4.4971059225322796e-17], 'true,false': [4.4971059225322796e-17, nan], 'true,false,true': [4.4971059225322796e-17, nan]}, {'': [0.028927564788170546, 3.204767493763338e-17], 'true': [7.185263620045957e-16, -4.5315225494904345e-18], 'true,false': [-4.5315225494904345e-18, nan], 'true,false,true': [-4.5315225494904345e-18, nan]}, {'': [0.02850598319666314, 1.50030138462859e-17], 'true': [0.02850598319666314, nan], 'true,true': [0.019378212765745664, 3.0669144326661785e-17]}, {'': [0.017850415578949255, 7.438800025402906e-05], 'true': [0.017850415578949255, nan], 'true,true': [0.017850415578949255, nan]}, {'': [0.01540250905855555, 5.684028576336352e-05], 'true': [0.01540250905855555, nan], 'true,true': [-5.4887430430906614e-17, 4.785444071660158e-18], 'true,true,false': [nan, 4.785444071660158e-18]}, {'': [0.014613435082566267, 1.4139632860792088e-17], 'true': [0.014613435082566267, nan], 'true,true': [0.014613435082566267, nan]}, {'': [0.012211001621316943, 7.092367135557081e-05], 'true': [0.012211001621316943, nan], 'true,true': [0.012211001621316943, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
0;true,false;genre(B, E).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( genre(B, D) )
%   | | then return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.14185106490048796;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.1254446385283918;  // std dev = 0.000, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3.94e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.5553664367462835;  // std dev = 3.94e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360642;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.11231637819360642;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.11231637819360679;  // std dev = 0.000, 266.000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831014;  // std dev = 1.83e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.41751358415831014;  // std dev = 1.83e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return -0.10159632948783656;  // std dev = 0.000, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015017;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32071184716015017;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09269127618926104;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( female(A) )
%   | then return -0.09269127618926103;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926093;  // std dev = 2.58e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else if ( actor(A) )
%   | | | then return -0.09269127618926098;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return -0.09269127618926103;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.08518475138839678;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( female(A) )
%   | | | then return 0.2551722425694897;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.2551722425694897;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | | else return -0.08518475138839678;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else return -0.08518475138839679;  // std dev = 1.05e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( female(B) )
%   | then return -0.08518475138839678;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return -0.08518475138839678;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253556;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109176;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.07877675473109176;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109154;  // std dev = 5.37e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | | else return -0.07877675473109157;  // std dev = 4.83e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109168;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.07877675473109168;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return -0.07877675473109164;  // std dev = 2.63e-09, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1256868313104726;  // std dev = 0.101, 112.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=89 */
%   | | else return 0.098142254177176;  // std dev = 0.116, 130.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=89 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.07324622576333703;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return -0.07324622576333703;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( actor(A) )
%   | | then return -0.07324622576333704;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | else return -0.07324622576333703;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420265;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.06842697784420265;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( female(A) )
%   | | | then return 0.1595163594193797;  // std dev = 9.19e-08, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.16324400940819572;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420262;  // std dev = 1.05e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | | else return -0.06842697784420261;  // std dev = 7.45e-09, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else if ( female(A) )
%   | | | then return -0.08224903912887212;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.08019364150508056;  // std dev = 7.45e-09, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return -0.06842697784420261;  // std dev = 7.45e-09, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.14071211379369022;  // std dev = 0.001, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( female(A) )
%   | | then return -0.07625004617340549;  // std dev = 2.46e-09, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.07447397054103731;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(B) )
%   | then return -0.06419184008202623;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064117
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.847 seconds
Total inference time: 3.022 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067415
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.886 seconds
Refined model CLL: -0.067415


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064117
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 13.684 seconds
Total inference time: 3.022 seconds
AUC ROC: 1.0
Total revision time: 13.684
Best scored revision CLL: -0.067415


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:06:08
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064117, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 13.684, 'Inference time': 3.022, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075337, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.768, 'Inference time': 6.146}}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;ta(G, A, H).;false;false
0;true,false;publication(I, A), tempadvisedby(J, B).;true;true
0;true,false,true;projectmember(K, B).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B).;false;true
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,true;publication(J, I).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, B).;false;false
2;true,false;publication(F, B), publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;ta(I, A, J), publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;ta(F, G, E), tempadvisedby(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;ta(I, A, J), publication(K, B).;false;false
3;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A).;true;true
4;true,false,true;publication(D, E), professor(E).;false;false
4;true,false,false;ta(F, A, G).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;ta(G, A, H), tempadvisedby(I, B).;false;false
5;true,true,false;ta(J, A, K), tempadvisedby(L, B).;false;false
5;true,false;tempadvisedby(M, B).;false;true
5;true,false,false;publication(N, B), ta(P, A, Q).;false;false
5;false;ta(R, A, S).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, B).;true;true
6;true,true;publication(E, C).;true;true
6;true,true,true;ta(F, C, G).;false;false
6;true,true,false;publication(D, H), ta(I, H, J).;false;false
6;true,false;publication(K, A), ta(L, A, M).;true;true
6;true,false,true;publication(K, N), professor(N).;false;false
6;true,false,false;publication(P, B), ta(Q, A, R).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A).;true;true
7;true,true;ta(D, A, E), tempadvisedby(F, B).;true;true
7;true,true,true;publication(C, B).;false;false
7;true,true,false;publication(C, B).;false;false
7;true,false;ta(G, A, H), tempadvisedby(I, B).;true;true
7;true,false,true;ta(G, I, J).;false;false
7;true,false,false;projectmember(K, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;true,true;tempadvisedby(F, B), publication(G, F).;true;true
8;true,true,true;ta(H, A, I).;false;false
8;true,true,false;publication(J, A), tempadvisedby(K, B).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, B).;false;false
8;false;ta(N, A, P).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D).;true;true
9;true,true;publication(E, B).;true;false
9;true,true,true;ta(F, G, D), publication(E, G).;false;false
9;true,false;publication(H, B), publication(H, A).;true;true
9;true,false,true;tempadvisedby(I, B).;false;false
9;true,false,false;publication(J, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 3.33e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( genre(B, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8.43e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839152;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 7.74e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783615;  // std dev = 5.96e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.15792738715295065;  // std dev = 0.154, 63.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=45 */
%   | | else return -0.08518475138839683;  // std dev = 4.66e-09, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839691;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.18525940860267953;  // std dev = 0.104, 52.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08522361956937577;  // std dev = 0.089, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1955408292558614;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(C, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09331408576155946;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0775933229008221;  // std dev = 0.080, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, F) )
%   | | then return 0.012466734623216673;  // std dev = 0.116, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0677421166845319;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1491499617744284;  // std dev = 0.422, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07319456033518412;  // std dev = 0.076, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07492
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.477 seconds
Total inference time: 4.532 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074618
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.432 seconds
Parameter learned model CLL: -0.074618


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'genre(B, E)'}, {'true,true': [3.33e-08, 0, 45], 'true,false,true,true': [0.0, 8, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.43e-08, 92, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 74, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true,true': [0.0, 0, 45], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.74e-08, 95, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, B)'}, {'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.96e-08, 80, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [2.98e-08, 0, 45], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 79, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, B), movie(E, A)'}, {'true,true,true': [0.154, 18, 45], 'true,true,false': [4.66e-09, 63, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.104, 7, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.089, 94, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 45], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [2.63e-09, 7, 0], 'true,false': [0.0, 0, 0], 'false': [0.08, 99, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, F)'}, {'true,true,true': [0.116, 80, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.422, 3, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.076, 84, 0]}]]
[{'': [0.12815948736205124, 7.723290606088045e-17], 'true': [1.105288700071267e-15, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan]}, {'': [0.05351918877289897, -2.700542492331462e-17], 'true': [-9.473903143468002e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-9.473903143468002e-16, nan]}, {'': [0.04627685204491952, 6.310741403132469e-17], 'true': [-3.947459643111668e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-3.947459643111668e-17, nan], 'true,true,true': [-3.947459643111668e-17, nan]}, {'': [0.027973194025505906, 4.4408920985006264e-17], 'true': [-4.144832625267251e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.019909088333742615, -1.4053456007913374e-18], 'true': [1.973729821555834e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.02659658035776631, -1.3877787807814458e-18], 'true': [0.02659658035776631, nan], 'true,true': [0.023641404762458917, 2.114710523095536e-17]}, {'': [0.010844570418580604, 8.446484430054123e-05], 'true': [0.010844570418580604, nan], 'true,true': [0.010844570418580604, nan]}, {'': [0.009719935653795121, 6.424568556232333e-05], 'true': [0.009719935653795121, nan], 'true,true': [-9.375216652390211e-17, 9.912705577010326e-19], 'true,true,false': [nan, 9.912705577010326e-19]}, {'': [0.01340773043244134, 0.0], 'true': [0.01340773043244134, nan], 'true,true': [0.01340773043244134, nan]}, {'': [0.0037081929576177064, 6.909899415805836e-05], 'true': [0.0037081929576177064, nan], 'true,true': [0.0037081929576177064, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048766;  // std dev = 7.30e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.12544463852839138;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360621;  // std dev = 6.99e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10159632948783617;  // std dev = 5.67e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926098;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926108;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.08518475138839693;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839685;  // std dev = 2.89e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.08518475138839691;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109162;  // std dev = 4.59e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1562346041195595;  // std dev = 0.069, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.15679843908241686;  // std dev = 0.068, 37.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333706;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06842697784420267;  // std dev = 3.33e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.15540734211195864;  // std dev = 0.000213, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.0846194681737602;  // std dev = 3.91e-05, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06842697784420275;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13608295280914187;  // std dev = 0.000191, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07828910545928716;  // std dev = 3.52e-05, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202626;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065106
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.408 seconds
Total inference time: 2.724 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064679
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.074 seconds
Refined model CLL: -0.064679


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065106
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.391 seconds
Total inference time: 2.724 seconds
AUC ROC: 1.0
Total revision time: 5.391
Best scored revision CLL: -0.064679


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:06:22
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065106, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.391, 'Inference time': 2.724, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.07492, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.477, 'Inference time': 4.532}}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;ta(G, A, H).;false;false
0;true,false;publication(I, A), tempadvisedby(J, B).;true;true
0;true,false,true;projectmember(K, B).;false;false
0;true,false,false;publication(L, B), ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B).;false;true
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,true;publication(J, I).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, B).;false;false
2;true,false;publication(F, B), publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;ta(I, A, J), publication(K, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;ta(F, G, E), tempadvisedby(G, B).;false;false
3;true,false;publication(H, A).;true;true
3;true,false,true;ta(I, A, J), publication(K, B).;false;false
3;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true;publication(C, A), publication(C, B).;false;true
4;true,false;publication(D, A).;true;true
4;true,false,true;publication(D, E), professor(E).;false;false
4;true,false,false;ta(F, A, G).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true;hasposition(D, C), projectmember(E, D).;true;true
5;true,true;publication(F, B), publication(F, A).;true;true
5;true,true,true;ta(G, A, H), tempadvisedby(I, B).;false;false
5;true,true,false;ta(J, A, K), tempadvisedby(L, B).;false;false
5;true,false;tempadvisedby(M, B).;false;true
5;true,false,false;publication(N, B), ta(P, A, Q).;false;false
5;false;ta(R, A, S).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;tempadvisedby(C, B), publication(D, B).;true;true
6;true,true;publication(E, C).;true;true
6;true,true,true;ta(F, C, G).;false;false
6;true,true,false;publication(D, H), ta(I, H, J).;false;false
6;true,false;publication(K, A), ta(L, A, M).;true;true
6;true,false,true;publication(K, N), professor(N).;false;false
6;true,false,false;publication(P, B), ta(Q, A, R).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, A).;true;true
7;true,true;ta(D, A, E), tempadvisedby(F, B).;true;true
7;true,true,true;publication(C, B).;false;false
7;true,true,false;publication(C, B).;false;false
7;true,false;ta(G, A, H), tempadvisedby(I, B).;true;true
7;true,false,true;ta(G, I, J).;false;false
7;true,false,false;projectmember(K, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;true,true;tempadvisedby(F, B), publication(G, F).;true;true
8;true,true,true;ta(H, A, I).;false;false
8;true,true,false;publication(J, A), tempadvisedby(K, B).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, B).;false;false
8;false;ta(N, A, P).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;ta(C, A, D).;true;true
9;true,true;publication(E, B).;true;false
9;true,true,true;ta(F, G, D), publication(E, G).;false;false
9;true,false;publication(H, B), publication(H, A).;true;true
9;true,false,true;tempadvisedby(I, B).;false;false
9;true,false,false;publication(J, A), publication(K, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 3.33e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( genre(B, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7.88e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839136;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B), movie(G, A) )
%   | | then if ( movie(G, H), director(H) )
%   | | | then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 7.60e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, B) )
%   | | | then return -0.10159632948783633;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878362;  // std dev = 5.37e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.09269127618926098;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926108;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.1618485506778111;  // std dev = 0.152, 62.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=45 */
%   | | else return -0.08518475138839685;  // std dev = 4.37e-09, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839691;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.21269166753785268;  // std dev = 0.061, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08351407525489295;  // std dev = 0.078, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1906558229049564;  // std dev = 6.66e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(C, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09566107154891544;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07761770821615986;  // std dev = 0.077, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( genre(C, D) )
%   | then if ( movie(E, F) )
%   | | then return -0.0015322280286706345;  // std dev = 0.109, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06784861728923433;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15771234267039172;  // std dev = 0.248, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07296833447612909;  // std dev = 0.079, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074295
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.497 seconds
Total inference time: 4.8 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072908
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.453 seconds
Parameter learned model CLL: -0.072908


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'genre(B, E)'}, {'true,true': [3.33e-08, 0, 45], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.88e-08, 84, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, G)'}, {'true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 100, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, B), movie(G, A)', 'true,false,true': 'movie(G, H), director(H)'}, {'true,true,true,true': [0.0, 0, 45], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.6e-08, 94, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(E, B)'}, {'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.37e-08, 87, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,true': [2.98e-08, 0, 45], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 96, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, B), movie(E, A)'}, {'true,true,true': [0.152, 17, 45], 'true,true,false': [4.37e-09, 55, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.061, 2, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.078, 84, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, B)'}, {'true,true,true': [6.66e-08, 0, 45], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 7, 0], 'true,false': [0.0, 0, 0], 'false': [0.077, 91, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'genre(C, D)', 'true,true': 'movie(E, F)'}, {'true,true,true': [0.109, 103, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.248, 1, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.079, 95, 0]}]]
[{'': [0.07496876301541104, 7.401486830834377e-17], 'true': [1.105288700071267e-15, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, 0.0]}, {'': [0.04182928783975578, -1.3322676295501878e-17], 'true': [-9.473903143468002e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-9.473903143468002e-16, nan]}, {'': [0.040122030722945186, 6.141659285160441e-17], 'true': [-3.947459643111668e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-3.947459643111668e-17, nan], 'true,true,true': [-3.947459643111668e-17, nan]}, {'': [0.015789556783927943, 3.317907889684376e-17], 'true': [-4.144832625267251e-16, -1.1564823173178713e-18], 'true,false': [-1.1564823173178713e-18, nan], 'true,false,true': [-1.1564823173178713e-18, nan]}, {'': [0.006962966417181677, 0.0], 'true': [1.973729821555834e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.027418433925692022, 0.0], 'true': [0.027418433925692022, nan], 'true,true': [0.023054059769010732, 1.9176579516252704e-17]}, {'': [0.0037757262746642376, 7.181505838474433e-05], 'true': [0.0037757262746642376, nan], 'true,true': [0.0037757262746642376, nan]}, {'': [0.009549877838631208, 6.509874752860342e-05], 'true': [0.009549877838631208, nan], 'true,true': [9.868649107779169e-17, -1.982541115402065e-18], 'true,true,false': [nan, -1.982541115402065e-18]}, {'': [0.011868179410660176, 6.938893903907229e-19], 'true': [0.011868179410660176, nan], 'true,true': [0.011868179410660176, nan]}, {'': [0.0013370406910830285, 6.52335475281663e-05], 'true': [0.0013370406910830285, nan], 'true,true': [0.0013370406910830285, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
0;true,false;genre(B, E).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A).;true;true
5;true;movie(E, B), movie(E, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048766;  // std dev = 7.74e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1254446385283914;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.122493912619733;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(B) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return -0.11231637819360642;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1092570450018355;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.10159632948783633;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014955;  // std dev = 6.45e-09, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.32071184716014955;  // std dev = 6.45e-09, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.09599870675697282;  // std dev = 0.009, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.09269127618926104;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( actor(B) )
%   | | then return -0.08518475138839682;  // std dev = 2.08e-09, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0853026312841294;  // std dev = 0.000993, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else return -0.08518475138839685;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 7.90e-09, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08138141793209902;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return -0.07877105190807954;  // std dev = 4.03e-06, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.07877070417496904;  // std dev = 3.89e-06, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.16613718636556257;  // std dev = 0.052, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.07323985420791157;  // std dev = 2.88e-06, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( female(A) )
%   | | | then return -0.07323994498958683;  // std dev = 1.46e-05, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.07324045352981691;  // std dev = 1.57e-05, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.15416754118573903;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09078484088496952;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.06842775722395927;  // std dev = 4.44e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.06842024639540131;  // std dev = 5.56e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( female(A) )
%   | | | then return -0.06842094343323762;  // std dev = 1.01e-05, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.06842284744305581;  // std dev = 1.60e-05, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13511749861754535;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08319002067062298;  // std dev = 0.005, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return -0.06418831486103282;  // std dev = 3.26e-06, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.06418838519322728;  // std dev = 3.33e-06, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return -0.06419184008202619;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065538
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.128 seconds
Total inference time: 2.773 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064401
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.276 seconds
Refined model CLL: -0.064401


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065538
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.354 seconds
Total inference time: 2.773 seconds
AUC ROC: 1.0
Total revision time: 6.354
Best scored revision CLL: -0.064401


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:06:36
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065538, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 6.354, 'Inference time': 2.773, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.074295, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.497, 'Inference time': 4.8}}


