Starting experiment #1 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.6914822684328455;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.7672398441904211;  // std dev = 1.348, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | else if ( publication(H, A) )
%   | | then if ( publication(H, I), professor(I) )
%   | | | then return 0.2029765213064089;  // std dev = 2.560, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.7331489350995123;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( ta(J, A, K) )
%   | | | then return 0.6763307532813297;  // std dev = 2.216, 33.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=27 */
%   | | | else return 0.5410757643678041;  // std dev = 2.980, 41.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=28 */
%   else return -0.1418510649004881;  // std dev = 0.000, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.5194734122109544;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.7422513288903991;  // std dev = 0.037, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( tempadvisedby(F, B), publication(G, F) )
%   | | then if ( publication(G, H), tempadvisedby(I, H) )
%   | | | then return 0.18214143234853175;  // std dev = 1.511, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.21162949368978226;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( publication(J, B), publication(K, A) )
%   | | | then return 0.2643840286871339;  // std dev = 2.347, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.5333094918910736;  // std dev = 3.687, 75.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=57 */
%   else return -0.12544463852839152;  // std dev = 0.000, 198.000 (wgt'ed) examples reached here.  /* #neg=198 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, B), publication(D, A) )
%   | then if ( tempadvisedby(E, B) )
%   | | then if ( ta(F, E, G) )
%   | | | then return 0.5753859692175846;  // std dev = 0.065, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.49858677956876085;  // std dev = 0.950, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( ta(H, A, I) )
%   | | | then return 0.09055650256954893;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.48121160671087354;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( publication(J, A) )
%   | | then if ( ta(K, A, L), publication(M, B) )
%   | | | then return 0.3880084778282106;  // std dev = 1.527, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.0780713952558504;  // std dev = 2.523, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else if ( tempadvisedby(N, B), ta(P, N, Q) )
%   | | | then return 0.47738734789608145;  // std dev = 1.984, 26.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | | | else return 0.3830467445818485;  // std dev = 3.027, 46.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=33 */
%   else return -0.11001512426466463;  // std dev = 0.061, 186.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=1 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B), ta(G, F, E) )
%   | | | then return 0.18909562556304552;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3993610591907316;  // std dev = 0.883, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.44103791797201997;  // std dev = 0.088, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( tempadvisedby(H, B), publication(I, H) )
%   | | then if ( publication(J, A) )
%   | | | then return -0.22255133944929414;  // std dev = 0.095, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.09382489020319251;  // std dev = 1.468, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( publication(K, A) )
%   | | | then return 0.16970877406801183;  // std dev = 2.934, 37.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=17 */
%   | | | else return 0.27970291492642246;  // std dev = 3.806, 71.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=51 */
%   else return -0.1018065679845961;  // std dev = 6.32e-08, 207.000 (wgt'ed) examples reached here.  /* #neg=207 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.3464607376474845;  // std dev = 0.140, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return 0.23040392880527275;  // std dev = 1.269, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else if ( publication(C, F), professor(F) )
%   | | | then return -0.10749936502797096;  // std dev = 2.014, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | | | else return 0.25232998149459257;  // std dev = 1.418, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( projectmember(G, B) )
%   | | then if ( publication(H, A) )
%   | | | then return 0.6933725213647612;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4901040146882221;  // std dev = 0.041, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.2180020386958697;  // std dev = 2.839, 40.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=28 */
%   | | | else return 0.28207677626622846;  // std dev = 2.390, 33.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   else return -0.09286727959404036;  // std dev = 0.000, 180.000 (wgt'ed) examples reached here.  /* #neg=180 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then if ( tempadvisedby(E, B), ta(F, E, D) )
%   | | then return 0.3805579981977072;  // std dev = 0.202, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(G, B), publication(H, G) )
%   | | | then return -0.02557255200589779;  // std dev = 1.109, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.17129914441452213;  // std dev = 3.143, 57.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=40 */
%   | else if ( publication(I, B) )
%   | | then if ( publication(I, J), tempadvisedby(K, J) )
%   | | | then return 0.25272200030529207;  // std dev = 2.376, 63.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=52 */
%   | | | else return -0.16351013599976788;  // std dev = 0.608, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(L, A) )
%   | | | then return 0.5481268662284067;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.43713056646325527;  // std dev = 0.167, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.08533410363462704;  // std dev = 0.000, 190.000 (wgt'ed) examples reached here.  /* #neg=190 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), ta(D, A, E) )
%   | then if ( ta(F, G, E), publication(C, G) )
%   | | then if ( ta(D, G, H) )
%   | | | then return 0.2730652941687185;  // std dev = 0.765, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.42634363952193316;  // std dev = 0.285, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(C, I), ta(J, I, K) )
%   | | | then return 0.4229004620977458;  // std dev = 0.332, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.05909928326731049;  // std dev = 2.137, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | else if ( publication(L, B), publication(L, A) )
%   | | then if ( tempadvisedby(M, B) )
%   | | | then return 0.16171343866246896;  // std dev = 0.966, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.25547974613995095;  // std dev = 0.081, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( projectmember(N, B) )
%   | | | then return 0.21519694580765553;  // std dev = 1.021, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.004530201032417334;  // std dev = 3.647, 61.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=32 */
%   else return -0.07890498572441332;  // std dev = 0.000, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20490048497318503;  // std dev = 0.203, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.04123103079224367;  // std dev = 1.061, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.24624081783277818;  // std dev = 0.832, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( publication(F, B) )
%   | | | then return 0.10771469173707635;  // std dev = 3.695, 80.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=54 */
%   | | | else return -0.012064370027590865;  // std dev = 2.344, 23.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=14 */
%   else return -0.07335745412003453;  // std dev = 0.000, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( hasposition(D, C), tempadvisedby(E, D) )
%   | then if ( publication(F, A), publication(F, D) )
%   | | then if ( ta(G, E, H), publication(I, B) )
%   | | | then return 0.1813035372813745;  // std dev = 0.745, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.018318910989520456;  // std dev = 1.817, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   | | else if ( publication(J, B) )
%   | | | then return 0.20577020387664538;  // std dev = 2.644, 66.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=56 */
%   | | | else return 0.30794464137911876;  // std dev = 0.158, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(K, A) )
%   | | then return 0.06918413329055467;  // std dev = 0.968, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(L, B) )
%   | | | then return -0.06654057025836342;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.15674181812364496;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( professor(B) )
%   | then return -0.06540156178794643;  // std dev = 0.162, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | else return -0.06852432917654978;  // std dev = 4.08e-08, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), ta(D, A, E) )
%   | then if ( tempadvisedby(F, B) )
%   | | then if ( ta(G, F, H) )
%   | | | then return 0.13073211290752484;  // std dev = 1.001, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.23817813412342234;  // std dev = 0.874, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else if ( ta(D, I, J), tempadvisedby(I, K) )
%   | | | then return 0.17813395071441798;  // std dev = 1.019, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.08188829251838858;  // std dev = 1.687, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else if ( publication(L, B), publication(L, A) )
%   | | then return 0.14652321479127525;  // std dev = 0.088, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else if ( publication(M, A) )
%   | | | then return -0.12523510821667316;  // std dev = 2.328, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return 0.04222057261250553;  // std dev = 2.763, 41.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=29 */
%   else return -0.06430376787175174;  // std dev = 0.000907, 195.000 (wgt'ed) examples reached here.  /* #neg=195 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;false;true
0;true,true,false;ta(F, A, G).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,false,false;ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, F).;true;true
1;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
1;true,false,false;publication(J, B), publication(K, A).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;publication(D, B), publication(D, A).;true;true
2;true,true;tempadvisedby(E, B).;true;true
2;true,true,true;ta(F, E, G).;false;false
2;true,true,false;ta(H, A, I).;false;false
2;true,false;publication(J, A).;true;true
2;true,false,true;ta(K, A, L), publication(M, B).;false;false
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B), ta(G, F, E).;false;false
3;true,false;tempadvisedby(H, B), publication(I, H).;true;true
3;true,false,true;publication(J, A).;false;false
3;true,false,false;publication(K, A).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, A), publication(D, B).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;tempadvisedby(E, B).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;projectmember(G, B).;true;true
4;true,false,true;publication(H, A).;false;false
4;true,false,false;tempadvisedby(I, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D).;true;true
5;true,true;tempadvisedby(E, B), ta(F, E, D).;false;true
5;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
5;true,false;publication(I, B).;true;true
5;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
5;true,false,false;publication(L, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, G, E), publication(C, G).;true;true
6;true,true,true;ta(D, G, H).;false;false
6;true,true,false;publication(C, I), ta(J, I, K).;false;false
6;true,false;publication(L, B), publication(L, A).;true;true
6;true,false,true;tempadvisedby(M, B).;false;false
6;true,false,false;projectmember(N, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;false;true
7;true,false;tempadvisedby(D, B), publication(E, D).;true;true
7;true,false,true;publication(E, B).;false;false
7;true,false,false;publication(F, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), tempadvisedby(E, D).;true;true
8;true,true;publication(F, A), publication(F, D).;true;true
8;true,true,true;ta(G, E, H), publication(I, B).;false;false
8;true,true,false;publication(J, B).;false;false
8;true,false;publication(K, A).;false;true
8;true,false,false;publication(L, B).;false;false
8;false;professor(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true;tempadvisedby(F, B).;true;true
9;true,true,true;ta(G, F, H).;false;false
9;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
9;true,false;publication(L, B), publication(L, A).;false;true
9;true,false,false;publication(M, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7.88e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839127;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462837;  // std dev = 1.49e-08, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360622;  // std dev = 7.88e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783637;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( movie(C, E), director(E) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926085;  // std dev = 7.30e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then return 0.24906937381933614;  // std dev = 0.345, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 5.87e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2050405764383515;  // std dev = 0.043, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109157;  // std dev = 6.66e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17867884651640456;  // std dev = 4.71e-08, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.13858429200382547;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, D) )
%   | | then if ( movie(F, B) )
%   | | | then return 0.1271564105997568;  // std dev = 0.644, 62.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=56 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420264;  // std dev = 5.48e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.13326993219846106;  // std dev = 0.036, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06426549465180324;  // std dev = 0.006, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073266
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.905 seconds
Total inference time: 1.755 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06689
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.984 seconds
Parameter learned model CLL: -0.06689


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [0.0, 0, 56], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.88e-08, 83, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, H)'}, {'true,true,true,true': [0.0, 0, 56], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 124, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, B)'}, {'true,true': [1.49e-08, 0, 56], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.88e-08, 106, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 56], 'true,false': [0.0, 0, 0], 'false': [0.0, 121, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, E), director(E)'}, {'true,true,true': [0.0, 0, 56], 'true,true,false,true': [0.0, 4, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.3e-08, 118, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)'}, {'true,true': [0.345, 1, 56], 'true,false': [0.0, 0, 0], 'false': [5.87e-08, 106, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.043, 1, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.66e-08, 114, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [4.71e-08, 0, 56], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 104, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, D)', 'true,true,true': 'movie(F, B)', 'false': 'director(B)'}, {'true,true,true,true': [0.644, 6, 56], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.48e-08, 114, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.036, 1, 56], 'true,false': [0.0, 0, 0], 'false': [0.006, 115, 0]}]]
[{'': [0.04826199367997677, 7.490661370964911e-17], 'true': [-1.2688263138573217e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.2688263138573217e-16, nan]}, {'': [0.03445358635281509, 0.0], 'true': [-1.9032394707859825e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.9032394707859825e-16, nan], 'true,true,true': [-1.9032394707859825e-16, nan]}, {'': [0.014842341924197077, 5.86532918669894e-17], 'true': [1.9032394707859825e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [-3.489272363107635e-16, -2.3856031934094273e-17], 'true': [-3.489272363107635e-16, nan]}, {'': [0.011096972199521918, 4.516161456102332e-17], 'true': [0.011096972199521918, nan], 'true,true': [-1.2688263138573217e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.0020857203909695884, 3.2468786569226275e-17], 'true': [0.0020857203909695884, nan]}, {'': [0.0018389883614350051, 3.895519384649672e-17], 'true': [0.0018389883614350051, nan], 'true,true': [0.0018389883614350051, nan]}, {'': [0.006263033719519558, -6.4051328343759035e-18], 'true': [3.9650822308041306e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.006696951907942108, 2.6294755846385285e-17], 'true': [0.006696951907942108, nan], 'true,true': [0.006696951907942108, nan], 'true,true,true': [0.006696951907942108, nan], 'false': [nan, 2.6294755846385285e-17]}, {'': [0.0013065691478094063, 3.06512254153264e-07], 'true': [0.0013065691478094063, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1254446385283913;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360621;  // std dev = 8.69e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783635;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926086;  // std dev = 6.91e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.0851847513883968;  // std dev = 6.05e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07877675473109157;  // std dev = 6.32e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07324622576333707;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1527438580936708;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06842697784420265;  // std dev = 5.16e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1269284989333667;  // std dev = 0.037, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.13400703000801084;  // std dev = 2.98e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return -0.06419184008202626;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066158
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.021 seconds
Total inference time: 1.254 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063846
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.817 seconds
Refined model CLL: -0.063846


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066158
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.7270000000000003 seconds
Total inference time: 1.254 seconds
AUC ROC: 1.0
Total revision time: 3.7270000000000003
Best scored revision CLL: -0.063846


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:00:32
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066158, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.7270000000000003, 'Inference time': 1.254, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073266, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.905, 'Inference time': 1.755}}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;false;true
0;true,true,false;ta(F, A, G).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,false,false;ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, F).;true;true
1;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
1;true,false,false;publication(J, B), publication(K, A).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;publication(D, B), publication(D, A).;true;true
2;true,true;tempadvisedby(E, B).;true;true
2;true,true,true;ta(F, E, G).;false;false
2;true,true,false;ta(H, A, I).;false;false
2;true,false;publication(J, A).;true;true
2;true,false,true;ta(K, A, L), publication(M, B).;false;false
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B), ta(G, F, E).;false;false
3;true,false;tempadvisedby(H, B), publication(I, H).;true;true
3;true,false,true;publication(J, A).;false;false
3;true,false,false;publication(K, A).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, A), publication(D, B).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;tempadvisedby(E, B).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;projectmember(G, B).;true;true
4;true,false,true;publication(H, A).;false;false
4;true,false,false;tempadvisedby(I, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D).;true;true
5;true,true;tempadvisedby(E, B), ta(F, E, D).;false;true
5;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
5;true,false;publication(I, B).;true;true
5;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
5;true,false,false;publication(L, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, G, E), publication(C, G).;true;true
6;true,true,true;ta(D, G, H).;false;false
6;true,true,false;publication(C, I), ta(J, I, K).;false;false
6;true,false;publication(L, B), publication(L, A).;true;true
6;true,false,true;tempadvisedby(M, B).;false;false
6;true,false,false;projectmember(N, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;false;true
7;true,false;tempadvisedby(D, B), publication(E, D).;true;true
7;true,false,true;publication(E, B).;false;false
7;true,false,false;publication(F, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), tempadvisedby(E, D).;true;true
8;true,true;publication(F, A), publication(F, D).;true;true
8;true,true,true;ta(G, E, H), publication(I, B).;false;false
8;true,true,false;publication(J, B).;false;false
8;true,false;publication(K, A).;false;true
8;true,false,false;publication(L, B).;false;false
8;false;professor(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true;tempadvisedby(F, B).;true;true
9;true,true,true;ta(G, F, H).;false;false
9;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
9;true,false;publication(L, B), publication(L, A).;false;true
9;true,false,false;publication(M, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 5.58e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839108;  // std dev = 7.60e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462838;  // std dev = 1.29e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360622;  // std dev = 8.16e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783666;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( movie(C, E), director(E) )
%   | | | then return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926092;  // std dev = 5.87e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then return 0.23321372683027117;  // std dev = 0.658, 62.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 5.87e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2080203118203762;  // std dev = 0.041, 59.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109155;  // std dev = 6.75e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1805762454196904;  // std dev = 7.15e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.12645582658657234;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, D) )
%   | | then if ( movie(F, B) )
%   | | | then return 0.1553785029979292;  // std dev = 3.33e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, B) )
%   | | | then return -0.11313394659879393;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return -0.06842697784420275;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06842697784420264;  // std dev = 5.87e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.13202101547084716;  // std dev = 0.031, 59.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071621
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.053 seconds
Total inference time: 1.872 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067088
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.947 seconds
Parameter learned model CLL: -0.067088


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [0.0, 0, 58], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.58e-08, 120, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, H)'}, {'true,true,true,true': [0.0, 0, 58], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.6e-08, 105, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, B)'}, {'true,true': [1.29e-08, 0, 58], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.16e-08, 109, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(F, A)'}, {'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 112, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, E), director(E)'}, {'true,true,true': [0.0, 0, 58], 'true,true,false,true': [2.63e-09, 6, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.87e-08, 106, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)'}, {'true,true': [0.658, 4, 58], 'true,false': [0.0, 0, 0], 'false': [5.87e-08, 108, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.041, 1, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.75e-08, 118, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [7.15e-08, 0, 58], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 105, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, D)', 'true,true,true': 'movie(F, B)', 'true,true,false': 'movie(G, B)', 'false': 'director(B)'}, {'true,true,true,true': [3.33e-08, 0, 58], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.32e-09, 3, 0], 'false,false': [5.87e-08, 125, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.031, 1, 58], 'true,false': [0.0, 0, 0], 'false': [0.0, 121, 0]}]]
[{'': [0.07306626354245364, 2.590520390792032e-17], 'true': [-3.675221047035001e-16, -2.7755575615628915e-18], 'true,false': [-2.7755575615628915e-18, nan], 'true,false,true': [-2.7755575615628915e-18, nan], 'true,true': [-3.675221047035001e-16, nan]}, {'': [0.052161020059183986, 5.4982473600483945e-17], 'true': [-1.2250736823450003e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.2250736823450003e-16, nan], 'true,true,true': [-1.2250736823450003e-16, nan]}, {'': [0.0378756149402803, 6.111319401606367e-17], 'true': [2.4501473646900006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.01626384593324757, -4.3615904538845435e-17], 'true': [-3.3689526264487507e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.014520006238641608, 3.2468786569226275e-17], 'true': [0.014520006238641608, nan], 'true,true': [-1.5313421029312505e-16, 1.1564823173178713e-18], 'true,true,false': [1.1564823173178713e-18, nan]}, {'': [0.006991557995307807, 3.1867512743870234e-17], 'true': [0.006991557995307807, nan]}, {'': [0.0016915511963326857, 3.8575545770874085e-17], 'true': [0.0016915511963326857, nan], 'true,true': [0.0016915511963326857, nan]}, {'': [0.003037546782192642, -7.401486830834377e-18], 'true': [8.80521709185469e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.002323187924516179, 2.688821387764051e-17], 'true': [0.002323187924516179, nan], 'true,true': [1.914177628664063e-17, 0.0], 'false': [5.782411586589357e-19, 2.7533531010703882e-17], 'true,true,true': [1.914177628664063e-17, nan], 'true,true,false': [0.0, nan]}, {'': [0.00094641680837703, -1.880956364034356e-17], 'true': [0.00094641680837703, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(E, A), movie(E, D).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839133;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.1123163781936062;  // std dev = 8.43e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.10159632948783638;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601496;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.30004169099267897;  // std dev = 0.090, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926086;  // std dev = 6.91e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25775912377774535;  // std dev = 0.014, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12156431949492974;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.08518475138839682;  // std dev = 5.87e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21158413398951587;  // std dev = 0.012, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10950533259548284;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.0787767547310916;  // std dev = 5.87e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1784354014471604;  // std dev = 0.011, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09906888974620393;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.07324622576333707;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.15375910246379684;  // std dev = 0.010, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09019098207858521;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420264;  // std dev = 5.27e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1332236168672316;  // std dev = 1.05e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.1356286526312941;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.08385260438985931;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else return -0.06503886763446153;  // std dev = 0.002, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066796
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.013 seconds
Total inference time: 1.322 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064294
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.906 seconds
Refined model CLL: -0.064294


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066796
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.919 seconds
Total inference time: 1.322 seconds
AUC ROC: 1.0
Total revision time: 3.919
Best scored revision CLL: -0.064294


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:00:39
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066796, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.919, 'Inference time': 1.322, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.071621, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.053, 'Inference time': 1.872}}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;false;true
0;true,true,false;ta(F, A, G).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,false,false;ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, F).;true;true
1;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
1;true,false,false;publication(J, B), publication(K, A).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;publication(D, B), publication(D, A).;true;true
2;true,true;tempadvisedby(E, B).;true;true
2;true,true,true;ta(F, E, G).;false;false
2;true,true,false;ta(H, A, I).;false;false
2;true,false;publication(J, A).;true;true
2;true,false,true;ta(K, A, L), publication(M, B).;false;false
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B), ta(G, F, E).;false;false
3;true,false;tempadvisedby(H, B), publication(I, H).;true;true
3;true,false,true;publication(J, A).;false;false
3;true,false,false;publication(K, A).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, A), publication(D, B).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;tempadvisedby(E, B).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;projectmember(G, B).;true;true
4;true,false,true;publication(H, A).;false;false
4;true,false,false;tempadvisedby(I, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D).;true;true
5;true,true;tempadvisedby(E, B), ta(F, E, D).;false;true
5;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
5;true,false;publication(I, B).;true;true
5;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
5;true,false,false;publication(L, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, G, E), publication(C, G).;true;true
6;true,true,true;ta(D, G, H).;false;false
6;true,true,false;publication(C, I), ta(J, I, K).;false;false
6;true,false;publication(L, B), publication(L, A).;true;true
6;true,false,true;tempadvisedby(M, B).;false;false
6;true,false,false;projectmember(N, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;false;true
7;true,false;tempadvisedby(D, B), publication(E, D).;true;true
7;true,false,true;publication(E, B).;false;false
7;true,false,false;publication(F, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), tempadvisedby(E, D).;true;true
8;true,true;publication(F, A), publication(F, D).;true;true
8;true,true,true;ta(G, E, H), publication(I, B).;false;false
8;true,true,false;publication(J, B).;false;false
8;true,false;publication(K, A).;false;true
8;true,false,false;publication(L, B).;false;false
8;false;professor(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true;tempadvisedby(F, B).;true;true
9;true,true,true;ta(G, F, H).;false;false
9;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
9;true,false;publication(L, B), publication(L, A).;false;true
9;true,false,false;publication(M, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048766;  // std dev = 6.14e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048782;  // std dev = 9.88e-08, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, H) )
%   | | | then return -0.12544463852839152;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839186;  // std dev = 0.000, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462834;  // std dev = 4.21e-08, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360638;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.024839217947471293;  // std dev = 4.357, 374.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=49 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.45714791564822443;  // std dev = 0.064, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.1052556214540538;  // std dev = 0.032, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10986361874484628;  // std dev = 0.000, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.34945910068401664;  // std dev = 0.061, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else if ( movie(C, E), director(E) )
%   | | | then return -0.09672746071018001;  // std dev = 0.031, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09957116306443911;  // std dev = 0.000, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then return 0.17969594616544257;  // std dev = 2.596, 242.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=178 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09099304228725909;  // std dev = 0.000, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.16600631318049308;  // std dev = 0.150, 228.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08374158529275146;  // std dev = 0.000, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21308612083831446;  // std dev = 0.616, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.1192211674967711;  // std dev = 0.031, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07753611982904521;  // std dev = 6.83e-08, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, D) )
%   | | then if ( movie(F, B) )
%   | | | then return 0.1058970377131099;  // std dev = 1.275, 159.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=129 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, B) )
%   | | | then return -0.10385429851889777;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.06825951652038452;  // std dev = 1.721, 104.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=49 */
%   | else return -0.07216890375906918;  // std dev = 0.000, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.09191367937132104;  // std dev = 0.129, 243.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=178 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842235225445424;  // std dev = 0.051, 330.000 (wgt'ed) examples reached here.  /* #neg=330 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069618
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.548 seconds
Total inference time: 1.863 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081483
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.082 seconds
Parameter learned model CLL: -0.081483


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [1.09e-06, 0, 178], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [6.14e-08, 60, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.88e-08, 336, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, H)'}, {'true,true,true,true': [0.0, 0, 178], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 45, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 291, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, B)'}, {'true,true': [4.21e-08, 0, 129], 'true,false,true,true': [0.0, 40, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.357, 325, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(F, A)'}, {'true,true': [0.064, 0, 178], 'true,false,true,true': [0.032, 61, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 283, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, E), director(E)'}, {'true,true,true': [0.061, 0, 178], 'true,true,false,true': [0.031, 70, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 311, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)'}, {'true,true': [2.596, 64, 178], 'true,false': [0.0, 0, 0], 'false': [0.0, 280, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.15, 50, 178], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 311, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.616, 0, 178], 'true,false,true,true': [0.031, 47, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.83e-08, 311, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, D)', 'true,true,true': 'movie(F, B)', 'true,true,false': 'movie(G, B)', 'false': 'director(B)'}, {'true,true,true,true': [1.275, 30, 129], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [1.39e-08, 15, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.721, 55, 49], 'false,false': [0.0, 254, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.129, 65, 178], 'true,false': [0.0, 0, 0], 'false': [0.051, 330, 0]}]]
[{'': [0.18854600663795507, 2.9077269692563625e-17], 'true': [6.706246045376226e-15, 6.29126380620922e-17], 'true,true': [6.706246045376226e-15, nan], 'true,false': [6.29126380620922e-17, nan], 'true,false,true': [6.29126380620922e-17, nan]}, {'': [0.11498785346268606, -6.409534987526676e-17], 'true': [-3.193450497798203e-15, -2.960594732333751e-17], 'true,false': [-2.960594732333751e-17, nan], 'true,false,true': [-2.960594732333751e-17, nan], 'true,true': [-3.193450497798203e-15, nan], 'true,true,true': [-3.193450497798203e-15, nan]}, {'': [0.0805409390934815, 0.050754743031358844], 'true': [1.7625866313428842e-15, -5.551115123125783e-18], 'true,false': [-5.551115123125783e-18, nan], 'true,false,true': [-5.551115123125783e-18, nan]}, {'': [0.06320867340500388, 0.0], 'true': [0.004135582653309367, 1.686200746655925e-05], 'true,false': [1.686200746655925e-05, nan], 'true,false,true': [1.686200746655925e-05, nan]}, {'': [0.04296752105216541, -1.9991154141160376e-17], 'true': [0.04296752105216541, nan], 'true,true': [0.00366667012789251, 1.414930643523731e-05], 'true,true,false': [1.414930643523731e-05, nan]}, {'': [0.027841375695587013, -1.4274296030894868e-17], 'true': [0.027841375695587013, nan]}, {'': [0.02244008538860631, -5.4261704097435304e-17], 'true': [0.02244008538860631, nan], 'true,true': [0.02244008538860631, nan]}, {'': [0.019939683435712806, 1.4993365605870282e-17], 'true': [0.0021320159071366394, 2.056442618335998e-05], 'true,false': [2.056442618335998e-05, nan], 'true,false,true': [2.056442618335998e-05, nan]}, {'': [0.012815277889407744, 0.012334288295257224], 'true': [0.012815277889407744, nan], 'true,true': [0.010231540244444644, 1.295260195396016e-17], 'false': [0.02846703036495888, -2.9722506171067186e-17], 'true,true,true': [0.010231540244444644, nan], 'true,true,false': [1.295260195396016e-17, nan]}, {'': [0.016634737180162597, 7.938982747643459e-06], 'true': [0.016634737180162597, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(E, A), movie(E, D).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.50e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.14185106490048835;  // std dev = 0.000, 267.000 (wgt'ed) examples reached here.  /* #neg=267 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.12544463852839186;  // std dev = 0.000, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462834;  // std dev = 4.77e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.11231637819360642;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 2.02e-07, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.11231637819360639;  // std dev = 7.45e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.11231637819360676;  // std dev = 0.000, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783617;  // std dev = 4.71e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.10159632948783656;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2244887063805461;  // std dev = 0.175, 116.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=89 */
%   | | else return 0.2164925723661813;  // std dev = 0.180, 119.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=89 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0926912761892605;  // std dev = 8.43e-08, 263.000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.27468333653840504;  // std dev = 0.011, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11291242905460984;  // std dev = 0.003, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.08518475138839678;  // std dev = 9.88e-08, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22345024865972857;  // std dev = 0.009, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1021568522827022;  // std dev = 0.003, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.07877675473109146;  // std dev = 5.77e-08, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.187076164548665;  // std dev = 0.008, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09314340678964582;  // std dev = 0.003, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.07324622576333688;  // std dev = 8.30e-08, 269.000 (wgt'ed) examples reached here.  /* #neg=269 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.16041911213152218;  // std dev = 0.006, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.08562023975459475;  // std dev = 0.002, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then if ( director(A) )
%   | | | then return -0.06842697784420268;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.15988877785833125;  // std dev = 0.003, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.07731173649231822;  // std dev = 0.059, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1398579359732648;  // std dev = 0.006, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07932926732492548;  // std dev = 0.002, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.06415576339502004;  // std dev = 0.002, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064258
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.571 seconds
Total inference time: 1.276 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067947
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.972 seconds
Refined model CLL: -0.067947


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064258
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.173 seconds
Total inference time: 1.276 seconds
AUC ROC: 1.0
Total revision time: 5.173
Best scored revision CLL: -0.067947


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:00:48
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064258, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.173, 'Inference time': 1.276, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069618, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.548, 'Inference time': 1.863}}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;false;true
0;true,true,false;ta(F, A, G).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,false,false;ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, F).;true;true
1;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
1;true,false,false;publication(J, B), publication(K, A).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;publication(D, B), publication(D, A).;true;true
2;true,true;tempadvisedby(E, B).;true;true
2;true,true,true;ta(F, E, G).;false;false
2;true,true,false;ta(H, A, I).;false;false
2;true,false;publication(J, A).;true;true
2;true,false,true;ta(K, A, L), publication(M, B).;false;false
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B), ta(G, F, E).;false;false
3;true,false;tempadvisedby(H, B), publication(I, H).;true;true
3;true,false,true;publication(J, A).;false;false
3;true,false,false;publication(K, A).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, A), publication(D, B).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;tempadvisedby(E, B).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;projectmember(G, B).;true;true
4;true,false,true;publication(H, A).;false;false
4;true,false,false;tempadvisedby(I, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D).;true;true
5;true,true;tempadvisedby(E, B), ta(F, E, D).;false;true
5;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
5;true,false;publication(I, B).;true;true
5;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
5;true,false,false;publication(L, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, G, E), publication(C, G).;true;true
6;true,true,true;ta(D, G, H).;false;false
6;true,true,false;publication(C, I), ta(J, I, K).;false;false
6;true,false;publication(L, B), publication(L, A).;true;true
6;true,false,true;tempadvisedby(M, B).;false;false
6;true,false,false;projectmember(N, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;false;true
7;true,false;tempadvisedby(D, B), publication(E, D).;true;true
7;true,false,true;publication(E, B).;false;false
7;true,false,false;publication(F, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), tempadvisedby(E, D).;true;true
8;true,true;publication(F, A), publication(F, D).;true;true
8;true,true,true;ta(G, E, H), publication(I, B).;false;false
8;true,true,false;publication(J, B).;false;false
8;true,false;publication(K, A).;false;true
8;true,false,false;publication(L, B).;false;false
8;false;professor(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true;tempadvisedby(F, B).;true;true
9;true,true,true;ta(G, F, H).;false;false
9;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
9;true,false;publication(L, B), publication(L, A).;false;true
9;true,false,false;publication(M, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7.30e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839144;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360622;  // std dev = 6.83e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783617;  // std dev = 5.77e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.32071184716014944;  // std dev = 3.73e-09, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(C, E), director(E) )
%   | | | then return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then return 0.2273879981647642;  // std dev = 0.652, 49.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 2.58e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1714502408818837;  // std dev = 0.109, 52.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109162;  // std dev = 4.59e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18693464128528722;  // std dev = 6.32e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.12184627566847121;  // std dev = 3.73e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, D) )
%   | | then if ( movie(F, B) )
%   | | | then return 0.1238793164755354;  // std dev = 0.663, 52.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return -0.06842697784420275;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.06842697784420265;  // std dev = 4.59e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.1175701666517935;  // std dev = 0.080, 50.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070562
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.849 seconds
Total inference time: 1.913 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069068
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.777 seconds
Parameter learned model CLL: -0.069068


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [2.23e-07, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.3e-08, 75, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, H)'}, {'true,true,true,true': [0.0, 0, 45], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 85, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.83e-08, 83, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(F, A)'}, {'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.77e-08, 83, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, E), director(E)'}, {'true,true,true': [3.73e-09, 0, 45], 'true,true,false,true': [0.0, 4, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 78, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)'}, {'true,true': [0.652, 4, 45], 'true,false': [0.0, 0, 0], 'false': [2.58e-08, 77, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.109, 7, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.59e-08, 84, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [6.32e-08, 0, 45], 'true,false,true,true': [3.73e-09, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 78, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, D)', 'true,true,true': 'movie(F, B)', 'false': 'director(B)'}, {'true,true,true,true': [0.663, 7, 45], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false': [4.59e-08, 96, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.08, 5, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 91, 0]}]]
[{'': [0.09000000000000079, 7.105427357601002e-17], 'true': [1.105288700071267e-15, -2.7755575615628915e-18], 'true,true': [1.105288700071267e-15, nan], 'true,false': [-2.7755575615628915e-18, nan], 'true,false,true': [-2.7755575615628915e-18, nan]}, {'': [0.05351918877289897, -2.0898315757650005e-17], 'true': [-9.473903143468002e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-9.473903143468002e-16, nan], 'true,true,true': [-9.473903143468002e-16, nan]}, {'': [0.05193310189730332, 5.617996028223683e-17], 'true': [-3.947459643111668e-17, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan], 'true,false,true': [-1.982541115402065e-18, nan]}, {'': [0.027973194025505906, 4.01285430587406e-17], 'true': [-4.144832625267251e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.012812322212040247, 0.0], 'true': [0.012812322212040247, nan], 'true,true': [1.973729821555834e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.008684597667842037, 8.651088503572648e-18], 'true': [0.008684597667842037, nan]}, {'': [0.011858865420806126, 2.5112187461759493e-17], 'true': [0.011858865420806126, nan], 'true,true': [0.011858865420806126, nan]}, {'': [0.009897472803612924, -4.270088556250602e-18], 'true': [8.881784197001253e-17, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan], 'true,false,true': [2.3129646346357427e-18, nan]}, {'': [0.00846505083490939, 2.2891196384023845e-17], 'true': [0.00846505083490939, nan], 'true,true': [0.00846505083490939, nan], 'true,true,true': [0.00846505083490939, nan], 'false': [0.0, 2.1973164029039556e-17]}, {'': [0.006380502578657341, -1.2810265668751807e-17], 'true': [0.006380502578657341, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1254446385283914;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.11231637819360621;  // std dev = 7.45e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10159632948783627;  // std dev = 4.21e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.28626158688103215;  // std dev = 0.114, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.2977450069740712;  // std dev = 0.095, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926101;  // std dev = 3.33e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.26177487340535865;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.2384222440019507;  // std dev = 0.087, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   else return -0.08518475138839682;  // std dev = 5.16e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21592668694011666;  // std dev = 0.006, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1486737448760352;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109164;  // std dev = 4.71e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1816082280388141;  // std dev = 0.005, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13136369374888734;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07324622576333707;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15615800033100335;  // std dev = 0.004, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11741361250786557;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420267;  // std dev = 3.87e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13561107759895022;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.13700842190106946;  // std dev = 2.63e-09, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.1051367916635339;  // std dev = 0.000322, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(A) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( female(B) )
%   | | then return -0.06419184008202622;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06466241094449028;  // std dev = 0.001, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068068
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.058 seconds
Total inference time: 1.389 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066213
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.665 seconds
Refined model CLL: -0.066213


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068068
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.349 seconds
Total inference time: 1.389 seconds
AUC ROC: 1.0
Total revision time: 3.349
Best scored revision CLL: -0.066213


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:00:55
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068068, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.349, 'Inference time': 1.389, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070562, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.849, 'Inference time': 1.913}}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;false;true
0;true,true,false;ta(F, A, G).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,false,false;ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, F).;true;true
1;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
1;true,false,false;publication(J, B), publication(K, A).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;publication(D, B), publication(D, A).;true;true
2;true,true;tempadvisedby(E, B).;true;true
2;true,true,true;ta(F, E, G).;false;false
2;true,true,false;ta(H, A, I).;false;false
2;true,false;publication(J, A).;true;true
2;true,false,true;ta(K, A, L), publication(M, B).;false;false
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B), ta(G, F, E).;false;false
3;true,false;tempadvisedby(H, B), publication(I, H).;true;true
3;true,false,true;publication(J, A).;false;false
3;true,false,false;publication(K, A).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, A), publication(D, B).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;tempadvisedby(E, B).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;projectmember(G, B).;true;true
4;true,false,true;publication(H, A).;false;false
4;true,false,false;tempadvisedby(I, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D).;true;true
5;true,true;tempadvisedby(E, B), ta(F, E, D).;false;true
5;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
5;true,false;publication(I, B).;true;true
5;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
5;true,false,false;publication(L, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, G, E), publication(C, G).;true;true
6;true,true,true;ta(D, G, H).;false;false
6;true,true,false;publication(C, I), ta(J, I, K).;false;false
6;true,false;publication(L, B), publication(L, A).;true;true
6;true,false,true;tempadvisedby(M, B).;false;false
6;true,false,false;projectmember(N, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;false;true
7;true,false;tempadvisedby(D, B), publication(E, D).;true;true
7;true,false,true;publication(E, B).;false;false
7;true,false,false;publication(F, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), tempadvisedby(E, D).;true;true
8;true,true;publication(F, A), publication(F, D).;true;true
8;true,true,true;ta(G, E, H), publication(I, B).;false;false
8;true,true,false;publication(J, B).;false;false
8;true,false;publication(K, A).;false;true
8;true,false,false;publication(L, B).;false;false
8;false;professor(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true;tempadvisedby(F, B).;true;true
9;true,true,true;ta(G, F, H).;false;false
9;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
9;true,false;publication(L, B), publication(L, A).;false;true
9;true,false,false;publication(M, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 7.88e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283914;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462843;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04290283768252176;  // std dev = 1.999, 96.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4504958782102694;  // std dev = 0.062, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.11373247861711673;  // std dev = 0.008, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10810952157060714;  // std dev = 2.36e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.34473795298620724;  // std dev = 0.058, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(C, E), director(E) )
%   | | | then return -0.10146714851089289;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09811842408842784;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then return 0.256657286917112;  // std dev = 0.624, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08977163295659533;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.19700586930501135;  // std dev = 0.105, 49.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08270127831952571;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.19311662206152158;  // std dev = 0.283, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.138377453221592;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07664004665295045;  // std dev = 2.47e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, D) )
%   | | then if ( movie(F, B) )
%   | | | then return 0.13045591590294583;  // std dev = 0.368, 37.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.2022315770693231;  // std dev = 0.350, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return -0.071389442885848;  // std dev = 2.58e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.132973672572586;  // std dev = 0.066, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06718739827101254;  // std dev = 0.027, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075455
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.821 seconds
Total inference time: 1.851 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070756
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.792 seconds
Parameter learned model CLL: -0.070756


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [2.23e-07, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.88e-08, 86, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)'}, {'true,true,true,true': [0.0, 0, 45], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 93, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 35], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.999, 86, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(F, A)'}, {'true,true': [0.062, 0, 45], 'true,false,true,true': [0.008, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.36e-08, 71, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, E), director(E)'}, {'true,true,true': [0.058, 0, 45], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 98, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)'}, {'true,true': [0.624, 2, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 72, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.105, 4, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 85, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.283, 0, 45], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.47e-08, 85, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, D)', 'true,true,true': 'movie(F, B)', 'false': 'director(B)'}, {'true,true,true,true': [0.368, 2, 35], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.35, 1, 10], 'false,false': [2.58e-08, 81, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.066, 2, 45], 'true,false': [0.0, 0, 0], 'false': [0.027, 99, 0]}]]
[{'': [0.07496876301541104, 7.229359230117299e-17], 'true': [1.105288700071267e-15, 0.0], 'true,true': [1.105288700071267e-15, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [-9.473903143468002e-16, -1.4325458382260084e-17], 'true': [-9.473903143468002e-16, nan], 'true,true': [-9.473903143468002e-16, nan], 'true,true,true': [-9.473903143468002e-16, nan]}, {'': [0.05069571939869708, 0.04162109127788246], 'true': [-2.0301221021717148e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.03640775044374911, 7.818472004402511e-18], 'true': [0.0038074110232543825, 1.0026702047333247e-05], 'true,false': [1.0026702047333247e-05, nan], 'true,false,true': [1.0026702047333247e-05, nan]}, {'': [0.011367272248801583, -2.2657612747452175e-17], 'true': [0.011367272248801583, nan], 'true,true': [0.0034001867912148024, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.008274594813991142, -1.696174065399545e-17], 'true': [0.008274594813991142, nan]}, {'': [0.011000151250122325, -1.959217102279688e-17], 'true': [0.011000151250122325, nan], 'true,true': [0.011000151250122325, nan]}, {'': [0.009878183777531283, 7.18379604169219e-18], 'true': [0.0017857692967108523, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.003661846059464063, 0.009215858774600289], 'false': [0.011161293009971334, 8.22387425648264e-18], 'true': [0.003661846059464063, nan], 'true,true': [0.003661846059464063, nan], 'true,true,true': [0.003661846059464063, nan]}, {'': [0.004340710009466841, 7.307896453874264e-06], 'true': [0.004340710009466841, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048763;  // std dev = 8.56e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.70110562849923;  // std dev = 0.123, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   else return -0.12544463852839147;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5598973421649127;  // std dev = 4.21e-08, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.22430625838981832;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.11231637819360622;  // std dev = 6.83e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( female(A) )
%   | | then return 0.4478682563713797;  // std dev = 0.274, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.40305662205396653;  // std dev = 0.701, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42798559209649634;  // std dev = 0.091, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.21865972731369965;  // std dev = 0.107, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783615;  // std dev = 5.87e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.3278882863975771;  // std dev = 0.082, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.26014330649244527;  // std dev = 0.010, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.2600629216940622;  // std dev = 0.012, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.24842914566151786;  // std dev = 0.107, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08568667178861386;  // std dev = 0.049, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.21328267919866906;  // std dev = 0.008, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.21323678476177008;  // std dev = 0.010, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.21672323820370026;  // std dev = 0.057, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.078740337577047;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.17968997611522433;  // std dev = 0.007, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.17966326484271022;  // std dev = 0.009, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.1393168595182574;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07321463311347029;  // std dev = 4.59e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.13558871215116478;  // std dev = 0.063, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0.1364092086954456;  // std dev = 0.061, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.16574167980824672;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.09590719249964015;  // std dev = 0.341, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.06839932351099323;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13682678093166548;  // std dev = 0.004, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.13866869865028567;  // std dev = 0.009, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.1675651918174704;  // std dev = 0.070, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.0641674400817468;  // std dev = 1.05e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072984
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.136 seconds
Total inference time: 1.433 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068212
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.732 seconds
Refined model CLL: -0.068212


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072984
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.481 seconds
Total inference time: 1.433 seconds
AUC ROC: 1.0
Total revision time: 3.481
Best scored revision CLL: -0.068212


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:01:03
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072984, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.481, 'Inference time': 1.433, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075455, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.821, 'Inference time': 1.851}}


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;false;true
0;true,true,false;ta(F, A, G).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,false,false;ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, F).;true;true
1;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
1;true,false,false;publication(J, B), publication(K, A).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;publication(D, B), publication(D, A).;true;true
2;true,true;tempadvisedby(E, B).;true;true
2;true,true,true;ta(F, E, G).;false;false
2;true,true,false;ta(H, A, I).;false;false
2;true,false;publication(J, A).;true;true
2;true,false,true;ta(K, A, L), publication(M, B).;false;false
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B), ta(G, F, E).;false;false
3;true,false;tempadvisedby(H, B), publication(I, H).;true;true
3;true,false,true;publication(J, A).;false;false
3;true,false,false;publication(K, A).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, A), publication(D, B).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;tempadvisedby(E, B).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;projectmember(G, B).;true;true
4;true,false,true;publication(H, A).;false;false
4;true,false,false;tempadvisedby(I, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D).;true;true
5;true,true;tempadvisedby(E, B), ta(F, E, D).;false;true
5;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
5;true,false;publication(I, B).;true;true
5;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
5;true,false,false;publication(L, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, G, E), publication(C, G).;true;true
6;true,true,true;ta(D, G, H).;false;false
6;true,true,false;publication(C, I), ta(J, I, K).;false;false
6;true,false;publication(L, B), publication(L, A).;true;true
6;true,false,true;tempadvisedby(M, B).;false;false
6;true,false,false;projectmember(N, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;false;true
7;true,false;tempadvisedby(D, B), publication(E, D).;true;true
7;true,false,true;publication(E, B).;false;false
7;true,false,false;publication(F, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), tempadvisedby(E, D).;true;true
8;true,true;publication(F, A), publication(F, D).;true;true
8;true,true,true;ta(G, E, H), publication(I, B).;false;false
8;true,true,false;publication(J, B).;false;false
8;true,false;publication(K, A).;false;true
8;true,false,false;publication(L, B).;false;false
8;false;professor(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true;tempadvisedby(F, B).;true;true
9;true,true,true;ta(G, F, H).;false;false
9;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
9;true,false;publication(L, B), publication(L, A).;false;true
9;true,false,false;publication(M, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462837;  // std dev = 1.49e-08, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 8.43e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 3.94e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( movie(C, E), director(E) )
%   | | | then return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926087;  // std dev = 6.83e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then return 0.2272741283106465;  // std dev = 0.729, 61.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 6.14e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20341724274034045;  // std dev = 0.058, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0787767547310916;  // std dev = 5.67e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1821414843286515;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.1252958124967502;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 4.59e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, D) )
%   | | then if ( movie(F, B) )
%   | | | then return 0.11934790730183469;  // std dev = 0.748, 65.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=56 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return -0.06842697784420278;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.06842697784420265;  // std dev = 5.37e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.12790861951241891;  // std dev = 0.058, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 3.80e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071818
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.921 seconds
Total inference time: 1.876 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066401
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.888 seconds
Parameter learned model CLL: -0.066401


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [0.0, 0, 56], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.69e-08, 95, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, H)'}, {'true,true,true,true': [0.0, 0, 56], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 120, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, B)'}, {'true,true': [1.49e-08, 0, 56], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.43e-08, 113, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(F, A)'}, {'true,true': [0.0, 0, 56], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.94e-08, 99, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, E), director(E)'}, {'true,true,true': [0.0, 0, 56], 'true,true,false,true': [0.0, 5, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.83e-08, 114, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)'}, {'true,true': [0.729, 5, 56], 'true,false': [0.0, 0, 0], 'false': [6.14e-08, 115, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.058, 2, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.67e-08, 98, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.0, 0, 56], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.59e-08, 104, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, D)', 'true,true,true': 'movie(F, B)', 'false': 'director(B)'}, {'true,true,true,true': [0.748, 9, 56], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false': [5.37e-08, 111, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.058, 3, 56], 'true,false': [0.0, 0, 0], 'false': [3.8e-08, 128, 0]}]]
[{'': [0.03329369797859664, 7.946859544685331e-17], 'true': [-1.2688263138573217e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.2688263138573217e-16, nan]}, {'': [0.05371895283263886, -1.8503717077085942e-18], 'true': [-1.9032394707859825e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.9032394707859825e-16, nan], 'true,true,true': [-1.9032394707859825e-16, nan]}, {'': [0.014842341924197077, 6.287988812036285e-17], 'true': [1.9032394707859825e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.016767339707732778, 1.570012358055777e-17], 'true': [-3.489272363107635e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.012860145087506835, 4.0902953538821554e-17], 'true': [0.012860145087506835, nan], 'true,true': [-1.2688263138573217e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.00871701352703401, 3.2823985075874195e-17], 'true': [0.00871701352703401, nan]}, {'': [0.0033894128968666995, 3.285353848380565e-17], 'true': [0.0033894128968666995, nan], 'true,true': [0.0033894128968666995, nan]}, {'': [0.0045616122288204344, 2.028292064219036e-17], 'true': [-5.15460690004537e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.0086163041580804, 2.676430505792788e-17], 'true': [0.0086163041580804, nan], 'true,true': [0.0086163041580804, nan], 'true,true,true': [0.0086163041580804, nan], 'false': [0.0, 2.600522400022889e-17]}, {'': [0.0034169747750718554, 1.1275702593849246e-17], 'true': [0.0034169747750718554, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1254446385283913;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360625;  // std dev = 6.99e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783635;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926092;  // std dev = 5.77e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.0851847513883968;  // std dev = 6.32e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109155;  // std dev = 6.75e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.0732462257633371;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1527438580936708;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420265;  // std dev = 4.59e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801087;  // std dev = 5.27e-09, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.13400703000801084;  // std dev = 5.59e-09, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06419184008202626;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065203
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.947 seconds
Total inference time: 1.304 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063432
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.861 seconds
Refined model CLL: -0.063432


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065203
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.617 seconds
Total inference time: 1.304 seconds
AUC ROC: 1.0
Total revision time: 3.617
Best scored revision CLL: -0.063432


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:01:10
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065203, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.617, 'Inference time': 1.304, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.071818, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.921, 'Inference time': 1.876}}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;false;true
0;true,true,false;ta(F, A, G).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,false,false;ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, F).;true;true
1;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
1;true,false,false;publication(J, B), publication(K, A).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;publication(D, B), publication(D, A).;true;true
2;true,true;tempadvisedby(E, B).;true;true
2;true,true,true;ta(F, E, G).;false;false
2;true,true,false;ta(H, A, I).;false;false
2;true,false;publication(J, A).;true;true
2;true,false,true;ta(K, A, L), publication(M, B).;false;false
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B), ta(G, F, E).;false;false
3;true,false;tempadvisedby(H, B), publication(I, H).;true;true
3;true,false,true;publication(J, A).;false;false
3;true,false,false;publication(K, A).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, A), publication(D, B).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;tempadvisedby(E, B).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;projectmember(G, B).;true;true
4;true,false,true;publication(H, A).;false;false
4;true,false,false;tempadvisedby(I, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D).;true;true
5;true,true;tempadvisedby(E, B), ta(F, E, D).;false;true
5;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
5;true,false;publication(I, B).;true;true
5;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
5;true,false,false;publication(L, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, G, E), publication(C, G).;true;true
6;true,true,true;ta(D, G, H).;false;false
6;true,true,false;publication(C, I), ta(J, I, K).;false;false
6;true,false;publication(L, B), publication(L, A).;true;true
6;true,false,true;tempadvisedby(M, B).;false;false
6;true,false,false;projectmember(N, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;false;true
7;true,false;tempadvisedby(D, B), publication(E, D).;true;true
7;true,false,true;publication(E, B).;false;false
7;true,false,false;publication(F, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), tempadvisedby(E, D).;true;true
8;true,true;publication(F, A), publication(F, D).;true;true
8;true,true,true;ta(G, E, H), publication(I, B).;false;false
8;true,true,false;publication(J, B).;false;false
8;true,false;publication(K, A).;false;true
8;true,false,false;publication(L, B).;false;false
8;false;professor(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true;tempadvisedby(F, B).;true;true
9;true,true,true;ta(G, F, H).;false;false
9;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
9;true,false;publication(L, B), publication(L, A).;false;true
9;true,false,false;publication(M, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 4.21e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283911;  // std dev = 7.30e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462838;  // std dev = 1.29e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360624;  // std dev = 7.60e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783638;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( movie(C, E), director(E) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926093;  // std dev = 5.67e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 6.75e-08, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.17462267003137746;  // std dev = 0.101, 65.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109158;  // std dev = 6.23e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18227506418009892;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.13570702149807504;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, D) )
%   | | then if ( movie(F, B) )
%   | | | then return 0.14742031369745762;  // std dev = 0.385, 60.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, B) )
%   | | | then return -0.12056183074476631;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return -0.06842697784420275;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.06842697784420264;  // std dev = 5.48e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.10246829390082698;  // std dev = 0.091, 67.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071876
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.912 seconds
Total inference time: 1.783 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067399
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.931 seconds
Parameter learned model CLL: -0.067399


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [0.0, 0, 58], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.21e-08, 120, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, H)'}, {'true,true,true,true': [0.0, 0, 58], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 8, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.3e-08, 92, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)'}, {'true,true': [1.29e-08, 0, 58], 'true,false': [0.0, 0, 0], 'false': [7.6e-08, 100, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(F, A)'}, {'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 124, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, E), director(E)'}, {'true,true,true': [0.0, 0, 58], 'true,true,false,true': [0.0, 5, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.67e-08, 106, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)'}, {'true,true': [0.0, 0, 58], 'true,false': [0.0, 0, 0], 'false': [6.75e-08, 130, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.101, 7, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.23e-08, 111, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 8, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 105, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, D)', 'true,true,true': 'movie(F, B)', 'true,true,false': 'movie(G, B)', 'false': 'director(B)'}, {'true,true,true,true': [0.385, 2, 58], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false': [5.48e-08, 114, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.091, 9, 58], 'true,false': [0.0, 0, 0], 'false': [0.0, 99, 0]}]]
[{'': [0.03222222222222181, 1.4802973661668754e-17], 'true': [-3.675221047035001e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-3.675221047035001e-16, nan]}, {'': [0.07604300775570302, 5.792467954566034e-17], 'true': [-1.2250736823450003e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.2250736823450003e-16, nan], 'true,true,true': [-1.2250736823450003e-16, nan]}, {'': [2.4501473646900006e-16, 5.773159728050814e-17], 'true': [2.4501473646900006e-16, nan]}, {'': [0.023850216448737638, -2.865091676452017e-17], 'true': [-3.3689526264487507e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.013030944030860685, 3.0374026145405226e-17], 'true': [0.013030944030860685, nan], 'true,true': [-1.5313421029312505e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [-3.062684205862501e-17, 3.5014726161254936e-17], 'true': [-3.062684205862501e-17, nan]}, {'': [0.010228477557848111, 3.500703230800043e-17], 'true': [0.010228477557848111, nan], 'true,true': [0.010228477557848111, nan]}, {'': [0.010770488879908183, -7.401486830834377e-18], 'true': [0.0, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.0035937495537462266, 2.6066105795547154e-17], 'true': [0.0035937495537462266, nan], 'true,true': [0.0024763596462017866, 0.0], 'true,true,true': [0.0024763596462017866, nan], 'false': [0.0, 2.6294755846385285e-17], 'true,true,false': [0.0, nan]}, {'': [0.008231620115017844, -1.45786861819465e-17], 'true': [0.008231620115017844, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(E, A), movie(E, D).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1254446385283914;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.11231637819360618;  // std dev = 8.43e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10159632948783628;  // std dev = 2.98e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.301025984143511;  // std dev = 0.088, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.26433869397613907;  // std dev = 0.142, 44.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0926912761892608;  // std dev = 7.60e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2635846222504093;  // std dev = 0.026, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12001394725589769;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.0851847513883968;  // std dev = 6.14e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21568528819417854;  // std dev = 0.022, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10656740419093134;  // std dev = 0.004, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07877675473109154;  // std dev = 7.45e-08, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18143357242480052;  // std dev = 0.020, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09672308134789948;  // std dev = 0.004, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07324622576333707;  // std dev = 4.59e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.1560270753521393;  // std dev = 0.017, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.08884483659643895;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420265;  // std dev = 5.11e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13374330965293751;  // std dev = 4.17e-09, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.13805115488902894;  // std dev = 3.23e-09, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.08098645173272088;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.06419184008202626;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.06419184008202626;  // std dev = 1.05e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( female(B) )
%   | | then return -0.06419184008202626;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0652506245225704;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066733
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.105 seconds
Total inference time: 1.607 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06425
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.883 seconds
Refined model CLL: -0.06425


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066733
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.831 seconds
Total inference time: 1.607 seconds
AUC ROC: 1.0
Total revision time: 3.831
Best scored revision CLL: -0.06425


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:01:18
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066733, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.831, 'Inference time': 1.607, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.071876, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.912, 'Inference time': 1.783}}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;false;true
0;true,true,false;ta(F, A, G).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,false,false;ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, F).;true;true
1;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
1;true,false,false;publication(J, B), publication(K, A).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;publication(D, B), publication(D, A).;true;true
2;true,true;tempadvisedby(E, B).;true;true
2;true,true,true;ta(F, E, G).;false;false
2;true,true,false;ta(H, A, I).;false;false
2;true,false;publication(J, A).;true;true
2;true,false,true;ta(K, A, L), publication(M, B).;false;false
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B), ta(G, F, E).;false;false
3;true,false;tempadvisedby(H, B), publication(I, H).;true;true
3;true,false,true;publication(J, A).;false;false
3;true,false,false;publication(K, A).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, A), publication(D, B).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;tempadvisedby(E, B).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;projectmember(G, B).;true;true
4;true,false,true;publication(H, A).;false;false
4;true,false,false;tempadvisedby(I, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D).;true;true
5;true,true;tempadvisedby(E, B), ta(F, E, D).;false;true
5;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
5;true,false;publication(I, B).;true;true
5;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
5;true,false,false;publication(L, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, G, E), publication(C, G).;true;true
6;true,true,true;ta(D, G, H).;false;false
6;true,true,false;publication(C, I), ta(J, I, K).;false;false
6;true,false;publication(L, B), publication(L, A).;true;true
6;true,false,true;tempadvisedby(M, B).;false;false
6;true,false,false;projectmember(N, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;false;true
7;true,false;tempadvisedby(D, B), publication(E, D).;true;true
7;true,false,true;publication(E, B).;false;false
7;true,false,false;publication(F, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), tempadvisedby(E, D).;true;true
8;true,true;publication(F, A), publication(F, D).;true;true
8;true,true,true;ta(G, E, H), publication(I, B).;false;false
8;true,true,false;publication(J, B).;false;false
8;true,false;publication(K, A).;false;true
8;true,false,false;publication(L, B).;false;false
8;false;professor(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true;tempadvisedby(F, B).;true;true
9;true,true,true;ta(G, F, H).;false;false
9;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
9;true,false;publication(L, B), publication(L, A).;false;true
9;true,false,false;publication(M, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048766;  // std dev = 6.32e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048802;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, H) )
%   | | | then return -0.12544463852839144;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839186;  // std dev = 0.000, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462834;  // std dev = 4.21e-08, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.1123163781936064;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.018572945723536096;  // std dev = 4.333, 349.000 (wgt'ed) examples reached here.  /* #neg=300 #pos=49 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.45672302954974586;  // std dev = 0.064, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10650457679971519;  // std dev = 0.038, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11047791986171239;  // std dev = 1.58e-07, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.3491277335257908;  // std dev = 0.060, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else if ( movie(C, E), director(E) )
%   | | | then return -0.0969859443737989;  // std dev = 0.029, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1000790485060081;  // std dev = 7.88e-08, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then return 0.19345381156135286;  // std dev = 2.411, 230.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=178 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09141942278227007;  // std dev = 1.50e-07, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1594980451912486;  // std dev = 0.151, 232.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08410428135704608;  // std dev = 1.13e-07, 315.000 (wgt'ed) examples reached here.  /* #neg=315 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21166083873779196;  // std dev = 0.606, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.12059094193921435;  // std dev = 0.040, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07784818232598431;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, D) )
%   | | then if ( movie(F, B) )
%   | | | then return 0.11785616023383975;  // std dev = 1.098, 150.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=129 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, B) )
%   | | | then return -0.10426193551785545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.06638849581811243;  // std dev = 1.711, 105.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=49 */
%   | else return -0.07244009040181638;  // std dev = 1.02e-07, 262.000 (wgt'ed) examples reached here.  /* #neg=262 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.08307185386627736;  // std dev = 0.132, 252.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=178 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06878094082075414;  // std dev = 0.050, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069827
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.516 seconds
Total inference time: 1.847 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081645
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.037 seconds
Parameter learned model CLL: -0.081645


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [1.09e-06, 0, 178], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [6.32e-08, 63, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 299, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, H)'}, {'true,true,true,true': [0.0, 0, 178], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 34, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 298, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, B)'}, {'true,true': [4.21e-08, 0, 129], 'true,false,true,true': [0.0, 37, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.333, 300, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(F, A)'}, {'true,true': [0.064, 0, 178], 'true,false,true,true': [0.038, 76, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.58e-07, 306, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, E), director(E)'}, {'true,true,true': [0.06, 0, 178], 'true,true,false,true': [0.029, 52, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.88e-08, 310, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)'}, {'true,true': [2.411, 52, 178], 'true,false': [0.0, 0, 0], 'false': [1.5e-07, 305, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.151, 54, 178], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.13e-07, 315, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.606, 0, 178], 'true,false,true,true': [0.04, 64, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 299, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, D)', 'true,true,true': 'movie(F, B)', 'true,true,false': 'movie(G, B)', 'false': 'director(B)'}, {'true,true,true,true': [1.098, 21, 129], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 8, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.711, 56, 49], 'false,false': [1.02e-07, 262, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.132, 74, 178], 'true,false': [0.0, 0, 0], 'false': [0.05, 281, 0]}]]
[{'': [0.19307518809938418, -4.1586949417397165e-17], 'true': [6.706246045376226e-15, 6.344131569286608e-17], 'true,true': [6.706246045376226e-15, nan], 'true,false': [6.344131569286608e-17, nan], 'true,false,true': [6.344131569286608e-17, nan]}, {'': [0.09612943159129392, -6.55702189040361e-17], 'true': [-3.193450497798203e-15, -1.6326809185664067e-17], 'true,false': [-1.6326809185664067e-17, nan], 'true,false,true': [-1.6326809185664067e-17, nan], 'true,true': [-3.193450497798203e-15, nan], 'true,true,true': [-3.193450497798203e-15, nan]}, {'': [0.07721748546016323, 0.053803047742473006], 'true': [1.7625866313428842e-15, -9.00180830777154e-18], 'true,false': [-9.00180830777154e-18, nan], 'true,false,true': [-9.00180830777154e-18, nan]}, {'': [0.06935940554917569, 8.127122794641668e-17], 'true': [0.004047389763665709, 1.950215040326313e-05], 'true,false': [1.950215040326313e-05, nan], 'true,false,true': [1.950215040326313e-05, nan]}, {'': [0.03759985804568369, 2.0055641735164117e-17], 'true': [0.03759985804568369, nan], 'true,true': [0.003584099159987379, 1.6245036869524728e-05], 'true,true,false': [1.6245036869524728e-05, nan]}, {'': [0.025284036247294573, 7.425754000771539e-17], 'true': [0.025284036247294573, nan]}, {'': [0.022761891977972855, 4.0884403446513704e-17], 'true': [0.022761891977972855, nan], 'true,true': [0.022761891977972855, nan]}, {'': [0.022999064175219176, -3.1190212063047874e-17], 'true': [0.0020651558547406623, 2.462997327982823e-05], 'true,false': [2.462997327982823e-05, nan], 'true,false,true': [2.462997327982823e-05, nan]}, {'': [0.00999642046419225, 0.011917897422836091], 'false': [0.02789669398068496, 3.983242912777279e-17], 'true': [0.00999642046419225, nan], 'true,true': [0.008031514865639865, -1.734723475976807e-18], 'true,true,true': [0.008031514865639865, nan], 'true,true,false': [-1.734723475976807e-18, nan]}, {'': [0.01733612801696554, 8.743902756854506e-06], 'true': [0.01733612801696554, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(E, A), movie(E, D).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5.77e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.141851064900488;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.12544463852839177;  // std dev = 0.000, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462834;  // std dev = 4.77e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 2.02e-07, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.1123163781936064;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return -0.11231637819360683;  // std dev = 0.000, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783619;  // std dev = 4.21e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.10159632948783656;  // std dev = 0.000, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.20888969084432613;  // std dev = 0.184, 122.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=89 */
%   | | else return 0.22448870638054616;  // std dev = 0.175, 116.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=89 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926054;  // std dev = 1.38e-07, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2754433625226997;  // std dev = 0.021, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11263181877945096;  // std dev = 0.006, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.08518475138839678;  // std dev = 9.42e-08, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2239805896525041;  // std dev = 0.018, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1017858542949604;  // std dev = 0.005, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.07877675473109147;  // std dev = 4.47e-08, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18746047948896524;  // std dev = 0.016, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269858726228991;  // std dev = 0.005, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.07324622576333681;  // std dev = 1.11e-07, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.16027639646113928;  // std dev = 0.011, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.08532751242492495;  // std dev = 0.004, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.1613124799384131;  // std dev = 0.005, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.0684269778442027;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07692560279369892;  // std dev = 0.054, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return -0.0684269778442027;  // std dev = 0.000, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.14008107120668595;  // std dev = 0.012, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0792266036038327;  // std dev = 0.005, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.06416403682405084;  // std dev = 0.002, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064261
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.535 seconds
Total inference time: 1.322 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067927
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.94 seconds
Refined model CLL: -0.067927


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064261
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.0280000000000005 seconds
Total inference time: 1.322 seconds
AUC ROC: 1.0
Total revision time: 5.0280000000000005
Best scored revision CLL: -0.067927


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:01:27
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064261, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.0280000000000005, 'Inference time': 1.322, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069827, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.516, 'Inference time': 1.847}}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;false;true
0;true,true,false;ta(F, A, G).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,false,false;ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, F).;true;true
1;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
1;true,false,false;publication(J, B), publication(K, A).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;publication(D, B), publication(D, A).;true;true
2;true,true;tempadvisedby(E, B).;true;true
2;true,true,true;ta(F, E, G).;false;false
2;true,true,false;ta(H, A, I).;false;false
2;true,false;publication(J, A).;true;true
2;true,false,true;ta(K, A, L), publication(M, B).;false;false
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B), ta(G, F, E).;false;false
3;true,false;tempadvisedby(H, B), publication(I, H).;true;true
3;true,false,true;publication(J, A).;false;false
3;true,false,false;publication(K, A).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, A), publication(D, B).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;tempadvisedby(E, B).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;projectmember(G, B).;true;true
4;true,false,true;publication(H, A).;false;false
4;true,false,false;tempadvisedby(I, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D).;true;true
5;true,true;tempadvisedby(E, B), ta(F, E, D).;false;true
5;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
5;true,false;publication(I, B).;true;true
5;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
5;true,false,false;publication(L, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, G, E), publication(C, G).;true;true
6;true,true,true;ta(D, G, H).;false;false
6;true,true,false;publication(C, I), ta(J, I, K).;false;false
6;true,false;publication(L, B), publication(L, A).;true;true
6;true,false,true;tempadvisedby(M, B).;false;false
6;true,false,false;projectmember(N, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;false;true
7;true,false;tempadvisedby(D, B), publication(E, D).;true;true
7;true,false,true;publication(E, B).;false;false
7;true,false,false;publication(F, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), tempadvisedby(E, D).;true;true
8;true,true;publication(F, A), publication(F, D).;true;true
8;true,true,true;ta(G, E, H), publication(I, B).;false;false
8;true,true,false;publication(J, B).;false;false
8;true,false;publication(K, A).;false;true
8;true,false,false;publication(L, B).;false;false
8;false;professor(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true;tempadvisedby(F, B).;true;true
9;true,true,true;ta(G, F, H).;false;false
9;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
9;true,false;publication(L, B), publication(L, A).;false;true
9;true,false,false;publication(M, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7.45e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839147;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360624;  // std dev = 6.05e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10159632948783633;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783617;  // std dev = 5.77e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.32071184716014944;  // std dev = 3.73e-09, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(C, E), director(E) )
%   | | | then return -0.09269127618926098;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then return 0.2037976019720728;  // std dev = 0.887, 53.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 2.11e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.19834625864137867;  // std dev = 0.078, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109161;  // std dev = 5.16e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1864327394580067;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.12220041875342925;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, D) )
%   | | then if ( movie(F, B) )
%   | | | then return 0.13284250838944095;  // std dev = 0.572, 50.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return -0.06842697784420275;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.06842697784420265;  // std dev = 4.71e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.1069294586628741;  // std dev = 0.091, 52.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070538
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.927 seconds
Total inference time: 2.347 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069075
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.784 seconds
Parameter learned model CLL: -0.069075


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [2.23e-07, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-08, 77, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, H)'}, {'true,true,true,true': [0.0, 0, 45], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 80, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 45], 'true,false,true,true': [7.45e-09, 11, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.05e-08, 76, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(F, A)'}, {'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.77e-08, 83, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, E), director(E)'}, {'true,true,true': [3.73e-09, 0, 45], 'true,true,false,true': [0.0, 9, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 72, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)'}, {'true,true': [0.887, 8, 45], 'true,false': [0.0, 0, 0], 'false': [2.11e-08, 73, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.078, 3, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.16e-08, 91, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 84, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, D)', 'true,true,true': 'movie(F, B)', 'false': 'director(B)'}, {'true,true,true,true': [0.572, 5, 45], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false': [4.71e-08, 99, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.091, 7, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 86, 0]}]]
[{'': [0.09000000000000079, 7.209240419643874e-17], 'true': [1.105288700071267e-15, -2.7755575615628915e-18], 'true,true': [1.105288700071267e-15, nan], 'true,false': [-2.7755575615628915e-18, nan], 'true,false,true': [-2.7755575615628915e-18, nan]}, {'': [0.06424978612186535, -2.2204460492503132e-17], 'true': [-9.473903143468002e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-9.473903143468002e-16, nan], 'true,true,true': [-9.473903143468002e-16, nan]}, {'': [0.07036708194394091, 4.8207052385039694e-17], 'true': [-3.947459643111668e-17, 5.046468293750712e-18], 'true,false': [5.046468293750712e-18, nan], 'true,false,true': [5.046468293750712e-18, nan]}, {'': [0.027973194025505906, 4.01285430587406e-17], 'true': [-4.144832625267251e-16, -2.3129646346357427e-18], 'true,false': [-2.3129646346357427e-18, nan], 'true,false,true': [-2.3129646346357427e-18, nan]}, {'': [0.023736408665978845, 0.0], 'true': [0.023736408665978845, nan], 'true,true': [1.973729821555834e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.014846364542889819, 6.083413833562501e-18], 'true': [0.014846364542889819, nan]}, {'': [0.006032600287287318, 2.928060724286127e-17], 'true': [0.006032600287287318, nan], 'true,true': [0.006032600287287318, nan]}, {'': [0.009888002735041345, -3.96508223080413e-18], 'true': [-3.947459643111668e-17, -2.3129646346357427e-18], 'true,false': [-2.3129646346357427e-18, nan], 'true,false,true': [-2.3129646346357427e-18, nan]}, {'': [0.006535544288897493, 2.3314683517128286e-17], 'true': [0.006535544288897493, nan], 'true,true': [0.006535544288897493, nan], 'true,true,true': [0.006535544288897493, nan], 'false': [0.0, 2.2428747972225384e-17]}, {'': [0.00824865185370647, -1.0973134545713756e-17], 'true': [0.00824865185370647, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.14185106490048766;  // std dev = 6.99e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.1254446385283914;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360625;  // std dev = 5.87e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1015963294878363;  // std dev = 2.11e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.2771957289128432;  // std dev = 0.127, 38.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2614874605930015;  // std dev = 0.024, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12032594565151662;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08518475138839679;  // std dev = 3.16e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21421166111575757;  // std dev = 0.021, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10745716891648933;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07877675473109164;  // std dev = 4.47e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18035815431966978;  // std dev = 0.018, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09725438053826961;  // std dev = 0.004, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.07324622576333704;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15521481155072653;  // std dev = 0.016, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09017851959229821;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420267;  // std dev = 3.80e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13210355259190432;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.13091909688202283;  // std dev = 0.036, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   else return -0.06419184008202625;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067783
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.894 seconds
Total inference time: 1.484 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066026
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.676 seconds
Refined model CLL: -0.066026


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067783
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.281 seconds
Total inference time: 1.484 seconds
AUC ROC: 1.0
Total revision time: 3.281
Best scored revision CLL: -0.066026


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:01:34
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067783, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.281, 'Inference time': 1.484, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070538, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.927, 'Inference time': 2.347}}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;false;true
0;true,true,false;ta(F, A, G).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,false,false;ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, F).;true;true
1;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
1;true,false,false;publication(J, B), publication(K, A).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;publication(D, B), publication(D, A).;true;true
2;true,true;tempadvisedby(E, B).;true;true
2;true,true,true;ta(F, E, G).;false;false
2;true,true,false;ta(H, A, I).;false;false
2;true,false;publication(J, A).;true;true
2;true,false,true;ta(K, A, L), publication(M, B).;false;false
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B), ta(G, F, E).;false;false
3;true,false;tempadvisedby(H, B), publication(I, H).;true;true
3;true,false,true;publication(J, A).;false;false
3;true,false,false;publication(K, A).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, A), publication(D, B).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;tempadvisedby(E, B).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;projectmember(G, B).;true;true
4;true,false,true;publication(H, A).;false;false
4;true,false,false;tempadvisedby(I, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D).;true;true
5;true,true;tempadvisedby(E, B), ta(F, E, D).;false;true
5;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
5;true,false;publication(I, B).;true;true
5;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
5;true,false,false;publication(L, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, G, E), publication(C, G).;true;true
6;true,true,true;ta(D, G, H).;false;false
6;true,true,false;publication(C, I), ta(J, I, K).;false;false
6;true,false;publication(L, B), publication(L, A).;true;true
6;true,false,true;tempadvisedby(M, B).;false;false
6;true,false,false;projectmember(N, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;false;true
7;true,false;tempadvisedby(D, B), publication(E, D).;true;true
7;true,false,true;publication(E, B).;false;false
7;true,false,false;publication(F, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), tempadvisedby(E, D).;true;true
8;true,true;publication(F, A), publication(F, D).;true;true
8;true,true,true;ta(G, E, H), publication(I, B).;false;false
8;true,true,false;publication(J, B).;false;false
8;true,false;publication(K, A).;false;true
8;true,false,false;publication(L, B).;false;false
8;false;professor(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true;tempadvisedby(F, B).;true;true
9;true,true,true;ta(G, F, H).;false;false
9;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
9;true,false;publication(L, B), publication(L, A).;false;true
9;true,false,false;publication(M, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7.74e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839144;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462843;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.052701841145401794;  // std dev = 2.015, 112.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4510304511862479;  // std dev = 0.063, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.1097423418115224;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10716830542943855;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.3451589844782302;  // std dev = 0.059, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(C, E), director(E) )
%   | | | then return -0.10025815816632148;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09733737334514639;  // std dev = 5.05e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then return 0.2364094965514909;  // std dev = 0.851, 50.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08911384414136415;  // std dev = 3.65e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1889104793169599;  // std dev = 0.119, 51.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08214020337479326;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.19780772100818933;  // std dev = 0.293, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.13412575536336738;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07615614685186144;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, D) )
%   | | then if ( movie(F, B) )
%   | | | then return 0.1477565905360566;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, B) )
%   | | | then return -0.12066986459089463;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.20911301472916544;  // std dev = 0.340, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return -0.07096804581755094;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.13534239862001188;  // std dev = 0.063, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06710582405662344;  // std dev = 0.033, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074394
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.826 seconds
Total inference time: 2.196 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069917
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.784 seconds
Parameter learned model CLL: -0.069917


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [2.23e-07, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.74e-08, 81, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, H)'}, {'true,true,true,true': [0.0, 0, 45], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 87, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)'}, {'true,true': [0.0, 0, 35], 'true,false': [0.0, 0, 0], 'false': [2.015, 102, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(F, A)'}, {'true,true': [0.063, 0, 45], 'true,false,true,true': [0.004, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 77, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, E), director(E)'}, {'true,true,true': [0.059, 0, 45], 'true,true,false,true': [0.004, 3, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.05e-08, 84, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)'}, {'true,true': [0.851, 5, 45], 'true,false': [0.0, 0, 0], 'false': [3.65e-08, 89, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.119, 6, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 72, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.293, 0, 45], 'true,false,true,true': [0.005, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 86, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, D)', 'true,true,true': 'movie(F, B)', 'true,true,false': 'movie(G, B)', 'false': 'director(B)'}, {'true,true,true,true': [0.0, 0, 35], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.34, 1, 10], 'false,false': [0.0, 86, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.063, 2, 45], 'true,false': [0.0, 0, 0], 'false': [0.033, 87, 0]}]]
[{'': [0.04074241738343243, 7.401486830834377e-17], 'true': [1.105288700071267e-15, 0.0], 'true,true': [1.105288700071267e-15, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.06424978612186535, -1.7865657867531254e-17], 'true': [-9.473903143468002e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-9.473903143468002e-16, nan], 'true,true,true': [-9.473903143468002e-16, nan]}, {'': [-2.0301221021717148e-16, 0.03624970888021178], 'true': [-2.0301221021717148e-16, nan]}, {'': [0.01657691141874192, -2.0185873175002847e-17], 'true': [0.003931831313789166, 6.625663296290843e-06], 'true,false': [6.625663296290843e-06, nan], 'true,false,true': [6.625663296290843e-06, nan]}, {'': [0.014923371043866226, 3.0398963769498337e-17], 'true': [0.014923371043866226, nan], 'true,true': [0.0035181554516827795, 4.9509000831400585e-06], 'true,true,false': [4.9509000831400585e-06, nan]}, {'': [0.014491394334999894, 1.4969299208429077e-17], 'true': [0.014491394334999894, nan]}, {'': [0.014148642144304772, -1.2335811384723961e-17], 'true': [0.014148642144304772, nan], 'true,true': [0.014148642144304772, nan]}, {'': [0.010016139855881649, -9.036699037646624e-18], 'true': [0.0019115790548419388, 6.8881915617595435e-06], 'true,false': [6.8881915617595435e-06, nan], 'true,false,true': [6.8881915617595435e-06, nan]}, {'': [0.0036842171854210674, 0.009079726986811705], 'false': [0.010517153109366668, -2.5173661604872734e-17], 'true': [0.0036842171854210674, nan], 'true,true': [-2.8548592061789737e-17, 0.0], 'true,true,false': [0.0, nan], 'true,true,true': [-2.8548592061789737e-17, nan]}, {'': [0.00390786107834403, 1.282220310300422e-05], 'true': [0.00390786107834403, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(E, A), movie(E, D).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048763;  // std dev = 8.30e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839158;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.5182729470274017;  // std dev = 0.153, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( actor(B) )
%   | then return -0.1123163781936062;  // std dev = 8.16e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462843;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.3328054984329874;  // std dev = 0.771, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42581224350317365;  // std dev = 0.102, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15001413397335764;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.10215285597617552;  // std dev = 0.048, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3264288944054393;  // std dev = 0.093, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.15482012452757674;  // std dev = 0.025, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09364013453230123;  // std dev = 0.063, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2591213994280327;  // std dev = 0.082, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1274791075101818;  // std dev = 0.025, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08506751252603115;  // std dev = 4.71e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21257533423435046;  // std dev = 0.072, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12137960634975425;  // std dev = 0.020, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07867607450684865;  // std dev = 3.49e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17918067385802736;  // std dev = 0.064, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10883314681558745;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07315887902585765;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( female(A) )
%   | | then return 0.1279296559368358;  // std dev = 0.078, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | else return 0.12462044892366682;  // std dev = 0.076, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.11382576219805747;  // std dev = 0.088, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.12765095022854875;  // std dev = 0.236, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.06835051619790365;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13875264986184901;  // std dev = 0.051, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11004004670794917;  // std dev = 0.018, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.0641243736276662;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068977
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.977 seconds
Total inference time: 1.58 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065611
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.698 seconds
Refined model CLL: -0.065611


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068977
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.2849999999999997 seconds
Total inference time: 1.58 seconds
AUC ROC: 1.0
Total revision time: 3.2849999999999997
Best scored revision CLL: -0.065611


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:01:42
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068977, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.2849999999999997, 'Inference time': 1.58, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.074394, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.826, 'Inference time': 2.196}}


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;false;true
0;true,true,false;ta(F, A, G).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,false,false;ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, F).;true;true
1;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
1;true,false,false;publication(J, B), publication(K, A).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;publication(D, B), publication(D, A).;true;true
2;true,true;tempadvisedby(E, B).;true;true
2;true,true,true;ta(F, E, G).;false;false
2;true,true,false;ta(H, A, I).;false;false
2;true,false;publication(J, A).;true;true
2;true,false,true;ta(K, A, L), publication(M, B).;false;false
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B), ta(G, F, E).;false;false
3;true,false;tempadvisedby(H, B), publication(I, H).;true;true
3;true,false,true;publication(J, A).;false;false
3;true,false,false;publication(K, A).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, A), publication(D, B).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;tempadvisedby(E, B).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;projectmember(G, B).;true;true
4;true,false,true;publication(H, A).;false;false
4;true,false,false;tempadvisedby(I, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D).;true;true
5;true,true;tempadvisedby(E, B), ta(F, E, D).;false;true
5;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
5;true,false;publication(I, B).;true;true
5;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
5;true,false,false;publication(L, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, G, E), publication(C, G).;true;true
6;true,true,true;ta(D, G, H).;false;false
6;true,true,false;publication(C, I), ta(J, I, K).;false;false
6;true,false;publication(L, B), publication(L, A).;true;true
6;true,false,true;tempadvisedby(M, B).;false;false
6;true,false,false;projectmember(N, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;false;true
7;true,false;tempadvisedby(D, B), publication(E, D).;true;true
7;true,false,true;publication(E, B).;false;false
7;true,false,false;publication(F, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), tempadvisedby(E, D).;true;true
8;true,true;publication(F, A), publication(F, D).;true;true
8;true,true,true;ta(G, E, H), publication(I, B).;false;false
8;true,true,false;publication(J, B).;false;false
8;true,false;publication(K, A).;false;true
8;true,false,false;publication(L, B).;false;false
8;false;professor(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true;tempadvisedby(F, B).;true;true
9;true,true,true;ta(G, F, H).;false;false
9;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
9;true,false;publication(L, B), publication(L, A).;false;true
9;true,false,false;publication(M, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839136;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462837;  // std dev = 1.49e-08, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360618;  // std dev = 8.82e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 3.33e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( movie(C, E), director(E) )
%   | | | then return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926097;  // std dev = 4.94e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then return 0.23786595474112254;  // std dev = 0.574, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 5.58e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.19142184870208837;  // std dev = 0.079, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109155;  // std dev = 6.75e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18235066141747677;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.12514206690137256;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, D) )
%   | | then if ( movie(F, B) )
%   | | | then return 0.14744948890846274;  // std dev = 0.374, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420265;  // std dev = 4.94e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.12903651846234643;  // std dev = 0.049, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072153
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.963 seconds
Total inference time: 1.926 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066482
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.93 seconds
Parameter learned model CLL: -0.066482


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [0.0, 0, 56], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.16e-08, 109, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, H)'}, {'true,true,true,true': [0.0, 0, 56], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 101, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, B)'}, {'true,true': [1.49e-08, 0, 56], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.82e-08, 111, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(F, A)'}, {'true,true': [0.0, 0, 56], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.33e-08, 101, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, E), director(E)'}, {'true,true,true': [0.0, 0, 56], 'true,true,false,true': [0.0, 4, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.94e-08, 103, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)'}, {'true,true': [0.574, 3, 56], 'true,false': [0.0, 0, 0], 'false': [5.58e-08, 100, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.079, 4, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.75e-08, 118, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.0, 0, 56], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 105, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, D)', 'true,true,true': 'movie(F, B)', 'false': 'director(B)'}, {'true,true,true,true': [0.374, 2, 56], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.94e-08, 103, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.049, 2, 56], 'true,false': [0.0, 0, 0], 'false': [0.0, 116, 0]}]]
[{'': [0.017236072637734554, 6.111319401606367e-17], 'true': [-1.2688263138573217e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.2688263138573217e-16, nan]}, {'': [0.03445358635281509, -1.0992307174506501e-17], 'true': [-1.9032394707859825e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.9032394707859825e-16, nan], 'true,true,true': [-1.9032394707859825e-16, nan]}, {'': [0.021515213257540407, 7.001406461600086e-17], 'true': [1.9032394707859825e-16, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan], 'true,false,true': [2.3129646346357427e-18, nan]}, {'': [0.016767339707732778, 1.0992307174506501e-17], 'true': [-3.489272363107635e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.010633911082358413, 2.3713501496848002e-17], 'true': [0.010633911082358413, nan], 'true,true': [-1.2688263138573217e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.005590808503434667, 3.1086244689504386e-17], 'true': [0.005590808503434667, nan]}, {'': [0.006303417876950286, 3.8575545770874085e-17], 'true': [0.006303417876950286, nan], 'true,true': [0.006303417876950286, nan]}, {'': [0.00711488788801701, -5.28677630773884e-18], 'true': [-4.7580986769649563e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.0024053983770330302, 2.3713501496848002e-17], 'true': [0.0024053983770330302, nan], 'true,true': [0.0024053983770330302, nan], 'true,true,true': [0.0024053983770330302, nan], 'false': [nan, 2.3713501496848002e-17]}, {'': [0.002352313252293078, -1.7706143065142584e-17], 'true': [0.002352313252293078, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.12544463852839133;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360618;  // std dev = 9.06e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10159632948783633;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.3059474498976706;  // std dev = 0.077, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.3069317430485025;  // std dev = 0.074, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.24442371865896778;  // std dev = 0.070, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.2451424254180163;  // std dev = 0.068, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.08518475138839682;  // std dev = 5.67e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21386976110686842;  // std dev = 0.001, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15052408547897736;  // std dev = 0.000195, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.0787767547310916;  // std dev = 5.58e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18010666749732973;  // std dev = 0.000940, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1324281236071458;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07324622576333707;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15502356179565172;  // std dev = 0.000834, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11786893210885703;  // std dev = 0.000194, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06842697784420264;  // std dev = 6.05e-08, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1272468397102301;  // std dev = 0.045, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.13568790091045987;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return -0.06419184008202626;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070778
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.01 seconds
Total inference time: 1.27 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065552
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.788 seconds
Refined model CLL: -0.065552


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070778
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.691 seconds
Total inference time: 1.27 seconds
AUC ROC: 1.0
Total revision time: 3.691
Best scored revision CLL: -0.065552


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:01:49
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070778, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.691, 'Inference time': 1.27, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072153, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.963, 'Inference time': 1.926}}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;false;true
0;true,true,false;ta(F, A, G).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,false,false;ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, F).;true;true
1;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
1;true,false,false;publication(J, B), publication(K, A).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;publication(D, B), publication(D, A).;true;true
2;true,true;tempadvisedby(E, B).;true;true
2;true,true,true;ta(F, E, G).;false;false
2;true,true,false;ta(H, A, I).;false;false
2;true,false;publication(J, A).;true;true
2;true,false,true;ta(K, A, L), publication(M, B).;false;false
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B), ta(G, F, E).;false;false
3;true,false;tempadvisedby(H, B), publication(I, H).;true;true
3;true,false,true;publication(J, A).;false;false
3;true,false,false;publication(K, A).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, A), publication(D, B).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;tempadvisedby(E, B).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;projectmember(G, B).;true;true
4;true,false,true;publication(H, A).;false;false
4;true,false,false;tempadvisedby(I, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D).;true;true
5;true,true;tempadvisedby(E, B), ta(F, E, D).;false;true
5;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
5;true,false;publication(I, B).;true;true
5;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
5;true,false,false;publication(L, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, G, E), publication(C, G).;true;true
6;true,true,true;ta(D, G, H).;false;false
6;true,true,false;publication(C, I), ta(J, I, K).;false;false
6;true,false;publication(L, B), publication(L, A).;true;true
6;true,false,true;tempadvisedby(M, B).;false;false
6;true,false,false;projectmember(N, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;false;true
7;true,false;tempadvisedby(D, B), publication(E, D).;true;true
7;true,false,true;publication(E, B).;false;false
7;true,false,false;publication(F, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), tempadvisedby(E, D).;true;true
8;true,true;publication(F, A), publication(F, D).;true;true
8;true,true,true;ta(G, E, H), publication(I, B).;false;false
8;true,true,false;publication(J, B).;false;false
8;true,false;publication(K, A).;false;true
8;true,false,false;publication(L, B).;false;false
8;false;professor(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true;tempadvisedby(F, B).;true;true
9;true,true,true;ta(G, F, H).;false;false
9;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
9;true,false;publication(L, B), publication(L, A).;false;true
9;true,false,false;publication(M, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 0.000, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462838;  // std dev = 1.29e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 8.82e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 3.65e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( movie(C, E), director(E) )
%   | | | then return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926082;  // std dev = 7.30e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then return 0.23843337401418377;  // std dev = 0.575, 61.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 6.14e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.18728844073081755;  // std dev = 0.086, 63.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0787767547310916;  // std dev = 5.58e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.182882948777489;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.12475217859487979;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 4.08e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, D) )
%   | | then if ( movie(F, B) )
%   | | | then return 0.14389606552469533;  // std dev = 0.454, 61.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=58 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, B) )
%   | | | then return -0.11175585165075247;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return -0.06842697784420278;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.06842697784420265;  // std dev = 5.58e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.11154633259064087;  // std dev = 0.079, 65.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 3.25e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07137
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.948 seconds
Total inference time: 1.719 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06694
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.971 seconds
Parameter learned model CLL: -0.06694


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [0.0, 0, 58], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.69e-08, 105, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, H)'}, {'true,true,true,true': [0.0, 0, 58], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 133, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, B)'}, {'true,true': [1.29e-08, 0, 58], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.82e-08, 120, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(F, A)'}, {'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.65e-08, 100, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, E), director(E)'}, {'true,true,true': [0.0, 0, 58], 'true,true,false,true': [0.0, 5, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.3e-08, 124, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)'}, {'true,true': [0.575, 3, 58], 'true,false': [0.0, 0, 0], 'false': [6.14e-08, 114, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.086, 5, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.58e-08, 97, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.08e-08, 102, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, D)', 'true,true,true': 'movie(F, B)', 'true,true,false': 'movie(G, B)', 'false': 'director(B)'}, {'true,true,true,true': [0.454, 3, 58], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false': [5.58e-08, 119, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.079, 7, 58], 'true,false': [0.0, 0, 0], 'false': [3.25e-08, 117, 0]}]]
[{'': [0.07306626354245364, 7.190015778524824e-17], 'true': [-3.675221047035001e-16, -2.7755575615628915e-18], 'true,false': [-2.7755575615628915e-18, nan], 'true,false,true': [-2.7755575615628915e-18, nan], 'true,true': [-3.675221047035001e-16, nan]}, {'': [0.0606524673676469, -3.3390166154140044e-18], 'true': [-1.2250736823450003e-16, -2.3129646346357427e-18], 'true,false': [-2.3129646346357427e-18, nan], 'true,false,true': [-2.3129646346357427e-18, nan], 'true,true': [-1.2250736823450003e-16, nan], 'true,true,true': [-1.2250736823450003e-16, nan]}, {'': [0.0378756149402803, 6.47630097698008e-17], 'true': [2.4501473646900006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.01626384593324757, 1.3322676295501878e-17], 'true': [-3.3689526264487507e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.012487180976206418, 4.297637514678025e-17], 'true': [0.012487180976206418, nan], 'true,true': [-1.5313421029312505e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.005417001263228267, 3.311191476952221e-17], 'true': [0.005417001263228267, nan]}, {'': [0.007400049078392852, 3.204767493763338e-17], 'true': [0.007400049078392852, nan], 'true,true': [0.007400049078392852, nan]}, {'': [0.006914945266336519, 1.6326809185664067e-17], 'true': [-9.188052617587502e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.005282246812650365, 2.6830389761774617e-17], 'true': [0.005282246812650365, nan], 'true,true': [0.0033805811770076743, 0.0], 'true,true,true': [0.0033805811770076743, nan], 'false': [0.0, 2.6122894697062506e-17], 'true,true,false': [0.0, nan]}, {'': [0.006257283432724653, 9.014631396529049e-18], 'true': [0.006257283432724653, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(E, A), movie(E, D).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.12544463852839127;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360624;  // std dev = 7.30e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.1015963294878364;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601496;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.30004169099267897;  // std dev = 0.090, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0926912761892608;  // std dev = 7.60e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25775912377774535;  // std dev = 0.014, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12119451979315107;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08518475138839682;  // std dev = 5.96e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21158413398951587;  // std dev = 0.012, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10947401156782707;  // std dev = 0.003, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.07877675473109154;  // std dev = 7.30e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1784354014471604;  // std dev = 0.011, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10001696989492932;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07324622576333707;  // std dev = 4.47e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.15375910246379687;  // std dev = 0.010, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09100100344700363;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420267;  // std dev = 4.89e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1332236168672316;  // std dev = 1.05e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.1356286526312941;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.08295538243740763;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else return -0.0648976963757223;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066796
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.102 seconds
Total inference time: 1.432 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064293
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.956 seconds
Refined model CLL: -0.064293


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066796
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.977 seconds
Total inference time: 1.432 seconds
AUC ROC: 1.0
Total revision time: 3.977
Best scored revision CLL: -0.064293


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:01:57
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066796, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.977, 'Inference time': 1.432, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.07137, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.948, 'Inference time': 1.719}}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;false;true
0;true,true,false;ta(F, A, G).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,false,false;ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, F).;true;true
1;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
1;true,false,false;publication(J, B), publication(K, A).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;publication(D, B), publication(D, A).;true;true
2;true,true;tempadvisedby(E, B).;true;true
2;true,true,true;ta(F, E, G).;false;false
2;true,true,false;ta(H, A, I).;false;false
2;true,false;publication(J, A).;true;true
2;true,false,true;ta(K, A, L), publication(M, B).;false;false
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B), ta(G, F, E).;false;false
3;true,false;tempadvisedby(H, B), publication(I, H).;true;true
3;true,false,true;publication(J, A).;false;false
3;true,false,false;publication(K, A).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, A), publication(D, B).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;tempadvisedby(E, B).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;projectmember(G, B).;true;true
4;true,false,true;publication(H, A).;false;false
4;true,false,false;tempadvisedby(I, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D).;true;true
5;true,true;tempadvisedby(E, B), ta(F, E, D).;false;true
5;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
5;true,false;publication(I, B).;true;true
5;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
5;true,false,false;publication(L, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, G, E), publication(C, G).;true;true
6;true,true,true;ta(D, G, H).;false;false
6;true,true,false;publication(C, I), ta(J, I, K).;false;false
6;true,false;publication(L, B), publication(L, A).;true;true
6;true,false,true;tempadvisedby(M, B).;false;false
6;true,false,false;projectmember(N, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;false;true
7;true,false;tempadvisedby(D, B), publication(E, D).;true;true
7;true,false,true;publication(E, B).;false;false
7;true,false,false;publication(F, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), tempadvisedby(E, D).;true;true
8;true,true;publication(F, A), publication(F, D).;true;true
8;true,true,true;ta(G, E, H), publication(I, B).;false;false
8;true,true,false;publication(J, B).;false;false
8;true,false;publication(K, A).;false;true
8;true,false,false;publication(L, B).;false;false
8;false;professor(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true;tempadvisedby(F, B).;true;true
9;true,true,true;ta(G, F, H).;false;false
9;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
9;true,false;publication(L, B), publication(L, A).;false;true
9;true,false,false;publication(M, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048766;  // std dev = 6.99e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048802;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, H) )
%   | | | then return -0.1254446385283916;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839188;  // std dev = 0.000, 328.000 (wgt'ed) examples reached here.  /* #neg=328 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462834;  // std dev = 4.21e-08, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360636;  // std dev = 1.05e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.024604694729653192;  // std dev = 4.356, 373.000 (wgt'ed) examples reached here.  /* #neg=324 #pos=49 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.45713201959106026;  // std dev = 0.064, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10499396318711657;  // std dev = 0.032, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10988655571408035;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.3494466929322947;  // std dev = 0.061, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else if ( movie(C, E), director(E) )
%   | | | then return -0.09614308447743035;  // std dev = 0.027, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09959013480641592;  // std dev = 1.07e-07, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then return 0.19259138983103014;  // std dev = 2.427, 231.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=178 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09100897532553988;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1528116780661955;  // std dev = 0.155, 238.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08375514287021109;  // std dev = 1.35e-07, 315.000 (wgt'ed) examples reached here.  /* #neg=315 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21312710244418615;  // std dev = 0.616, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.12002698780027822;  // std dev = 0.036, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07754778795032152;  // std dev = 6.99e-08, 269.000 (wgt'ed) examples reached here.  /* #neg=269 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, D) )
%   | | then if ( movie(F, B) )
%   | | | then return 0.11704520980566678;  // std dev = 1.121, 151.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=129 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, B) )
%   | | | then return -0.10383019834556147;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.059507658679716455;  // std dev = 1.763, 110.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=49 */
%   | else return -0.0721790459783402;  // std dev = 1.05e-07, 258.000 (wgt'ed) examples reached here.  /* #neg=258 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.09240797025849963;  // std dev = 0.129, 242.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=178 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06878898156432614;  // std dev = 0.056, 318.000 (wgt'ed) examples reached here.  /* #neg=318 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069619
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.546 seconds
Total inference time: 1.615 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081401
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.984 seconds
Parameter learned model CLL: -0.081401


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [1.09e-06, 0, 178], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [6.99e-08, 72, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 297, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, H)'}, {'true,true,true,true': [0.0, 0, 178], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 60, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 328, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, B)'}, {'true,true': [4.21e-08, 0, 129], 'true,false,true,true': [1.05e-08, 43, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.356, 324, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(F, A)'}, {'true,true': [0.064, 0, 178], 'true,false,true,true': [0.032, 61, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 299, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, E), director(E)'}, {'true,true,true': [0.061, 0, 178], 'true,true,false,true': [0.027, 51, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.07e-07, 289, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)'}, {'true,true': [2.427, 53, 178], 'true,false': [0.0, 0, 0], 'false': [0.0, 299, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.155, 60, 178], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.35e-07, 315, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.616, 0, 178], 'true,false,true,true': [0.036, 62, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.99e-08, 269, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, D)', 'true,true,true': 'movie(F, B)', 'true,true,false': 'movie(G, B)', 'false': 'director(B)'}, {'true,true,true,true': [1.121, 22, 129], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 12, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.763, 61, 49], 'false,false': [1.05e-07, 258, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.129, 64, 178], 'true,false': [0.0, 0, 0], 'false': [0.056, 318, 0]}]]
[{'': [0.20505600000000557, -4.784799567408082e-17], 'true': [6.706246045376226e-15, 6.78469626159818e-17], 'true,true': [6.706246045376226e-15, nan], 'true,false': [6.78469626159818e-17, nan], 'true,false,true': [6.78469626159818e-17, nan]}, {'': [0.13460045111799862, -6.228080382043562e-17], 'true': [-3.193450497798203e-15, -4.070817756958907e-17], 'true,false': [-4.070817756958907e-17, nan], 'true,false,true': [-4.070817756958907e-17, nan], 'true,true': [-3.193450497798203e-15, nan], 'true,true,true': [-3.193450497798203e-15, nan]}, {'': [0.08358756400613819, 0.05087024430224766], 'true': [1.7625866313428842e-15, 2.581914010756178e-18], 'true,false': [2.581914010756178e-18, nan], 'true,false,true': [2.581914010756178e-18, nan]}, {'': [0.06314681253367861, -9.802638076957904e-17], 'true': [0.00413226601983568, 1.6623237246453575e-05], 'true,false': [1.6623237246453575e-05, nan], 'true,false,true': [1.6623237246453575e-05, nan]}, {'': [0.03722169520919178, 3.9952662477860307e-17], 'true': [0.03722169520919178, nan], 'true,true': [0.0036635620026298685, 1.4524963309475181e-05], 'true,true,false': [1.4524963309475181e-05, nan]}, {'': [0.025501308705090275, -2.9704963869569405e-18], 'true': [0.025501308705090275, nan]}, {'': [0.024158771601868557, 5.7802087631278e-17], 'true': [0.024158771601868557, nan], 'true,true': [0.024158771601868557, nan]}, {'': [0.022851555668173134, 1.815978181543007e-17], 'true': [0.002130768704192133, 2.1461143038953837e-05], 'true,false': [2.1461143038953837e-05, nan], 'true,false,true': [2.1461143038953837e-05, nan]}, {'': [0.01103475315668495, 0.012083397803087856], 'false': [0.028266637041304898, 4.3031900179269636e-17], 'true': [0.01103475315668495, nan], 'true,true': [0.008320083801328617, 0.0], 'true,true,true': [0.008320083801328617, nan], 'true,true,false': [0.0, nan]}, {'': [0.016540671198308085, 9.698688577682626e-06], 'true': [0.016540671198308085, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(E, A), movie(E, D).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5.77e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.14185106490048813;  // std dev = 0.000, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839155;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.12544463852839186;  // std dev = 0.000, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462834;  // std dev = 4.77e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.11231637819360642;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( director(B), female(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462842;  // std dev = 1.58e-07, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.11231637819360686;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783621;  // std dev = 3.49e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.10159632948783656;  // std dev = 0.000, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.21911277447258326;  // std dev = 0.178, 118.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=89 */
%   | | else return 0.21138209553055418;  // std dev = 0.182, 121.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=89 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926049;  // std dev = 1.19e-07, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.27572913580345265;  // std dev = 0.010, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1124851699974176;  // std dev = 0.003, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.08518475138839678;  // std dev = 9.42e-08, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22417937664123527;  // std dev = 0.009, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1017425800525901;  // std dev = 0.003, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.07877675473109146;  // std dev = 6.32e-08, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18760413709199372;  // std dev = 0.008, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09275658908473833;  // std dev = 0.003, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.0732462257633368;  // std dev = 1.16e-07, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.16081061720813292;  // std dev = 0.006, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.0854060593331457;  // std dev = 0.002, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then if ( director(A) )
%   | | | then return -0.0684269778442027;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.16029686419565303;  // std dev = 0.003, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.07646427302611569;  // std dev = 0.057, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return -0.06842697784420278;  // std dev = 0.000, 258.000 (wgt'ed) examples reached here.  /* #neg=258 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.14016423843268572;  // std dev = 0.006, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07904129339422149;  // std dev = 0.003, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.06414978391740901;  // std dev = 0.002, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064253
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.601 seconds
Total inference time: 1.332 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067925
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.908 seconds
Refined model CLL: -0.067925


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064253
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.039000000000001 seconds
Total inference time: 1.332 seconds
AUC ROC: 1.0
Total revision time: 5.039000000000001
Best scored revision CLL: -0.067925


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:02:05
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064253, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.039000000000001, 'Inference time': 1.332, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069619, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.546, 'Inference time': 1.615}}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;false;true
0;true,true,false;ta(F, A, G).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,false,false;ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, F).;true;true
1;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
1;true,false,false;publication(J, B), publication(K, A).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;publication(D, B), publication(D, A).;true;true
2;true,true;tempadvisedby(E, B).;true;true
2;true,true,true;ta(F, E, G).;false;false
2;true,true,false;ta(H, A, I).;false;false
2;true,false;publication(J, A).;true;true
2;true,false,true;ta(K, A, L), publication(M, B).;false;false
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B), ta(G, F, E).;false;false
3;true,false;tempadvisedby(H, B), publication(I, H).;true;true
3;true,false,true;publication(J, A).;false;false
3;true,false,false;publication(K, A).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, A), publication(D, B).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;tempadvisedby(E, B).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;projectmember(G, B).;true;true
4;true,false,true;publication(H, A).;false;false
4;true,false,false;tempadvisedby(I, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D).;true;true
5;true,true;tempadvisedby(E, B), ta(F, E, D).;false;true
5;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
5;true,false;publication(I, B).;true;true
5;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
5;true,false,false;publication(L, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, G, E), publication(C, G).;true;true
6;true,true,true;ta(D, G, H).;false;false
6;true,true,false;publication(C, I), ta(J, I, K).;false;false
6;true,false;publication(L, B), publication(L, A).;true;true
6;true,false,true;tempadvisedby(M, B).;false;false
6;true,false,false;projectmember(N, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;false;true
7;true,false;tempadvisedby(D, B), publication(E, D).;true;true
7;true,false,true;publication(E, B).;false;false
7;true,false,false;publication(F, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), tempadvisedby(E, D).;true;true
8;true,true;publication(F, A), publication(F, D).;true;true
8;true,true,true;ta(G, E, H), publication(I, B).;false;false
8;true,true,false;publication(J, B).;false;false
8;true,false;publication(K, A).;false;true
8;true,false,false;publication(L, B).;false;false
8;false;professor(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true;tempadvisedby(F, B).;true;true
9;true,true,true;ta(G, F, H).;false;false
9;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
9;true,false;publication(L, B), publication(L, A).;false;true
9;true,false,false;publication(M, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7.60e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 7.74e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10159632948783634;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 3.33e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.32071184716014944;  // std dev = 3.73e-09, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(C, E), director(E) )
%   | | | then return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926105;  // std dev = 2.11e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then return 0.23389993044712173;  // std dev = 0.571, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 1.83e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.19339463622378886;  // std dev = 0.077, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109161;  // std dev = 5.16e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18264803900934548;  // std dev = 2.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.1249240072920119;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, D) )
%   | | then if ( movie(F, B) )
%   | | | then return 0.13005861351816855;  // std dev = 0.570, 50.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.06842697784420265;  // std dev = 4.34e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.10919980096157492;  // std dev = 0.086, 51.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202625;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070672
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.883 seconds
Total inference time: 2.094 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069191
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.805 seconds
Parameter learned model CLL: -0.069191


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [2.23e-07, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.6e-08, 80, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, H)'}, {'true,true,true,true': [0.0, 0, 45], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 8, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 75, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.74e-08, 95, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(F, A)'}, {'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.33e-08, 101, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, E), director(E)'}, {'true,true,true': [3.73e-09, 0, 45], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.11e-08, 90, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)'}, {'true,true': [0.571, 3, 45], 'true,false': [0.0, 0, 0], 'false': [1.83e-08, 72, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.077, 3, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.16e-08, 91, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [2.58e-08, 0, 45], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 94, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, D)', 'true,true,true': 'movie(F, B)', 'false': 'director(B)'}, {'true,true,true,true': [0.57, 5, 45], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false': [4.34e-08, 93, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.086, 6, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 81, 0]}]]
[{'': [0.04074241738343243, 7.216449660063518e-17], 'true': [1.105288700071267e-15, 0.0], 'true,true': [1.105288700071267e-15, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.09149132947221877, -2.6645352591003756e-17], 'true': [-9.473903143468002e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-9.473903143468002e-16, nan], 'true,true,true': [-9.473903143468002e-16, nan]}, {'': [0.040122030722945186, 6.310741403132469e-17], 'true': [-3.947459643111668e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.0313922549076915, 1.0992307174506501e-17], 'true': [-4.144832625267251e-16, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan], 'true,false,true': [-1.982541115402065e-18, nan]}, {'': [0.006962966417181677, 4.934324553889585e-18], 'true': [0.006962966417181677, nan], 'true,true': [1.973729821555834e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.006787668945471587, 4.625929269271485e-18], 'true': [0.006787668945471587, nan]}, {'': [0.005946680930313757, 2.928060724286127e-17], 'true': [0.005946680930313757, nan], 'true,true': [0.005946680930313757, nan]}, {'': [0.007092087238600904, -5.9054416203465774e-18], 'true': [1.4802973661668754e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.006504616359532327, 2.0078501509178364e-17], 'true': [0.006504616359532327, nan], 'true,true': [0.006504616359532327, nan], 'true,true,true': [0.006504616359532327, nan], 'false': [0.0, 2.0294399374868453e-17]}, {'': [0.007343681348697302, -1.02798428206033e-17], 'true': [0.007343681348697302, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048763;  // std dev = 8.02e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1254446385283914;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360622;  // std dev = 6.99e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783619;  // std dev = 5.58e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.28626158688103215;  // std dev = 0.114, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.2977450069740712;  // std dev = 0.095, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926103;  // std dev = 3.16e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26010276963225665;  // std dev = 0.006, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12095012096119392;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.08518475138839682;  // std dev = 5.16e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21323477436294067;  // std dev = 0.006, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10848404063490191;  // std dev = 0.001, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07877675473109161;  // std dev = 5.48e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1796427063387759;  // std dev = 0.005, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09834426916493966;  // std dev = 0.001, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07324622576333707;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15467276099704144;  // std dev = 0.004, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0899282111202389;  // std dev = 0.001, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420267;  // std dev = 3.87e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13652974270997853;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.1351816112817722;  // std dev = 6.45e-09, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.08293841205177127;  // std dev = 0.000795, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else return -0.06466241094449028;  // std dev = 0.001, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066353
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.874 seconds
Total inference time: 1.474 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064955
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.681 seconds
Refined model CLL: -0.064955


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066353
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.2430000000000003 seconds
Total inference time: 1.474 seconds
AUC ROC: 1.0
Total revision time: 3.2430000000000003
Best scored revision CLL: -0.064955


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:02:13
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066353, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.2430000000000003, 'Inference time': 1.474, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070672, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.883, 'Inference time': 2.094}}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;false;true
0;true,true,false;ta(F, A, G).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,false,false;ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, F).;true;true
1;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
1;true,false,false;publication(J, B), publication(K, A).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;publication(D, B), publication(D, A).;true;true
2;true,true;tempadvisedby(E, B).;true;true
2;true,true,true;ta(F, E, G).;false;false
2;true,true,false;ta(H, A, I).;false;false
2;true,false;publication(J, A).;true;true
2;true,false,true;ta(K, A, L), publication(M, B).;false;false
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B), ta(G, F, E).;false;false
3;true,false;tempadvisedby(H, B), publication(I, H).;true;true
3;true,false,true;publication(J, A).;false;false
3;true,false,false;publication(K, A).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, A), publication(D, B).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;tempadvisedby(E, B).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;projectmember(G, B).;true;true
4;true,false,true;publication(H, A).;false;false
4;true,false,false;tempadvisedby(I, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D).;true;true
5;true,true;tempadvisedby(E, B), ta(F, E, D).;false;true
5;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
5;true,false;publication(I, B).;true;true
5;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
5;true,false,false;publication(L, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, G, E), publication(C, G).;true;true
6;true,true,true;ta(D, G, H).;false;false
6;true,true,false;publication(C, I), ta(J, I, K).;false;false
6;true,false;publication(L, B), publication(L, A).;true;true
6;true,false,true;tempadvisedby(M, B).;false;false
6;true,false,false;projectmember(N, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;false;true
7;true,false;tempadvisedby(D, B), publication(E, D).;true;true
7;true,false,true;publication(E, B).;false;false
7;true,false,false;publication(F, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), tempadvisedby(E, D).;true;true
8;true,true;publication(F, A), publication(F, D).;true;true
8;true,true,true;ta(G, E, H), publication(I, B).;false;false
8;true,true,false;publication(J, B).;false;false
8;true,false;publication(K, A).;false;true
8;true,false,false;publication(L, B).;false;false
8;false;professor(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true;tempadvisedby(F, B).;true;true
9;true,true,true;ta(G, F, H).;false;false
9;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
9;true,false;publication(L, B), publication(L, A).;false;true
9;true,false,false;publication(M, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462843;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.050493895328801636;  // std dev = 2.011, 108.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.45091006091009944;  // std dev = 0.062, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10545194462606895;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1073797521951852;  // std dev = 4.94e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.3450640639277864;  // std dev = 0.059, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(C, E), director(E) )
%   | | | then return -0.09413925927458022;  // std dev = 0.006, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09751293243647959;  // std dev = 2.58e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then return 0.25029939479471136;  // std dev = 0.700, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08926176514556955;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.19306532701471912;  // std dev = 0.110, 50.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08226642582245086;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.19492935192727082;  // std dev = 0.289, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.12610574653251538;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07626504523943227;  // std dev = 2.36e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, D) )
%   | | then if ( movie(F, B) )
%   | | | then return 0.13869670365680317;  // std dev = 0.255, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, B) )
%   | | | then return -0.11285102756915213;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.20590416904863726;  // std dev = 0.341, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return -0.07106290721983745;  // std dev = 3.80e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.1280877987344839;  // std dev = 0.075, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06651245316578766;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073864
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.878 seconds
Total inference time: 1.926 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069806
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.815 seconds
Parameter learned model CLL: -0.069806


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [2.23e-07, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 9, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.69e-08, 97, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, H)'}, {'true,true,true,true': [0.0, 0, 45], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 76, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 35], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.011, 98, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(F, A)'}, {'true,true': [0.062, 0, 45], 'true,false,true,true': [0.005, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.94e-08, 71, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, E), director(E)'}, {'true,true,true': [0.059, 0, 45], 'true,true,false,true': [0.006, 6, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.58e-08, 112, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)'}, {'true,true': [0.7, 3, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 76, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.11, 5, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 102, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.289, 0, 45], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.36e-08, 100, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, D)', 'true,true,true': 'movie(F, B)', 'true,true,false': 'movie(G, B)', 'false': 'director(B)'}, {'true,true,true,true': [0.255, 1, 35], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.341, 1, 10], 'false,false': [3.8e-08, 105, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.075, 3, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 104, 0]}]]
[{'': [0.13888888888888942, 7.783006770568107e-17], 'true': [1.105288700071267e-15, -9.25185853854297e-18], 'true,true': [1.105288700071267e-15, nan], 'true,false': [-9.25185853854297e-18, nan], 'true,false,true': [-9.25185853854297e-18, nan]}, {'': [0.05351918877289897, -2.6294755846385285e-17], 'true': [-9.473903143468002e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-9.473903143468002e-16, nan], 'true,true,true': [-9.473903143468002e-16, nan]}, {'': [0.032416229808473605, 0.037455789998176815], 'true': [-2.0301221021717148e-16, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan], 'true,false,true': [2.3129646346357427e-18, nan]}, {'': [0.021797155695826926, 3.4401276819371045e-17], 'true': [0.0039036363080146293, 7.432884047084883e-06], 'true,false': [7.432884047084883e-06, nan], 'true,false,true': [7.432884047084883e-06, nan]}, {'': [0.02310555303218743, 5.9476233462061954e-18], 'true': [0.02310555303218743, nan], 'true,true': [0.0034913905847083785, 6.2780541607287505e-06], 'true,true,false': [6.2780541607287505e-06, nan]}, {'': [0.010204145159944814, -2.337311630789803e-17], 'true': [0.010204145159944814, nan]}, {'': [0.012164196691516756, -4.353815782843751e-18], 'true': [0.012164196691516756, nan], 'true,true': [0.012164196691516756, nan]}, {'': [0.004010074986779164, 5.551115123125783e-18], 'true': [0.0018586761459352156, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.0034229796250052685, 0.007586690083822486], 'false': [0.010568630426346542, 1.3745618400120986e-17], 'true': [0.0034229796250052685, nan], 'true,true': [0.0018078931738550246, 0.0], 'true,true,true': [0.0018078931738550246, nan], 'true,true,false': [0.0, nan]}, {'': [0.005585166505974466, -2.8823097754691566e-17], 'true': [0.005585166505974466, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(E, A), movie(E, D).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1254446385283914;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462843;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.1123163781936062;  // std dev = 7.74e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( female(A) )
%   | | then return 0.459983177469157;  // std dev = 0.234, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.4218298737583061;  // std dev = 0.597, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42354313116012626;  // std dev = 0.077, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.10313803123618606;  // std dev = 0.084, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.32489933226357043;  // std dev = 0.044, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.3066480581727042;  // std dev = 0.086, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09256170107567029;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2597286238798641;  // std dev = 0.063, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14509367888626998;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08622674298257386;  // std dev = 0.072, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2129896270213481;  // std dev = 0.055, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11718020538091355;  // std dev = 0.057, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07980985729070551;  // std dev = 0.068, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1794750480207094;  // std dev = 0.048, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1616118905592089;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07300986096912519;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( female(A) )
%   | | then return 0.13707899153736602;  // std dev = 0.054, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return 0.1288921418163774;  // std dev = 0.071, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.1627045130160817;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.11422140577105981;  // std dev = 0.252, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.0682200434252528;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13771159476695424;  // std dev = 0.040, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.13982163665401467;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.13444699379343483;  // std dev = 0.047, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06400923029984272;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068952
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.036 seconds
Total inference time: 1.406 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065823
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.713 seconds
Refined model CLL: -0.065823


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068952
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.442 seconds
Total inference time: 1.406 seconds
AUC ROC: 1.0
Total revision time: 3.442
Best scored revision CLL: -0.065823


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:02:20
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068952, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.442, 'Inference time': 1.406, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073864, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.878, 'Inference time': 1.926}}


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;false;true
0;true,true,false;ta(F, A, G).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,false,false;ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, F).;true;true
1;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
1;true,false,false;publication(J, B), publication(K, A).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;publication(D, B), publication(D, A).;true;true
2;true,true;tempadvisedby(E, B).;true;true
2;true,true,true;ta(F, E, G).;false;false
2;true,true,false;ta(H, A, I).;false;false
2;true,false;publication(J, A).;true;true
2;true,false,true;ta(K, A, L), publication(M, B).;false;false
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B), ta(G, F, E).;false;false
3;true,false;tempadvisedby(H, B), publication(I, H).;true;true
3;true,false,true;publication(J, A).;false;false
3;true,false,false;publication(K, A).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, A), publication(D, B).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;tempadvisedby(E, B).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;projectmember(G, B).;true;true
4;true,false,true;publication(H, A).;false;false
4;true,false,false;tempadvisedby(I, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D).;true;true
5;true,true;tempadvisedby(E, B), ta(F, E, D).;false;true
5;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
5;true,false;publication(I, B).;true;true
5;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
5;true,false,false;publication(L, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, G, E), publication(C, G).;true;true
6;true,true,true;ta(D, G, H).;false;false
6;true,true,false;publication(C, I), ta(J, I, K).;false;false
6;true,false;publication(L, B), publication(L, A).;true;true
6;true,false,true;tempadvisedby(M, B).;false;false
6;true,false,false;projectmember(N, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;false;true
7;true,false;tempadvisedby(D, B), publication(E, D).;true;true
7;true,false,true;publication(E, B).;false;false
7;true,false,false;publication(F, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), tempadvisedby(E, D).;true;true
8;true,true;publication(F, A), publication(F, D).;true;true
8;true,true,true;ta(G, E, H), publication(I, B).;false;false
8;true,true,false;publication(J, B).;false;false
8;true,false;publication(K, A).;false;true
8;true,false,false;publication(L, B).;false;false
8;false;professor(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true;tempadvisedby(F, B).;true;true
9;true,true,true;ta(G, F, H).;false;false
9;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
9;true,false;publication(L, B), publication(L, A).;false;true
9;true,false,false;publication(M, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048785;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839108;  // std dev = 7.74e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462837;  // std dev = 1.49e-08, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 8.16e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( movie(C, E), director(E) )
%   | | | then return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 4.71e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then return 0.23786595474112254;  // std dev = 0.574, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 5.48e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.18655192415606822;  // std dev = 0.087, 61.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109157;  // std dev = 6.32e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1830778853251658;  // std dev = 4.21e-08, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.12460987269932537;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0732462257633371;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, D) )
%   | | then if ( movie(F, B) )
%   | | | then return 0.1572663644221465;  // std dev = 3.33e-08, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420265;  // std dev = 4.53e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.11574557484265867;  // std dev = 0.073, 61.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072054
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.914 seconds
Total inference time: 1.787 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066462
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.992 seconds
Parameter learned model CLL: -0.066462


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [0.0, 0, 56], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 129, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, H)'}, {'true,true,true,true': [0.0, 0, 56], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.74e-08, 103, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, B)'}, {'true,true': [1.49e-08, 0, 56], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.16e-08, 110, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(F, A)'}, {'true,true': [0.0, 0, 56], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 111, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, E), director(E)'}, {'true,true,true': [0.0, 0, 56], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.71e-08, 99, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)'}, {'true,true': [0.574, 3, 56], 'true,false': [0.0, 0, 0], 'false': [5.48e-08, 99, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.087, 5, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.32e-08, 108, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [4.21e-08, 0, 56], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 117, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, D)', 'true,true,true': 'movie(F, B)', 'false': 'director(B)'}, {'true,true,true,true': [3.33e-08, 0, 56], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.53e-08, 95, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.073, 5, 56], 'true,false': [0.0, 0, 0], 'false': [0.0, 97, 0]}]]
[{'': [0.08740894901144611, -3.0982968129074136e-17], 'true': [-1.2688263138573217e-16, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan], 'true,true': [-1.2688263138573217e-16, nan]}, {'': [0.044419605220055364, 5.82058673104451e-17], 'true': [-1.9032394707859825e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.9032394707859825e-16, nan], 'true,true,true': [-1.9032394707859825e-16, nan]}, {'': [0.027738687907221463, 6.055761952500853e-17], 'true': [1.9032394707859825e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.016767339707732778, -8.001607384685813e-18], 'true': [-3.489272363107635e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.005689964312795762, 2.2428747972225384e-17], 'true': [0.005689964312795762, nan], 'true,true': [-1.2688263138573217e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.005590808503434667, 3.027880976250427e-17], 'true': [0.005590808503434667, nan]}, {'': [0.0076230530626917896, 3.700743415417188e-17], 'true': [0.0076230530626917896, nan], 'true,true': [0.0076230530626917896, nan]}, {'': [0.00589068706726195, -6.642359976389826e-18], 'true': [3.172065784643304e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [1.9825411154020653e-17, 2.162013258480568e-17], 'false': [nan, 2.162013258480568e-17], 'true': [1.9825411154020653e-17, nan], 'true,true': [1.9825411154020653e-17, nan], 'true,true,true': [1.9825411154020653e-17, nan]}, {'': [0.005314040316994267, -1.48792776496155e-17], 'true': [0.005314040316994267, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048777;  // std dev = 2.98e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.12544463852839108;  // std dev = 7.88e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.11231637819360622;  // std dev = 7.88e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.10159632948783628;  // std dev = 2.98e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926086;  // std dev = 7.07e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12341331800382298;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.08518475138839691;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.08518475138839691;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return -0.08518475138839691;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08518475138839691;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839693;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839689;  // std dev = 9.13e-09, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.08518475138839691;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11067055982680468;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.0787767547310918;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.0787767547310918;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( female(B) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return -0.0787767547310918;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.0787767547310918;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return -0.0787767547310918;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.0787767547310918;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10023822401983386;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333707;  // std dev = 9.13e-09, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.07324622576333707;  // std dev = 9.13e-09, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.07324622576333707;  // std dev = 9.13e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return -0.07324622576333707;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1527438580936708;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09155298692982809;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return -0.06842697784420275;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.06842697784420274;  // std dev = 2.63e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06842697784420275;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420278;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return -0.06842697784420274;  // std dev = 2.63e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.06842697784420275;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13400703000801087;  // std dev = 5.27e-09, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.13400703000801084;  // std dev = 5.59e-09, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.0641918400820262;  // std dev = 6.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.06419184008202622;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( movie(C, A), movie(C, B) )
%   | | | then return -0.06419184008202619;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.06419184008202623;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0683
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.34 seconds
Total inference time: 1.52 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06464
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.956 seconds
Refined model CLL: -0.06464


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0683
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.202 seconds
Total inference time: 1.52 seconds
AUC ROC: 1.0
Total revision time: 4.202
Best scored revision CLL: -0.06464


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:02:28
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.0683, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 4.202, 'Inference time': 1.52, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072054, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.914, 'Inference time': 1.787}}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;false;true
0;true,true,false;ta(F, A, G).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,false,false;ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, F).;true;true
1;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
1;true,false,false;publication(J, B), publication(K, A).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;publication(D, B), publication(D, A).;true;true
2;true,true;tempadvisedby(E, B).;true;true
2;true,true,true;ta(F, E, G).;false;false
2;true,true,false;ta(H, A, I).;false;false
2;true,false;publication(J, A).;true;true
2;true,false,true;ta(K, A, L), publication(M, B).;false;false
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B), ta(G, F, E).;false;false
3;true,false;tempadvisedby(H, B), publication(I, H).;true;true
3;true,false,true;publication(J, A).;false;false
3;true,false,false;publication(K, A).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, A), publication(D, B).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;tempadvisedby(E, B).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;projectmember(G, B).;true;true
4;true,false,true;publication(H, A).;false;false
4;true,false,false;tempadvisedby(I, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D).;true;true
5;true,true;tempadvisedby(E, B), ta(F, E, D).;false;true
5;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
5;true,false;publication(I, B).;true;true
5;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
5;true,false,false;publication(L, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, G, E), publication(C, G).;true;true
6;true,true,true;ta(D, G, H).;false;false
6;true,true,false;publication(C, I), ta(J, I, K).;false;false
6;true,false;publication(L, B), publication(L, A).;true;true
6;true,false,true;tempadvisedby(M, B).;false;false
6;true,false,false;projectmember(N, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;false;true
7;true,false;tempadvisedby(D, B), publication(E, D).;true;true
7;true,false,true;publication(E, B).;false;false
7;true,false,false;publication(F, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), tempadvisedby(E, D).;true;true
8;true,true;publication(F, A), publication(F, D).;true;true
8;true,true,true;ta(G, E, H), publication(I, B).;false;false
8;true,true,false;publication(J, B).;false;false
8;true,false;publication(K, A).;false;true
8;true,false,false;publication(L, B).;false;false
8;false;professor(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true;tempadvisedby(F, B).;true;true
9;true,true,true;ta(G, F, H).;false;false
9;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
9;true,false;publication(L, B), publication(L, A).;false;true
9;true,false,false;publication(M, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7.30e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839133;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462838;  // std dev = 1.29e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 7.74e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( movie(C, E), director(E) )
%   | | | then return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0926912761892609;  // std dev = 6.14e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then return 0.22815978273156218;  // std dev = 0.730, 63.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 6.75e-08, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20363704505657063;  // std dev = 0.057, 60.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109155;  // std dev = 6.66e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1819768667600192;  // std dev = 6.50e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.12541701717955264;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, D) )
%   | | then if ( movie(F, B) )
%   | | | then return 0.15643611650627165;  // std dev = 4.21e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, B) )
%   | | | then return -0.11229402974578592;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return -0.06842697784420275;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.06842697784420265;  // std dev = 5.16e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.1166583899651592;  // std dev = 0.069, 63.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071473
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.931 seconds
Total inference time: 1.942 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066996
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.944 seconds
Parameter learned model CLL: -0.066996


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [0.0, 0, 58], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 8, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.3e-08, 114, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, H)'}, {'true,true,true,true': [0.0, 0, 58], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 112, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, B)'}, {'true,true': [1.29e-08, 0, 58], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.74e-08, 96, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(F, A)'}, {'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 111, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, E), director(E)'}, {'true,true,true': [0.0, 0, 58], 'true,true,false,true': [0.0, 5, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.14e-08, 108, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)'}, {'true,true': [0.73, 5, 58], 'true,false': [0.0, 0, 0], 'false': [6.75e-08, 130, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.057, 2, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.66e-08, 115, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [6.5e-08, 0, 58], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 105, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, D)', 'true,true,true': 'movie(F, B)', 'true,true,false': 'movie(G, B)', 'false': 'director(B)'}, {'true,true,true,true': [4.21e-08, 0, 58], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false': [5.16e-08, 108, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.069, 5, 58], 'true,false': [0.0, 0, 0], 'false': [0.0, 101, 0]}]]
[{'': [0.10651974288337872, 4.674623261579606e-17], 'true': [-3.675221047035001e-16, -6.938893903907228e-18], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan], 'true,true': [-3.675221047035001e-16, nan]}, {'': [0.06860069208541114, -5.9476233462061954e-18], 'true': [-1.2250736823450003e-16, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan], 'true,false,true': [-1.982541115402065e-18, nan], 'true,true': [-1.2250736823450003e-16, nan], 'true,true,true': [-1.2250736823450003e-16, nan]}, {'': [0.0378756149402803, 6.245004513516506e-17], 'true': [2.4501473646900006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.01968953885342776, -8.001607384685813e-18], 'true': [-3.3689526264487507e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.012487180976206418, 3.4951465590051226e-17], 'true': [0.012487180976206418, nan], 'true,true': [-1.5313421029312505e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.008464206643349464, 3.5014726161254936e-17], 'true': [0.008464206643349464, nan]}, {'': [0.003278973272454766, 3.8616453030440226e-17], 'true': [0.003278973272454766, nan], 'true,true': [0.003278973272454766, nan]}, {'': [0.00441855253419011, -5.28677630773884e-18], 'true': [7.273874988923439e-17, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan], 'true,false,true': [2.3129646346357427e-18, nan]}, {'': [0.0012032524295518426, 2.4445277606425466e-17], 'true': [0.0012032524295518426, nan], 'true,true': [3.062684205862501e-17, 0.0], 'true,true,true': [3.062684205862501e-17, nan], 'false': [0.0, 2.4671622769447922e-17], 'true,true,false': [0.0, nan]}, {'': [0.004758963175276088, -1.5389230044309102e-17], 'true': [0.004758963175276088, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(E, A), movie(E, D).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.12544463852839105;  // std dev = 8.02e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.11231637819360621;  // std dev = 8.16e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10159632948783626;  // std dev = 4.59e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601496;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2726417165381251;  // std dev = 0.133, 43.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 4.59e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26122811976649757;  // std dev = 0.033, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12085986106319466;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0851847513883968;  // std dev = 6.41e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1935329094539264;  // std dev = 0.068, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.20852288806564495;  // std dev = 0.051, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   else return -0.07877675473109158;  // std dev = 5.96e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18179646036032712;  // std dev = 0.018, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12900482969978205;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07324622576333707;  // std dev = 5.05e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( female(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1534529592876992;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.11744734520785097;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.14420660985684108;  // std dev = 0.059, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420265;  // std dev = 5.48e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1345603712143319;  // std dev = 3.23e-09, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.13956613721886058;  // std dev = 4.17e-09, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.11054071374319259;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(B) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.06419184008202626;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069273
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.126 seconds
Total inference time: 1.365 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06608
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.849 seconds
Refined model CLL: -0.06608


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069273
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.8499999999999996 seconds
Total inference time: 1.365 seconds
AUC ROC: 1.0
Total revision time: 3.8499999999999996
Best scored revision CLL: -0.06608


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:02:36
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069273, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.8499999999999996, 'Inference time': 1.365, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.071473, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.931, 'Inference time': 1.942}}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;false;true
0;true,true,false;ta(F, A, G).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,false,false;ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, F).;true;true
1;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
1;true,false,false;publication(J, B), publication(K, A).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;publication(D, B), publication(D, A).;true;true
2;true,true;tempadvisedby(E, B).;true;true
2;true,true,true;ta(F, E, G).;false;false
2;true,true,false;ta(H, A, I).;false;false
2;true,false;publication(J, A).;true;true
2;true,false,true;ta(K, A, L), publication(M, B).;false;false
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B), ta(G, F, E).;false;false
3;true,false;tempadvisedby(H, B), publication(I, H).;true;true
3;true,false,true;publication(J, A).;false;false
3;true,false,false;publication(K, A).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, A), publication(D, B).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;tempadvisedby(E, B).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;projectmember(G, B).;true;true
4;true,false,true;publication(H, A).;false;false
4;true,false,false;tempadvisedby(I, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D).;true;true
5;true,true;tempadvisedby(E, B), ta(F, E, D).;false;true
5;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
5;true,false;publication(I, B).;true;true
5;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
5;true,false,false;publication(L, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, G, E), publication(C, G).;true;true
6;true,true,true;ta(D, G, H).;false;false
6;true,true,false;publication(C, I), ta(J, I, K).;false;false
6;true,false;publication(L, B), publication(L, A).;true;true
6;true,false,true;tempadvisedby(M, B).;false;false
6;true,false,false;projectmember(N, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;false;true
7;true,false;tempadvisedby(D, B), publication(E, D).;true;true
7;true,false,true;publication(E, B).;false;false
7;true,false,false;publication(F, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), tempadvisedby(E, D).;true;true
8;true,true;publication(F, A), publication(F, D).;true;true
8;true,true,true;ta(G, E, H), publication(I, B).;false;false
8;true,true,false;publication(J, B).;false;false
8;true,false;publication(K, A).;false;true
8;true,false,false;publication(L, B).;false;false
8;false;professor(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true;tempadvisedby(F, B).;true;true
9;true,true,true;ta(G, F, H).;false;false
9;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
9;true,false;publication(L, B), publication(L, A).;false;true
9;true,false,false;publication(M, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048766;  // std dev = 5.96e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004882;  // std dev = 0.000, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, H) )
%   | | | then return -0.12544463852839158;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839183;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462834;  // std dev = 4.21e-08, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.025764902182880092;  // std dev = 4.360, 378.000 (wgt'ed) examples reached here.  /* #neg=329 #pos=49 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.45721065433544794;  // std dev = 0.064, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10524443844877868;  // std dev = 0.033, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10977312543477688;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.34950807966115544;  // std dev = 0.061, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else if ( movie(C, E), director(E) )
%   | | | then return -0.09602639685288819;  // std dev = 0.030, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0994963076019274;  // std dev = 0.000, 328.000 (wgt'ed) examples reached here.  /* #neg=328 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then return 0.1960102392175588;  // std dev = 2.386, 228.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=178 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09093017198011956;  // std dev = 1.76e-07, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14625547274816011;  // std dev = 0.158, 244.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08368808507077918;  // std dev = 0.000, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21368939114152066;  // std dev = 0.618, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.11873819554317133;  // std dev = 0.035, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07749007323594274;  // std dev = 9.77e-08, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, D) )
%   | | then if ( movie(F, B) )
%   | | | then return 0.12182387633180829;  // std dev = 1.053, 148.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=129 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, B) )
%   | | | then return -0.10364588637981974;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.09418617686057958;  // std dev = 1.601, 89.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=49 */
%   | else return -0.07212887705662506;  // std dev = 0.000, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.09417969796273654;  // std dev = 0.126, 238.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=178 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06858380446571274;  // std dev = 0.058, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069616
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.589 seconds
Total inference time: 1.727 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.08181
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.001 seconds
Parameter learned model CLL: -0.08181


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [1.09e-06, 0, 178], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.96e-08, 57, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 281, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, H)'}, {'true,true,true,true': [0.0, 0, 178], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 66, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 294, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, B)'}, {'true,true': [4.21e-08, 0, 129], 'true,false,true,true': [0.0, 39, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.36, 329, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(F, A)'}, {'true,true': [0.064, 0, 178], 'true,false,true,true': [0.033, 65, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 309, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, E), director(E)'}, {'true,true,true': [0.061, 0, 178], 'true,true,false,true': [0.03, 64, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 328, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)'}, {'true,true': [2.386, 50, 178], 'true,false': [0.0, 0, 0], 'false': [1.76e-07, 285, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.158, 66, 178], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 285, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.618, 0, 178], 'true,false,true,true': [0.035, 62, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.77e-08, 296, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, D)', 'true,true,true': 'movie(F, B)', 'true,true,false': 'movie(G, B)', 'false': 'director(B)'}, {'true,true,true,true': [1.053, 19, 129], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 11, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.601, 40, 49], 'false,false': [0.0, 272, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.126, 60, 178], 'true,false': [0.0, 0, 0], 'false': [0.058, 297, 0]}]]
[{'': [0.18372114078769256, -1.1694875988934033e-16], 'true': [6.706246045376226e-15, 6.232831015439475e-17], 'true,true': [6.706246045376226e-15, nan], 'true,false': [6.232831015439475e-17, nan], 'true,false,true': [6.232831015439475e-17, nan]}, {'': [0.14086836113344384, -5.739928562687884e-17], 'true': [-3.193450497798203e-15, -3.700743415417188e-17], 'true,false': [-3.700743415417188e-17, nan], 'true,false,true': [-3.700743415417188e-17, nan], 'true,true': [-3.193450497798203e-15, nan], 'true,true,true': [-3.193450497798203e-15, nan]}, {'': [0.07946504809427092, 0.05029777514040828], 'true': [1.7625866313428842e-15, -5.693451408334136e-18], 'true,false': [-5.693451408334136e-18, nan], 'true,false,true': [-5.693451408334136e-18, nan]}, {'': [0.06502978911566434, -1.4659255470778767e-16], 'true': [0.00414868575721839, 1.6521143574944353e-05], 'true,false': [1.6521143574944353e-05, nan], 'true,false,true': [1.6521143574944353e-05, nan]}, {'': [0.04132259060747205, -5.821901226692894e-17], 'true': [0.04132259060747205, nan], 'true,true': [0.0036789516951766556, 1.4115804400159637e-05], 'true,true,false': [1.4115804400159637e-05, nan]}, {'': [0.024978612086356756, 1.0907454277019081e-16], 'true': [0.024978612086356756, nan]}, {'': [0.024984153741772975, -7.089845280062403e-17], 'true': [0.024984153741772975, nan], 'true,true': [0.024984153741772975, nan]}, {'': [0.022770769145317192, 3.225647976951468e-17], 'true': [0.002147360276362939, 1.9736281649586756e-05], 'true,false': [1.9736281649586756e-05, nan], 'true,false,true': [1.9736281649586756e-05, nan]}, {'': [0.01024323985201764, 0.012237031235975209], 'false': [0.028794297701975113, -3.918434204559376e-17], 'true': [0.01024323985201764, nan], 'true,true': [0.007487563287189994, -5.046468293750712e-18], 'true,true,true': [0.007487563287189994, nan], 'true,true,false': [-5.046468293750712e-18, nan]}, {'': [0.01593548014627187, 1.1480523155735457e-05], 'true': [0.01593548014627187, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(E, A), movie(E, D).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.66e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.141851064900488;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.12544463852839186;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462834;  // std dev = 4.77e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.11231637819360642;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 2.02e-07, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.11231637819360638;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return -0.1123163781936068;  // std dev = 0.000, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.72e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783617;  // std dev = 4.94e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.10159632948783652;  // std dev = 0.000, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1778445912967511;  // std dev = 0.197, 136.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=89 */
%   | | else return 0.20402548169862317;  // std dev = 0.186, 124.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=89 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926055;  // std dev = 1.17e-07, 278.000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2806176739874504;  // std dev = 0.035, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11002617863144744;  // std dev = 0.009, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.08518475138839678;  // std dev = 9.42e-08, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22758320308249014;  // std dev = 0.031, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09967195073166678;  // std dev = 0.009, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.07877675473109146;  // std dev = 4.21e-08, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.19006541672132946;  // std dev = 0.027, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09119249294172223;  // std dev = 0.008, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.07324622576333682;  // std dev = 1.03e-07, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.16202987956520276;  // std dev = 0.019, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.08382397754894327;  // std dev = 0.006, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.1637858157444207;  // std dev = 0.009, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.0684269778442027;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.07730686010655156;  // std dev = 0.052, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return -0.06842697784420282;  // std dev = 0.000, 265.000 (wgt'ed) examples reached here.  /* #neg=265 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.14158850840786247;  // std dev = 0.021, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07791046052230857;  // std dev = 0.008, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.06415699642497741;  // std dev = 0.002, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064237
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.667 seconds
Total inference time: 1.305 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067785
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.964 seconds
Refined model CLL: -0.067785


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064237
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.221 seconds
Total inference time: 1.305 seconds
AUC ROC: 1.0
Total revision time: 5.221
Best scored revision CLL: -0.067785


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:02:45
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064237, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.221, 'Inference time': 1.305, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069616, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.589, 'Inference time': 1.727}}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;false;true
0;true,true,false;ta(F, A, G).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,false,false;ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, F).;true;true
1;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
1;true,false,false;publication(J, B), publication(K, A).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;publication(D, B), publication(D, A).;true;true
2;true,true;tempadvisedby(E, B).;true;true
2;true,true,true;ta(F, E, G).;false;false
2;true,true,false;ta(H, A, I).;false;false
2;true,false;publication(J, A).;true;true
2;true,false,true;ta(K, A, L), publication(M, B).;false;false
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B), ta(G, F, E).;false;false
3;true,false;tempadvisedby(H, B), publication(I, H).;true;true
3;true,false,true;publication(J, A).;false;false
3;true,false,false;publication(K, A).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, A), publication(D, B).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;tempadvisedby(E, B).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;projectmember(G, B).;true;true
4;true,false,true;publication(H, A).;false;false
4;true,false,false;tempadvisedby(I, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D).;true;true
5;true,true;tempadvisedby(E, B), ta(F, E, D).;false;true
5;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
5;true,false;publication(I, B).;true;true
5;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
5;true,false,false;publication(L, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, G, E), publication(C, G).;true;true
6;true,true,true;ta(D, G, H).;false;false
6;true,true,false;publication(C, I), ta(J, I, K).;false;false
6;true,false;publication(L, B), publication(L, A).;true;true
6;true,false,true;tempadvisedby(M, B).;false;false
6;true,false,false;projectmember(N, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;false;true
7;true,false;tempadvisedby(D, B), publication(E, D).;true;true
7;true,false,true;publication(E, B).;false;false
7;true,false,false;publication(F, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), tempadvisedby(E, D).;true;true
8;true,true;publication(F, A), publication(F, D).;true;true
8;true,true,true;ta(G, E, H), publication(I, B).;false;false
8;true,true,false;publication(J, B).;false;false
8;true,false;publication(K, A).;false;true
8;true,false,false;publication(L, B).;false;false
8;false;professor(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true;tempadvisedby(F, B).;true;true
9;true,true,true;ta(G, F, H).;false;false
9;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
9;true,false;publication(L, B), publication(L, A).;false;true
9;true,false,false;publication(M, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8.56e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283914;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360622;  // std dev = 6.32e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783615;  // std dev = 5.87e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.32071184716014944;  // std dev = 3.73e-09, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(C, E), director(E) )
%   | | | then return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926108;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then return 0.24068896623085617;  // std dev = 0.471, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 4.59e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.17474747435536825;  // std dev = 0.102, 51.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109164;  // std dev = 4.83e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1844249779221921;  // std dev = 4.94e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.12363345577480449;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, D) )
%   | | then if ( movie(F, B) )
%   | | | then return 0.1313678250843525;  // std dev = 0.571, 50.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return -0.06842697784420275;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.06842697784420267;  // std dev = 3.49e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.11495110569503772;  // std dev = 0.080, 50.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070646
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.918 seconds
Total inference time: 1.91 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069171
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.768 seconds
Parameter learned model CLL: -0.069171


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [2.23e-07, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.56e-08, 94, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, H)'}, {'true,true,true,true': [0.0, 0, 45], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 88, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 9, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.32e-08, 79, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(F, A)'}, {'true,true': [0.0, 0, 45], 'true,false,true,true': [5.27e-09, 9, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.87e-08, 77, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, E), director(E)'}, {'true,true,true': [3.73e-09, 0, 45], 'true,true,false,true': [0.0, 4, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 83, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)'}, {'true,true': [0.471, 2, 45], 'true,false': [0.0, 0, 0], 'false': [4.59e-08, 77, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.102, 6, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.83e-08, 84, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [4.94e-08, 0, 45], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 84, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, D)', 'true,true,true': 'movie(F, B)', 'false': 'director(B)'}, {'true,true,true,true': [0.571, 5, 45], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false': [3.49e-08, 76, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.08, 5, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 86, 0]}]]
[{'': [0.10380622837370317, 7.795182938857482e-17], 'true': [1.105288700071267e-15, -6.938893903907228e-18], 'true,true': [1.105288700071267e-15, nan], 'true,false': [-6.938893903907228e-18, nan], 'true,false,true': [-6.938893903907228e-18, nan]}, {'': [0.0831635545216455, -1.766263902812749e-17], 'true': [-9.473903143468002e-16, -1.982541115402065e-18], 'true,false': [-1.982541115402065e-18, nan], 'true,false,true': [-1.982541115402065e-18, nan], 'true,true': [-9.473903143468002e-16, nan], 'true,true,true': [-9.473903143468002e-16, nan]}, {'': [0.06191671407861913, 5.0592441628488145e-17], 'true': [-3.947459643111668e-17, -1.5419764230904951e-18], 'true,false': [-1.5419764230904951e-18, nan], 'true,false,true': [-1.5419764230904951e-18, nan]}, {'': [0.03742709756190387, 4.469729060179202e-17], 'true': [-4.144832625267251e-16, 3.0839528461809902e-18], 'true,false': [3.0839528461809902e-18, nan], 'true,false,true': [3.0839528461809902e-18, nan]}, {'': [0.012812322212040247, 0.0], 'true': [0.012812322212040247, nan], 'true,true': [1.973729821555834e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.00471971910377743, 2.739511359464672e-17], 'true': [0.00471971910377743, nan]}, {'': [0.010502525217491662, 2.7755575615628914e-17], 'true': [0.010502525217491662, nan], 'true,true': [0.010502525217491662, nan]}, {'': [0.008540999871466268, -3.96508223080413e-18], 'true': [5.427757009278543e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.006518784438540277, 1.658125296518091e-17], 'true': [0.006518784438540277, nan], 'true,true': [0.006518784438540277, nan], 'true,true,true': [0.006518784438540277, nan], 'false': [0.0, 1.6069017461679898e-17]}, {'': [0.006369370546638536, -1.2264091551091846e-17], 'true': [0.006369370546638536, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048766;  // std dev = 7.88e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.12544463852839138;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360622;  // std dev = 6.50e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783623;  // std dev = 4.83e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2571113666448558;  // std dev = 0.149, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0.2501308261004942;  // std dev = 0.156, 41.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926101;  // std dev = 3.33e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26848209631249065;  // std dev = 0.004, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11621760018031939;  // std dev = 0.000829, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.08518475138839683;  // std dev = 4.21e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2191170650103908;  // std dev = 0.003, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10458424847227724;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07877675473109162;  // std dev = 4.83e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18393135377282677;  // std dev = 0.003, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09530805466197714;  // std dev = 0.000539, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07324622576333707;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15790928995126097;  // std dev = 0.003, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08747550063511104;  // std dev = 0.000455, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( director(B) )
%   | then return -0.06842697784420275;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06842697784420265;  // std dev = 4.83e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13740013802024773;  // std dev = 3.23e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.13822957710101935;  // std dev = 3.73e-09, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.0805673741102372;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202625;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066115
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.931 seconds
Total inference time: 1.405 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064853
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.675 seconds
Refined model CLL: -0.064853


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066115
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.292 seconds
Total inference time: 1.405 seconds
AUC ROC: 1.0
Total revision time: 3.292
Best scored revision CLL: -0.064853


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:02:52
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066115, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.292, 'Inference time': 1.405, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070646, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.918, 'Inference time': 1.91}}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;false;true
0;true,true,false;ta(F, A, G).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,false,false;ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, F).;true;true
1;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
1;true,false,false;publication(J, B), publication(K, A).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;publication(D, B), publication(D, A).;true;true
2;true,true;tempadvisedby(E, B).;true;true
2;true,true,true;ta(F, E, G).;false;false
2;true,true,false;ta(H, A, I).;false;false
2;true,false;publication(J, A).;true;true
2;true,false,true;ta(K, A, L), publication(M, B).;false;false
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B), ta(G, F, E).;false;false
3;true,false;tempadvisedby(H, B), publication(I, H).;true;true
3;true,false,true;publication(J, A).;false;false
3;true,false,false;publication(K, A).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, A), publication(D, B).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;tempadvisedby(E, B).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;projectmember(G, B).;true;true
4;true,false,true;publication(H, A).;false;false
4;true,false,false;tempadvisedby(I, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D).;true;true
5;true,true;tempadvisedby(E, B), ta(F, E, D).;false;true
5;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
5;true,false;publication(I, B).;true;true
5;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
5;true,false,false;publication(L, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, G, E), publication(C, G).;true;true
6;true,true,true;ta(D, G, H).;false;false
6;true,true,false;publication(C, I), ta(J, I, K).;false;false
6;true,false;publication(L, B), publication(L, A).;true;true
6;true,false,true;tempadvisedby(M, B).;false;false
6;true,false,false;projectmember(N, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;false;true
7;true,false;tempadvisedby(D, B), publication(E, D).;true;true
7;true,false,true;publication(E, B).;false;false
7;true,false,false;publication(F, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), tempadvisedby(E, D).;true;true
8;true,true;publication(F, A), publication(F, D).;true;true
8;true,true,true;ta(G, E, H), publication(I, B).;false;false
8;true,true,false;publication(J, B).;false;false
8;true,false;publication(K, A).;false;true
8;true,false,false;publication(L, B).;false;false
8;false;professor(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true;tempadvisedby(F, B).;true;true
9;true,true,true;ta(G, F, H).;false;false
9;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
9;true,false;publication(L, B), publication(L, A).;false;true
9;true,false,false;publication(M, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7.74e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839144;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462843;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.042766084970701085;  // std dev = 1.998, 96.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.450488412881723;  // std dev = 0.062, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10241212683025076;  // std dev = 0.006, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10812270822715203;  // std dev = 7.15e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.3447320814304876;  // std dev = 0.058, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(C, E), director(E) )
%   | | | then return -0.09663150133780725;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0981293591398167;  // std dev = 1.83e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then return 0.2430985136065182;  // std dev = 0.774, 49.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08978083676379507;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20039743315538808;  // std dev = 0.102, 49.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08270912482909314;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.19468355102577897;  // std dev = 0.285, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.1309025653787969;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07664681082300627;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, D) )
%   | | then if ( movie(F, B) )
%   | | | then return 0.13202273003148352;  // std dev = 0.355, 37.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.1777136621389318;  // std dev = 0.461, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else return -0.07139533102249901;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.11374898627776356;  // std dev = 0.096, 51.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06699670843568202;  // std dev = 0.017, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074035
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.871 seconds
Total inference time: 1.979 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070064
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.791 seconds
Parameter learned model CLL: -0.070064


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [2.23e-07, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.74e-08, 82, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, H)'}, {'true,true,true,true': [0.0, 0, 45], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 84, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 35], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.998, 86, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(F, A)'}, {'true,true': [0.062, 0, 45], 'true,false,true,true': [0.006, 8, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.15e-08, 105, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, E), director(E)'}, {'true,true,true': [0.058, 0, 45], 'true,true,false,true': [0.005, 3, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.83e-08, 89, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)'}, {'true,true': [0.774, 4, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 76, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.102, 4, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 72, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.285, 0, 45], 'true,false,true,true': [0.009, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 87, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, D)', 'true,true,true': 'movie(F, B)', 'false': 'director(B)'}, {'true,true,true,true': [0.355, 2, 35], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.461, 2, 10], 'false,false': [0.0, 96, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.096, 6, 45], 'true,false': [0.0, 0, 0], 'false': [0.017, 90, 0]}]]
[{'': [0.05859375000000089, 7.311224796312007e-17], 'true': [1.105288700071267e-15, 0.0], 'true,true': [1.105288700071267e-15, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.05351918877289897, -2.114710523095536e-17], 'true': [-9.473903143468002e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-9.473903143468002e-16, nan], 'true,true,true': [-9.473903143468002e-16, nan]}, {'': [0.032416229808473605, 0.04160029227157207], 'true': [-2.0301221021717148e-16, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan], 'true,false,true': [2.3129646346357427e-18, nan]}, {'': [0.04241017543030225, 4.8638342031197334e-17], 'true': [0.0038056876526841423, 4.6586771272373595e-06], 'true,false': [4.6586771272373595e-06, nan], 'true,false,true': [4.6586771272373595e-06, nan]}, {'': [0.014600816522414387, 3.742324802107269e-18], 'true': [0.014600816522414387, nan], 'true,true': [0.00339855534303519, 8.035281165704131e-06], 'true,true,false': [8.035281165704131e-06, nan]}, {'': [0.01224154695258124, -2.7755575615628914e-17], 'true': [0.01224154695258124, nan]}, {'': [0.010368503796043926, -2.1587669923266933e-17], 'true': [0.010368503796043926, nan], 'true,true': [0.010368503796043926, nan]}, {'': [0.011166665829235548, -2.5522368382187506e-18], 'true': [0.0018051229109683634, 1.4864817767631933e-05], 'true,false': [1.4864817767631933e-05, nan], 'true,false,true': [1.4864817767631933e-05, nan]}, {'': [0.0034149563466839747, 0.008092858720042066], 'false': [0.017675470281354785, -1.9660199394403815e-17], 'true': [0.0034149563466839747, nan], 'true,true': [0.0034149563466839747, nan], 'true,true,true': [0.0034149563466839747, nan]}, {'': [0.009297178634105892, 3.2916177065319316e-06], 'true': [0.009297178634105892, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048766;  // std dev = 7.88e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839147;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462843;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.11231637819360618;  // std dev = 8.43e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else return 0.5553664367462844;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14112469069954306;  // std dev = 0.097, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10236387048223837;  // std dev = 0.079, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.3207118471601494;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.13218599540658088;  // std dev = 0.078, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09262674647280016;  // std dev = 4.59e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2551722425694895;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.23783182718518625;  // std dev = 0.081, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.08512998288177065;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21117001974758584;  // std dev = 0.010, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1300408686540653;  // std dev = 0.085, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07872972396305578;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17813202820603832;  // std dev = 0.009, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12344711678223302;  // std dev = 0.087, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07320542523077653;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15358643821855517;  // std dev = 0.007, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.07850966233915191;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.11009991982576718;  // std dev = 0.104, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.0987027669971582;  // std dev = 0.250, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.06839126320707019;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1358788613596643;  // std dev = 0.017, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11442367521854917;  // std dev = 0.101, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06416032809502245;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068458
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.839 seconds
Total inference time: 1.477 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065594
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.693 seconds
Refined model CLL: -0.065594


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068458
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.194 seconds
Total inference time: 1.477 seconds
AUC ROC: 1.0
Total revision time: 3.194
Best scored revision CLL: -0.065594


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:02:59
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068458, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.194, 'Inference time': 1.477, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.074035, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.871, 'Inference time': 1.979}}


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;false;true
0;true,true,false;ta(F, A, G).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,false,false;ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, F).;true;true
1;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
1;true,false,false;publication(J, B), publication(K, A).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;publication(D, B), publication(D, A).;true;true
2;true,true;tempadvisedby(E, B).;true;true
2;true,true,true;ta(F, E, G).;false;false
2;true,true,false;ta(H, A, I).;false;false
2;true,false;publication(J, A).;true;true
2;true,false,true;ta(K, A, L), publication(M, B).;false;false
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B), ta(G, F, E).;false;false
3;true,false;tempadvisedby(H, B), publication(I, H).;true;true
3;true,false,true;publication(J, A).;false;false
3;true,false,false;publication(K, A).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, A), publication(D, B).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;tempadvisedby(E, B).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;projectmember(G, B).;true;true
4;true,false,true;publication(H, A).;false;false
4;true,false,false;tempadvisedby(I, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D).;true;true
5;true,true;tempadvisedby(E, B), ta(F, E, D).;false;true
5;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
5;true,false;publication(I, B).;true;true
5;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
5;true,false,false;publication(L, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, G, E), publication(C, G).;true;true
6;true,true,true;ta(D, G, H).;false;false
6;true,true,false;publication(C, I), ta(J, I, K).;false;false
6;true,false;publication(L, B), publication(L, A).;true;true
6;true,false,true;tempadvisedby(M, B).;false;false
6;true,false,false;projectmember(N, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;false;true
7;true,false;tempadvisedby(D, B), publication(E, D).;true;true
7;true,false,true;publication(E, B).;false;false
7;true,false,false;publication(F, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), tempadvisedby(E, D).;true;true
8;true,true;publication(F, A), publication(F, D).;true;true
8;true,true,true;ta(G, E, H), publication(I, B).;false;false
8;true,true,false;publication(J, B).;false;false
8;true,false;publication(K, A).;false;true
8;true,false,false;publication(L, B).;false;false
8;false;professor(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true;tempadvisedby(F, B).;true;true
9;true,true,true;ta(G, F, H).;false;false
9;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
9;true,false;publication(L, B), publication(L, A).;false;true
9;true,false,false;publication(M, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462837;  // std dev = 1.49e-08, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360622;  // std dev = 7.88e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( movie(C, E), director(E) )
%   | | | then return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926086;  // std dev = 7.07e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then return 0.23248177630563055;  // std dev = 0.658, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 6.23e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.16941878272268074;  // std dev = 0.110, 65.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0787767547310916;  // std dev = 5.58e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18646964518078052;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.12217432280523309;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 4.47e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, D) )
%   | | then if ( movie(F, B) )
%   | | | then return 0.14611530611925871;  // std dev = 0.455, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return -0.06842697784420278;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.06842697784420267;  // std dev = 4.41e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.11542408458345216;  // std dev = 0.079, 62.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=56 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07163
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.996 seconds
Total inference time: 1.829 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066372
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.981 seconds
Parameter learned model CLL: -0.066372


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [0.0, 0, 56], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.16e-08, 109, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, H)'}, {'true,true,true,true': [0.0, 0, 56], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 120, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, B)'}, {'true,true': [1.49e-08, 0, 56], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.88e-08, 107, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(F, A)'}, {'true,true': [0.0, 0, 56], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 110, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, E), director(E)'}, {'true,true,true': [0.0, 0, 56], 'true,true,false,true': [2.63e-09, 3, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.07e-08, 115, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)'}, {'true,true': [0.658, 4, 56], 'true,false': [0.0, 0, 0], 'false': [6.23e-08, 118, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.11, 9, 56], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.58e-08, 96, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.0, 0, 56], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.47e-08, 105, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, D)', 'true,true,true': 'movie(F, B)', 'false': 'director(B)'}, {'true,true,true,true': [0.455, 3, 56], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false': [4.41e-08, 90, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.079, 6, 56], 'true,false': [0.0, 0, 0], 'false': [0.0, 125, 0]}]]
[{'': [0.03329369797859664, 6.111319401606367e-17], 'true': [-1.2688263138573217e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.2688263138573217e-16, nan]}, {'': [0.044419605220055364, -1.8503717077085942e-18], 'true': [-1.9032394707859825e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.9032394707859825e-16, nan], 'true,true,true': [-1.9032394707859825e-16, nan]}, {'': [0.014842341924197077, 5.810513026075585e-17], 'true': [1.9032394707859825e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.020277621253640864, -6.0557619525008536e-18], 'true': [-3.489272363107635e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.008248078116164221, 4.344350965924526e-17], 'true': [0.008248078116164221, nan], 'true,true': [-1.2688263138573217e-16, 2.3129646346357427e-18], 'true,true,false': [2.3129646346357427e-18, nan]}, {'': [0.007208001629798563, 3.293034395074617e-17], 'true': [0.007208001629798563, nan]}, {'': [0.012114688133240922, 3.23815048849004e-17], 'true': [0.012114688133240922, nan], 'true,true': [0.012114688133240922, nan]}, {'': [0.005927357269502735, 1.9032394707859827e-17], 'true': [-1.1895246692412391e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.0035048180010189703, 2.1960455432145953e-17], 'true': [0.0035048180010189703, nan], 'true,true': [0.0035048180010189703, nan], 'true,true,true': [0.0035048180010189703, nan], 'false': [0.0, 2.1587669923266933e-17]}, {'': [0.006181169728892527, -1.687538997430238e-17], 'true': [0.006181169728892527, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048763;  // std dev = 8.94e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.12544463852839133;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360618;  // std dev = 8.56e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1015963294878363;  // std dev = 2.11e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926085;  // std dev = 7.22e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25517224256948967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.08518475138839682;  // std dev = 5.37e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1072898933709188;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109162;  // std dev = 5.16e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09743833150549566;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333707;  // std dev = 4.08e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1527438580936708;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08919891337579589;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420265;  // std dev = 5.27e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801087;  // std dev = 5.27e-09, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.13400703000801084;  // std dev = 5.59e-09, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.08221279734301994;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.06419184008202626;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066714
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.962 seconds
Total inference time: 1.402 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063981
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.84 seconds
Refined model CLL: -0.063981


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066714
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.779 seconds
Total inference time: 1.402 seconds
AUC ROC: 1.0
Total revision time: 3.779
Best scored revision CLL: -0.063981


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:03:07
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066714, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.779, 'Inference time': 1.402, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.07163, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.996, 'Inference time': 1.829}}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;false;true
0;true,true,false;ta(F, A, G).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,false,false;ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, F).;true;true
1;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
1;true,false,false;publication(J, B), publication(K, A).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;publication(D, B), publication(D, A).;true;true
2;true,true;tempadvisedby(E, B).;true;true
2;true,true,true;ta(F, E, G).;false;false
2;true,true,false;ta(H, A, I).;false;false
2;true,false;publication(J, A).;true;true
2;true,false,true;ta(K, A, L), publication(M, B).;false;false
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B), ta(G, F, E).;false;false
3;true,false;tempadvisedby(H, B), publication(I, H).;true;true
3;true,false,true;publication(J, A).;false;false
3;true,false,false;publication(K, A).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, A), publication(D, B).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;tempadvisedby(E, B).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;projectmember(G, B).;true;true
4;true,false,true;publication(H, A).;false;false
4;true,false,false;tempadvisedby(I, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D).;true;true
5;true,true;tempadvisedby(E, B), ta(F, E, D).;false;true
5;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
5;true,false;publication(I, B).;true;true
5;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
5;true,false,false;publication(L, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, G, E), publication(C, G).;true;true
6;true,true,true;ta(D, G, H).;false;false
6;true,true,false;publication(C, I), ta(J, I, K).;false;false
6;true,false;publication(L, B), publication(L, A).;true;true
6;true,false,true;tempadvisedby(M, B).;false;false
6;true,false,false;projectmember(N, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;false;true
7;true,false;tempadvisedby(D, B), publication(E, D).;true;true
7;true,false,true;publication(E, B).;false;false
7;true,false,false;publication(F, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), tempadvisedby(E, D).;true;true
8;true,true;publication(F, A), publication(F, D).;true;true
8;true,true,true;ta(G, E, H), publication(I, B).;false;false
8;true,true,false;publication(J, B).;false;false
8;true,false;publication(K, A).;false;true
8;true,false,false;publication(L, B).;false;false
8;false;professor(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true;tempadvisedby(F, B).;true;true
9;true,true,true;ta(G, F, H).;false;false
9;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
9;true,false;publication(L, B), publication(L, A).;false;true
9;true,false,false;publication(M, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8.56e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, H) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462838;  // std dev = 1.29e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360617;  // std dev = 9.31e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878364;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( movie(C, E), director(E) )
%   | | | then return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926101;  // std dev = 3.33e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then return 0.21391684936247313;  // std dev = 0.902, 66.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 4.34e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.18667055830679025;  // std dev = 0.093, 64.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109158;  // std dev = 6.05e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18666893057637246;  // std dev = 4.21e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.1220335601250644;  // std dev = 3.73e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333709;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, D) )
%   | | then if ( movie(F, B) )
%   | | | then return 0.14257919323535012;  // std dev = 0.521, 62.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, B) )
%   | | | then return -0.10955000459700232;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420264;  // std dev = 5.48e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.12180180830253177;  // std dev = 0.068, 63.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071545
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.937 seconds
Total inference time: 1.781 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066915
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.906 seconds
Parameter learned model CLL: -0.066915


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [0.0, 0, 58], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.56e-08, 94, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, H)'}, {'true,true,true,true': [0.0, 0, 58], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.27e-09, 11, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 77, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, B)'}, {'true,true': [1.29e-08, 0, 58], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.31e-08, 122, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(F, A)'}, {'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 126, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, E), director(E)'}, {'true,true,true': [0.0, 0, 58], 'true,true,false,true': [0.0, 8, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.33e-08, 92, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)'}, {'true,true': [0.902, 8, 58], 'true,false': [0.0, 0, 0], 'false': [4.34e-08, 101, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.093, 6, 58], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.05e-08, 107, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [4.21e-08, 0, 58], 'true,false,true,true': [3.73e-09, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 124, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, D)', 'true,true,true': 'movie(F, B)', 'true,true,false': 'movie(G, B)', 'false': 'director(B)'}, {'true,true,true,true': [0.521, 4, 58], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.48e-08, 116, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.068, 5, 58], 'true,false': [0.0, 0, 0], 'false': [0.0, 102, 0]}]]
[{'': [0.09609467455621257, 7.795182938857482e-17], 'true': [-3.675221047035001e-16, -7.93016446160826e-18], 'true,false': [-7.93016446160826e-18, nan], 'true,false,true': [-7.93016446160826e-18, nan], 'true,true': [-3.675221047035001e-16, nan]}, {'': [0.09566469123141852, -2.5953265510717945e-17], 'true': [-1.2250736823450003e-16, 2.523234146875356e-18], 'true,false': [2.523234146875356e-18, nan], 'true,false,true': [2.523234146875356e-18, nan], 'true,true': [-1.2250736823450003e-16, nan], 'true,true,true': [-1.2250736823450003e-16, nan]}, {'': [0.0074278712436747505, 7.098147206619854e-17], 'true': [2.4501473646900006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.01968953885342776, -3.172065784643304e-17], 'true': [-3.3689526264487507e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.018204452266139013, 1.206764157201257e-17], 'true': [0.018204452266139013, nan], 'true,true': [-1.5313421029312505e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.012339554147825189, 1.8686922196661052e-17], 'true': [0.012339554147825189, nan]}, {'': [0.00870435659626951, 3.4240523189373984e-17], 'true': [0.00870435659626951, nan], 'true,true': [0.00870435659626951, nan]}, {'': [0.008096541812088444, -4.476705744456276e-18], 'true': [3.062684205862501e-17, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan], 'true,false,true': [2.3129646346357427e-18, nan]}, {'': [0.0053075069926414, 2.584139798696485e-17], 'true': [0.0053075069926414, nan], 'true,true': [0.0043840780965231484, 0.0], 'true,true,true': [0.0043840780965231484, nan], 'false': [nan, 2.584139798696485e-17], 'true,true,false': [0.0, nan]}, {'': [0.004615504528543121, -1.5782582212808597e-17], 'true': [0.004615504528543121, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(E, A), movie(E, D).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.14185106490048763;  // std dev = 8.94e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.12544463852839133;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11231637819360617;  // std dev = 9.54e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10159632948783617;  // std dev = 5.77e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.301025984143511;  // std dev = 0.088, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.24881565179503476;  // std dev = 0.157, 46.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926087;  // std dev = 6.83e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26557766422205753;  // std dev = 0.037, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11705601466511453;  // std dev = 0.007, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.08518475138839682;  // std dev = 5.58e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21708672743036553;  // std dev = 0.032, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1056284382404891;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109155;  // std dev = 6.99e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18245675748972828;  // std dev = 0.028, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09643938844974487;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.0732462257633372;  // std dev = 2.58e-08, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.15680017772798255;  // std dev = 0.025, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.08779232670586587;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420264;  // std dev = 5.48e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13716724231856905;  // std dev = 0.022, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08179905353689623;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06419184008202626;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06653
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.921 seconds
Total inference time: 1.276 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064221
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.826 seconds
Refined model CLL: -0.064221


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06653
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.5900000000000003 seconds
Total inference time: 1.276 seconds
AUC ROC: 1.0
Total revision time: 3.5900000000000003
Best scored revision CLL: -0.064221


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:03:14
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06653, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.5900000000000003, 'Inference time': 1.276, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.071545, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.937, 'Inference time': 1.781}}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;false;true
0;true,true,false;ta(F, A, G).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,false,false;ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, F).;true;true
1;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
1;true,false,false;publication(J, B), publication(K, A).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;publication(D, B), publication(D, A).;true;true
2;true,true;tempadvisedby(E, B).;true;true
2;true,true,true;ta(F, E, G).;false;false
2;true,true,false;ta(H, A, I).;false;false
2;true,false;publication(J, A).;true;true
2;true,false,true;ta(K, A, L), publication(M, B).;false;false
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B), ta(G, F, E).;false;false
3;true,false;tempadvisedby(H, B), publication(I, H).;true;true
3;true,false,true;publication(J, A).;false;false
3;true,false,false;publication(K, A).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, A), publication(D, B).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;tempadvisedby(E, B).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;projectmember(G, B).;true;true
4;true,false,true;publication(H, A).;false;false
4;true,false,false;tempadvisedby(I, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D).;true;true
5;true,true;tempadvisedby(E, B), ta(F, E, D).;false;true
5;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
5;true,false;publication(I, B).;true;true
5;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
5;true,false,false;publication(L, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, G, E), publication(C, G).;true;true
6;true,true,true;ta(D, G, H).;false;false
6;true,true,false;publication(C, I), ta(J, I, K).;false;false
6;true,false;publication(L, B), publication(L, A).;true;true
6;true,false,true;tempadvisedby(M, B).;false;false
6;true,false,false;projectmember(N, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;false;true
7;true,false;tempadvisedby(D, B), publication(E, D).;true;true
7;true,false,true;publication(E, B).;false;false
7;true,false,false;publication(F, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), tempadvisedby(E, D).;true;true
8;true,true;publication(F, A), publication(F, D).;true;true
8;true,true,true;ta(G, E, H), publication(I, B).;false;false
8;true,true,false;publication(J, B).;false;false
8;true,false;publication(K, A).;false;true
8;true,false,false;publication(L, B).;false;false
8;false;professor(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true;tempadvisedby(F, B).;true;true
9;true,true,true;ta(G, F, H).;false;false
9;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
9;true,false;publication(L, B), publication(L, A).;false;true
9;true,false,false;publication(M, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048768;  // std dev = 5.37e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048824;  // std dev = 0.000, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, H) )
%   | | | then return -0.1254446385283916;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839183;  // std dev = 0.000, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462834;  // std dev = 4.21e-08, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.1123163781936064;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.022927148871053012;  // std dev = 4.350, 366.000 (wgt'ed) examples reached here.  /* #neg=317 #pos=49 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4570183016757312;  // std dev = 0.064, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.104555375408895;  // std dev = 0.031, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1100507464051469;  // std dev = 1.05e-07, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.34935795358113775;  // std dev = 0.060, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else if ( movie(C, E), director(E) )
%   | | | then return -0.09600199207838234;  // std dev = 0.030, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09972592255632665;  // std dev = 0.000, 278.000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then return 0.18185419537159336;  // std dev = 2.567, 240.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=178 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09112300066378741;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.15140325866727494;  // std dev = 0.157, 241.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=178 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08385215837769783;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21508352243684303;  // std dev = 0.618, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.11791914921989607;  // std dev = 0.035, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07763127554541781;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, D) )
%   | | then if ( movie(F, B) )
%   | | | then return 0.11544541784918218;  // std dev = 1.165, 153.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=129 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, B) )
%   | | | then return -0.10295341927401241;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.05678340953003502;  // std dev = 1.779, 114.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=49 */
%   | else return -0.0722516098812408;  // std dev = 9.42e-08, 248.000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.10546477336234633;  // std dev = 0.123, 229.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=178 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06836716305156862;  // std dev = 0.043, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069713
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.515 seconds
Total inference time: 1.68 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081501
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.972 seconds
Parameter learned model CLL: -0.081501


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [1.09e-06, 0, 178], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [5.37e-08, 51, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 280, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, H)'}, {'true,true,true,true': [0.0, 0, 178], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 65, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 284, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, B)'}, {'true,true': [4.21e-08, 0, 129], 'true,false,true,true': [0.0, 37, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [4.35, 317, 49]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(F, A)'}, {'true,true': [0.064, 0, 178], 'true,false,true,true': [0.031, 60, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-07, 305, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, E), director(E)'}, {'true,true,true': [0.06, 0, 178], 'true,true,false,true': [0.03, 59, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 278, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)'}, {'true,true': [2.567, 62, 178], 'true,false': [0.0, 0, 0], 'false': [0.0, 305, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.157, 63, 178], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 303, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.618, 0, 178], 'true,false,true,true': [0.035, 58, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 293, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, D)', 'true,true,true': 'movie(F, B)', 'true,true,false': 'movie(G, B)', 'false': 'director(B)'}, {'true,true,true,true': [1.165, 24, 129], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 18, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.779, 65, 49], 'false,false': [9.42e-08, 248, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.123, 51, 178], 'true,false': [0.0, 0, 0], 'false': [0.043, 286, 0]}]]
[{'': [0.17310882706280029, -1.3322676295501878e-16], 'true': [6.706246045376226e-15, 5.659960517696876e-17], 'true,true': [6.706246045376226e-15, nan], 'true,false': [5.659960517696876e-17, nan], 'true,false,true': [5.659960517696876e-17, nan]}, {'': [0.1398781850534626, -6.254777603522009e-17], 'true': [-3.193450497798203e-15, -3.75767792950053e-17], 'true,false': [-3.75767792950053e-17, nan], 'true,false,true': [-3.75767792950053e-17, nan], 'true,true': [-3.193450497798203e-15, nan], 'true,true,true': [-3.193450497798203e-15, nan]}, {'': [0.07721748546016323, 0.05169321794050929], 'true': [1.7625866313428842e-15, -9.00180830777154e-18], 'true,false': [-9.00180830777154e-18, nan], 'true,false,true': [-9.00180830777154e-18, nan]}, {'': [0.06253771196937932, 3.6400754905742835e-17], 'true': [0.004108578144712953, 1.62610551311874e-05], 'true,false': [1.62610551311874e-05, nan], 'true,false,true': [1.62610551311874e-05, nan]}, {'': [0.03982355075016987, -5.750795523238221e-17], 'true': [0.03982355075016987, nan], 'true,true': [0.0036413699345012747, 1.5014409609195538e-05], 'true,true,false': [1.5014409609195538e-05, nan]}, {'': [0.02745372763893223, -7.57135702039451e-17], 'true': [0.02745372763893223, nan]}, {'': [0.024717044384137393, -2.3450255305613868e-17], 'true': [0.024717044384137393, nan], 'true,true': [0.024717044384137393, nan]}, {'': [0.02217745128055498, -2.121927965153883e-17], 'true': [0.0021442569899129842, 2.067307723338423e-05], 'true,false': [2.067307723338423e-05, nan], 'true,false,true': [2.067307723338423e-05, nan]}, {'': [0.01243228233084221, 0.012336073377196092], 'true': [0.01243228233084221, nan], 'true,true': [0.008874056196607062, -7.709882115452476e-18], 'false': [0.027765788873228635, 3.581364595565021e-17], 'true,true,true': [0.008874056196607062, nan], 'true,true,false': [-7.709882115452476e-18, nan]}, {'': [0.015056336453830478, 6.317035630005212e-06], 'true': [0.015056336453830478, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(E, A), movie(E, D).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5.96e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.14185106490048804;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.12544463852839183;  // std dev = 0.000, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462834;  // std dev = 4.77e-07, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.11231637819360642;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 2.02e-07, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.11231637819360639;  // std dev = 7.45e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.11231637819360676;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1015963294878362;  // std dev = 4.08e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.10159632948783656;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.17784459129675106;  // std dev = 0.197, 136.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=89 */
%   | | else return 0.21391604029488595;  // std dev = 0.181, 120.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=89 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926051;  // std dev = 1.38e-07, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.27962731473310143;  // std dev = 0.048, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11057078795650051;  // std dev = 0.014, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.08518475138839678;  // std dev = 9.88e-08, 319.000 (wgt'ed) examples reached here.  /* #neg=319 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22689611512767652;  // std dev = 0.042, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10004556984583603;  // std dev = 0.012, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.07877675473109148;  // std dev = 5.16e-08, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18957022831941245;  // std dev = 0.037, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09130391625866964;  // std dev = 0.011, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.07324622576333684;  // std dev = 8.94e-08, 264.000 (wgt'ed) examples reached here.  /* #neg=264 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.1614785759202693;  // std dev = 0.027, 129.000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.08373297671597417;  // std dev = 0.007, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then if ( director(A) )
%   | | | then return -0.0684269778442027;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.16389335132550514;  // std dev = 0.012, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.07742949156336032;  // std dev = 0.057, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.06842697784420283;  // std dev = 0.000, 268.000 (wgt'ed) examples reached here.  /* #neg=268 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.14130310877241567;  // std dev = 0.028, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07811499869768597;  // std dev = 0.011, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.06416072527062046;  // std dev = 0.002, 277.000 (wgt'ed) examples reached here.  /* #neg=277 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064247
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.645 seconds
Total inference time: 1.262 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067815
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.927 seconds
Refined model CLL: -0.067815


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064247
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.058999999999999 seconds
Total inference time: 1.262 seconds
AUC ROC: 1.0
Total revision time: 5.058999999999999
Best scored revision CLL: -0.067815


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:03:23
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064247, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.058999999999999, 'Inference time': 1.262, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069713, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.515, 'Inference time': 1.68}}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;false;true
0;true,true,false;ta(F, A, G).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,false,false;ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, F).;true;true
1;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
1;true,false,false;publication(J, B), publication(K, A).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;publication(D, B), publication(D, A).;true;true
2;true,true;tempadvisedby(E, B).;true;true
2;true,true,true;ta(F, E, G).;false;false
2;true,true,false;ta(H, A, I).;false;false
2;true,false;publication(J, A).;true;true
2;true,false,true;ta(K, A, L), publication(M, B).;false;false
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B), ta(G, F, E).;false;false
3;true,false;tempadvisedby(H, B), publication(I, H).;true;true
3;true,false,true;publication(J, A).;false;false
3;true,false,false;publication(K, A).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, A), publication(D, B).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;tempadvisedby(E, B).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;projectmember(G, B).;true;true
4;true,false,true;publication(H, A).;false;false
4;true,false,false;tempadvisedby(I, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D).;true;true
5;true,true;tempadvisedby(E, B), ta(F, E, D).;false;true
5;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
5;true,false;publication(I, B).;true;true
5;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
5;true,false,false;publication(L, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, G, E), publication(C, G).;true;true
6;true,true,true;ta(D, G, H).;false;false
6;true,true,false;publication(C, I), ta(J, I, K).;false;false
6;true,false;publication(L, B), publication(L, A).;true;true
6;true,false,true;tempadvisedby(M, B).;false;false
6;true,false,false;projectmember(N, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;false;true
7;true,false;tempadvisedby(D, B), publication(E, D).;true;true
7;true,false,true;publication(E, B).;false;false
7;true,false,false;publication(F, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), tempadvisedby(E, D).;true;true
8;true,true;publication(F, A), publication(F, D).;true;true
8;true,true,true;ta(G, E, H), publication(I, B).;false;false
8;true,true,false;publication(J, B).;false;false
8;true,false;publication(K, A).;false;true
8;true,false,false;publication(L, B).;false;false
8;false;professor(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true;tempadvisedby(F, B).;true;true
9;true,true,true;ta(G, F, H).;false;false
9;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
9;true,false;publication(L, B), publication(L, A).;false;true
9;true,false,false;publication(M, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 6.99e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360624;  // std dev = 5.87e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783617;  // std dev = 5.58e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.32071184716014944;  // std dev = 3.73e-09, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(C, E), director(E) )
%   | | | then return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then return 0.20935495492131262;  // std dev = 0.838, 52.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 3.16e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.17431811163288996;  // std dev = 0.109, 52.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109161;  // std dev = 4.94e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1892505479058482;  // std dev = 3.65e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.12023288915530421;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, D) )
%   | | then if ( movie(F, B) )
%   | | | then return 0.1301396164608991;  // std dev = 0.621, 51.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420267;  // std dev = 3.80e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.1136822594318178;  // std dev = 0.086, 51.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06424907167340702;  // std dev = 0.004, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070692
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.855 seconds
Total inference time: 2.027 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069043
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.778 seconds
Parameter learned model CLL: -0.069043


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [2.23e-07, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.99e-08, 70, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, H)'}, {'true,true,true,true': [0.0, 0, 45], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 78, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.87e-08, 74, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(F, A)'}, {'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.58e-08, 84, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, E), director(E)'}, {'true,true,true': [3.73e-09, 0, 45], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 68, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)'}, {'true,true': [0.838, 7, 45], 'true,false': [0.0, 0, 0], 'false': [3.16e-08, 85, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.109, 7, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.94e-08, 87, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [3.65e-08, 0, 45], 'true,false,true,true': [5.27e-09, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 80, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, D)', 'true,true,true': 'movie(F, B)', 'false': 'director(B)'}, {'true,true,true,true': [0.621, 6, 45], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [3.8e-08, 81, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.086, 6, 45], 'true,false': [0.0, 0, 0], 'false': [0.004, 74, 0]}]]
[{'': [0.09000000000000079, 6.97854472621527e-17], 'true': [1.105288700071267e-15, -2.7755575615628915e-18], 'true,true': [1.105288700071267e-15, nan], 'true,false': [-2.7755575615628915e-18, nan], 'true,false,true': [-2.7755575615628915e-18, nan]}, {'': [0.05351918877289897, -2.5620531337503614e-17], 'true': [-9.473903143468002e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-9.473903143468002e-16, nan], 'true,true,true': [-9.473903143468002e-16, nan]}, {'': [0.04627685204491952, 4.650934292348629e-17], 'true': [-3.947459643111668e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.020202215093805483, 3.700743415417188e-17], 'true': [-4.144832625267251e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.006962966417181677, -1.6326809185664067e-18], 'true': [0.006962966417181677, nan], 'true,true': [1.973729821555834e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.013495010447801522, 1.1755302613678128e-17], 'true': [0.013495010447801522, nan]}, {'': [0.011961315737539712, 2.807460522040626e-17], 'true': [0.011961315737539712, nan], 'true,true': [0.011961315737539712, nan]}, {'': [0.009942560326835766, -2.7755575615628915e-18], 'true': [2.960594732333751e-17, 4.625929269271485e-18], 'true,false': [4.625929269271485e-18, nan], 'true,false,true': [4.625929269271485e-18, nan]}, {'': [0.0075667551281312735, 1.7818394222379055e-17], 'true': [0.0075667551281312735, nan], 'true,true': [0.0075667551281312735, nan], 'true,true,true': [0.0075667551281312735, nan], 'false': [nan, 1.7818394222379055e-17]}, {'': [0.007361265517934466, 2.3910821878776105e-07], 'true': [0.007361265517934466, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048766;  // std dev = 7.30e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1254446385283914;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.11231637819360624;  // std dev = 6.14e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10159632948783616;  // std dev = 5.96e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.30890032935016637;  // std dev = 0.069, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2568732806609658;  // std dev = 0.006, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12250465664677823;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.08518475138839682;  // std dev = 4.59e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.20947589175939416;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.20226595347416368;  // std dev = 0.053, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   else return -0.0787767547310916;  // std dev = 5.77e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17899516812544788;  // std dev = 0.008, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13095435926496643;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07324622576333707;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15418288415559586;  // std dev = 0.007, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11774541768654007;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06842697784420265;  // std dev = 4.15e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.135129603227406;  // std dev = 0.006, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10560286520818335;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202626;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067844
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.804 seconds
Total inference time: 1.532 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066161
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.654 seconds
Refined model CLL: -0.066161


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067844
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.091 seconds
Total inference time: 1.532 seconds
AUC ROC: 1.0
Total revision time: 3.091
Best scored revision CLL: -0.066161


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:03:30
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067844, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.091, 'Inference time': 1.532, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070692, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.855, 'Inference time': 2.027}}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), publication(E, D).;false;true
0;true,true,false;ta(F, A, G).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,false,false;ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;tempadvisedby(F, B), publication(G, F).;true;true
1;true,false,true;publication(G, H), tempadvisedby(I, H).;false;false
1;true,false,false;publication(J, B), publication(K, A).;false;false
2;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
2;true;publication(D, B), publication(D, A).;true;true
2;true,true;tempadvisedby(E, B).;true;true
2;true,true,true;ta(F, E, G).;false;false
2;true,true,false;ta(H, A, I).;false;false
2;true,false;publication(J, A).;true;true
2;true,false,true;ta(K, A, L), publication(M, B).;false;false
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, A), publication(C, B).;true;true
3;true,true;ta(D, A, E).;true;false
3;true,true,true;tempadvisedby(F, B), ta(G, F, E).;false;false
3;true,false;tempadvisedby(H, B), publication(I, H).;true;true
3;true,false,true;publication(J, A).;false;false
3;true,false,false;publication(K, A).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true;publication(C, A), publication(D, B).;true;true
4;true,true;publication(C, B).;true;true
4;true,true,true;tempadvisedby(E, B).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false;projectmember(G, B).;true;true
4;true,false,true;publication(H, A).;false;false
4;true,false,false;tempadvisedby(I, B).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D).;true;true
5;true,true;tempadvisedby(E, B), ta(F, E, D).;false;true
5;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
5;true,false;publication(I, B).;true;true
5;true,false,true;publication(I, J), tempadvisedby(K, J).;false;false
5;true,false,false;publication(L, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, B), ta(D, A, E).;true;true
6;true,true;ta(F, G, E), publication(C, G).;true;true
6;true,true,true;ta(D, G, H).;false;false
6;true,true,false;publication(C, I), ta(J, I, K).;false;false
6;true,false;publication(L, B), publication(L, A).;true;true
6;true,false,true;tempadvisedby(M, B).;false;false
6;true,false,false;projectmember(N, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;false;true
7;true,false;tempadvisedby(D, B), publication(E, D).;true;true
7;true,false,true;publication(E, B).;false;false
7;true,false,false;publication(F, B).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;hasposition(D, C), tempadvisedby(E, D).;true;true
8;true,true;publication(F, A), publication(F, D).;true;true
8;true,true,true;ta(G, E, H), publication(I, B).;false;false
8;true,true,false;publication(J, B).;false;false
8;true,false;publication(K, A).;false;true
8;true,false,false;publication(L, B).;false;false
8;false;professor(B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;publication(C, B), ta(D, A, E).;true;true
9;true,true;tempadvisedby(F, B).;true;true
9;true,true,true;ta(G, F, H).;false;false
9;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
9;true,false;publication(L, B), publication(L, A).;false;true
9;true,false,false;publication(M, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then if ( movie(F, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839144;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462843;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(F, B) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04418547870994404;  // std dev = 2.001, 98.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.45056589100349603;  // std dev = 0.062, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10798590909746703;  // std dev = 6.66e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.34479302967048925;  // std dev = 0.058, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(C, E), director(E) )
%   | | | then return -0.09858225576795791;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09801590802471162;  // std dev = 4.83e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then return 0.2500974558760643;  // std dev = 0.698, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08968533989070093;  // std dev = 3.49e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.19303555899593736;  // std dev = 0.110, 50.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08262770554328139;  // std dev = 5.05e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.19478114182742814;  // std dev = 0.286, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return -0.1304136643868893;  // std dev = 0.010, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07657661832440424;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, D) )
%   | | then if ( movie(F, B) )
%   | | | then return 0.13883152554850053;  // std dev = 0.255, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, B) )
%   | | | then return -0.11233875184353043;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.20501706376375006;  // std dev = 0.340, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return -0.07133422607438794;  // std dev = 4.71e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.12281616168585056;  // std dev = 0.082, 49.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06675074326497443;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073988
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.858 seconds
Total inference time: 2.044 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069986
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.841 seconds
Parameter learned model CLL: -0.069986


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,true': [2.23e-07, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.69e-08, 96, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, G)', 'true,false,true': 'movie(F, H)'}, {'true,true,true,true': [0.0, 0, 45], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 85, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B), movie(D, A)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(F, B)'}, {'true,true': [0.0, 0, 35], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.001, 88, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(F, A)'}, {'true,true': [0.062, 0, 45], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.66e-08, 98, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, E), director(E)'}, {'true,true,true': [0.058, 0, 45], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.83e-08, 90, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)'}, {'true,true': [0.698, 3, 45], 'true,false': [0.0, 0, 0], 'false': [3.49e-08, 85, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.11, 5, 45], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.05e-08, 86, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(D, E)', 'true,false,true': 'movie(D, B)'}, {'true,true': [0.286, 0, 45], 'true,false,true,true': [0.01, 7, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 89, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, D)', 'true,true,true': 'movie(F, B)', 'true,true,false': 'movie(G, B)', 'false': 'director(B)'}, {'true,true,true,true': [0.255, 1, 35], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.34, 1, 10], 'false,false': [4.71e-08, 110, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.082, 4, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 74, 0]}]]
[{'': [0.09000000000000079, 7.864079757761526e-17], 'true': [1.105288700071267e-15, -2.7755575615628915e-18], 'true,true': [1.105288700071267e-15, nan], 'true,false': [-2.7755575615628915e-18, nan], 'true,false,true': [-2.7755575615628915e-18, nan]}, {'': [0.07410586634586562, -2.0898315757650005e-17], 'true': [-9.473903143468002e-16, -2.3129646346357427e-18], 'true,false': [-2.3129646346357427e-18, nan], 'true,false,true': [-2.3129646346357427e-18, nan], 'true,true': [-9.473903143468002e-16, nan], 'true,true,true': [-9.473903143468002e-16, nan]}, {'': [0.022794758141434494, 0.040848011287185466], 'true': [-2.0301221021717148e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.02144886310863629, 4.531522549490435e-17], 'true': [0.0038235924572587424, -1.1564823173178713e-18], 'true,false': [-1.1564823173178713e-18, nan], 'true,false,true': [-1.1564823173178713e-18, nan]}, {'': [0.007521869878256359, 2.590520390792032e-17], 'true': [0.007521869878256359, nan], 'true,true': [0.003415508547921438, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.010141387732155846, 1.436759208338438e-17], 'true': [0.010141387732155846, nan]}, {'': [0.01203816511344117, 2.9692011123696044e-17], 'true': [0.01203816511344117, nan], 'true,true': [0.01203816511344117, nan]}, {'': [0.013892561777435987, -2.6196273614750884e-17], 'true': [0.0018155695163115017, 1.4507833945667395e-05], 'true,false': [1.4507833945667395e-05, nan], 'true,false,true': [1.4507833945667395e-05, nan]}, {'': [0.0034127147943553066, 0.0072678529845851105], 'false': [0.010519077925706237, 2.0185873175002847e-17], 'true': [0.0034127147943553066, nan], 'true,true': [0.001802471664148335, 0.0], 'true,true,true': [0.001802471664148335, nan], 'true,true,false': [0.0, nan]}, {'': [0.006744209082424147, 0.0], 'true': [0.006744209082424147, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
2;true;movie(D, B), movie(D, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(E, A), movie(E, D).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048766;  // std dev = 7.60e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.12544463852839147;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.5553664367462843;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.11231637819360622;  // std dev = 6.32e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( female(A) )
%   | | then return 0.459983177469157;  // std dev = 0.234, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.5553664367462843;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42062864168539127;  // std dev = 0.053, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12136051009368966;  // std dev = 0.097, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.10257233840664372;  // std dev = 0.079, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32284729992255523;  // std dev = 0.048, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09104244341587822;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09260922685032644;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2566425016491339;  // std dev = 0.042, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10234508562686696;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08511511245826647;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2108040648757439;  // std dev = 0.037, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09689637744517424;  // std dev = 0.076, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07944517055263925;  // std dev = 0.064, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17786884708664857;  // std dev = 0.033, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10479791126420446;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07429169518966904;  // std dev = 0.084, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( female(A) )
%   | | then return 0.12902637141975518;  // std dev = 0.066, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | else return 0.11257863241677409;  // std dev = 0.083, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.1592515353767941;  // std dev = 0.020, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.06826535773220319;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13728691334446377;  // std dev = 0.020, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07102049002107375;  // std dev = 0.000936, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06404922338879729;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068206
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.943 seconds
Total inference time: 1.436 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0652
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.697 seconds
Refined model CLL: -0.0652


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068206
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.339 seconds
Total inference time: 1.436 seconds
AUC ROC: 1.0
Total revision time: 3.339
Best scored revision CLL: -0.0652


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:03:37
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068206, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.339, 'Inference time': 1.436, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073988, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.858, 'Inference time': 2.044}}


