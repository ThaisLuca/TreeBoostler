Starting experiment #1 for 5_cora_imdb

Loading pre-trained trees.
Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos  examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 7.88e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839138;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 7.74e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14652771257609323;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09315538339949223;  // std dev = 0.054, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08514859126021962;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( female(A) )
%   | then return 0.25517224256948956;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.23037820956657085;  // std dev = 0.094, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0787457037907223;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21190134426257612;  // std dev = 0.015, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15843262868156469;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17866790620427397;  // std dev = 0.014, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.13942162601058014;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07374672001147714;  // std dev = 0.070, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.15393538085813357;  // std dev = 0.012, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.06961609303624736;  // std dev = 0.093, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0640666150029068;  // std dev = 2.98e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13493688769935855;  // std dev = 0.011, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1411721349071551;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079295
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 3.3977818489074707 seconds
Total inference time: 2.878 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066386
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.717 seconds
Parameter learned model CLL: -0.066386


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [7.88e-08, 112, 0], 'false,true': [0.0, 0, 56], 'false,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 56], 'true,false': [0.0, 3, 0], 'false': [0.0, 102, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [7.74e-08, 96, 0], 'false,true': [1.03e-07, 0, 56], 'false,false': [2.63e-09, 3, 0]}], ['workedunder(A, B)', {'': 'actor(B)'}, {'true': [0.0, 106, 0], 'false': [0.0, 0, 56]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 56], 'true,false': [0.0, 3, 0], 'false': [0.054, 116, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'female(A)'}, {'true': [0.0, 104, 0], 'false,true': [0.0, 0, 27], 'false,false': [0.094, 2, 29]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 110, 0], 'false,true': [0.015, 0, 56], 'false,false': [0.003, 3, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.014, 0, 56], 'true,false': [0.002, 3, 0], 'false': [0.07, 134, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)'}, {'true': [0.012, 0, 56], 'false': [0.093, 107, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [2.98e-08, 120, 0], 'false,true': [0.011, 0, 56], 'false,false': [0.003, 6, 0]}]]
[{'': [5.551115123125783e-17, 0.08740894901144611], 'false': [-1.2688263138573217e-16, -6.938893903907228e-18]}, {'': [0.03445358635281509, -1.3061447348531253e-17], 'true': [-1.9032394707859825e-16, 0.0]}, {'': [6.245004513516506e-17, 0.021515213257540407], 'false': [1.9032394707859825e-16, 2.3129646346357427e-18]}, {'': [0.0, -3.489272363107635e-16]}, {'': [0.010536211272238659, 2.4770482797728627e-05], 'true': [-1.2688263138573217e-16, -4.625929269271485e-18]}, {'': [-8.540177112501205e-18, 0.0049172216124169525], 'false': [-1.644774851296528e-17, 0.008913789051972433]}, {'': [-1.0092936587501423e-17, 0.006623184663727545], 'false': [4.27823724118743e-06, 2.4421683804491203e-06]}, {'': [0.004886429060040584, 3.699846721480452e-05], 'true': [3.303229106561239e-06, 1.9548262687278197e-06]}, {'': [2.6017811749767805e-06, 8.154594424727913e-05]}, {'': [7.401486830834377e-18, 0.006665806285243979], 'false': [2.0899088980984104e-06, 1.996135043936161e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(B).;true;true
0;false;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(B).;true;true
2;false;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(B).;true;true
5;false;female(A).;true;true
6;;workedunder(A, B) :- actor(B).;true;true
6;false;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(B).;true;true
9;false;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.69e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839136;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( female(A) )
%   | then return 0.689297767541692;  // std dev = 0.157, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 8.16e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5589528166351133;  // std dev = 0.028, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2264663315998529;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783633;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42018644508395947;  // std dev = 0.027, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.19017954171567977;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 1.49e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32252930401211116;  // std dev = 0.025, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.16056447737362883;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 5.05e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.256414864687378;  // std dev = 0.022, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.13972034884466722;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21063683364895985;  // std dev = 0.019, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12244432143809153;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then return -0.0787767547310916;  // std dev = 5.77e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( female(B) )
%   | | then return -0.0787767547310918;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.31644546020515957;  // std dev = 0.582, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07279973642061499;  // std dev = 0.025, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1777421146700871;  // std dev = 0.016, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11187475148883923;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06818169027159417;  // std dev = 0.019, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1532341705323008;  // std dev = 0.015, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1007766858350346;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06411933727873284;  // std dev = 0.013, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13439019178206865;  // std dev = 0.013, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09225681283728594;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.08284
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 3.468201160430908 seconds
Total inference time: 2.513 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065456
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.618 seconds
Refined model CLL: -0.065456


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.08284
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 10.20098300933838 seconds
Total inference time: 2.513 seconds
AUC ROC: 1.0
Total revision time: 10.20098300933838
Best scored revision CLL: -0.065456


Dataset: 5_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:00:19
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.08284, 'Precision': [0.735892, 0.5], 'Recall': 1.0, 'F1': 0.847854, 'Learning time': 10.20098300933838, 'Inference time': 2.513, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079295, 'Precision': [0.735892, 0.5], 'Recall': 1.0, 'F1': 0.847854, 'Learning time': 3.3977818489074707, 'Inference time': 2.878}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004877;  // std dev = 5.58e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839105;  // std dev = 8.02e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 8.56e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783666;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( female(A) )
%   | then return 0.39897394438523337;  // std dev = 0.096, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.40020992037010517;  // std dev = 0.093, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926089;  // std dev = 6.32e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3246238383692052;  // std dev = 0.001, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14432609882663155;  // std dev = 0.000125, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 5.48e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2578398244093116;  // std dev = 0.000884, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1273548054339038;  // std dev = 0.000159, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109157;  // std dev = 6.41e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21164029700091827;  // std dev = 0.000771, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11386815452131008;  // std dev = 0.000137, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333717;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17847605702524807;  // std dev = 0.000678, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1028966981426896;  // std dev = 0.000125, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1537895898185102;  // std dev = 0.000601, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09376850530465868;  // std dev = 0.000129, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.0686971272227799;  // std dev = 0.025, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06417561378225115;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13482288900432074;  // std dev = 0.000539, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.0860820200302269;  // std dev = 0.000112, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.085878
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 3.465028762817383 seconds
Total inference time: 2.722 seconds
AUC ROC: 1.0


Dataset: 5_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:00:25
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.085878, 'Precision': [0.735892, 0.5], 'Recall': 1.0, 'F1': 0.847854, 'Learning time': 3.465028762817383, 'Inference time': 2.722}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos  examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839105;  // std dev = 8.02e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 7.60e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.41751358415830986;  // std dev = 5.16e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.3915580884760029;  // std dev = 0.113, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   else return -0.10159632948783638;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3244336656668729;  // std dev = 0.021, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14384751489508799;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09269127618926078;  // std dev = 8.02e-08, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2577121574311515;  // std dev = 0.018, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12750583485258526;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08518475138839682;  // std dev = 6.41e-08, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109155;  // std dev = 6.66e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2115514429748779;  // std dev = 0.016, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1138566736010802;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1784117334876524;  // std dev = 0.014, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1028645807656515;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07322388378612736;  // std dev = 0.002, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842840204116295;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1537413517254584;  // std dev = 0.012, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09422695295464623;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13478561152576157;  // std dev = 0.011, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08580310802830378;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06415637994147864;  // std dev = 0.004, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073996
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 3.4473838806152344 seconds
Total inference time: 2.717 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065279
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.703 seconds
Parameter learned model CLL: -0.065279


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 124, 0], 'false,true': [0.0, 0, 58], 'false,false': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [8.02e-08, 118, 0], 'false,true': [0.0, 0, 58], 'false,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [7.6e-08, 101, 0], 'false,true': [1.19e-07, 0, 58], 'false,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'female(A)'}, {'true,true': [5.16e-08, 0, 20], 'true,false': [0.113, 2, 38], 'false': [0.0, 124, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.021, 0, 58], 'true,false': [0.003, 6, 0], 'false': [8.02e-08, 145, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.018, 0, 58], 'true,false': [0.002, 3, 0], 'false': [6.41e-08, 133, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [6.66e-08, 116, 0], 'false,true': [0.016, 0, 58], 'false,false': [0.003, 7, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.014, 0, 58], 'true,false': [0.003, 7, 0], 'false': [0.002, 105, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 101, 0], 'false,true': [0.012, 0, 58], 'false,false': [0.003, 6, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.011, 0, 58], 'true,false': [0.002, 6, 0], 'false': [0.004, 97, 0]}]]
[{'': [-7.162729191130042e-18, 0.09609467455621257], 'false': [-3.675221047035001e-16, -7.93016446160826e-18]}, {'': [5.457028426123651e-17, 0.04308576245887642], 'false': [-1.2250736823450003e-16, 0.0]}, {'': [5.71599973074338e-17, 0.03257296522956836], 'false': [2.4501473646900006e-16, 0.0]}, {'': [0.008683086634361459, -2.865091676452017e-17], 'true': [1.3322676295501878e-16, 0.01280006736617092]}, {'': [0.018637593234452562, 4.4408920985006264e-17], 'true': [7.290491050829144e-06, 1.4366919218513259e-06]}, {'': [0.006944459528683396, 3.088590369257954e-17], 'true': [5.547709959893939e-06, 1.8646646285531514e-06]}, {'': [3.828355257328126e-17, 0.010179420291473637], 'false': [4.214561971622962e-06, 1.4115284331154911e-06]}, {'': [0.00760569129791101, 5.1913050367441694e-08], 'true': [3.253082386616682e-06, 1.1811853793575983e-06]}, {'': [-1.209153789195715e-17, 0.005226538604723396], 'false': [2.561846474509801e-06, 1.2267370094222463e-06]}, {'': [0.004136066286481471, 1.294192062509562e-07], 'true': [2.057623851127598e-06, 5.840052238898404e-07]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(B).;true;true
0;false;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- actor(B).;true;true
1;false;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(B).;true;true
2;false;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;female(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(B).;true;true
6;false;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- actor(B).;true;true
8;false;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048766;  // std dev = 7.30e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360618;  // std dev = 8.43e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783628;  // std dev = 3.65e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0926912761892609;  // std dev = 6.41e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08518475138839682;  // std dev = 5.96e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109158;  // std dev = 5.96e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07769056979388626;  // std dev = 0.473, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06814421716638026;  // std dev = 3.33e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06394230151367798;  // std dev = 3.25e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072907
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 3.4261980056762695 seconds
Total inference time: 2.569 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064182
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.744 seconds
Refined model CLL: -0.064182


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072907
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 10.320581886291503 seconds
Total inference time: 2.569 seconds
AUC ROC: 1.0
Total revision time: 10.320581886291503
Best scored revision CLL: -0.064182


Dataset: 5_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:00:44
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072907, 'Precision': [0.736364, 0.5], 'Recall': 1.0, 'F1': 0.848168, 'Learning time': 10.320581886291503, 'Inference time': 2.569, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073996, 'Precision': [0.736364, 0.5], 'Recall': 1.0, 'F1': 0.848168, 'Learning time': 3.4473838806152344, 'Inference time': 2.717}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048768;  // std dev = 6.32e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.12544463852839138;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360621;  // std dev = 8.16e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( female(A) )
%   | then return 0.37032177382684195;  // std dev = 0.149, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | else return 0.4175135841583102;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32428660457303393;  // std dev = 0.038, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14536695412730355;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.0931553833994922;  // std dev = 0.054, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08514859126021962;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2576164516720433;  // std dev = 0.033, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12702895840558462;  // std dev = 0.007, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07874570379072228;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21148668916208482;  // std dev = 0.029, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11495154588078853;  // std dev = 0.004, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07321928853344324;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1783660465934187;  // std dev = 0.025, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10366131073170555;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15370788706465016;  // std dev = 0.022, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09209408978199171;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06870695873281767;  // std dev = 0.031, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06415280844430328;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13476030641285322;  // std dev = 0.020, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08683239192047681;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068715
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.357351064682007 seconds
Total inference time: 2.751 seconds
AUC ROC: 1.0


Dataset: 5_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:00:51
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068715, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.357351064682007, 'Inference time': 2.751}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos  examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 4.94e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.14185106490048807;  // std dev = 0.000, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839155;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.12544463852839183;  // std dev = 0.000, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360628;  // std dev = 4.47e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.11231637819360686;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783623;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.10159632948783646;  // std dev = 0.000, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.09269127618926068;  // std dev = 1.03e-07, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.08518475138839678;  // std dev = 8.16e-08, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109179;  // std dev = 7.45e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.07877675473109144;  // std dev = 6.32e-08, 278.000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.07324622576333689;  // std dev = 1.10e-07, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420264;  // std dev = 1.49e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.06842697784420299;  // std dev = 0.000, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.06419184008202623;  // std dev = 0.000, 278.000 (wgt'ed) examples reached here.  /* #neg=278 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.552383899688721 seconds
Total inference time: 2.808 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065435
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.812 seconds
Parameter learned model CLL: -0.065435


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [1.09e-06, 0, 178], 'true,false': [4.94e-08, 46, 0], 'false': [0.0, 295, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 178], 'true,false': [0.0, 71, 0], 'false': [0.0, 292, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [5.9e-07, 0, 178], 'true,false': [4.47e-08, 60, 0], 'false': [0.0, 304, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3.77e-07, 0, 178], 'true,false': [3.8e-08, 55, 0], 'false': [0.0, 321, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3.58e-07, 0, 178], 'true,false': [0.0, 65, 0], 'false': [1.03e-07, 297, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3.63e-07, 0, 178], 'true,false': [1.83e-08, 57, 0], 'false': [8.16e-08, 287, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3e-07, 0, 178], 'true,false': [7.45e-09, 52, 0], 'false': [6.32e-08, 278, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 178], 'true,false': [0.0, 60, 0], 'false': [1.1e-07, 306, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'actor(A), director(B)'}, {'true,true': [0.0, 0, 178], 'true,false': [1.49e-08, 63, 0], 'false': [0.0, 298, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [7.6e-08, 0, 178], 'true,false': [0.0, 54, 0], 'false': [0.0, 278, 0]}]]
[{'': [0.16318558673469985, -1.1139864925052418e-16], 'true': [6.706246045376226e-15, 5.3097622916855314e-17]}, {'': [0.14551535853509964, -5.475072450206251e-17], 'true': [-3.193450497798203e-15, -3.1273888017610045e-17]}, {'': [0.08405387412240725, -9.495328500083576e-17], 'true': [1.9559884299013994e-15, 3.3306690738754695e-17]}, {'': [0.04859476602891015, -6.77893186375485e-17], 'true': [7.983626244495507e-16, 2.62416351275037e-17]}, {'': [0.03348638905842161, 3.588599675556062e-17], 'true': [7.185263620045957e-16, 0.0]}, {'': [0.021282786678634237, 2.3210237448609545e-17], 'true': [7.384854276158345e-16, 5.843279076974508e-18]}, {'': [0.01456676395619534, 1.4376988808095552e-17], 'true': [5.03966406683779e-16, 1.0675221390626506e-18]}, {'': [0.011816457135838392, 3.918434204559376e-17], 'true': [-1.6965205769552953e-16, 0.0]}, {'': [0.009444569904776106, -5.439347704539358e-17], 'true': [-4.490789762528723e-17, 3.52451753849256e-18]}, {'': [0.007015201354654842, -8.785937604947281e-18], 'true': [3.2433481618263e-17, -3.0839528461809902e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;actor(A), director(B).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5.96e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.1418510649004881;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.12544463852839172;  // std dev = 0.000, 263.000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360626;  // std dev = 4.71e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.11231637819360692;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783619;  // std dev = 4.71e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.10159632948783649;  // std dev = 0.000, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.09269127618926068;  // std dev = 1.07e-07, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.08518475138839679;  // std dev = 8.69e-08, 313.000 (wgt'ed) examples reached here.  /* #neg=313 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109173;  // std dev = 2.36e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.07877675473109146;  // std dev = 6.14e-08, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.07324622576333684;  // std dev = 9.66e-08, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.47e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.06842697784420293;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #neg=326 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.06419184008202623;  // std dev = 0.000, 270.000 (wgt'ed) examples reached here.  /* #neg=270 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.340298891067505 seconds
Total inference time: 2.815 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065435
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.79 seconds
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.494682790756226 seconds
Total inference time: 2.808 seconds
AUC ROC: 1.0
Total revision time: 14.494682790756226
Best scored revision CLL: -0.065435


Dataset: 5_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:01:15
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063555, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 14.494682790756226, 'Inference time': 2.808, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063555, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.552383899688721, 'Inference time': 2.808}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.66e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.14185106490048818;  // std dev = 0.000, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.1254446385283918;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360626;  // std dev = 4.71e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.11231637819360688;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783619;  // std dev = 4.71e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.10159632948783645;  // std dev = 0.000, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.09269127618926062;  // std dev = 3.65e-08, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.67e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.08518475138839678;  // std dev = 8.43e-08, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0787767547310917;  // std dev = 2.79e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.07877675473109144;  // std dev = 6.14e-08, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.07324622576333689;  // std dev = 1.08e-07, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0684269778442027;  // std dev = 1.18e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.06842697784420267;  // std dev = 1.49e-08, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.06419184008202623;  // std dev = 0.000, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.370473146438599 seconds
Total inference time: 2.891 seconds
AUC ROC: 1.0


Dataset: 5_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:01:23
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063555, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.370473146438599, 'Inference time': 2.891}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos  examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.94e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839152;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360624;  // std dev = 5.87e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.10159632948783628;  // std dev = 3.33e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 2.58e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07877675473109165;  // std dev = 4.34e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(A) )
%   | then return -0.06842697784420268;  // std dev = 2.79e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.16038000705708294;  // std dev = 0.225, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06391967035724451;  // std dev = 0.010, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074081
   Precision = 0.743929 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.853165


Total learning time: 3.411022901535034 seconds
Total inference time: 2.808 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065794
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total scoring time: 1.441 seconds
Parameter learned model CLL: -0.065794


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [8.94e-08, 99, 0], 'false,true': [2.23e-07, 0, 45], 'false,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 74, 0], 'false,true': [0.0, 0, 45], 'false,false': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [5.87e-08, 73, 0], 'false,true': [0.0, 0, 45], 'false,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 45], 'true,false': [0.0, 9, 0], 'false': [3.33e-08, 101, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 82, 0], 'false,true': [2.98e-08, 0, 45], 'false,false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [2.58e-08, 77, 0], 'false,true': [0.0, 0, 45], 'false,false': [2.63e-09, 6, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [5.58e-08, 0, 45], 'true,false': [0.0, 8, 0], 'false': [4.34e-08, 83, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 81, 0], 'false,true': [0.0, 0, 45], 'false,false': [2.63e-09, 7, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'false': 'actor(A)'}, {'true,true': [0.0, 0, 45], 'true,false': [2.63e-09, 10, 0], 'false,true': [2.79e-08, 68, 0], 'false,false': [0.225, 7, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.01, 78, 0], 'false,true': [2.36e-08, 0, 45], 'false,false': [1.32e-09, 3, 0]}]]
[{'': [8.074349270001139e-17, 0.09000000000000079], 'false': [1.105288700071267e-15, -2.7755575615628915e-18]}, {'': [-2.700542492331462e-17, 0.0831635545216455], 'false': [-9.473903143468002e-16, -1.982541115402065e-18]}, {'': [4.7146457210109385e-17, 0.040122030722945186], 'false': [-3.947459643111668e-17, 0.0]}, {'': [0.03742709756190387, 1.0992307174506501e-17], 'true': [-4.144832625267251e-16, -6.1679056923619804e-18]}, {'': [0.0, 0.021902730958425477], 'false': [1.973729821555834e-17, 0.0]}, {'': [8.651088503572648e-18, 0.012025212803050028], 'false': [-2.960594732333751e-17, 1.1564823173178713e-18]}, {'': [0.010669551659553902, 2.2739507733286338e-17], 'true': [6.908054375445419e-17, 0.0]}, {'': [-5.482582837655094e-18, 0.007300856491242112], 'false': [-8.388351741612294e-17, 9.912705577010326e-19]}, {'': [0.00727684046322507, 0.005450512683066024], 'true': [-3.947459643111668e-17, 6.938893903907229e-19], 'false': [1.1428766429964846e-17, 0.050732157488548806]}, {'': [1.3704126431153719e-06, 0.002301726099900453], 'false': [1.2335811384723961e-17, 5.782411586589357e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(B).;true;true
0;false;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- actor(B).;true;true
1;false;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(B).;true;true
2;false;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(B).;true;true
4;false;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(B).;true;true
5;false;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(B).;true;true
7;false;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true
8;false;actor(A).;true;true
9;;workedunder(A, B) :- actor(B).;true;true
9;false;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 6.99e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.8025933795439559;  // std dev = 0.229, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7278411685452969;  // std dev = 0.032, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2731432733763908;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.12891468618240767;  // std dev = 0.201, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11197087469772998;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5636405054061939;  // std dev = 0.039, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.22399084368892308;  // std dev = 0.012, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10131149303884875;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42369808222098365;  // std dev = 0.039, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.18535651116511712;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09245273396407883;  // std dev = 4.47e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( female(A) )
%   | then return 0.2757289461458825;  // std dev = 0.133, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.3140266100607951;  // std dev = 0.081, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08498226555646224;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2619215221145991;  // std dev = 0.010, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.20328782620773947;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07860285599080992;  // std dev = 3.16e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21451458488902964;  // std dev = 0.008, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17264583525921007;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07309534823975551;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.180577927375576;  // std dev = 0.007, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14908389987397375;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15537995486100828;  // std dev = 0.007, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13139060480649142;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06928469963567817;  // std dev = 0.080, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1360617657731151;  // std dev = 0.006, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11748129722481915;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06495306071897676;  // std dev = 0.075, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078662
   Precision = 0.743929 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.853165


Total learning time: 3.1337897777557373 seconds
Total inference time: 3.023 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069257
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total scoring time: 1.376 seconds
Refined model CLL: -0.069257


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074081
   Precision = 0.743929 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.853165


Total learning time: 9.361812679290772 seconds
Total inference time: 2.808 seconds
AUC ROC: 1.0
Total revision time: 9.361812679290772
Best scored revision CLL: -0.065794


Dataset: 5_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:01:43
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.074081, 'Precision': [0.743929, 0.5], 'Recall': 1.0, 'F1': 0.853165, 'Learning time': 9.361812679290772, 'Inference time': 2.808, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.074081, 'Precision': [0.743929, 0.5], 'Recall': 1.0, 'F1': 0.853165, 'Learning time': 3.411022901535034, 'Inference time': 2.808}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.30e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839147;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( female(A) )
%   | then return 0.6490635746493423;  // std dev = 0.234, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.6953328964755449;  // std dev = 0.141, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 6.66e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5640959877885926;  // std dev = 0.033, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.22330344242546898;  // std dev = 1.05e-08, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783617;  // std dev = 5.77e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42403320864421895;  // std dev = 0.033, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.18696972975410686;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3328458394715579;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.3088563811233979;  // std dev = 0.080, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   else if ( actor(A) )
%   | then return -0.09269127618926107;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else return -0.2388554679435914;  // std dev = 0.506, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26018653547404896;  // std dev = 0.012, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.20620818571804955;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(A) )
%   | then return -0.08518475138839679;  // std dev = 2.98e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else return -0.25734458811994293;  // std dev = 0.634, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07574383037497226;  // std dev = 0.032, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0.21329427522400837;  // std dev = 0.011, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( actor(A), director(B) )
%   | then return -0.17361976368556536;  // std dev = 0.005, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.07673708445744672;  // std dev = 0.057, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17968654031154285;  // std dev = 0.010, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15030752221172453;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.0734078547181504;  // std dev = 0.000295, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else return -0.12425376509015339;  // std dev = 0.185, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06638033276176529;  // std dev = 0.060, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15470614077286166;  // std dev = 0.008, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13108556586358197;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06264022439105991;  // std dev = 0.051, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13553730371429037;  // std dev = 0.008, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11766912744949752;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075423
   Precision = 0.743929 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.853165


Total learning time: 3.4364590644836426 seconds
Total inference time: 2.871 seconds
AUC ROC: 1.0


Dataset: 5_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:01:49
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075423, 'Precision': [0.743929, 0.5], 'Recall': 1.0, 'F1': 0.853165, 'Learning time': 3.4364590644836426, 'Inference time': 2.871}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos  examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 6.99e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1254446385283916;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360621;  // std dev = 7.45e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783621;  // std dev = 5.27e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( female(A) )
%   | then return 0.3958840044230538;  // std dev = 0.104, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.39494358791282524;  // std dev = 0.106, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926105;  // std dev = 2.11e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32554308224152206;  // std dev = 0.000692, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1437970919207258;  // std dev = 0.000127, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839678;  // std dev = 3.33e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25846615296743364;  // std dev = 0.000604, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12698306129882878;  // std dev = 0.000114, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109161;  // std dev = 4.94e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21208180454103084;  // std dev = 0.000527, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11355031209168695;  // std dev = 9.47e-05, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else return 0.1726825361130644;  // std dev = 0.278, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420267;  // std dev = 3.33e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1548330779077346;  // std dev = 0.000413, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11966945710607968;  // std dev = 8.86e-05, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13563594687149907;  // std dev = 0.000370, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10759790959740208;  // std dev = 0.000111, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076491
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 3.1053380966186523 seconds
Total inference time: 2.693 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066741
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.459 seconds
Parameter learned model CLL: -0.066741


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [6.99e-08, 72, 0], 'false,true': [2.23e-07, 0, 45], 'false,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 45], 'true,false': [0.0, 6, 0], 'false': [0.0, 65, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 45], 'true,false': [2.63e-09, 3, 0], 'false': [7.45e-08, 98, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'female(A)'}, {'true': [5.27e-08, 89, 0], 'false,true': [0.104, 1, 23], 'false,false': [0.106, 1, 22]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [2.11e-08, 88, 0], 'false,true': [0.000692, 0, 45], 'false,false': [0.000127, 5, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [3.33e-08, 86, 0], 'false,true': [0.000604, 0, 45], 'false,false': [0.000114, 5, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [4.94e-08, 88, 0], 'false,true': [0.000527, 0, 45], 'false,false': [9.47e-05, 4, 0]}], ['workedunder(A, B)', {'': 'actor(B)'}, {'true': [0.0, 94, 0], 'false': [0.278, 1, 45]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [3.33e-08, 76, 0], 'false,true': [0.000413, 0, 45], 'false,false': [8.86e-05, 5, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 81, 0], 'false,true': [0.00037, 0, 45], 'false,false': [0.000111, 6, 0]}]]
[{'': [6.78469626159818e-17, 0.05859375000000089], 'false': [1.105288700071267e-15, 0.0]}, {'': [0.07410586634586562, -3.75767792950053e-17], 'true': [-9.473903143468002e-16, -2.3129646346357427e-18]}, {'': [0.026121113751917464, 5.664403186863044e-17], 'true': [-3.947459643111668e-17, 2.3129646346357427e-18]}, {'': [3.118604001756058e-17, 0.01097906709828568], 'false': [0.010760290549047499, 0.011206904071466281]}, {'': [5.046468293750712e-18, 0.019825227827333716], 'false': [1.0653553535651857e-08, 3.2169706953855127e-09]}, {'': [1.290957005378089e-17, 0.013371406276917188], 'false': [8.117824437350565e-09, 2.6081206527805987e-09]}, {'': [2.7755575615628914e-17, 0.007949414250112495], 'false': [6.170782729242319e-09, 2.240089145427726e-09]}, {'': [-7.086529944415892e-18, 0.001683637681480489]}, {'': [1.460819769243627e-17, 0.006781651318449675], 'false': [3.784292351088286e-09, 1.5697562527616781e-09]}, {'': [-1.02798428206033e-17, 0.006141460594643552], 'false': [3.0374948803116e-09, 2.0384932584531037e-09]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(B).;true;true
0;false;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(B).;true;true
4;;workedunder(A, B) :- actor(B).;true;true
4;false;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(B).;true;true
5;false;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(B).;true;true
6;false;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(B).;true;true
8;;workedunder(A, B) :- actor(B).;true;true
8;false;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- actor(B).;true;true
9;false;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.94e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839144;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( female(A) )
%   | then return 0.6842684934301482;  // std dev = 0.169, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.7194734122109542;  // std dev = 7.30e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 7.88e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else return 0.5598005837456403;  // std dev = 0.029, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783619;  // std dev = 5.58e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( female(A) )
%   | then return 0.39346038078626305;  // std dev = 0.151, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.4164356134251186;  // std dev = 2.11e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3012180603713453;  // std dev = 0.151, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.3199811252127007;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( actor(A) )
%   | then return -0.09269127618926107;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return -0.23952317583877059;  // std dev = 0.509, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.16190770998030923;  // std dev = 0.310, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08410803005764877;  // std dev = 0.014, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0.262278128593655;  // std dev = 0.050, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( actor(B) )
%   | then return -0.08481037011579808;  // std dev = 0.010, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.5088378242813041;  // std dev = 0.024, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07828924950439359;  // std dev = 0.019, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21477668873127065;  // std dev = 0.043, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.38686847917497413;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07279948375064715;  // std dev = 0.017, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1807764559492902;  // std dev = 0.038, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.302688830057762;  // std dev = 0.015, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15553467911694918;  // std dev = 0.034, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.23469835515883675;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06882765721869918;  // std dev = 0.101, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06395616008432457;  // std dev = 0.011, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1361853906509338;  // std dev = 0.030, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.19824827668512723;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.088315
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 3.4325361251831055 seconds
Total inference time: 2.782 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070626
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.521 seconds
Refined model CLL: -0.070626


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076491
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 9.517874221801758 seconds
Total inference time: 2.693 seconds
AUC ROC: 1.0
Total revision time: 9.517874221801758
Best scored revision CLL: -0.066741


Dataset: 5_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:02:08
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076491, 'Precision': [0.742291, 0.5], 'Recall': 1.0, 'F1': 0.852086, 'Learning time': 9.517874221801758, 'Inference time': 2.693, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076491, 'Precision': [0.742291, 0.5], 'Recall': 1.0, 'F1': 0.852086, 'Learning time': 3.1053380966186523, 'Inference time': 2.693}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.15e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1254446385283914;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11231637819360621;  // std dev = 7.45e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783627;  // std dev = 3.94e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926105;  // std dev = 2.11e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.08858726090507647;  // std dev = 0.305, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07853018491472973;  // std dev = 5.48e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07303228505318743;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then return -0.06823967886931463;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else return -0.1474479480534378;  // std dev = 0.354, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06375649495141197;  // std dev = 0.010, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067777
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.1924338340759277 seconds
Total inference time: 2.931 seconds
AUC ROC: 1.0


Dataset: 5_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:02:14
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067777, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.1924338340759277, 'Inference time': 2.931}


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos  examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.43e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839127;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11506280121063191;  // std dev = 0.331, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10134592520409734;  // std dev = 2.58e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0924815753047627;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08500675139605976;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( female(A) )
%   | then return 0.2316993464344629;  // std dev = 0.086, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else return 0.25517224256948956;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07862388785655289;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( female(A) )
%   | then return 0.21367507764293328;  // std dev = 2.58e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.1893030311806997;  // std dev = 0.078, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07311359809204913;  // std dev = 2.11e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   else if ( female(A) )
%   | then return 0.1799644089941852;  // std dev = 1.83e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.16029640297616654;  // std dev = 0.075, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0683108738397278;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15632028796662487;  // std dev = 0.010, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14693980559104378;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06408939155006066;  // std dev = 1.05e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( female(A) )
%   | then return 0.12603037130403508;  // std dev = 0.049, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.1290882883594327;  // std dev = 0.048, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.08953
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 3.5799331665039062 seconds
Total inference time: 2.471 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067901
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.574 seconds
Parameter learned model CLL: -0.067901


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [8.43e-08, 106, 0], 'false,true': [0.0, 0, 56], 'false,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 124, 0], 'false,true': [0.0, 0, 56], 'false,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [1.03e-07, 0, 56], 'true,false': [0.0, 5, 0], 'false': [0.331, 121, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [2.58e-08, 100, 0], 'false,true': [0.0, 0, 56], 'false,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 118, 0], 'false,true': [0.0, 0, 56], 'false,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'female(A)'}, {'true': [0.0, 108, 0], 'false,true': [0.086, 2, 27], 'false,false': [0.0, 0, 29]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'female(A)'}, {'true': [0.0, 105, 0], 'false,true': [2.58e-08, 0, 27], 'false,false': [0.078, 2, 29]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'female(A)'}, {'true': [2.11e-08, 126, 0], 'false,true': [1.83e-08, 0, 27], 'false,false': [0.075, 2, 29]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 97, 0], 'false,true': [0.01, 0, 56], 'false,false': [0.003, 6, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'female(A)'}, {'true': [1.05e-08, 97, 0], 'false,true': [0.049, 1, 27], 'false,false': [0.048, 1, 29]}]]
[{'': [6.70323335622736e-17, 0.06222222222222188], 'false': [-1.2688263138573217e-16, 0.0]}, {'': [0.0, 0.03445358635281509], 'false': [-1.9032394707859825e-16, 0.0]}, {'': [0.03354584670317022, 0.0009051407266138861], 'true': [1.9032394707859825e-16, 0.0]}, {'': [6.661338147750939e-18, 0.013005405691145715], 'false': [-3.489272363107635e-16, -1.1564823173178713e-18]}, {'': [-1.5053871520341106e-17, 0.010633911082358413], 'false': [-1.2688263138573217e-16, 0.0]}, {'': [-5.551115123125783e-17, 0.0038568379707602193], 'false': [0.007438187515037599, -1.5313421029312504e-17]}, {'': [-7.401486830834377e-18, 0.0033903472633400496], 'false': [2.4671622769447922e-17, 0.006066714682350538]}, {'': [3.52451753849256e-18, 0.0031347842419381837], 'false': [1.2335811384723961e-17, 0.005685003945635869]}, {'': [-1.7168397288017885e-17, 0.008040530375179065], 'false': [1.8360408879131945e-06, 1.6615280589206878e-06]}, {'': [1.1445598192011923e-18, 0.002361676236424606], 'false': [0.002439580495517041, 0.0022844513879137626]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(B).;true;true
0;false;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- actor(B).;true;true
1;false;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(B).;true;true
3;false;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(B).;true;true
4;false;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(B).;true;true
5;false;female(A).;true;true
6;;workedunder(A, B) :- actor(B).;true;true
6;false;female(A).;true;true
7;;workedunder(A, B) :- actor(B).;true;true
7;false;female(A).;true;true
8;;workedunder(A, B) :- actor(B).;true;true
8;false;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- actor(B).;true;true
9;false;female(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004879;  // std dev = 0.000, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839108;  // std dev = 7.74e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 7.88e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1015963294878363;  // std dev = 1.49e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( female(A) )
%   | then return 0.39897394438523337;  // std dev = 0.096, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.40020992037010517;  // std dev = 0.093, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 3.33e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( female(A) )
%   | then return 0.3080145779256145;  // std dev = 0.087, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.3088641813680305;  // std dev = 0.084, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 5.58e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.26094608132180425;  // std dev = 0.002, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.18662334437921263;  // std dev = 0.000274, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109158;  // std dev = 5.96e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2138280899985727;  // std dev = 0.001, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.16010337974110156;  // std dev = 0.000260, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1581841369087457;  // std dev = 0.081, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else return 0.17992775112059078;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( actor(A) )
%   | then return -0.07324622576333707;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else return -0.22261143038655148;  // std dev = 0.668, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1564045658688246;  // std dev = 0.012, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.16218330326129377;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06821518170970982;  // std dev = 0.053, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06405163539978499;  // std dev = 0.012, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13685877016134132;  // std dev = 0.011, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14047096228275943;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.086079
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 3.572492837905884 seconds
Total inference time: 2.569 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066787
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.753 seconds
Refined model CLL: -0.066787


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.086079
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 10.47942600440979 seconds
Total inference time: 2.569 seconds
AUC ROC: 1.0
Total revision time: 10.47942600440979
Best scored revision CLL: -0.066787


Dataset: 5_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:02:33
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.086079, 'Precision': [0.735892, 0.5], 'Recall': 1.0, 'F1': 0.847854, 'Learning time': 10.47942600440979, 'Inference time': 2.569, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.08953, 'Precision': [0.735892, 0.5], 'Recall': 1.0, 'F1': 0.847854, 'Learning time': 3.5799331665039062, 'Inference time': 2.471}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.16e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360618;  // std dev = 8.82e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.5331103429149548;  // std dev = 0.120, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783626;  // std dev = 4.21e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42032157307167894;  // std dev = 0.020, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1784724457528374;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 3.80e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3226187583273529;  // std dev = 0.018, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15354523241714385;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 5.37e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2564745572796133;  // std dev = 0.016, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.13484950372303825;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109155;  // std dev = 6.83e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21067817195119232;  // std dev = 0.014, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11987736928891823;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17777190945790208;  // std dev = 0.012, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10779467942045845;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420265;  // std dev = 4.47e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( female(A) )
%   | then return 0.1427993579369083;  // std dev = 0.047, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.14625354042143404;  // std dev = 0.045, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13541748847275892;  // std dev = 0.008, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11205639117004455;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.996995
   AUC PR    = 0.899071
   CLL	      = -0.090246
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 3.268465042114258 seconds
Total inference time: 2.448 seconds
AUC ROC: 0.996995


Dataset: 5_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:02:40
{'AUC ROC': 0.996995, 'AUC PR': 0.899071, 'CLL': -0.090246, 'Precision': [0.735892, 0.5], 'Recall': 1.0, 'F1': 0.847854, 'Learning time': 3.268465042114258, 'Inference time': 2.448}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos  examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048766;  // std dev = 8.43e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360621;  // std dev = 8.30e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783631;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926079;  // std dev = 7.74e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 5.77e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else return 0.24940347996003395;  // std dev = 0.337, 59.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109158;  // std dev = 5.96e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21071554342784166;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10673861878592548;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1777987007830079;  // std dev = 5.16e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0969804469623736;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07343763077300682;  // std dev = 0.024, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.068414777792027;  // std dev = 2.11e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15327634109362084;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0888129867576313;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06418107585733067;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1344225941055284;  // std dev = 6.66e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08188338901244273;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070501
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.22371768951416 seconds
Total inference time: 3.537 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064755
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.67 seconds
Parameter learned model CLL: -0.064755


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 58], 'true,false': [0.0, 4, 0], 'false': [8.43e-08, 102, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 106, 0], 'false,true': [0.0, 0, 58], 'false,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [1.19e-07, 0, 58], 'true,false': [2.63e-09, 3, 0], 'false': [8.3e-08, 115, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 58], 'true,false': [0.0, 4, 0], 'false': [0.0, 106, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [7.74e-08, 128, 0], 'false,true': [0.0, 0, 58], 'false,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(B)'}, {'true': [5.77e-08, 107, 0], 'false': [0.337, 1, 58]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [5.96e-08, 104, 0], 'false,true': [0.0, 0, 58], 'false,false': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [5.16e-08, 0, 58], 'true,false': [0.0, 4, 0], 'false': [0.024, 124, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [2.11e-08, 110, 0], 'false,true': [0.0, 0, 58], 'false,false': [2.63e-09, 5, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 101, 0], 'false,true': [6.66e-08, 0, 58], 'false,false': [0.0, 4, 0]}]]
[{'': [0.06035379812695064, 6.966105252550002e-17], 'true': [-3.675221047035001e-16, 0.0]}, {'': [-8.3790416952842e-18, 0.033382492117425555], 'false': [-1.2250736823450003e-16, 0.0]}, {'': [0.020846347594112944, 5.985550219718235e-17], 'true': [2.4501473646900006e-16, 2.3129646346357427e-18]}, {'': [0.01626384593324757, 0.0], 'true': [-3.3689526264487507e-16, 0.0]}, {'': [4.683753385137379e-17, 0.012487180976206418], 'false': [-1.5313421029312505e-16, 0.0]}, {'': [3.112774835397635e-17, 0.0019301600785667096]}, {'': [3.416070845000482e-17, 0.009684146961746421], 'false': [-1.0719394720518753e-16, -3.96508223080413e-18]}, {'': [0.00455692782733545, 4.506212960385884e-06], 'true': [4.594026308793751e-17, 0.0]}, {'': [4.037174635000569e-18, 0.004282212237653444], 'false': [-2.2970131543968756e-17, 1.3877787807814458e-18]}, {'': [-1.428999932685845e-17, 0.002823850305195346], 'false': [7.656710514656253e-17, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- actor(B).;true;true
1;false;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(B).;true;true
4;false;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(B).;true;true
6;;workedunder(A, B) :- actor(B).;true;true
6;false;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- actor(B).;true;true
8;false;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- actor(B).;true;true
9;false;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.43e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 7.74e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.10535328328747587;  // std dev = 0.479, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09237580098817424;  // std dev = 4.34e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08491694535722923;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.2023593958796219;  // std dev = 0.046, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   else return -0.07854609153029646;  // std dev = 5.92e-05, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17780458103320124;  // std dev = 0.004, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09489827365003477;  // std dev = 0.000569, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07304632894626065;  // std dev = 3.93e-05, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06825232575682465;  // std dev = 3.80e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15328083764742287;  // std dev = 0.003, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08708409590704;  // std dev = 0.000510, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13442612925517886;  // std dev = 0.003, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08026828607017954;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06402732678526743;  // std dev = 0.001, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076458
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 3.593851327896118 seconds
Total inference time: 2.682 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065227
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.822 seconds
Refined model CLL: -0.065227


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070501
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.30956901741028 seconds
Total inference time: 3.537 seconds
AUC ROC: 1.0
Total revision time: 10.30956901741028
Best scored revision CLL: -0.064755


Dataset: 5_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:03:00
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070501, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.30956901741028, 'Inference time': 3.537, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070501, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.22371768951416, 'Inference time': 3.537}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1418510649004879;  // std dev = 0.000, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.12544463852839105;  // std dev = 8.16e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360617;  // std dev = 9.42e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783637;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 3.49e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601496;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.30605801290217244;  // std dev = 0.090, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25700349944074974;  // std dev = 0.010, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08518475138839683;  // std dev = 5.48e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109158;  // std dev = 5.96e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( female(A) )
%   | then return 0.1957290392029521;  // std dev = 0.061, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.2044380673892274;  // std dev = 0.046, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17945425659935996;  // std dev = 0.003, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09494943130725879;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420265;  // std dev = 5.16e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15453013765394372;  // std dev = 0.003, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08679124534108872;  // std dev = 0.001, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13540002888557187;  // std dev = 0.003, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08016467577922999;  // std dev = 0.000840, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07139
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.5257620811462402 seconds
Total inference time: 2.559 seconds
AUC ROC: 1.0


Dataset: 5_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:03:06
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.07139, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.5257620811462402, 'Inference time': 2.559}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos  examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.14e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.1418510649004881;  // std dev = 0.000, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.1254446385283918;  // std dev = 0.000, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360625;  // std dev = 5.58e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return -0.11231637819360683;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783628;  // std dev = 2.47e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.10159632948783655;  // std dev = 0.000, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.09269127618926064;  // std dev = 2.98e-08, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.67e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.08518475138839678;  // std dev = 8.16e-08, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.07877675473109144;  // std dev = 5.16e-08, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.07324622576333682;  // std dev = 1.04e-07, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0684269778442027;  // std dev = 1.58e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.06842697784420286;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.06419184008202625;  // std dev = 0.000, 338.000 (wgt'ed) examples reached here.  /* #neg=338 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.351012229919434 seconds
Total inference time: 2.803 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065435
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.805 seconds
Parameter learned model CLL: -0.065435


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [1.09e-06, 0, 178], 'true,false': [6.14e-08, 60, 0], 'false': [0.0, 291, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 178], 'true,false': [0.0, 67, 0], 'false': [0.0, 291, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [5.9e-07, 0, 178], 'true,false': [5.58e-08, 70, 0], 'false': [0.0, 300, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3.77e-07, 0, 178], 'true,false': [2.47e-08, 46, 0], 'false': [0.0, 286, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3.58e-07, 0, 178], 'true,false': [0.0, 51, 0], 'false': [2.98e-08, 298, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3.63e-07, 0, 178], 'true,false': [1.67e-08, 58, 0], 'false': [8.16e-08, 287, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3e-07, 0, 178], 'true,false': [0.0, 51, 0], 'false': [5.16e-08, 320, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 178], 'true,false': [0.0, 60, 0], 'false': [1.04e-07, 293, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 178], 'true,false': [1.58e-08, 53, 0], 'false': [0.0, 304, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [7.6e-08, 0, 178], 'true,false': [0.0, 57, 0], 'false': [0.0, 338, 0]}]]
[{'': [0.18854600663795507, -1.19034221196924e-16], 'true': [6.706246045376226e-15, 6.29126380620922e-17]}, {'': [0.14183774340124136, -5.799103083952708e-17], 'true': [-3.193450497798203e-15, -3.314098580970616e-17]}, {'': [0.09031399995807156, -8.881784197001253e-17], 'true': [1.9559884299013994e-15, 4.4408920985006264e-17]}, {'': [0.04397445270299505, -6.055761952500853e-17], 'true': [7.983626244495507e-16, 1.3274405729213829e-17]}, {'': [0.029584669412526028, 2.980464495638004e-18], 'true': [7.185263620045957e-16, -3.2653618371328133e-18]}, {'': [0.021473030874055457, 2.3210237448609545e-17], 'true': [7.384854276158345e-16, 4.785444071660158e-18]}, {'': [0.014411680407659385, 8.326672684688674e-18], 'true': [5.03966406683779e-16, 0.0]}, {'': [0.011816457135838392, 3.7133739390192947e-17], 'true': [-1.6965205769552953e-16, 0.0]}, {'': [0.008648237960451754, -2.9946805269494355e-17], 'true': [-4.490789762528723e-17, 4.7132109535973624e-18]}, {'': [0.007217079378850059, -5.91243030865468e-18], 'true': [3.2433481618263e-17, -2.921639538487254e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.66e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.14185106490048816;  // std dev = 0.000, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.12544463852839188;  // std dev = 0.000, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360626;  // std dev = 5.05e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.11231637819360688;  // std dev = 0.000, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783619;  // std dev = 4.59e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.10159632948783655;  // std dev = 0.000, 266.000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.09269127618926064;  // std dev = 2.98e-08, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.08518475138839678;  // std dev = 8.16e-08, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109175;  // std dev = 1.97e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.07877675473109146;  // std dev = 5.37e-08, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.07324622576333695;  // std dev = 1.01e-07, 315.000 (wgt'ed) examples reached here.  /* #neg=315 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420264;  // std dev = 1.67e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.06842697784420307;  // std dev = 0.000, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.06419184008202623;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.655004024505615 seconds
Total inference time: 2.917 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065435
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.77 seconds
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.581016254425048 seconds
Total inference time: 2.803 seconds
AUC ROC: 1.0
Total revision time: 14.581016254425048
Best scored revision CLL: -0.065435


Dataset: 5_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:03:30
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063555, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 14.581016254425048, 'Inference time': 2.803, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063555, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.351012229919434, 'Inference time': 2.803}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5.96e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.14185106490048818;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #neg=318 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.12544463852839183;  // std dev = 0.000, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360629;  // std dev = 3.94e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.11231637819360682;  // std dev = 0.000, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1015963294878362;  // std dev = 4.21e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.10159632948783653;  // std dev = 0.000, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.09269127618926064;  // std dev = 2.11e-08, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.08518475138839678;  // std dev = 7.88e-08, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109168;  // std dev = 3.49e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.07877675473109146;  // std dev = 4.21e-08, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 1.29e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.07324622576333692;  // std dev = 1.04e-07, 315.000 (wgt'ed) examples reached here.  /* #neg=315 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0684269778442027;  // std dev = 1.97e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.06842697784420278;  // std dev = 0.000, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return -0.06419184008202623;  // std dev = 0.000, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.5422279834747314 seconds
Total inference time: 2.792 seconds
AUC ROC: 1.0


Dataset: 5_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:03:39
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063555, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.5422279834747314, 'Inference time': 2.792}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos  examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048766;  // std dev = 7.15e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839147;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( female(A) )
%   | then return 0.6490635746493423;  // std dev = 0.234, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.6953328964755449;  // std dev = 0.141, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5640959877885927;  // std dev = 0.033, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.22132292504131296;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11387957628137897;  // std dev = 0.110, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42403320864421895;  // std dev = 0.033, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.18553584132895792;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10660538162490311;  // std dev = 0.323, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3251437947814076;  // std dev = 0.029, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1606530693431618;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09342730749900822;  // std dev = 0.095, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25819923624222;  // std dev = 0.026, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14015176830496126;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.08843655483956223;  // std dev = 0.277, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07801379986990731;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21189676799320312;  // std dev = 0.022, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12268594370038455;  // std dev = 0.006, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17866576425598205;  // std dev = 0.020, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10986647335057298;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07351684802020372;  // std dev = 0.072, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06778799348702956;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15393455835321107;  // std dev = 0.018, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1000320067603267;  // std dev = 0.005, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13493679793713637;  // std dev = 0.016, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09113885529563172;  // std dev = 0.005, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06434242330048025;  // std dev = 0.061, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070714
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.131603240966797 seconds
Total inference time: 3.034 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066165
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.436 seconds
Parameter learned model CLL: -0.066165


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [2.23e-07, 0, 45], 'true,false': [0.0, 7, 0], 'false': [7.15e-08, 73, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'female(A)'}, {'true': [0.0, 83, 0], 'false,true': [0.234, 1, 11], 'false,false': [0.141, 1, 34]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.033, 0, 45], 'true,false': [0.007, 4, 0], 'false': [0.11, 71, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.033, 0, 45], 'true,false': [0.006, 4, 0], 'false': [0.323, 80, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.029, 0, 45], 'true,false': [0.0, 6, 0], 'false': [0.095, 74, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.026, 0, 45], 'true,false': [0.0, 6, 0], 'false': [0.277, 73, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 104, 0], 'false,true': [0.022, 0, 45], 'false,false': [0.006, 7, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.02, 0, 45], 'true,false': [0.005, 6, 0], 'false': [0.072, 78, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 90, 0], 'false,true': [0.018, 0, 45], 'false,false': [0.005, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.016, 0, 45], 'true,false': [0.005, 7, 0], 'false': [0.061, 86, 0]}]]
[{'': [0.11649408284023735, 6.995925908596876e-17], 'true': [1.105288700071267e-15, -7.93016446160826e-18]}, {'': [-2.140188963132832e-17, 0.02908546225525768], 'false': [0.054532997479978716, 0.019813992999032897]}, {'': [0.046269791405472216, 0.0001710511783131783], 'true': [2.3830571836214177e-05, 1.1767347326829825e-05]}, {'': [0.027878946202711214, 0.0013020363583570074], 'true': [2.366564005195452e-05, 9.032107442963344e-06]}, {'': [0.024515058196960822, 0.00012096705045765792], 'true': [1.9192247543919904e-05, 0.0]}, {'': [0.016485281500439822, 0.0010504336706086415], 'true': [1.4669289861461247e-05, 0.0]}, {'': [-2.8823097754691566e-17, 0.013051341636968028], 'false': [1.1176042533319238e-05, 4.985420603818648e-06]}, {'': [0.008650112125132642, 6.701172745886382e-05], 'true': [8.643231802817218e-06, 4.494585477875235e-06]}, {'': [-6.1679056923619804e-18, 0.00896436638465751], 'false': [6.816164311472682e-06, 2.9373234137255086e-06]}, {'': [0.00595917552718027, 4.341269074728473e-05], 'true': [5.480310300224704e-06, 2.948871529539646e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- actor(B).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(B).;true;true
6;false;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- actor(B).;true;true
8;false;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048766;  // std dev = 7.60e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839147;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 6.23e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1015963294878362;  // std dev = 4.47e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926108;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839678;  // std dev = 3.94e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07877675473109169;  // std dev = 3.49e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06842697784420267;  // std dev = 4.08e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072346
   Precision = 0.743929 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.853165


Total learning time: 3.1529910564422607 seconds
Total inference time: 2.992 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065718
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total scoring time: 1.379 seconds
Refined model CLL: -0.065718


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072346
   Precision = 0.743929 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.853165


Total learning time: 9.099594297409057 seconds
Total inference time: 2.992 seconds
AUC ROC: 1.0
Total revision time: 9.099594297409057
Best scored revision CLL: -0.065718


Dataset: 5_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:03:58
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072346, 'Precision': [0.743929, 0.5], 'Recall': 1.0, 'F1': 0.853165, 'Learning time': 9.099594297409057, 'Inference time': 2.992, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070714, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.131603240966797, 'Inference time': 3.034}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048766;  // std dev = 7.60e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839144;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.11361078179314632;  // std dev = 0.115, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10147824433908229;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09259239566146274;  // std dev = 5.05e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.08510073647381279;  // std dev = 7.65e-06, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07870469121326872;  // std dev = 1.83e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07318355479524956;  // std dev = 1.15e-05, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.14333233316014432;  // std dev = 0.045, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   else return -0.07048370301332783;  // std dev = 0.187, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06401692990182271;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13510299646196317;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07814837024146794;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067203
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.092503070831299 seconds
Total inference time: 2.86 seconds
AUC ROC: 1.0


Dataset: 5_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:04:04
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067203, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.092503070831299, 'Inference time': 2.86}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos  examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048766;  // std dev = 8.02e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283914;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( female(A) )
%   | then return 0.7194734122109543;  // std dev = 5.96e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.6490635746493422;  // std dev = 0.234, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 7.15e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5638300726752231;  // std dev = 0.058, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.22347265666472996;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783626;  // std dev = 4.21e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42386288584033316;  // std dev = 0.058, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1853269606135929;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3250463841531988;  // std dev = 0.052, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15614030487274388;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09352326020529465;  // std dev = 0.061, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2581436264201719;  // std dev = 0.045, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1377794108747505;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08571709887050512;  // std dev = 0.057, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07867780074347229;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21186405179002152;  // std dev = 0.039, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12538956875305207;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17864590271139105;  // std dev = 0.035, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10905972992402066;  // std dev = 0.008, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07694080026128046;  // std dev = 0.357, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.14943805662330972;  // std dev = 2.79e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.13730164212289708;  // std dev = 0.071, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else return -0.0686511427551571;  // std dev = 0.042, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06388112639543041;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( female(A) )
%   | then return 0.1210223113937865;  // std dev = 0.050, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.13022281019102336;  // std dev = 0.051, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075574
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.2941489219665527 seconds
Total inference time: 2.899 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067315
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.49 seconds
Parameter learned model CLL: -0.067315


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [2.23e-07, 0, 45], 'true,false': [0.0, 6, 0], 'false': [8.02e-08, 96, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'female(A)'}, {'true': [0.0, 88, 0], 'false,true': [5.96e-08, 0, 23], 'false,false': [0.234, 2, 22]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [7.15e-08, 87, 0], 'false,true': [0.058, 0, 45], 'false,false': [0.01, 3, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [4.21e-08, 97, 0], 'false,true': [0.058, 0, 45], 'false,false': [0.011, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.052, 0, 45], 'true,false': [0.008, 5, 0], 'false': [0.061, 74, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.045, 0, 45], 'true,false': [0.007, 3, 0], 'false': [0.057, 96, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 97, 0], 'false,true': [0.039, 0, 45], 'false,false': [0.007, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.035, 0, 45], 'true,false': [0.008, 7, 0], 'false': [0.357, 95, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'female(A)'}, {'true,true': [2.79e-08, 0, 23], 'true,false': [0.071, 2, 22], 'false': [0.042, 79, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'female(A)'}, {'true': [0.0, 83, 0], 'false,true': [0.05, 1, 23], 'false,false': [0.051, 1, 22]}]]
[{'': [0.10380622837370317, 6.707597440443654e-17], 'true': [1.105288700071267e-15, -6.938893903907228e-18]}, {'': [-1.766263902812749e-17, 0.02908546225525768], 'false': [1.544658121217609e-16, 0.054532997479978786]}, {'': [5.870144727903127e-17, 0.036391331912858815], 'false': [7.48891846442174e-05, 3.273443657095254e-05]}, {'': [1.8312957107219077e-17, 0.027891978104729515], 'false': [7.387578134760986e-05, 2.823932410054436e-05]}, {'': [0.020893750766254965, 5.053041041428122e-05], 'true': [5.964111732193405e-05, 1.4170880477720748e-05]}, {'': [0.009228463245367932, 3.387703098193043e-05], 'true': [4.5449661605198894e-05, 1.580625727469707e-05]}, {'': [-3.433679457603577e-18, 0.008559570863271472], 'false': [3.4555844588081266e-05, 1.088358624517713e-05]}, {'': [0.009667152182821282, 0.0013434105671911998], 'true': [2.6685480824993766e-05, 9.77526489925884e-06]}, {'': [0.0025872408838769007, 2.2716142692169594e-05], 'true': [3.37893964016352e-17, 0.0049946007278909325]}, {'': [-6.6880905097901e-19, 0.002572736030315247], 'false': [0.0024870147102805545, 0.002618959252034034]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- actor(B).;true;true
1;false;female(A).;true;true
2;;workedunder(A, B) :- actor(B).;true;true
2;false;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(B).;true;true
3;false;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(B).;true;true
6;false;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;female(A).;true;true
9;;workedunder(A, B) :- actor(B).;true;true
9;false;female(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.30e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.12720693340635342;  // std dev = 0.154, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11214079491672;  // std dev = 5.58e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10145159468021606;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.30348671702059077;  // std dev = 0.083, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.3027377983188709;  // std dev = 0.084, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.09525194230039456;  // std dev = 0.224, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08487334964714167;  // std dev = 5.96e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2585300091043426;  // std dev = 0.000481, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12152194106180768;  // std dev = 8.00e-05, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07850929391269457;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21212680637775982;  // std dev = 0.000420, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10913395125809938;  // std dev = 7.28e-05, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07301415469793675;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17883217353454905;  // std dev = 0.000369, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09895061026393698;  // std dev = 5.78e-05, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06822380324543156;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15405927153963983;  // std dev = 0.000327, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09051785873441937;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0640125487223057;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13503311753430758;  // std dev = 0.000293, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08330849629010034;  // std dev = 5.72e-05, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071504
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 3.203192949295044 seconds
Total inference time: 2.678 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065223
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.455 seconds
Refined model CLL: -0.065223


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071504
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 9.442341871261597 seconds
Total inference time: 2.678 seconds
AUC ROC: 1.0
Total revision time: 9.442341871261597
Best scored revision CLL: -0.065223


Dataset: 5_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:04:23
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.071504, 'Precision': [0.742291, 0.5], 'Recall': 1.0, 'F1': 0.852086, 'Learning time': 9.442341871261597, 'Inference time': 2.678, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075574, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.2941489219665527, 'Inference time': 2.899}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.16e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283915;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11618053150825867;  // std dev = 0.330, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10124417334696577;  // std dev = 5.37e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926098;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09709229973331926;  // std dev = 0.425, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0845701237471557;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07824872883921069;  // std dev = 3.65e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else return 0.20348522714636968;  // std dev = 0.285, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1780124605643971;  // std dev = 4.71e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.07302027807932837;  // std dev = 0.021, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06801098203390239;  // std dev = 4.34e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else return 0.1476832926718201;  // std dev = 0.262, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13522054016519144;  // std dev = 2.79e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12676126621216777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06460978041840669;  // std dev = 0.052, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077321
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 3.220767021179199 seconds
Total inference time: 2.755 seconds
AUC ROC: 1.0


Dataset: 5_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:04:29
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.077321, 'Precision': [0.742291, 0.5], 'Recall': 1.0, 'F1': 0.852086, 'Learning time': 3.220767021179199, 'Inference time': 2.755}


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos  examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.822434649385226;  // std dev = 0.186, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.8581489350995117;  // std dev = 1.79e-07, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return -0.14185106490048763;  // std dev = 8.43e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283913;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( female(A) )
%   | then return 0.726624861664361;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.6549572831786966;  // std dev = 0.246, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5669793763200388;  // std dev = 0.033, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.4338087965423485;  // std dev = 0.012, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.11323728665673262;  // std dev = 0.104, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10151230484822453;  // std dev = 4.94e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42619408659235153;  // std dev = 0.033, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.3306513667812793;  // std dev = 0.010, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0926209185784325;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3266098983493401;  // std dev = 0.030, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2631406356267423;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08512503628678127;  // std dev = 4.71e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2591969749518271;  // std dev = 0.026, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2152002362824223;  // std dev = 0.008, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07872547602685194;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2125992455286998;  // std dev = 0.022, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1815866534497045;  // std dev = 0.006, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17917942132016704;  // std dev = 0.020, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15535633184916486;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07711018753763663;  // std dev = 0.381, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06813944524288895;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( female(A) )
%   | then return 0.14153556700214817;  // std dev = 0.054, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.14690047582970994;  // std dev = 0.052, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06393808924681384;  // std dev = 2.69e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1364105089970665;  // std dev = 0.013, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15489209663455433;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078193
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 3.554992198944092 seconds
Total inference time: 2.606 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066506
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.66 seconds
Parameter learned model CLL: -0.066506


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'female(A)'}, {'true,true': [0.186, 1, 27], 'true,false': [1.79e-07, 0, 29], 'false': [8.43e-08, 107, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'female(A)'}, {'true': [0.0, 118, 0], 'false,true': [0.0, 0, 27], 'false,false': [0.246, 2, 29]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.033, 0, 56], 'true,false': [0.012, 7, 0], 'false': [0.104, 113, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [4.94e-08, 112, 0], 'false,true': [0.033, 0, 56], 'false,false': [0.01, 7, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 121, 0], 'false,true': [0.03, 0, 56], 'false,false': [0.008, 5, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [4.71e-08, 97, 0], 'false,true': [0.026, 0, 56], 'false,false': [0.008, 7, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 116, 0], 'false,true': [0.022, 0, 56], 'false,false': [0.006, 6, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.02, 0, 56], 'true,false': [0.005, 4, 0], 'false': [0.381, 98, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'female(A)'}, {'true': [0.0, 106, 0], 'false,true': [0.054, 1, 27], 'false,false': [0.052, 1, 29]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [2.69e-08, 94, 0], 'false,true': [0.013, 0, 56], 'false,false': [0.003, 4, 0]}]]
[{'': [0.017236072637734554, 6.640586315514955e-17], 'true': [0.03443877551020513, 1.1025663141105003e-15]}, {'': [-3.7634678800852764e-18, 0.03353601766464875], 'false': [-6.579099405186112e-17, 0.06035379812695069]}, {'': [0.09894059700524957, 9.49841085153285e-05], 'true': [1.945649955827276e-05, 1.908376968210287e-05]}, {'': [2.1807952269422717e-17, 0.05659320407533084], 'false': [1.929748025166132e-05, 1.553213166557591e-05]}, {'': [-1.8350793795457133e-18, 0.026187165105468483], 'false': [1.5603783477805395e-05, 1.1622892024210073e-05]}, {'': [2.2891196384023845e-17, 0.02223899861151092], 'false': [1.1891048047916821e-05, 9.002206474516075e-06]}, {'': [-2.3927220358300786e-17, 0.01359059444694725], 'false': [9.036724140003877e-06, 6.295256732157435e-06]}, {'': [0.006970429002464318, 0.0014817684253686043], 'true': [6.974702906166673e-06, 5.563724277842658e-06]}, {'': [-9.426421907194725e-18, 0.0028125508073623896], 'false': [0.002897325611968609, 0.0027195327786658525]}, {'': [7.677074106450551e-18, 0.005283225471796714], 'false': [3.2390703657490605e-06, 2.9742472433778866e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;female(A).;true;true
1;;workedunder(A, B) :- actor(B).;true;true
1;false;female(A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(B).;true;true
3;false;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(B).;true;true
4;false;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(B).;true;true
5;false;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(B).;true;true
6;false;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- actor(B).;true;true
9;;workedunder(A, B) :- actor(B).;true;true
9;false;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.43e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839136;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360618;  // std dev = 9.06e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( female(A) )
%   | then return 0.41751358415831;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.3840226219875909;  // std dev = 0.128, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3245127030090008;  // std dev = 0.027, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14475389531317878;  // std dev = 0.005, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.09316458599345175;  // std dev = 0.049, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08514787439645138;  // std dev = 4.71e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2577676588070853;  // std dev = 0.024, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12685172101019537;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07874508819717102;  // std dev = 1.83e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( female(A) )
%   | then return 0.20869944156520537;  // std dev = 2.58e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.20339721384002377;  // std dev = 0.059, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07321875448173933;  // std dev = 4.34e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( female(A) )
%   | then return 0.1650644014771378;  // std dev = 0.058, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.18202481415429092;  // std dev = 2.79e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06840293119361823;  // std dev = 3.65e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( female(A) )
%   | then return 0.1536121778057408;  // std dev = 2.11e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.14602785559995102;  // std dev = 0.056, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13647912926850908;  // std dev = 0.013, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1788862329592056;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.06417062327962413;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else return -0.18751699009473757;  // std dev = 0.676, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.089602
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 3.439626932144165 seconds
Total inference time: 2.6 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067969
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.677 seconds
Refined model CLL: -0.067969


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078193
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 10.331619131088257 seconds
Total inference time: 2.606 seconds
AUC ROC: 1.0
Total revision time: 10.331619131088257
Best scored revision CLL: -0.066506


Dataset: 5_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:04:48
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.078193, 'Precision': [0.735892, 0.5], 'Recall': 1.0, 'F1': 0.847854, 'Learning time': 10.331619131088257, 'Inference time': 2.606, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.078193, 'Precision': [0.735892, 0.5], 'Recall': 1.0, 'F1': 0.847854, 'Learning time': 3.554992198944092, 'Inference time': 2.606}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048763;  // std dev = 8.43e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11332692135465064;  // std dev = 0.115, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10150412977842704;  // std dev = 8.56e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( female(A) )
%   | then return 0.39897394438523337;  // std dev = 0.096, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.40020992037010517;  // std dev = 0.093, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09261407275241192;  // std dev = 3.80e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3246238383692052;  // std dev = 0.001, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1442243549548758;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08511922563593385;  // std dev = 6.66e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25783982440931164;  // std dev = 0.000884, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12738901195401353;  // std dev = 0.000137, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07872048603198445;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21164029700091827;  // std dev = 0.000771, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11387496936599695;  // std dev = 0.000137, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17847605702524807;  // std dev = 0.000678, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10286237342355753;  // std dev = 9.88e-05, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07347201478542668;  // std dev = 0.030, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1450301390404852;  // std dev = 0.046, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.14546066573364988;  // std dev = 0.044, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else if ( actor(A) )
%   | then return -0.06836675506753993;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else return -0.122384365246597;  // std dev = 0.132, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06404463151939997;  // std dev = 0.005, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1358217557538768;  // std dev = 0.000731, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10686941020892156;  // std dev = 0.000195, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073229
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.698390007019043 seconds
Total inference time: 2.644 seconds
AUC ROC: 1.0


Dataset: 5_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:04:55
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073229, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.698390007019043, 'Inference time': 2.644}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos  examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1418510649004877;  // std dev = 5.16e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1254446385283911;  // std dev = 7.45e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 7.60e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783637;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926086;  // std dev = 7.07e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.08518475138839683;  // std dev = 5.58e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.0787767547310916;  // std dev = 6.05e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06842697784420267;  // std dev = 4.41e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202626;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067149
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.4369351863861084 seconds
Total inference time: 2.792 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063744
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.666 seconds
Parameter learned model CLL: -0.063744


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 58], 'true,false': [0.0, 6, 0], 'false': [5.16e-08, 118, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 58], 'true,false': [0.0, 6, 0], 'false': [7.45e-08, 100, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [7.6e-08, 102, 0], 'false,true': [1.19e-07, 0, 58], 'false,false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 119, 0], 'false,true': [0.0, 0, 58], 'false,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [7.07e-08, 116, 0], 'false,true': [0.0, 0, 58], 'false,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 58], 'true,false': [2.63e-09, 7, 0], 'false': [5.58e-08, 109, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 58], 'true,false': [0.0, 6, 0], 'false': [6.05e-08, 111, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 105, 0], 'false,true': [0.0, 0, 58], 'false,false': [2.63e-09, 8, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 58], 'true,false': [2.63e-09, 7, 0], 'false': [4.41e-08, 99, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3.94e-08, 0, 58], 'true,false': [0.0, 4, 0], 'false': [0.0, 107, 0]}]]
[{'': [0.08496093749999956, 2.258080728051166e-17], 'true': [-3.675221047035001e-16, -6.938893903907228e-18]}, {'': [0.0606524673676469, 5.551115123125783e-17], 'true': [-1.2250736823450003e-16, -2.3129646346357427e-18]}, {'': [5.659960517696876e-17, 0.0474865377396351], 'false': [2.4501473646900006e-16, -1.734723475976807e-18]}, {'': [-2.052513154769197e-17, 0.01626384593324757], 'false': [-3.3689526264487507e-16, 0.0]}, {'': [4.306899664494142e-17, 0.012487180976206418], 'false': [-1.5313421029312505e-16, 0.0]}, {'': [0.011131884173830936, 2.851949054082971e-17], 'true': [-3.062684205862501e-17, 9.912705577010326e-19]}, {'': [0.0070731799132398646, 3.300663046182898e-17], 'true': [-2.2970131543968756e-17, -1.1564823173178713e-18]}, {'': [-4.229421046191073e-18, 0.006675749851965439], 'false': [-3.062684205862501e-17, 8.673617379884035e-19]}, {'': [0.004700618863857943, 1.9625154475697212e-17], 'true': [0.0, 9.912705577010326e-19]}, {'': [0.0023708657045662224, -1.6601465788787386e-17], 'true': [2.6798486801296883e-17, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(B).;true;true
2;false;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(B).;true;true
3;false;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(B).;true;true
4;false;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(B).;true;true
7;false;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839133;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360617;  // std dev = 9.88e-08, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10159632948783627;  // std dev = 3.65e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.092691276189261;  // std dev = 3.94e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.08643659931154263;  // std dev = 0.130, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07868595479478635;  // std dev = 4.47e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( female(A) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.19533099211435406;  // std dev = 0.063, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17848039067065835;  // std dev = 0.008, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09470021279138632;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07333733375618325;  // std dev = 0.021, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1537930216655243;  // std dev = 0.007, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08658709599612428;  // std dev = 0.001, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.069599006448428;  // std dev = 0.154, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13482566758137696;  // std dev = 0.006, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08041102306347765;  // std dev = 0.001, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06419221837990242;  // std dev = 0.018, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067415
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.4310989379882812 seconds
Total inference time: 2.676 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064242
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.868 seconds
Refined model CLL: -0.064242


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067149
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.40203412437439 seconds
Total inference time: 2.792 seconds
AUC ROC: 1.0
Total revision time: 10.40203412437439
Best scored revision CLL: -0.063744


Dataset: 5_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:05:14
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067149, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.40203412437439, 'Inference time': 2.792, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067149, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.4369351863861084, 'Inference time': 2.792}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.69e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283913;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 7.60e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783624;  // std dev = 4.83e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(A) )
%   | then return -0.09269127618926089;  // std dev = 6.58e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else return -0.21001065151937887;  // std dev = 0.525, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.084773963755965;  // std dev = 0.019, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07823262211951154;  // std dev = 0.022, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( female(A) )
%   | then return 0.19601797894855336;  // std dev = 0.061, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.2023593958796219;  // std dev = 0.046, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07285615139779832;  // std dev = 0.018, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17849810825827098;  // std dev = 0.003, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0945900762611997;  // std dev = 0.000443, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06771441007590506;  // std dev = 0.023, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1538063200376963;  // std dev = 0.003, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08696129652681556;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06392416242311362;  // std dev = 0.017, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13483595229033385;  // std dev = 0.003, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08022226334748657;  // std dev = 0.000426, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081765
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 3.5156359672546387 seconds
Total inference time: 2.576 seconds
AUC ROC: 1.0


Dataset: 5_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:05:21
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.081765, 'Precision': [0.736364, 0.5], 'Recall': 1.0, 'F1': 0.848168, 'Learning time': 3.5156359672546387, 'Inference time': 2.576}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos  examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.14e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.14185106490048813;  // std dev = 0.000, 313.000 (wgt'ed) examples reached here.  /* #neg=313 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.12544463852839177;  // std dev = 0.000, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360633;  // std dev = 2.36e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.11231637819360682;  // std dev = 0.000, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783624;  // std dev = 3.16e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.10159632948783644;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.09269127618926071;  // std dev = 9.66e-08, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.08518475138839679;  // std dev = 8.43e-08, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109177;  // std dev = 1.29e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.07877675473109146;  // std dev = 5.77e-08, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return -0.07324622576333684;  // std dev = 9.66e-08, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 1.67e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.06842697784420271;  // std dev = 0.000, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.06419184008202623;  // std dev = 0.000, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.357770919799805 seconds
Total inference time: 2.802 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065435
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.998 seconds
Parameter learned model CLL: -0.065435


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [1.09e-06, 0, 178], 'true,false': [6.14e-08, 59, 0], 'false': [0.0, 313, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 178], 'true,false': [0.0, 52, 0], 'false': [0.0, 298, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [5.9e-07, 0, 178], 'true,false': [2.36e-08, 47, 0], 'false': [0.0, 282, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3.77e-07, 0, 178], 'true,false': [3.16e-08, 54, 0], 'false': [0.0, 297, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3.58e-07, 0, 178], 'true,false': [0.0, 67, 0], 'false': [9.66e-08, 286, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3.63e-07, 0, 178], 'true,false': [1.83e-08, 62, 0], 'false': [8.43e-08, 309, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3e-07, 0, 178], 'true,false': [1.29e-08, 54, 0], 'false': [5.77e-08, 287, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 178], 'true,false': [0.0, 70, 0], 'false': [9.66e-08, 282, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 178], 'true,false': [1.67e-08, 56, 0], 'false': [0.0, 276, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [7.6e-08, 0, 178], 'true,false': [0.0, 64, 0], 'false': [0.0, 276, 0]}]]
[{'': [0.18697146112624974, -1.3053101375784588e-16], 'true': [6.706246045376226e-15, 6.39789539614497e-17]}, {'': [0.12490989715269404, -5.066789642584607e-17], 'true': [-3.193450497798203e-15, -3.416070845000482e-17]}, {'': [0.07367043270851478, -8.818792819717556e-17], 'true': [1.9559884299013994e-15, 1.1810883240693155e-17]}, {'': [0.0481234149210049, -6.728624391667616e-17], 'true': [7.983626244495507e-16, 1.850371707708594e-17]}, {'': [0.03395550104462099, 3.2607948975004597e-17], 'true': [7.185263620045957e-16, -1.6570492904853082e-18]}, {'': [0.02219517466140034, 2.2994910542398065e-17], 'true': [7.384854276158345e-16, 5.3720468933475315e-18]}, {'': [0.014867337532180235, 1.1605118724304772e-17], 'true': [5.03966406683779e-16, 3.0839528461809902e-18]}, {'': [0.012696517803766188, 3.307047307394083e-17], 'true': [-1.6965205769552953e-16, -2.3790493384824783e-18]}, {'': [0.008904961236342256, -4.022547190670857e-18], 'true': [-4.490789762528723e-17, 4.956352788505163e-18]}, {'': [0.007641376402905936, -6.436075505073371e-18], 'true': [3.2433481618263e-17, -3.469446951953614e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.14e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.14185106490048807;  // std dev = 0.000, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.1254446385283918;  // std dev = 0.000, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360635;  // std dev = 1.83e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.11231637819360685;  // std dev = 0.000, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783623;  // std dev = 3.33e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.10159632948783644;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926104;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.09269127618926068;  // std dev = 1.03e-07, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.67e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.08518475138839679;  // std dev = 8.43e-08, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109168;  // std dev = 3.16e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.07877675473109146;  // std dev = 6.14e-08, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 1.05e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.0732462257633369;  // std dev = 1.06e-07, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420264;  // std dev = 1.83e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.068426977844203;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.06419184008202623;  // std dev = 0.000, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.419896125793457 seconds
Total inference time: 3.123 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065435
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.774 seconds
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.549667045593264 seconds
Total inference time: 2.802 seconds
AUC ROC: 1.0
Total revision time: 14.549667045593264
Best scored revision CLL: -0.065435


Dataset: 5_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:05:45
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063555, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 14.549667045593264, 'Inference time': 2.802, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063555, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.357770919799805, 'Inference time': 2.802}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5.96e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.1418510649004881;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.1254446385283918;  // std dev = 0.000, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360628;  // std dev = 4.34e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.11231637819360683;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783621;  // std dev = 3.80e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.10159632948783646;  // std dev = 0.000, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.09269127618926071;  // std dev = 1.03e-07, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.08518475138839679;  // std dev = 8.94e-08, 328.000 (wgt'ed) examples reached here.  /* #neg=328 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109175;  // std dev = 2.11e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.07877675473109146;  // std dev = 5.58e-08, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.07324622576333684;  // std dev = 9.88e-08, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 1.83e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.06842697784420274;  // std dev = 0.000, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.06419184008202625;  // std dev = 0.000, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.3752851486206055 seconds
Total inference time: 2.808 seconds
AUC ROC: 1.0


Dataset: 5_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:05:54
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063555, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.3752851486206055, 'Inference time': 2.808}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos  examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048766;  // std dev = 6.99e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1254446385283914;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 6.99e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10257233840664375;  // std dev = 0.079, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09260922685032645;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08511511245826649;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07871681624555567;  // std dev = 1.09e-05, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07319421644919517;  // std dev = 1.02e-05, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.0683814456951204;  // std dev = 9.59e-06, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06415166729350469;  // std dev = 9.04e-06, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065617
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.2641830444335938 seconds
Total inference time: 3.014 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064171
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.458 seconds
Parameter learned model CLL: -0.064171


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [2.23e-07, 0, 45], 'true,false': [0.0, 6, 0], 'false': [6.99e-08, 82, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 45], 'true,false': [0.0, 6, 0], 'false': [0.0, 90, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [6.99e-08, 86, 0], 'false,true': [0.0, 0, 45], 'false,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 45], 'true,false': [0.0, 5, 0], 'false': [0.079, 81, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 93, 0], 'false,true': [2.98e-08, 0, 45], 'false,false': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 80, 0], 'false,true': [0.0, 0, 45], 'false,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [5.58e-08, 0, 45], 'true,false': [0.0, 6, 0], 'false': [1.09e-05, 80, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 45], 'true,false': [0.0, 6, 0], 'false': [1.02e-05, 74, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 45], 'true,false': [0.0, 8, 0], 'false': [9.59e-06, 71, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [2.36e-08, 0, 45], 'true,false': [0.0, 8, 0], 'false': [9.04e-06, 72, 0]}]]
[{'': [0.10380622837370317, 5.95729427847645e-17], 'true': [1.105288700071267e-15, -6.938893903907228e-18]}, {'': [0.07410586634586562, -1.7270135938613546e-17], 'true': [-9.473903143468002e-16, -2.3129646346357427e-18]}, {'': [5.680210823663592e-17, 0.040122030722945186], 'false': [-3.947459643111668e-17, 0.0]}, {'': [0.024252759220113572, 7.620747276739206e-05], 'true': [-4.144832625267251e-16, 0.0]}, {'': [-2.984470496304184e-17, 0.019909088333742615], 'false': [1.973729821555834e-17, 0.0]}, {'': [-2.3592239273284576e-17, 0.010425859500244368], 'false': [-2.960594732333751e-17, 0.0]}, {'': [0.008642090718479508, 1.4935365444390668e-12], 'true': [6.908054375445419e-17, -1.1564823173178713e-18]}, {'': [0.006505689883776124, 1.4113740206574995e-12], 'true': [-8.388351741612294e-17, 0.0]}, {'': [0.006269118519403579, 1.2965309577124649e-12], 'true': [-3.947459643111668e-17, 0.0]}, {'': [0.0050344624983226565, 1.135712665887054e-12], 'true': [1.2335811384723961e-17, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(B).;true;true
2;false;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(B).;true;true
4;false;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(B).;true;true
5;false;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.60e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1254446385283915;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 7.88e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783616;  // std dev = 5.77e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.09774025410996731;  // std dev = 0.381, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08479211624064667;  // std dev = 4.59e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0784395014681516;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.0729532918909799;  // std dev = 2.27e-05, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06817050602508931;  // std dev = 2.13e-05, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06396526971961934;  // std dev = 2.82e-05, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06848
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.2455251216888428 seconds
Total inference time: 2.892 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064692
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.447 seconds
Refined model CLL: -0.064692


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065617
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.414708166122438 seconds
Total inference time: 3.014 seconds
AUC ROC: 1.0
Total revision time: 9.414708166122438
Best scored revision CLL: -0.064171


Dataset: 5_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:06:13
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065617, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.414708166122438, 'Inference time': 3.014, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065617, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.2641830444335938, 'Inference time': 3.014}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048766;  // std dev = 7.60e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839144;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 7.74e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.10159632948783617;  // std dev = 5.58e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926108;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 4.47e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109164;  // std dev = 4.59e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.07324622576333707;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.14793579644284752;  // std dev = 0.219, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   else return -0.06842697784420267;  // std dev = 3.49e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13456598397997804;  // std dev = 3.94e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07848065397292985;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070882
   Precision = 0.743929 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.853165


Total learning time: 3.024848222732544 seconds
Total inference time: 2.735 seconds
AUC ROC: 1.0


Dataset: 5_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:06:19
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070882, 'Precision': [0.743929, 0.5], 'Recall': 1.0, 'F1': 0.853165, 'Learning time': 3.024848222732544, 'Inference time': 2.735}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos  examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.69e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839147;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360624;  // std dev = 5.87e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.22751829855267275;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783616;  // std dev = 5.58e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( female(A) )
%   | then return 0.3921997856626858;  // std dev = 0.121, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.39109918572809343;  // std dev = 0.124, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32636974619474796;  // std dev = 0.000811, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.25767979820399683;  // std dev = 0.000243, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09491895436924686;  // std dev = 0.164, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.259029247936492;  // std dev = 0.000708, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.21147851578421584;  // std dev = 0.000201, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.08501131253588909;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return -0.1752724920672317;  // std dev = 0.187, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.21238854003877386;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.18000055750482502;  // std dev = 0.108, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else return -0.0793485065226532;  // std dev = 0.132, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0727261562274633;  // std dev = 0.013, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1814558981075204;  // std dev = 0.017, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.20897273701423233;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06806025987699298;  // std dev = 0.011, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15604385906091253;  // std dev = 0.015, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1765218612064445;  // std dev = 0.006, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06389223547486447;  // std dev = 0.009, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1365786921746439;  // std dev = 0.013, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15447041915049856;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.08196
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 3.2506978511810303 seconds
Total inference time: 3.059 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068396
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.583 seconds
Parameter learned model CLL: -0.068396


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [8.69e-08, 98, 0], 'false,true': [2.23e-07, 0, 45], 'false,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(B)'}, {'true': [0.0, 80, 0], 'false': [0.0, 0, 45]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [5.87e-08, 73, 0], 'false,true': [0.0, 0, 45], 'false,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'female(A)'}, {'true': [5.58e-08, 73, 0], 'false,true': [0.121, 1, 23], 'false,false': [0.124, 1, 22]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.000811, 0, 45], 'true,false': [0.000243, 6, 0], 'false': [0.164, 74, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'false': 'actor(A)'}, {'true,true': [0.000708, 0, 45], 'true,false': [0.000201, 5, 0], 'false,true': [0.0, 78, 0], 'false,false': [0.187, 8, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'female(A)'}, {'true,true': [0.0, 0, 23], 'true,false': [0.108, 2, 22], 'false': [0.132, 94, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.013, 86, 0], 'false,true': [0.017, 0, 45], 'false,false': [0.007, 6, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.011, 95, 0], 'false,true': [0.015, 0, 45], 'false,false': [0.006, 6, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.009, 80, 0], 'false,true': [0.013, 0, 45], 'false,false': [0.0, 3, 0]}]]
[{'': [7.703588334133739e-17, 0.07496876301541104], 'false': [1.105288700071267e-15, 0.0]}, {'': [-2.2204460492503132e-17, -9.473903143468002e-16]}, {'': [4.7146457210109385e-17, 0.05516176578877069], 'false': [-3.947459643111668e-17, 0.0]}, {'': [4.258389683493751e-17, 0.015037786491318253], 'false': [0.014738133068372442, 0.015349849777464954]}, {'': [0.03540975839060188, 0.0003622661553716885], 'true': [1.4630227024920512e-08, 9.847194069415957e-09]}, {'': [0.01992399085877352, 0.0039502048898623415], 'true': [1.1150369921213926e-08, 8.085090685838736e-09], 'false': [-1.9927079929169476e-17, 0.03507548999194643]}, {'': [0.006221476579740465, 0.00018542239725407252], 'true': [-9.654113257610057e-18, 0.01167039363907868]}, {'': [1.8949686756439202e-06, 0.015830010667404783], 'false': [6.184523873864478e-06, 7.66045885591815e-06]}, {'': [1.2308220948869198e-06, 0.01148595153125393], 'false': [4.8621166588781585e-06, 5.923643411588168e-06]}, {'': [9.780544910006905e-07, 0.0049671072311205265], 'false': [3.8986379980368275e-06, -4.625929269271485e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(B).;true;true
0;false;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- actor(B).;true;true
2;;workedunder(A, B) :- actor(B).;true;true
2;false;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
5;false;actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;female(A).;true;true
7;;workedunder(A, B) :- actor(B).;true;true
7;false;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- actor(B).;true;true
8;false;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- actor(B).;true;true
9;false;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.30e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.11231637819360624;  // std dev = 6.50e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783621;  // std dev = 5.05e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926103;  // std dev = 3.49e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.24777317748344863;  // std dev = 0.337, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   else return -0.08518475138839683;  // std dev = 4.71e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109158;  // std dev = 5.87e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21098681425125518;  // std dev = 3.65e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1065832764337205;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1779974596252114;  // std dev = 3.65e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0968513537369759;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420267;  // std dev = 3.80e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15342698502307137;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08870413241238491;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13454011098182664;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08179044035098695;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076971
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 3.2164230346679688 seconds
Total inference time: 2.59 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06614
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.444 seconds
Refined model CLL: -0.06614


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076971
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 9.494120885849 seconds
Total inference time: 2.59 seconds
AUC ROC: 1.0
Total revision time: 9.494120885849
Best scored revision CLL: -0.06614


Dataset: 5_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:06:38
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076971, 'Precision': [0.742291, 0.5], 'Recall': 1.0, 'F1': 0.852086, 'Learning time': 9.494120885849, 'Inference time': 2.59, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.08196, 'Precision': [0.742291, 0.5], 'Recall': 1.0, 'F1': 0.852086, 'Learning time': 3.2506978511810303, 'Inference time': 3.059}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.88e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( female(A) )
%   | then return 0.8164822684328453;  // std dev = 0.200, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( female(A) )
%   | then return 0.6861389866026452;  // std dev = 0.200, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.675995151341389;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 7.74e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5700242787295402;  // std dev = 0.026, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.4308342044080927;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783616;  // std dev = 5.77e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4284840384723166;  // std dev = 0.026, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.3325464793616382;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926101;  // std dev = 3.80e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3281646001291304;  // std dev = 0.023, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2595914651630021;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 5.37e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.26025457871881186;  // std dev = 0.020, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.21075991980122413;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21334340040349029;  // std dev = 0.018, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.18248698282635362;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then return -0.07877675473109161;  // std dev = 5.48e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else return -0.22089339072030562;  // std dev = 0.636, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07223722375549417;  // std dev = 0.028, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1797232238962452;  // std dev = 0.016, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1551716017026678;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15473439786129745;  // std dev = 0.014, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13536285226097525;  // std dev = 0.006, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(A) )
%   | then return -0.06849132441605152;  // std dev = 3.33e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( female(B) )
%   | | then return -0.05996167412132494;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.24057950427130362;  // std dev = 0.626, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06328424769969829;  // std dev = 0.034, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13555965982607543;  // std dev = 0.012, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12099583853995773;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080707
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 3.5571770668029785 seconds
Total inference time: 3.047 seconds
AUC ROC: 1.0


Dataset: 5_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:06:46
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.080707, 'Precision': [0.742291, 0.5], 'Recall': 1.0, 'F1': 0.852086, 'Learning time': 3.5571770668029785, 'Inference time': 3.047}


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos  examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.7936328060672536;  // std dev = 0.246, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   else return -0.14185106490048763;  // std dev = 8.43e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7261202067615338;  // std dev = 0.048, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.27090019568130974;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839133;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360618;  // std dev = 8.82e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5619492569679123;  // std dev = 0.059, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.22921460914861305;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783635;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42244913342921386;  // std dev = 0.059, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1863509265180128;  // std dev = 0.012, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.3167674162536953;  // std dev = 5.96e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.31468258188681353;  // std dev = 0.087, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.09414824748522105;  // std dev = 0.160, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08507128067709488;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25909487261575237;  // std dev = 0.048, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.20858720385261043;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07867931073974078;  // std dev = 4.71e-08, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2125334236672541;  // std dev = 0.042, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1746424020070437;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17913511636203447;  // std dev = 0.037, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15002991322661338;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07294032690626667;  // std dev = 0.024, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13957217156587992;  // std dev = 0.053, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.1489011832956819;  // std dev = 0.052, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.06818180077215209;  // std dev = 0.022, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06415010436888656;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( female(A) )
%   | then return 0.12263764929008945;  // std dev = 0.053, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.13007777712055507;  // std dev = 0.051, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077691
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.946861982345581 seconds
Total inference time: 2.875 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067607
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.713 seconds
Parameter learned model CLL: -0.067607


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'female(A)'}, {'true,true': [1.58e-07, 0, 27], 'true,false': [0.246, 2, 29], 'false': [8.43e-08, 110, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.048, 0, 56], 'true,false': [0.011, 4, 0], 'false': [0.0, 109, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [8.82e-08, 111, 0], 'false,true': [0.059, 0, 56], 'false,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 116, 0], 'false,true': [0.059, 0, 56], 'false,false': [0.012, 6, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'female(A)'}, {'true,true': [5.96e-08, 0, 27], 'true,false': [0.087, 1, 29], 'false': [0.16, 110, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 111, 0], 'false,true': [0.048, 0, 56], 'false,false': [0.009, 3, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [4.71e-08, 132, 0], 'false,true': [0.042, 0, 56], 'false,false': [0.01, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.037, 0, 56], 'true,false': [0.009, 5, 0], 'false': [0.024, 108, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'female(A)'}, {'true,true': [0.053, 1, 27], 'true,false': [0.052, 1, 29], 'false': [0.022, 121, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'female(A)'}, {'true': [0.0, 108, 0], 'false,true': [0.053, 1, 27], 'false,false': [0.051, 1, 29]}]]
[{'': [0.03329369797859664, 6.45947941600091e-17], 'true': [9.210739167260557e-16, 0.06035379812695236]}, {'': [0.06189243033501649, -8.148425868808489e-18], 'true': [4.113298967396111e-05, 3.088914167063972e-05]}, {'': [7.001406461600086e-17, 0.03900617651325229], 'false': [6.29811085881877e-05, 0.0]}, {'': [-1.5313421029312504e-17, 0.03245519824706392], 'false': [6.183229804324064e-05, 2.391386473281354e-05]}, {'': [0.004011629208509473, 0.00023138142394045263], 'true': [1.3158198810372225e-16, 0.007620036611481836]}, {'': [-1.1002210153942993e-17, 0.010596206384856179], 'false': [4.075262327590812e-05, 2.650631198385563e-05]}, {'': [1.682156097916904e-17, 0.00935786842097716], 'false': [3.0967895640054977e-05, 2.303045489388672e-05]}, {'': [0.00817652897425487, 5.243026014076121e-06], 'true': [2.3900627939067126e-05, 1.746587218302842e-05]}, {'': [0.0027599967637672355, 4.119053895774293e-06], 'true': [0.002822472534309942, 0.0026596713398365666]}, {'': [-8.737866397512806e-18, 0.0027441259442239417], 'false': [0.0028299307219946945, 0.0026373181391136833]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;female(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(B).;true;true
2;false;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(B).;true;true
3;false;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;female(A).;true;true
5;;workedunder(A, B) :- actor(B).;true;true
5;false;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(B).;true;true
6;false;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.43e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 7.45e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783635;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( female(A) )
%   | then return 0.39897394438523337;  // std dev = 0.096, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.40020992037010517;  // std dev = 0.093, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.092691276189261;  // std dev = 3.94e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3246238383692052;  // std dev = 0.001, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14437697076250944;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 5.77e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2578398244093116;  // std dev = 0.000884, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12737204798577975;  // std dev = 0.000137, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109158;  // std dev = 6.14e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else return 0.20593061820107503;  // std dev = 0.323, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17931476093783688;  // std dev = 0.000680, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.13635185907942438;  // std dev = 0.000191, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420264;  // std dev = 5.37e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15442455997774382;  // std dev = 0.000603, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12108554805402348;  // std dev = 0.000132, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13103431778364386;  // std dev = 0.242, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   else return -0.0646091009128574;  // std dev = 0.044, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.090609
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 3.332134962081909 seconds
Total inference time: 2.51 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067388
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.562 seconds
Refined model CLL: -0.067388


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.090609
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 10.55399694442749 seconds
Total inference time: 2.51 seconds
AUC ROC: 1.0
Total revision time: 10.55399694442749
Best scored revision CLL: -0.067388


Dataset: 5_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:07:06
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.090609, 'Precision': [0.735892, 0.5], 'Recall': 1.0, 'F1': 0.847854, 'Learning time': 10.55399694442749, 'Inference time': 2.51, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.077691, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.946861982345581, 'Inference time': 2.875}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.822434649385226;  // std dev = 0.186, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.8248156017661784;  // std dev = 0.180, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.14185106490048766;  // std dev = 8.16e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839127;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7263798063385708;  // std dev = 0.002, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2738483486199243;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 8.69e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else return 0.5621648003949384;  // std dev = 0.002, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( female(A) )
%   | then return 0.3706635997207287;  // std dev = 0.192, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else return 0.4222947627020874;  // std dev = 5.16e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926092;  // std dev = 5.77e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32971166298399784;  // std dev = 0.045, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.4247975006666387;  // std dev = 0.016, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 6.05e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2613137932184679;  // std dev = 0.039, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.33020367547731605;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109155;  // std dev = 6.91e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( female(A) )
%   | then return 0.21880082325398076;  // std dev = 3.33e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.17907548771694817;  // std dev = 0.117, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.18259688545848113;  // std dev = 0.008, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2989298896739235;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.1436794716217915;  // std dev = 0.074, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.1427119909793446;  // std dev = 0.072, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.0687913306630529;  // std dev = 0.040, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06416995642867912;  // std dev = 1.97e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1388795965661345;  // std dev = 0.006, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.26784433886452524;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.091994
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 3.4960849285125732 seconds
Total inference time: 2.825 seconds
AUC ROC: 1.0


Dataset: 5_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:07:13
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.091994, 'Precision': [0.735892, 0.5], 'Recall': 1.0, 'F1': 0.847854, 'Learning time': 3.4960849285125732, 'Inference time': 2.825}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos  examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.69e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.12544463852839133;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360618;  // std dev = 8.69e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1015963294878363;  // std dev = 1.49e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0926912761892609;  // std dev = 6.05e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.08928169999928263;  // std dev = 0.469, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07847994778883752;  // std dev = 4.08e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1680130292801448;  // std dev = 0.379, 60.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   else return -0.07759999417305653;  // std dev = 0.511, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15392309009149152;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1109263417774191;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06808728411429912;  // std dev = 0.021, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13492696638893897;  // std dev = 5.58e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10044950405853484;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.06391919077974047;  // std dev = 0.019, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074339
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 3.3551249504089355 seconds
Total inference time: 2.691 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065462
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.728 seconds
Parameter learned model CLL: -0.065462


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [8.69e-08, 97, 0], 'false,true': [0.0, 0, 58], 'false,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 58], 'true,false': [0.0, 5, 0], 'false': [0.0, 108, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [8.69e-08, 112, 0], 'false,true': [1.19e-07, 0, 58], 'false,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [1.49e-08, 105, 0], 'false,true': [0.0, 0, 58], 'false,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [6.05e-08, 107, 0], 'false,true': [0.0, 0, 58], 'false,false': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 58], 'true,false': [2.63e-09, 7, 0], 'false': [0.469, 115, 0]}], ['workedunder(A, B)', {'': 'actor(B)'}, {'true': [4.08e-08, 123, 0], 'false': [0.0, 0, 58]}], ['workedunder(A, B)', {'': 'director(B), actor(A)'}, {'true': [0.379, 2, 58], 'false': [0.511, 116, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 58], 'true,false': [0.0, 3, 0], 'false': [0.021, 116, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [5.58e-08, 0, 58], 'true,false': [0.0, 10, 0], 'false': [0.019, 100, 0]}]]
[{'': [7.783006770568107e-17, 0.04676162321956422], 'false': [-3.675221047035001e-16, 0.0]}, {'': [0.052161020059183986, -6.1679056923619804e-18], 'true': [-1.2250736823450003e-16, 0.0]}, {'': [6.740639792367021e-17, 0.0378756149402803], 'false': [2.4501473646900006e-16, 0.0]}, {'': [2.1147105230955365e-18, 0.012601093207619572], 'false': [-3.3689526264487507e-16, -1.1564823173178713e-18]}, {'': [3.4240523189373984e-17, 0.01642278575441154], 'false': [-1.5313421029312505e-16, 0.0]}, {'': [0.011131884173830936, 0.001913488622907306], 'true': [-3.062684205862501e-17, 9.912705577010326e-19]}, {'': [1.3539305178355567e-17, -2.2970131543968756e-17]}, {'': [0.0023927725813546225, 0.0022502690910630387]}, {'': [0.0032801044213016826, 3.6538826075876037e-06], 'true': [-3.828355257328126e-18, 0.0]}, {'': [0.006949223193637592, 3.7708445796702517e-06], 'true': [5.3596973602593766e-17, -1.3877787807814458e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(B).;true;true
0;false;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(B).;true;true
2;false;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(B).;true;true
3;false;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(B).;true;true
4;false;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004877;  // std dev = 5.16e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.12686740870509433;  // std dev = 0.154, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11217460422602712;  // std dev = 7.30e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( female(A) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.5219822959992896;  // std dev = 0.146, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4228470480184741;  // std dev = 0.029, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.17576418878379396;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1050502163481868;  // std dev = 0.273, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09229384161906275;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.324335298520255;  // std dev = 0.026, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1534712143395402;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2576463810166594;  // std dev = 0.023, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.13366582128767213;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.08772677646368802;  // std dev = 0.333, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07827894910964532;  // std dev = 3.94e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2115058208977823;  // std dev = 0.020, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12010706145428611;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07281420840409679;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17837880668995923;  // std dev = 0.018, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10717827795275221;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06804869143922421;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1537167258148078;  // std dev = 0.016, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0970294359923251;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1347666276135032;  // std dev = 0.014, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08963417942001427;  // std dev = 0.004, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.0642396368644515;  // std dev = 0.034, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073553
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 3.3779168128967285 seconds
Total inference time: 2.613 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065093
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.699 seconds
Refined model CLL: -0.065093


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073553
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 10.160041763305664 seconds
Total inference time: 2.613 seconds
AUC ROC: 1.0
Total revision time: 10.160041763305664
Best scored revision CLL: -0.065093


Dataset: 5_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:31
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073553, 'Precision': [0.736364, 0.5], 'Recall': 1.0, 'F1': 0.848168, 'Learning time': 10.160041763305664, 'Inference time': 2.613, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.074339, 'Precision': [0.736364, 0.5], 'Recall': 1.0, 'F1': 0.848168, 'Learning time': 3.3551249504089355, 'Inference time': 2.691}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048766;  // std dev = 7.88e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1123163781936062;  // std dev = 8.30e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1015963294878363;  // std dev = 2.11e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926083;  // std dev = 7.45e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 5.58e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109158;  // std dev = 6.14e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333707;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420265;  // std dev = 4.94e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else return 0.14899519985743562;  // std dev = 0.219, 59.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1344426557554541;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07855730577678009;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06430863248604865;  // std dev = 0.014, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071607
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.441497802734375 seconds
Total inference time: 2.63 seconds
AUC ROC: 1.0


Dataset: 5_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:07:38
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.071607, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.441497802734375, 'Inference time': 2.63}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos  examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.14e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.14185106490048813;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.12544463852839183;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360633;  // std dev = 2.36e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.11231637819360685;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783617;  // std dev = 4.71e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.10159632948783644;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.09269127618926064;  // std dev = 2.11e-08, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.67e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.08518475138839678;  // std dev = 8.43e-08, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0787767547310917;  // std dev = 3.07e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.07877675473109144;  // std dev = 4.94e-08, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 7.45e-09, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.07324622576333693;  // std dev = 1.04e-07, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.11e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.06842697784420261;  // std dev = 5.16e-08, 262.000 (wgt'ed) examples reached here.  /* #neg=262 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.06419184008202623;  // std dev = 0.000, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.4219419956207275 seconds
Total inference time: 2.84 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065435
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.792 seconds
Parameter learned model CLL: -0.065435


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [1.09e-06, 0, 178], 'true,false': [6.14e-08, 59, 0], 'false': [0.0, 314, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 178], 'true,false': [0.0, 57, 0], 'false': [0.0, 293, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [5.9e-07, 0, 178], 'true,false': [2.36e-08, 47, 0], 'false': [0.0, 301, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3.77e-07, 0, 178], 'true,false': [4.71e-08, 67, 0], 'false': [0.0, 305, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3.58e-07, 0, 178], 'true,false': [0.0, 65, 0], 'false': [2.11e-08, 294, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3.63e-07, 0, 178], 'true,false': [1.67e-08, 64, 0], 'false': [8.43e-08, 294, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3e-07, 0, 178], 'true,false': [3.07e-08, 65, 0], 'false': [4.94e-08, 317, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 178], 'true,false': [7.45e-09, 58, 0], 'false': [1.04e-07, 307, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 178], 'true,false': [2.11e-08, 61, 0], 'false': [5.16e-08, 262, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [7.6e-08, 0, 178], 'true,false': [0.0, 59, 0], 'false': [0.0, 302, 0]}]]
[{'': [0.18697146112624974, -1.3860109097231253e-16], 'true': [6.706246045376226e-15, 6.39789539614497e-17]}, {'': [0.13115604446304233, -6.062651329011094e-17], 'true': [-3.193450497798203e-15, -3.895519384649672e-17]}, {'': [0.07367043270851478, -9.147352495250459e-17], 'true': [1.9559884299013994e-15, 1.1810883240693155e-17]}, {'': [0.05354035937971738, -6.55213588303371e-17], 'true': [7.983626244495507e-16, 3.314098580970616e-17]}, {'': [0.03348638905842161, 1.5105075164968116e-18], 'true': [7.185263620045957e-16, 0.0]}, {'': [0.02253401623803519, 2.4168120263948985e-17], 'true': [7.384854276158345e-16, 4.336808689942018e-18]}, {'': [0.016312338339403105, 7.705017836515282e-18], 'true': [5.03966406683779e-16, 1.4518301091252048e-17]}, {'': [0.011616998552900543, 3.544034410855548e-17], 'true': [-1.6965205769552953e-16, 9.570888143320315e-19]}, {'': [0.009298432745802316, 1.0169981904963266e-17], 'true': [-4.490789762528723e-17, 7.280150981148568e-18]}, {'': [0.00734476103698415, -8.087717397931604e-18], 'true': [3.2433481618263e-17, -3.293034395074617e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5.96e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.14185106490048813;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839155;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.12544463852839183;  // std dev = 0.000, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360624;  // std dev = 5.77e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else return -0.11231637819360686;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783616;  // std dev = 5.37e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.10159632948783644;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.09269127618926065;  // std dev = 0.000, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.08518475138839679;  // std dev = 8.43e-08, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0787767547310917;  // std dev = 2.79e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.07877675473109144;  // std dev = 6.32e-08, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.07324622576333682;  // std dev = 1.04e-07, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.69e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.06842697784420279;  // std dev = 0.000, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.06419184008202625;  // std dev = 0.000, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.463397741317749 seconds
Total inference time: 3.002 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065435
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.994 seconds
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.671339736938476 seconds
Total inference time: 2.84 seconds
AUC ROC: 1.0
Total revision time: 14.671339736938476
Best scored revision CLL: -0.065435


Dataset: 5_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:03
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063555, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 14.671339736938476, 'Inference time': 2.84, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063555, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.4219419956207275, 'Inference time': 2.84}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1418510649004877;  // std dev = 5.16e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.14185106490048782;  // std dev = 1.03e-07, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283912;  // std dev = 6.14e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.12544463852839183;  // std dev = 0.000, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360628;  // std dev = 4.59e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.11231637819360692;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783616;  // std dev = 5.27e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return -0.10159632948783644;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926108;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.09269127618926067;  // std dev = 1.01e-07, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839683;  // std dev = 3.65e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.08518475138839678;  // std dev = 7.88e-08, 278.000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109175;  // std dev = 1.97e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.07877675473109148;  // std dev = 4.71e-08, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.07324622576333684;  // std dev = 1.00e-07, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.11e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.06842697784420278;  // std dev = 0.000, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.06419184008202626;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.790662050247192 seconds
Total inference time: 2.836 seconds
AUC ROC: 1.0


Dataset: 5_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:08:12
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063555, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.790662050247192, 'Inference time': 2.836}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos  examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 7.88e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.1254446385283914;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11231637819360624;  // std dev = 6.66e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.1015963294878362;  // std dev = 5.37e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.08518475138839683;  // std dev = 4.34e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109162;  // std dev = 4.71e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else return 0.20348522714636968;  // std dev = 0.285, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1780124605643971;  // std dev = 4.71e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09486758149476647;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420265;  // std dev = 4.15e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1534383532310792;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0870286763957845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13454897839812577;  // std dev = 3.49e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0803578036324685;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.06739765337164362;  // std dev = 0.310, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068858
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.331240177154541 seconds
Total inference time: 2.802 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065477
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.456 seconds
Parameter learned model CLL: -0.065477


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [7.88e-08, 86, 0], 'false,true': [2.23e-07, 0, 45], 'false,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 45], 'true,false': [5.27e-09, 10, 0], 'false': [0.0, 90, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 45], 'true,false': [0.0, 6, 0], 'false': [6.66e-08, 87, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 45], 'true,false': [0.0, 7, 0], 'false': [5.37e-08, 87, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 84, 0], 'false,true': [2.98e-08, 0, 45], 'false,false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 45], 'true,false': [3.73e-09, 10, 0], 'false': [4.34e-08, 81, 0]}], ['workedunder(A, B)', {'': 'actor(B)'}, {'true': [4.71e-08, 85, 0], 'false': [0.285, 1, 45]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 96, 0], 'false,true': [4.71e-08, 0, 45], 'false,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [4.15e-08, 87, 0], 'false,true': [0.0, 0, 45], 'false,false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3.49e-08, 0, 45], 'true,false': [3.73e-09, 10, 0], 'false': [0.31, 102, 0]}]]
[{'': [7.229359230117299e-17, 0.09000000000000079], 'false': [1.105288700071267e-15, -2.7755575615628915e-18]}, {'': [0.1061979935898607, -1.7270135938613546e-17], 'true': [-9.473903143468002e-16, 2.7755575615628915e-18]}, {'': [0.04627685204491952, 5.104473676437501e-17], 'true': [-3.947459643111668e-17, 0.0]}, {'': [0.0313922549076915, 3.317907889684376e-17], 'true': [-4.144832625267251e-16, 0.0]}, {'': [0.0, 0.021902730958425477], 'false': [1.973729821555834e-17, 0.0]}, {'': [0.017232825620238642, 2.3300977060034148e-17], 'true': [-2.960594732333751e-17, 1.3877787807814458e-18]}, {'': [2.6122894697062506e-17, 0.0017704850314087769]}, {'': [-8.0953762212251e-18, 0.006701716561879025], 'false': [4.9343245538895844e-17, 0.0]}, {'': [1.9779835496195318e-17, 0.007410744479004667], 'false': [-4.934324553889585e-18, -1.734723475976807e-18]}, {'': [0.006870484705201812, 0.000939475283969691], 'true': [2.7138785046392715e-17, 1.3877787807814458e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(B).;true;true
0;false;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(B).;true;true
4;false;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(B).;true;true
7;;workedunder(A, B) :- actor(B).;true;true
7;false;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- actor(B).;true;true
8;false;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.60e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.12544463852839144;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 7.60e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.388674144511302;  // std dev = 0.119, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   else return -0.10456529731293748;  // std dev = 0.272, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09244188893617111;  // std dev = 6.58e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32548322033124727;  // std dev = 0.018, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14397775226802026;  // std dev = 0.004, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2584273304612357;  // std dev = 0.016, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12620748523176836;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.0849246347063302;  // std dev = 0.004, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21205562268224035;  // std dev = 0.014, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11410187262703235;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07854842449260514;  // std dev = 0.004, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0730949178274448;  // std dev = 4.08e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1787808212603293;  // std dev = 0.012, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10314259868348621;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0682945188651844;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15402087992975516;  // std dev = 0.011, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09293046000649718;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06407495856408363;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( female(A) )
%   | then return 0.13247271743678324;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.1235328775515346;  // std dev = 0.051, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07285
   Precision = 0.743929 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.853165


Total learning time: 3.045445203781128 seconds
Total inference time: 2.791 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067439
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total scoring time: 1.353 seconds
Refined model CLL: -0.067439


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068858
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.185685380935668 seconds
Total inference time: 2.802 seconds
AUC ROC: 1.0
Total revision time: 9.185685380935668
Best scored revision CLL: -0.065477


Dataset: 5_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:08:30
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068858, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.185685380935668, 'Inference time': 2.802, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068858, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.331240177154541, 'Inference time': 2.802}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048766;  // std dev = 7.30e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.12544463852839155;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.11231637819360625;  // std dev = 6.50e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1015963294878362;  // std dev = 5.37e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839678;  // std dev = 3.49e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109166;  // std dev = 3.87e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420265;  // std dev = 4.28e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06419184008202625;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065837
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.2115602493286133 seconds
Total inference time: 2.859 seconds
AUC ROC: 1.0


Dataset: 5_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:08:37
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065837, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.2115602493286133, 'Inference time': 2.859}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos  examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048766;  // std dev = 7.15e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839144;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11231637819360625;  // std dev = 5.96e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10159632948783619;  // std dev = 5.16e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926105;  // std dev = 2.11e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839678;  // std dev = 3.33e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109161;  // std dev = 4.94e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( female(A) )
%   | then return 0.16666555093241853;  // std dev = 0.050, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.1662120315057725;  // std dev = 0.051, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420267;  // std dev = 3.80e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1541275613988544;  // std dev = 0.000198, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08539570952831152;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13508634126305635;  // std dev = 0.000178, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07893588708307571;  // std dev = 2.69e-05, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070512
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.2466249465942383 seconds
Total inference time: 2.714 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065093
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.437 seconds
Parameter learned model CLL: -0.065093


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [2.23e-07, 0, 45], 'true,false': [0.0, 5, 0], 'false': [7.15e-08, 83, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 86, 0], 'false,true': [0.0, 0, 45], 'false,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 45], 'true,false': [0.0, 6, 0], 'false': [5.96e-08, 79, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 45], 'true,false': [0.0, 3, 0], 'false': [5.16e-08, 75, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [2.11e-08, 88, 0], 'false,true': [2.98e-08, 0, 45], 'false,false': [2.63e-09, 3, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [3.33e-08, 86, 0], 'false,true': [0.0, 0, 45], 'false,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [4.94e-08, 88, 0], 'false,true': [5.58e-08, 0, 45], 'false,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'female(A)'}, {'true': [0.0, 102, 0], 'false,true': [0.05, 1, 23], 'false,false': [0.051, 1, 22]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [3.8e-08, 81, 0], 'false,true': [0.000198, 0, 45], 'false,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 94, 0], 'false,true': [0.000178, 0, 45], 'false,false': [2.69e-05, 3, 0]}]]
[{'': [0.09000000000000079, 6.153043269006892e-17], 'true': [1.105288700071267e-15, -2.7755575615628915e-18]}, {'': [-1.8073398075293247e-17, 0.04182928783975578], 'false': [-9.473903143468002e-16, 0.0]}, {'': [0.04627685204491952, 4.4971059225322796e-17], 'true': [-3.947459643111668e-17, 0.0]}, {'': [0.015789556783927943, 3.552713678800501e-17], 'true': [-4.144832625267251e-16, -1.1564823173178713e-18]}, {'': [5.046468293750712e-18, 0.010013797405959831], 'false': [1.973729821555834e-17, 2.3129646346357427e-18]}, {'': [1.290957005378089e-17, 0.006787668945471587], 'false': [-2.960594732333751e-17, 0.0]}, {'': [2.7755575615628914e-17, 0.0062413099982688465], 'false': [6.908054375445419e-17, 0.0]}, {'': [-4.353815782843751e-18, 0.0025533875641619683], 'false': [0.00250250698249189, 0.0026063753170162936]}, {'': [1.7818394222379055e-17, 0.004301063491464924], 'false': [8.735558054695503e-10, 0.0]}, {'': [-1.299197156476247e-17, 0.002683917522045195], 'false': [7.015988432199391e-10, 2.416369072425854e-10]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- actor(B).;true;true
1;false;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(B).;true;true
4;false;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(B).;true;true
5;false;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(B).;true;true
6;false;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(B).;true;true
8;;workedunder(A, B) :- actor(B).;true;true
8;false;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- actor(B).;true;true
9;false;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.30e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( female(A) )
%   | then return 0.7781489350995119;  // std dev = 0.271, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283914;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7275794276357729;  // std dev = 0.053, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2710108305512156;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360624;  // std dev = 6.14e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else return 0.5634213764231398;  // std dev = 0.066, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783619;  // std dev = 5.48e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42356920264965486;  // std dev = 0.065, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.3371829219954916;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.30886707734270796;  // std dev = 0.118, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.3158912382480849;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( actor(A) )
%   | then return -0.09269127618926107;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return -0.2898304380434791;  // std dev = 0.483, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1374133388738764;  // std dev = 0.155, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08475125385087091;  // std dev = 0.020, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( female(A) )
%   | then return 0.26862970537642455;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.226218646596157;  // std dev = 0.120, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07873412302848244;  // std dev = 0.004, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21553390938445322;  // std dev = 0.025, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.3864393342374354;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07295111252660734;  // std dev = 0.013, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.18132413505226566;  // std dev = 0.022, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.29721284545465115;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0683463298858918;  // std dev = 0.011, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15594509862305184;  // std dev = 0.020, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.24314198283593827;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06376025080604497;  // std dev = 0.019, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( female(A) )
%   | then return 0.12513978136904055;  // std dev = 0.067, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.11919749999191379;  // std dev = 0.069, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094828
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 3.2492220401763916 seconds
Total inference time: 2.862 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073371
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.362 seconds
Refined model CLL: -0.073371


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070512
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.29484698677063 seconds
Total inference time: 2.714 seconds
AUC ROC: 1.0
Total revision time: 9.29484698677063
Best scored revision CLL: -0.065093


Dataset: 5_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:08:55
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070512, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.29484698677063, 'Inference time': 2.714, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070512, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.2466249465942383, 'Inference time': 2.714}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.16e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283915;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 7.88e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783624;  // std dev = 4.83e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926105;  // std dev = 2.36e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 3.16e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( female(A) )
%   | then return 0.2551722425694895;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.22680915973966564;  // std dev = 0.094, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109162;  // std dev = 4.59e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else return 0.20519080721952357;  // std dev = 0.314, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1649985685702415;  // std dev = 0.061, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.1685820235083849;  // std dev = 0.063, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.07388272667745475;  // std dev = 0.052, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06838641541121798;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( female(A) )
%   | then return 0.1306614345686244;  // std dev = 0.082, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.158184844884901;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1384077618469738;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1655927382629091;  // std dev = 0.000328, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then return -0.06415605060999968;  // std dev = 7.45e-09, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else return -0.1807779900004939;  // std dev = 0.639, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083635
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 3.24482798576355 seconds
Total inference time: 2.77 seconds
AUC ROC: 1.0


Dataset: 5_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:09:02
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.083635, 'Precision': [0.742291, 0.5], 'Recall': 1.0, 'F1': 0.852086, 'Learning time': 3.24482798576355, 'Inference time': 2.77}


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos  examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.43e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( female(A) )
%   | then return 0.822434649385226;  // std dev = 0.186, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.8581489350995117;  // std dev = 1.79e-07, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.722921432483133;  // std dev = 0.027, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2769508630623422;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12689400254017316;  // std dev = 0.154, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5587597968977284;  // std dev = 0.033, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.226590353232471;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11356486694953317;  // std dev = 0.143, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42004580917628787;  // std dev = 0.033, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.188531161741828;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10255113052697629;  // std dev = 0.133, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32243584472955655;  // std dev = 0.029, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.16136515251459152;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.0934752422108238;  // std dev = 0.124, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08483964879033683;  // std dev = 3.80e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25635227822665724;  // std dev = 0.025, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14134887324358011;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07848034059176981;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( female(A) )
%   | then return 0.2016759337522378;  // std dev = 0.062, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.1966049144160382;  // std dev = 0.060, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07298902641223658;  // std dev = 3.65e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17939976764854768;  // std dev = 0.017, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14738355187678717;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0682017991897641;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( female(A) )
%   | then return 0.14639739991983608;  // std dev = 0.053, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.1525591338307177;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06399312761810919;  // std dev = 3.25e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13594811716716318;  // std dev = 0.016, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14649366949434037;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078342
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.5895540714263916 seconds
Total inference time: 2.883 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066416
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.686 seconds
Parameter learned model CLL: -0.066416


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(B)', 'false': 'female(A)'}, {'true': [8.43e-08, 108, 0], 'false,true': [0.186, 1, 27], 'false,false': [1.79e-07, 0, 29]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.027, 0, 56], 'true,false': [0.007, 4, 0], 'false': [0.154, 107, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.033, 0, 56], 'true,false': [0.005, 4, 0], 'false': [0.143, 103, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.033, 0, 56], 'true,false': [0.006, 5, 0], 'false': [0.133, 111, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.029, 0, 56], 'true,false': [0.005, 5, 0], 'false': [0.124, 114, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [3.8e-08, 107, 0], 'false,true': [0.025, 0, 56], 'false,false': [0.004, 4, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'female(A)'}, {'true': [0.0, 103, 0], 'false,true': [0.062, 1, 27], 'false,false': [0.06, 1, 29]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [3.65e-08, 101, 0], 'false,true': [0.017, 0, 56], 'false,false': [0.005, 6, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'female(A)'}, {'true': [0.0, 118, 0], 'false,true': [0.053, 1, 27], 'false,false': [0.0, 0, 29]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [3.25e-08, 106, 0], 'false,true': [0.016, 0, 56], 'false,false': [0.004, 4, 0]}]]
[{'': [6.579099405186112e-17, 0.017236072637734554], 'false': [0.03443877551020513, 1.1025663141105003e-15]}, {'': [0.062219101713193815, 0.00022266954009670916], 'true': [1.2769498892760214e-05, 1.2785807321141762e-05]}, {'': [0.038395651302390615, 0.00019790056862591446], 'true': [1.9354451766405235e-05, 7.2727889036741655e-06]}, {'': [0.02788745115490652, 0.000158606437399087], 'true': [1.890227128404603e-05, 7.132195991538248e-06]}, {'': [0.017627358051943244, 0.0001344268264625654], 'true': [1.5206244969185561e-05, 5.5783502459105795e-06]}, {'': [1.3488690953389752e-17, 0.009852492665218466], 'false': [1.1580009170706975e-05, 3.4776945180836627e-06]}, {'': [-3.233659295024728e-18, 0.003737671517201586], 'false': [0.0038834999404675336, 0.0035891507364229636]}, {'': [1.31907686094078e-17, 0.00933911993156159], 'false': [5.084282408073555e-06, 3.7065787174087963e-06]}, {'': [-3.4812077890788806e-17, 0.0013801391310415874], 'false': [0.0027902524193895123, -3.828355257328126e-18]}, {'': [9.950112013149987e-18, 0.004968303333929458], 'false': [4.670652859473101e-06, 4.022206536575396e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(B).;true;true
0;false;female(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(B).;true;true
5;false;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(B).;true;true
7;;workedunder(A, B) :- actor(B).;true;true
7;false;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- actor(B).;true;true
8;false;female(A).;true;true
9;;workedunder(A, B) :- actor(B).;true;true
9;false;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048763;  // std dev = 8.43e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283913;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( female(A) )
%   | then return 0.689297767541692;  // std dev = 0.157, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 8.69e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( female(A) )
%   | then return 0.562804854293486;  // std dev = 7.30e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.5048577441463519;  // std dev = 0.192, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42657089074022914;  // std dev = 0.025, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.33101419263284415;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1034669329597442;  // std dev = 0.225, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09253407899539498;  // std dev = 1.05e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3268630676297119;  // std dev = 0.023, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2630881476334969;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08505132339982137;  // std dev = 3.16e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2593677027539936;  // std dev = 0.020, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2131514974554949;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21271848852529826;  // std dev = 0.017, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.18081634251987078;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07989826130178465;  // std dev = 0.135, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17926600437309012;  // std dev = 0.015, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1566549435323214;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.0761783785790451;  // std dev = 0.347, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06806873510347942;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( female(A) )
%   | then return 0.14214652656938812;  // std dev = 0.054, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.14644978439217976;  // std dev = 0.052, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.12465653089879945;  // std dev = 0.054, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.12812252514997746;  // std dev = 0.052, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.06533780739337032;  // std dev = 0.148, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083309
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.906637191772461 seconds
Total inference time: 2.714 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067896
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.766 seconds
Refined model CLL: -0.067896


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078342
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.948191263198852 seconds
Total inference time: 2.883 seconds
AUC ROC: 1.0
Total revision time: 10.948191263198852
Best scored revision CLL: -0.066416


Dataset: 5_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:09:22
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.078342, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.948191263198852, 'Inference time': 2.883, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.078342, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.5895540714263916, 'Inference time': 2.883}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.69e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.28052658778904566;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12693581111743613;  // std dev = 0.154, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.22751829855267267;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.11470701446704466;  // std dev = 0.201, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10124256681305234;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.19001757973666858;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09239499496833581;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( female(A) )
%   | then return 0.3034551087337813;  // std dev = 0.090, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.30460555796220584;  // std dev = 0.087, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08493324279541975;  // std dev = 4.59e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2583517270556001;  // std dev = 0.000824, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2081878963437121;  // std dev = 0.000190, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0785607459396342;  // std dev = 4.08e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21200115903742184;  // std dev = 0.000719, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.17597999530454536;  // std dev = 0.000199, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17874021800142975;  // std dev = 0.000631, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15185401371363755;  // std dev = 0.000194, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.0788164239676802;  // std dev = 0.456, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06789760804276601;  // std dev = 3.41e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( female(A) )
%   | then return 0.14380575256748926;  // std dev = 0.053, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.14434053909992056;  // std dev = 0.052, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1361397840340732;  // std dev = 0.000741, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1508651380728463;  // std dev = 0.000264, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.0648876024369522;  // std dev = 0.135, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080493
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 3.4527549743652344 seconds
Total inference time: 2.695 seconds
AUC ROC: 1.0


Dataset: 5_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:09:29
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.080493, 'Precision': [0.735892, 0.5], 'Recall': 1.0, 'F1': 0.847854, 'Learning time': 3.4527549743652344, 'Inference time': 2.695}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos  examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839136;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 8.16e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783628;  // std dev = 3.65e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926089;  // std dev = 6.66e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.08518475138839683;  // std dev = 5.58e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109157;  // std dev = 6.50e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0732462257633371;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420264;  // std dev = 5.67e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   else if ( female(A) )
%   | then return 0.13263741846295504;  // std dev = 0.064, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | else return 0.15274385809367083;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1348175656104009;  // std dev = 0.009, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07834651144625238;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071273
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.476335048675537 seconds
Total inference time: 2.644 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064728
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.657 seconds
Parameter learned model CLL: -0.064728


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 58], 'true,false': [0.0, 8, 0], 'false': [8.69e-08, 103, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 58], 'true,false': [0.0, 3, 0], 'false': [0.0, 120, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [8.16e-08, 102, 0], 'false,true': [1.19e-07, 0, 58], 'false,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [3.65e-08, 100, 0], 'false,true': [0.0, 0, 58], 'false,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [6.66e-08, 113, 0], 'false,true': [0.0, 0, 58], 'false,false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 58], 'true,false': [3.73e-09, 8, 0], 'false': [5.58e-08, 111, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [6.5e-08, 112, 0], 'false,true': [0.0, 0, 58], 'false,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 114, 0], 'false,true': [0.0, 0, 58], 'false,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'female(A)'}, {'true': [5.67e-08, 121, 0], 'false,true': [0.064, 2, 20], 'false,false': [0.0, 0, 38]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 108, 0], 'false,true': [0.009, 0, 58], 'false,false': [0.002, 6, 0]}]]
[{'': [0.10651974288337872, 7.329627735389383e-17], 'true': [-3.675221047035001e-16, -6.938893903907228e-18]}, {'': [0.033382492117425555, -9.25185853854297e-18], 'true': [-1.2250736823450003e-16, 0.0]}, {'': [6.530723674265627e-17, 0.026905743807732977], 'false': [2.4501473646900006e-16, 0.0]}, {'': [1.3322676295501878e-17, 0.012601093207619572], 'false': [-3.3689526264487507e-16, -1.1564823173178713e-18]}, {'': [3.929993007522678e-17, 0.018204452266139013], 'false': [-1.5313421029312505e-16, 0.0]}, {'': [0.012339554147825189, 2.800562584640034e-17], 'true': [-3.062684205862501e-17, 1.734723475976807e-18]}, {'': [3.766828119263924e-17, 0.0070731799132398646], 'false': [-2.2970131543968756e-17, -1.1564823173178713e-18]}, {'': [-6.817158923136926e-18, 0.003782461804781654], 'false': [-3.062684205862501e-17, 0.0]}, {'': [2.6608651003412843e-17, 0.0015761995793491948], 'false': [0.004042689146236153, -4.382459307730881e-17]}, {'': [-1.644774851296528e-17, 0.003861708441838186], 'false': [1.2482391292428976e-06, 4.6575526328288913e-07]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(B).;true;true
2;false;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(B).;true;true
3;false;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(B).;true;true
4;false;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(B).;true;true
6;false;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(B).;true;true
7;false;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- actor(B).;true;true
8;false;female(A).;true;true
9;;workedunder(A, B) :- actor(B).;true;true
9;false;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 2.98e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839105;  // std dev = 8.16e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.11508568806910716;  // std dev = 0.331, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10134384080411266;  // std dev = 6.99e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( female(A) )
%   | then return 0.41751358415830986;  // std dev = 5.16e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.40420307355199875;  // std dev = 0.082, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09247982939556806;  // std dev = 1.83e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32261621387176176;  // std dev = 0.011, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1448709548331504;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08500526917787442;  // std dev = 2.36e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( female(A) )
%   | then return 0.23651846052175104;  // std dev = 0.082, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.24746981408571933;  // std dev = 0.061, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07862261474326175;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21280645972786363;  // std dev = 0.001, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.15830122187636433;  // std dev = 0.000281, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17932940415274395;  // std dev = 0.001, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.13810593052313844;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07371683105285844;  // std dev = 0.064, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06827145444154308;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15443564374949145;  // std dev = 0.001, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12265754298585162;  // std dev = 0.000375, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13532640227638162;  // std dev = 0.000999, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1099660451274211;  // std dev = 0.000267, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06454991964163992;  // std dev = 0.052, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080779
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 3.414952039718628 seconds
Total inference time: 2.593 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066789
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.633 seconds
Refined model CLL: -0.066789


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071273
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.181287088394164 seconds
Total inference time: 2.644 seconds
AUC ROC: 1.0
Total revision time: 10.181287088394164
Best scored revision CLL: -0.064728


Dataset: 5_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:09:48
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.071273, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.181287088394164, 'Inference time': 2.644, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.071273, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.476335048675537, 'Inference time': 2.644}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048763;  // std dev = 8.16e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.12544463852839138;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1123163781936062;  // std dev = 8.43e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783633;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926089;  // std dev = 6.32e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08518475138839683;  // std dev = 5.67e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109155;  // std dev = 6.66e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.17709649774527744;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.1645793615698468;  // std dev = 0.055, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   else return -0.07324622576333714;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420264;  // std dev = 5.27e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15380977956027506;  // std dev = 0.006, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08560079455263984;  // std dev = 0.001, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13483870751892058;  // std dev = 0.005, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07915673719241331;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.0648736270309613;  // std dev = 0.083, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066245
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.83512020111084 seconds
Total inference time: 2.744 seconds
AUC ROC: 1.0


Dataset: 5_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:09:55
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066245, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.83512020111084, 'Inference time': 2.744}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos  examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.66e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.1418510649004881;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.12544463852839186;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360626;  // std dev = 5.16e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.11231637819360688;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783621;  // std dev = 4.21e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.10159632948783644;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.09269127618926064;  // std dev = 2.98e-08, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0851847513883968;  // std dev = 1.97e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.08518475138839678;  // std dev = 7.88e-08, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109173;  // std dev = 2.24e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.07877675473109144;  // std dev = 4.94e-08, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.07324622576333692;  // std dev = 1.05e-07, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.24e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.06842697784420285;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.06419184008202623;  // std dev = 0.000, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.411081075668335 seconds
Total inference time: 2.845 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065435
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.787 seconds
Parameter learned model CLL: -0.065435


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [1.09e-06, 0, 178], 'true,false': [6.66e-08, 66, 0], 'false': [0.0, 304, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 178], 'true,false': [0.0, 66, 0], 'false': [0.0, 299, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [5.9e-07, 0, 178], 'true,false': [5.16e-08, 66, 0], 'false': [0.0, 300, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3.77e-07, 0, 178], 'true,false': [4.21e-08, 59, 0], 'false': [0.0, 301, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3.58e-07, 0, 178], 'true,false': [0.0, 55, 0], 'false': [2.98e-08, 302, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3.63e-07, 0, 178], 'true,false': [1.97e-08, 49, 0], 'false': [7.88e-08, 276, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3e-07, 0, 178], 'true,false': [2.24e-08, 59, 0], 'false': [4.94e-08, 308, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 178], 'true,false': [0.0, 64, 0], 'false': [1.05e-07, 306, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 178], 'true,false': [2.24e-08, 62, 0], 'false': [0.0, 310, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [7.6e-08, 0, 178], 'true,false': [0.0, 69, 0], 'false': [0.0, 307, 0]}]]
[{'': [0.19732598763773745, -1.2270886061646468e-16], 'true': [6.706246045376226e-15, 6.728624391667616e-17]}, {'': [0.14086836113344384, -6.832141690000964e-17], 'true': [-3.193450497798203e-15, -3.700743415417188e-17]}, {'': [0.08796799264929782, -9.769962616701378e-17], 'true': [1.9559884299013994e-15, 4.0371746350005693e-17]}, {'': [0.050384153641418704, -6.639207456230172e-17], 'true': [7.983626244495507e-16, 3.010774304068221e-17]}, {'': [0.03081898679378054, 2.9409881447024014e-18], 'true': [7.185263620045957e-16, -2.0185873175002845e-18]}, {'': [0.01960801933779119, 2.25262642677568e-17], 'true': [7.384854276158345e-16, 7.93016446160826e-18]}, {'': [0.015565774367629966, 7.93016446160826e-18], 'true': [5.03966406683779e-16, 8.467802730191872e-18]}, {'': [0.012190996024905953, 3.6281798190364593e-17], 'true': [-1.6965205769552953e-16, -1.734723475976807e-18]}, {'': [0.009372272929794055, -3.008346260274618e-17], 'true': [-4.490789762528723e-17, 8.058070340021298e-18]}, {'': [0.0079081980139521, -7.232723287460303e-18], 'true': [3.2433481618263e-17, -5.6315660669392e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5.77e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.14185106490048818;  // std dev = 0.000, 328.000 (wgt'ed) examples reached here.  /* #neg=328 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.1254446385283917;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360628;  // std dev = 4.59e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.11231637819360685;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1015963294878362;  // std dev = 3.94e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.10159632948783642;  // std dev = 0.000, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.09269127618926074;  // std dev = 9.42e-08, 269.000 (wgt'ed) examples reached here.  /* #neg=269 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.08518475138839679;  // std dev = 8.16e-08, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109169;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else return -0.07877675473109144;  // std dev = 5.37e-08, 265.000 (wgt'ed) examples reached here.  /* #neg=265 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 7.45e-09, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.07324622576333682;  // std dev = 1.05e-07, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.58e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.06842697784420272;  // std dev = 0.000, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.06419184008202623;  // std dev = 0.000, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.5218751430511475 seconds
Total inference time: 3.024 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065435
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.8 seconds
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.519956218719482 seconds
Total inference time: 2.845 seconds
AUC ROC: 1.0
Total revision time: 14.519956218719482
Best scored revision CLL: -0.065435


Dataset: 5_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:10:19
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063555, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 14.519956218719482, 'Inference time': 2.845, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063555, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.411081075668335, 'Inference time': 2.845}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5.77e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.14185106490048807;  // std dev = 0.000, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.12544463852839183;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360625;  // std dev = 5.67e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.11231637819360682;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783619;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else return -0.10159632948783662;  // std dev = 0.000, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926104;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.09269127618926061;  // std dev = 8.69e-08, 315.000 (wgt'ed) examples reached here.  /* #neg=315 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.05e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.08518475138839678;  // std dev = 7.45e-08, 265.000 (wgt'ed) examples reached here.  /* #neg=265 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109165;  // std dev = 3.80e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else return -0.07877675473109147;  // std dev = 4.94e-08, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.07324622576333684;  // std dev = 1.00e-07, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420262;  // std dev = 2.58e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.0684269778442028;  // std dev = 0.000, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.06419184008202625;  // std dev = 0.000, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.520378112792969 seconds
Total inference time: 3.057 seconds
AUC ROC: 1.0


Dataset: 5_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:10:28
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063555, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.520378112792969, 'Inference time': 3.057}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos  examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048766;  // std dev = 6.99e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1254446385283914;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360624;  // std dev = 5.87e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783619;  // std dev = 5.16e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.09269127618926105;  // std dev = 1.05e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 2.36e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109158;  // std dev = 5.58e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07667726743090465;  // std dev = 0.211, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06820859062136282;  // std dev = 2.89e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06399912191160874;  // std dev = 2.24e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066118
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.1570630073547363 seconds
Total inference time: 2.93 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064181
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.44 seconds
Parameter learned model CLL: -0.064181


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [2.23e-07, 0, 45], 'true,false': [0.0, 3, 0], 'false': [6.99e-08, 77, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 45], 'true,false': [0.0, 6, 0], 'false': [0.0, 92, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [5.87e-08, 73, 0], 'false,true': [0.0, 0, 45], 'false,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 45], 'true,false': [0.0, 4, 0], 'false': [5.16e-08, 78, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [2.98e-08, 0, 45], 'true,false': [0.0, 11, 0], 'false': [1.05e-08, 100, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [2.36e-08, 76, 0], 'false,true': [0.0, 0, 45], 'false,false': [2.63e-09, 6, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [5.58e-08, 98, 0], 'false,true': [5.58e-08, 0, 45], 'false,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 45], 'true,false': [0.0, 5, 0], 'false': [0.211, 88, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [2.89e-08, 85, 0], 'false,true': [0.0, 0, 45], 'false,false': [1.86e-09, 6, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [2.24e-08, 83, 0], 'false,true': [2.36e-08, 0, 45], 'false,false': [0.0, 5, 0]}]]
[{'': [0.05859375000000089, 6.344131569286608e-17], 'true': [1.105288700071267e-15, 0.0]}, {'': [0.07410586634586562, -1.68946982008176e-17], 'true': [-9.473903143468002e-16, -2.3129646346357427e-18]}, {'': [4.7146457210109385e-17, 0.03342110014406096], 'false': [-3.947459643111668e-17, 0.0]}, {'': [0.020202215093805483, 3.416070845000482e-17], 'true': [-4.144832625267251e-16, 0.0]}, {'': [0.02697594403238157, 1.1102230246251566e-18], 'true': [1.973729821555834e-17, 0.0]}, {'': [7.304098846218135e-18, 0.012025212803050028], 'false': [-2.960594732333751e-17, 1.1564823173178713e-18]}, {'': [3.172065784643304e-17, 0.004878055112579281], 'false': [6.908054375445419e-17, 0.0]}, {'': [0.005640433129233889, 0.0005061980177571436], 'true': [-8.388351741612294e-17, -6.938893903907229e-19]}, {'': [9.79608551139844e-18, 0.00507784138437273], 'false': [-3.947459643111668e-17, 5.782411586589357e-19]}, {'': [6.01928145881109e-18, 0.003535451289447089], 'false': [1.2335811384723961e-17, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(B).;true;true
2;false;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(B).;true;true
5;false;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(B).;true;true
6;false;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- actor(B).;true;true
8;false;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- actor(B).;true;true
9;false;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048766;  // std dev = 6.66e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839144;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11391640486525999;  // std dev = 0.114, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10145038089589349;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09256875472978057;  // std dev = 1.71e-05, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08508104273075268;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07868769467692728;  // std dev = 4.71e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07316896101277923;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06835934233263437;  // std dev = 3.94e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.0641317945204396;  // std dev = 2.88e-05, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069574
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.1369712352752686 seconds
Total inference time: 2.744 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06561
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.404 seconds
Refined model CLL: -0.06561


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066118
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.138034242630004 seconds
Total inference time: 2.93 seconds
AUC ROC: 1.0
Total revision time: 9.138034242630004
Best scored revision CLL: -0.064181


Dataset: 5_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:10:46
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066118, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.138034242630004, 'Inference time': 2.93, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066118, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.1570630073547363, 'Inference time': 2.93}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048766;  // std dev = 7.45e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839147;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360622;  // std dev = 7.30e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3742544246877977;  // std dev = 0.143, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.4026818723398488;  // std dev = 0.086, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   else return -0.1015963294878362;  // std dev = 5.37e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.33020827618629595;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.2979163442098251;  // std dev = 0.107, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   else return -0.09269127618926103;  // std dev = 2.98e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.262206619475919;  // std dev = 0.002, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.18586880511746526;  // std dev = 0.000585, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839683;  // std dev = 4.34e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.21422256304909124;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.2041886109534735;  // std dev = 0.062, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   else return -0.07877675473109173;  // std dev = 2.58e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.18192369355730567;  // std dev = 0.006, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1892148012563353;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1563961144294873;  // std dev = 0.005, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.16149874540395276;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06833321071526396;  // std dev = 0.007, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13685195629939725;  // std dev = 0.005, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14131131624993587;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.0641195352030609;  // std dev = 0.007, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069497
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.3514187335968018 seconds
Total inference time: 3.171 seconds
AUC ROC: 1.0


Dataset: 5_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:10:53
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069497, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.3514187335968018, 'Inference time': 3.171}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos  examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 7.88e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283915;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11577801553798235;  // std dev = 0.331, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10128080568012245;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09712346308499455;  // std dev = 0.425, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0845960407317987;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.0782702548958888;  // std dev = 6.48e-05, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07280736146916313;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06804269391721658;  // std dev = 4.83e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06385069363904773;  // std dev = 0.000145, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071903
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 3.128631114959717 seconds
Total inference time: 2.806 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064646
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.526 seconds
Parameter learned model CLL: -0.064646


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [7.88e-08, 86, 0], 'false,true': [2.23e-07, 0, 45], 'false,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 75, 0], 'false,true': [0.0, 0, 45], 'false,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 45], 'true,false': [0.0, 4, 0], 'false': [0.331, 96, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 68, 0], 'false,true': [0.0, 0, 45], 'false,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [2.98e-08, 0, 45], 'true,false': [2.63e-09, 3, 0], 'false': [0.425, 91, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 95, 0], 'false,true': [0.0, 0, 45], 'false,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [5.58e-08, 0, 45], 'true,false': [0.0, 3, 0], 'false': [6.48e-05, 87, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 76, 0], 'false,true': [0.0, 0, 45], 'false,false': [1.86e-09, 3, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [4.83e-08, 89, 0], 'false,true': [0.0, 0, 45], 'false,false': [1.86e-09, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [2.36e-08, 0, 45], 'true,false': [0.0, 6, 0], 'false': [0.000145, 104, 0]}]]
[{'': [7.229359230117299e-17, 0.10380622837370317], 'false': [1.105288700071267e-15, -6.938893903907228e-18]}, {'': [-2.6645352591003756e-17, 0.06424978612186535], 'false': [-9.473903143468002e-16, 0.0]}, {'': [0.03342110014406096, 0.001138378644878107], 'true': [-3.947459643111668e-17, 0.0]}, {'': [-1.6326809185664067e-17, 0.027973194025505906], 'false': [-4.144832625267251e-16, 0.0]}, {'': [0.010013797405959831, 0.0019853337098367516], 'true': [1.973729821555834e-17, 2.3129646346357427e-18]}, {'': [-1.9867148861713328e-17, 0.006787668945471587], 'false': [-2.960594732333751e-17, 0.0]}, {'': [0.004878055112579281, 4.8316913688397325e-11], 'true': [6.908054375445419e-17, 0.0]}, {'': [-7.304098846218135e-18, 0.003672156985178282], 'false': [-8.388351741612294e-17, 1.1564823173178713e-18]}, {'': [2.6196273614750884e-17, 0.00440248848025115], 'false': [-3.947459643111668e-17, 6.938893903907229e-19]}, {'': [0.004077798488404945, 2.0078575394202666e-10], 'true': [1.2335811384723961e-17, -5.782411586589357e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(B).;true;true
0;false;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- actor(B).;true;true
1;false;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(B).;true;true
3;false;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(B).;true;true
5;false;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(B).;true;true
7;false;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- actor(B).;true;true
8;false;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.69e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839147;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 7.74e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( female(A) )
%   | then return 0.5275463194571225;  // std dev = 0.133, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.5263367491402023;  // std dev = 0.136, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783621;  // std dev = 5.05e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( female(A) )
%   | then return 0.3992583584932079;  // std dev = 0.120, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.42458993557857366;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.092691276189261;  // std dev = 3.65e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( female(A) )
%   | then return 0.28498649915613156;  // std dev = 0.155, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.32551321307521186;  // std dev = 4.21e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2648766687985257;  // std dev = 0.042, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.3074164385423431;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08759751936189525;  // std dev = 0.226, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07860183565797627;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2165984435788712;  // std dev = 0.037, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2421125451423721;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18210318392876915;  // std dev = 0.032, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2074467872185798;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07495265503621958;  // std dev = 0.172, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06817597849817154;  // std dev = 3.57e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15653494063863532;  // std dev = 0.029, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1680755686237908;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13696217149800408;  // std dev = 0.026, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15239910068848503;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06538131124951582;  // std dev = 0.139, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080709
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 3.3851537704467773 seconds
Total inference time: 2.768 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068166
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.517 seconds
Refined model CLL: -0.068166


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071903
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 9.556784885406493 seconds
Total inference time: 2.806 seconds
AUC ROC: 1.0
Total revision time: 9.556784885406493
Best scored revision CLL: -0.064646


Dataset: 5_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:11:12
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.071903, 'Precision': [0.742291, 0.5], 'Recall': 1.0, 'F1': 0.852086, 'Learning time': 9.556784885406493, 'Inference time': 2.806, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.071903, 'Precision': [0.742291, 0.5], 'Recall': 1.0, 'F1': 0.852086, 'Learning time': 3.128631114959717, 'Inference time': 2.806}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.30e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( female(A) )
%   | then return 0.8164822684328453;  // std dev = 0.200, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.8146706742299468;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839147;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7279810357883602;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.27197013612394977;  // std dev = 0.000491, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 7.74e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5637566143049693;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.22154328622987307;  // std dev = 0.000255, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4237655664118663;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1857392718971482;  // std dev = 0.000274, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10352750074070358;  // std dev = 0.117, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09252899315208646;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3249534581255041;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1592691622277091;  // std dev = 0.000243, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08504700602822007;  // std dev = 2.36e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25806443913325017;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13914593540652057;  // std dev = 0.000194, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21179865680061213;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1232083057091788;  // std dev = 0.000160, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07926801047708167;  // std dev = 0.053, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0731022851920571;  // std dev = 3.07e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17859199401378545;  // std dev = 0.000891, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1105338830035243;  // std dev = 0.000178, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06830096921154276;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15387740052278473;  // std dev = 0.000791, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10009809120040909;  // std dev = 0.000188, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06408065093151695;  // std dev = 1.49e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1348913500642892;  // std dev = 0.000709, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09146049291968607;  // std dev = 0.000151, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079676
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 3.2320687770843506 seconds
Total inference time: 2.669 seconds
AUC ROC: 1.0


Dataset: 5_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:11:19
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079676, 'Precision': [0.742291, 0.5], 'Recall': 1.0, 'F1': 0.852086, 'Learning time': 3.2320687770843506, 'Inference time': 2.669}


