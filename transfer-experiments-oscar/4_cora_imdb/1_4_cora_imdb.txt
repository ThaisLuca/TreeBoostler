Starting experiment #1 for 4_cora_imdb

Loading pre-trained trees.
Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos  examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.43e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( female(A) )
%   | then return 0.822434649385226;  // std dev = 0.186, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.8248156017661784;  // std dev = 0.180, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283913;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7263798063385708;  // std dev = 0.002, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.27365906450621014;  // std dev = 0.000518, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 8.43e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( female(A) )
%   | then return 0.5624682821965165;  // std dev = 9.42e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.5112511094347972;  // std dev = 0.193, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else return 0.4289956161148866;  // std dev = 0.045, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0926912761892609;  // std dev = 6.14e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3285201140035678;  // std dev = 0.040, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.4302946009194321;  // std dev = 0.016, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 6.23e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2605011144715304;  // std dev = 0.035, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.3340208121470814;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21351966191353036;  // std dev = 0.031, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.26188808174491557;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return -0.0787767547310918;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.11396434902383772;  // std dev = 0.153, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.07877675473109168;  // std dev = 3.65e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07301092574010812;  // std dev = 0.007, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1798537821869724;  // std dev = 0.027, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2095336402099063;  // std dev = 0.008, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15483428008630723;  // std dev = 0.024, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.17830342464035587;  // std dev = 0.008, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06922563968308527;  // std dev = 0.136, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06384276385843664;  // std dev = 0.007, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13563822074843684;  // std dev = 0.021, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15153177496799947;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.090063
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 3.552515983581543 seconds
Total inference time: 2.905 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067456
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.727 seconds
Parameter learned model CLL: -0.067456


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(B)', 'false': 'female(A)'}, {'true': [8.43e-08, 106, 0], 'false,true': [0.186, 1, 27], 'false,false': [0.18, 1, 29]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 122, 0], 'false,true': [0.002, 0, 56], 'false,false': [0.000518, 5, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'female(A)'}, {'true': [8.43e-08, 114, 0], 'false,true': [9.42e-08, 0, 27], 'false,false': [0.193, 2, 29]}], ['workedunder(A, B)', {'': 'actor(B)'}, {'true': [0.0, 106, 0], 'false': [0.045, 0, 56]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [6.14e-08, 108, 0], 'false,true': [0.04, 0, 56], 'false,false': [0.016, 7, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [6.23e-08, 118, 0], 'false,true': [0.035, 0, 56], 'false,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A), movie(D, B)', 'false,true': 'female(A)'}, {'true,true': [0.031, 0, 56], 'true,false': [0.008, 4, 0], 'false,true,true': [0.0, 15, 0], 'false,true,false': [0.153, 20, 0], 'false,false': [3.65e-08, 71, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.007, 100, 0], 'false,true': [0.027, 0, 56], 'false,false': [0.008, 7, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.024, 0, 56], 'true,false': [0.008, 6, 0], 'false': [0.136, 111, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.007, 99, 0], 'false,true': [0.021, 0, 56], 'false,false': [0.0, 4, 0]}]]
[{'': [6.70323335622736e-17, 0.03329369797859664], 'false': [0.03443877551020513, 0.03222222222222335]}, {'': [-3.640075490574284e-18, 0.07525449488799617], 'false': [5.591058708073352e-08, 5.3742713546078844e-08]}, {'': [6.232831015439475e-17, 0.020519900337713892], 'false': [3.289549702593056e-16, 0.037170927337281875]}, {'': [0.0, 3.571913151643814e-05]}, {'': [3.4951465590051226e-17, 0.05689874780825648], 'false': [2.8956192252754015e-05, 3.5061550798623896e-05]}, {'': [3.293034395074617e-17, 0.022013442405856818], 'false': [2.207640044522246e-05, 0.0]}, {'': [0.014079756757808778, 0.004628248955914701], 'true': [1.677264744140824e-05, 1.6513087897906953e-05], 'false': [0.013746178263435126, 1.8764332810566026e-17], 'false,true': [0.0, 0.023525169050106803]}, {'': [4.98294908379826e-07, 0.01498747791650663], 'false': [1.2939286533794217e-05, 8.17387105790062e-06]}, {'': [0.009711018531614615, 0.00016600478747233097], 'true': [1.0182633536954494e-05, 1.1493945004636038e-05]}, {'': [5.565165190116661e-07, 0.005138883290546867], 'false': [8.172620076919118e-06, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(B).;true;true
1;;workedunder(A, B) :- actor(B).;true;true
1;false;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(B).;true;true
2;false;female(A).;true;true
3;;workedunder(A, B) :- actor(B).;true;true
4;;workedunder(A, B) :- actor(B).;true;true
4;false;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(B).;true;true
5;false;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
6;false;movie(D, A), movie(D, B).;true;true
6;false,true;female(A).;true;true
7;;workedunder(A, B) :- actor(B).;true;true
7;false;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- actor(B).;true;true
9;false;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 6.66e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1156395500442073;  // std dev = 0.331, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1012934099211727;  // std dev = 6.99e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0924375864453406;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08496940511786136;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07859180932072563;  // std dev = 7.15e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0730857625326744;  // std dev = 5.27e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1448448996673182;  // std dev = 0.041, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.14537149689574172;  // std dev = 0.040, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.06828509596921507;  // std dev = 9.95e-05, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13489452631827542;  // std dev = 0.000230, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07828590208397194;  // std dev = 3.29e-05, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0640673916379071;  // std dev = 6.67e-05, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077591
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 3.5127031803131104 seconds
Total inference time: 2.553 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06481
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.717 seconds
Refined model CLL: -0.06481


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077591
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 10.509219163894654 seconds
Total inference time: 2.553 seconds
AUC ROC: 1.0
Total revision time: 10.509219163894654
Best scored revision CLL: -0.06481


Dataset: 4_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:00:19
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.077591, 'Precision': [0.735892, 0.5], 'Recall': 1.0, 'F1': 0.847854, 'Learning time': 10.509219163894654, 'Inference time': 2.553, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.090063, 'Precision': [0.735892, 0.5], 'Recall': 1.0, 'F1': 0.847854, 'Learning time': 3.552515983581543, 'Inference time': 2.905}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.8248156017661784;  // std dev = 0.180, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839136;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7229317860663923;  // std dev = 0.025, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.27785529212139704;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360617;  // std dev = 9.66e-08, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5587683352894276;  // std dev = 0.031, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.22508126392017808;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783626;  // std dev = 4.21e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4200507783505748;  // std dev = 0.030, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.18673013519995393;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32243833629934426;  // std dev = 0.027, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.16023954015131703;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09242228729446961;  // std dev = 0.025, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08520571557732005;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2563534564295982;  // std dev = 0.024, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.13963080837698644;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07879475600704568;  // std dev = 3.49e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( female(A) )
%   | then return 0.19578521942301258;  // std dev = 0.062, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.2020572195827101;  // std dev = 0.060, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07326184156633908;  // std dev = 5.77e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17940198805764193;  // std dev = 0.015, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1487338673719703;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06844064646448979;  // std dev = 3.65e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( female(A) )
%   | then return 0.15266128960646025;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.14669420509556363;  // std dev = 0.051, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06420389977961259;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13595076156952932;  // std dev = 0.015, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14620219024167236;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080847
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 3.423190116882324 seconds
Total inference time: 2.574 seconds
AUC ROC: 1.0


Dataset: 4_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:00:26
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.080847, 'Precision': [0.735892, 0.5], 'Recall': 1.0, 'F1': 0.847854, 'Learning time': 3.423190116882324, 'Inference time': 2.574}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos  examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048766;  // std dev = 8.43e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.6426626803255592;  // std dev = 0.243, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | else return 0.7194734122109548;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return -0.12544463852839138;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360617;  // std dev = 9.42e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.561875975350266;  // std dev = 0.068, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.22311274643256906;  // std dev = 0.015, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1015963294878364;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42240438300136524;  // std dev = 0.068, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.18876762633160857;  // std dev = 0.011, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926082;  // std dev = 7.60e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3240582988283172;  // std dev = 0.061, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.16069220290422742;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25747152976652604;  // std dev = 0.053, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1394239538812394;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08690888245894329;  // std dev = 0.234, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07865172368774205;  // std dev = 6.14e-08, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21139095522321605;  // std dev = 0.047, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12352266633306995;  // std dev = 0.010, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17830003247200152;  // std dev = 0.041, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11076088920119924;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07298252465357256;  // std dev = 0.018, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06834190224897191;  // std dev = 2.36e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15366058612900368;  // std dev = 0.036, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10260055456137679;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0641167725141523;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13472529050262494;  // std dev = 0.033, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09226905617013156;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070412
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.4559381008148193 seconds
Total inference time: 2.704 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065005
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.913 seconds
Parameter learned model CLL: -0.065005


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 58], 'true,false': [0.0, 7, 0], 'false': [8.43e-08, 101, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'female(A)'}, {'true,true': [0.243, 2, 20], 'true,false': [0.0, 0, 38], 'false': [0.0, 106, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [9.42e-08, 124, 0], 'false,true': [0.068, 0, 58], 'false,false': [0.015, 6, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 126, 0], 'false,true': [0.068, 0, 58], 'false,false': [0.011, 6, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [7.6e-08, 123, 0], 'false,true': [0.061, 0, 58], 'false,false': [0.009, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.053, 0, 58], 'true,false': [0.007, 3, 0], 'false': [0.234, 114, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [6.14e-08, 142, 0], 'false,true': [0.047, 0, 58], 'false,false': [0.01, 6, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.041, 0, 58], 'true,false': [0.006, 3, 0], 'false': [0.018, 119, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [2.36e-08, 117, 0], 'false,true': [0.036, 0, 58], 'false,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 121, 0], 'false,true': [0.033, 0, 58], 'false,false': [0.006, 5, 0]}]]
[{'': [0.09609467455621257, 7.03507659168416e-17], 'true': [-3.675221047035001e-16, -7.93016446160826e-18]}, {'': [0.0230030098461001, -1.25685625429263e-17], 'true': [0.058998885327700486, -7.47939721852737e-16]}, {'': [7.162729191130042e-17, 0.052430151393217106], 'false': [8.051077638992277e-05, 3.881777896588834e-05]}, {'': [-3.172065784643304e-17, 0.03180945412289296], 'false': [7.961040426642884e-05, 1.860408718813711e-05]}, {'': [4.6936257951632637e-17, 0.014243692366718717], 'false': [6.446792165688783e-05, 1.959459531855612e-05]}, {'': [0.007413923163531867, 0.00048211209966537484], 'true': [4.9262522819265e-05, 1.8518831741571224e-05]}, {'': [2.6582804814968535e-17, 0.009565255129996134], 'false': [3.7537020628827514e-05, 1.5065086761257193e-05]}, {'': [0.003935446523450397, 2.843234237646825e-06], 'true': [2.903750404228488e-05, 1.245991337600616e-05]}, {'': [4.744542840278447e-18, 0.0030926040991705885], 'false': [2.290545091946487e-05, -2.3129646346357427e-18]}, {'': [-1.101047627727428e-17, 0.0037823088117567728], 'false': [1.8420885777969964e-05, 6.374809607433141e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;true
1;true;female(A).;true;true
2;;workedunder(A, B) :- actor(B).;true;true
2;false;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(B).;true;true
3;false;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(B).;true;true
4;false;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(B).;true;true
6;false;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- actor(B).;true;true
8;false;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- actor(B).;true;true
9;false;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.94e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839133;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.11368400989360178;  // std dev = 0.143, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10147156756569066;  // std dev = 7.88e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.09486263657071506;  // std dev = 0.224, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08491906274997157;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0785485648176099;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07304823563465128;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( female(A) )
%   | then return 0.16517541567343866;  // std dev = 0.053, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.17067745355274894;  // std dev = 0.040, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15382351571748976;  // std dev = 0.003, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08556618160983724;  // std dev = 0.000351, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06840047453270327;  // std dev = 0.017, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1352701676688271;  // std dev = 2.36e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.12393459511206821;  // std dev = 0.047, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   else return -0.06449315833222048;  // std dev = 0.028, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071854
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.646247148513794 seconds
Total inference time: 2.817 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065306
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.79 seconds
Refined model CLL: -0.065306


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070412
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.805185249328613 seconds
Total inference time: 2.704 seconds
AUC ROC: 1.0
Total revision time: 10.805185249328613
Best scored revision CLL: -0.065005


Dataset: 4_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:00:46
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070412, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.805185249328613, 'Inference time': 2.704, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070412, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.4559381008148193, 'Inference time': 2.704}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.94e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.12544463852839133;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360621;  // std dev = 8.56e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926089;  // std dev = 6.66e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 5.87e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( female(A) )
%   | then return 0.238964766666733;  // std dev = 0.072, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.24644514016031302;  // std dev = 0.054, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109158;  // std dev = 5.96e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2116386400624381;  // std dev = 0.005, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10622039249067206;  // std dev = 0.000579, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17847490359586787;  // std dev = 0.004, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09668548363956833;  // std dev = 0.000610, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420265;  // std dev = 4.83e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1537887556182001;  // std dev = 0.004, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08839857210899;  // std dev = 0.000660, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13482226576899947;  // std dev = 0.003, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08156677043310007;  // std dev = 0.000646, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.3567378520965576 seconds
Total inference time: 2.638 seconds
AUC ROC: 1.0


Dataset: 4_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:00:53
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070421, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.3567378520965576, 'Inference time': 2.638}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos  examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.66e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.14185106490048813;  // std dev = 0.000, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283915;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else return -0.1254446385283919;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #neg=315 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1123163781936063;  // std dev = 3.65e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.11231637819360689;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783619;  // std dev = 4.71e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.10159632948783644;  // std dev = 0.000, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.09269127618926062;  // std dev = 3.65e-08, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.67e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.08518475138839679;  // std dev = 7.88e-08, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109165;  // std dev = 2.36e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else return -0.07877675473109144;  // std dev = 4.71e-08, 273.000 (wgt'ed) examples reached here.  /* #neg=273 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333707;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.07324622576333682;  // std dev = 9.88e-08, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0684269778442027;  // std dev = 1.97e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.06842697784420286;  // std dev = 0.000, 313.000 (wgt'ed) examples reached here.  /* #neg=313 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.06419184008202623;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.5939390659332275 seconds
Total inference time: 2.913 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065435
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.943 seconds
Parameter learned model CLL: -0.065435


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [1.09e-06, 0, 178], 'true,false': [6.66e-08, 67, 0], 'false': [0.0, 307, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 178], 'true,false': [0.0, 77, 0], 'false': [0.0, 315, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [5.9e-07, 0, 178], 'true,false': [3.65e-08, 54, 0], 'false': [0.0, 293, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3.77e-07, 0, 178], 'true,false': [4.71e-08, 64, 0], 'false': [0.0, 298, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3.58e-07, 0, 178], 'true,false': [0.0, 60, 0], 'false': [3.65e-08, 304, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3.63e-07, 0, 178], 'true,false': [1.67e-08, 67, 0], 'false': [7.88e-08, 298, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'actor(A), director(B)'}, {'true,true': [3e-07, 0, 178], 'true,false': [2.36e-08, 82, 0], 'false': [4.71e-08, 273, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 178], 'true,false': [0.0, 60, 0], 'false': [9.88e-08, 283, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 178], 'true,false': [1.97e-08, 57, 0], 'false': [0.0, 313, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [7.6e-08, 0, 178], 'true,false': [0.0, 49, 0], 'false': [0.0, 303, 0]}]]
[{'': [0.19868388171595736, -1.3018901917428547e-16], 'true': [6.706246045376226e-15, 6.628197161941232e-17]}, {'': [0.15047333394613627, -7.330996480064526e-17], 'true': [-3.193450497798203e-15, -2.5953265510717945e-17]}, {'': [0.07961193670501408, -1.0154940976093581e-16], 'true': [1.9559884299013994e-15, 2.4671622769447922e-17]}, {'': [0.05241889841987445, -6.70604511518551e-17], 'true': [7.983626244495507e-16, 3.469446951953614e-17]}, {'': [0.03222291647445705, 4.382459307730881e-18], 'true': [7.185263620045957e-16, -1.8503717077085942e-18]}, {'': [0.023016113730374727, 2.086325146946603e-17], 'true': [7.384854276158345e-16, 4.14262322621327e-18]}, {'': [0.01797556573998169, 8.133502011905909e-18], 'true': [5.03966406683779e-16, 6.769652589177784e-18]}, {'': [0.011816457135838392, 3.4522836101418294e-17], 'true': [-1.6965205769552953e-16, -1.8503717077085942e-18]}, {'': [0.0089870022877378, -3.263275343946147e-17], 'true': [-4.490789762528723e-17, 6.817158923136926e-18]}, {'': [0.0066491589733843415, -5.862563826403467e-18], 'true': [3.2433481618263e-17, -2.2657612747452172e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true;actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.99e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.14185106490048813;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.12544463852839174;  // std dev = 0.000, 256.000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360629;  // std dev = 4.08e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.11231637819360686;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1015963294878362;  // std dev = 3.94e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.10159632948783653;  // std dev = 0.000, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.09269127618926061;  // std dev = 4.21e-08, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else return -0.08518475138839678;  // std dev = 8.16e-08, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.07877675473109146;  // std dev = 5.37e-08, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 1.29e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.07324622576333689;  // std dev = 1.07e-07, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420264;  // std dev = 1.67e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return -0.06842697784420299;  // std dev = 0.000, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else return -0.06419184008202623;  // std dev = 0.000, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.6445441246032715 seconds
Total inference time: 2.85 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065435
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.773 seconds
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.954483190536498 seconds
Total inference time: 2.913 seconds
AUC ROC: 1.0
Total revision time: 14.954483190536498
Best scored revision CLL: -0.065435


Dataset: 4_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:01:18
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063555, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 14.954483190536498, 'Inference time': 2.913, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063555, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.5939390659332275, 'Inference time': 2.913}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.32e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.14185106490048818;  // std dev = 0.000, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.1254446385283918;  // std dev = 0.000, 271.000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1123163781936062;  // std dev = 3.16e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.11231637819360699;  // std dev = 0.000, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.10159632948783658;  // std dev = 0.000, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926101;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.09269127618926065;  // std dev = 8.43e-08, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839678;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.08518475138839678;  // std dev = 8.16e-08, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0787767547310917;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.07877675473109146;  // std dev = 4.71e-08, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333703;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.07324622576333689;  // std dev = 1.08e-07, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420262;  // std dev = 1.67e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.06842697784420285;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202619;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.06419184008202623;  // std dev = 0.000, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.551576852798462 seconds
Total inference time: 2.815 seconds
AUC ROC: 1.0


Dataset: 4_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:01:27
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063555, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.551576852798462, 'Inference time': 2.815}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos  examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048768;  // std dev = 6.32e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1254446385283914;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 7.30e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.10252640857517044;  // std dev = 0.079, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0926130865329568;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851183885402387;  // std dev = 4.08e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0787197671581022;  // std dev = 3.33e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0787655096792776;  // std dev = 6.16e-05, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324698909479327;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07319648329577429;  // std dev = 1.80e-05, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842764600162314;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06838358760702504;  // std dev = 1.21e-05, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06419242959751796;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06646824648903762;  // std dev = 0.209, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066111
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.1323721408843994 seconds
Total inference time: 2.917 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064184
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.435 seconds
Parameter learned model CLL: -0.064184


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [2.23e-07, 0, 45], 'true,false': [0.0, 4, 0], 'false': [6.32e-08, 71, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 45], 'true,false': [0.0, 6, 0], 'false': [0.0, 100, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [7.3e-08, 90, 0], 'false,true': [0.0, 0, 45], 'false,false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 45], 'true,false': [0.0, 10, 0], 'false': [0.079, 85, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 67, 0], 'false,true': [2.98e-08, 0, 45], 'false,false': [2.63e-09, 6, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [4.08e-08, 83, 0], 'false,true': [0.0, 0, 45], 'false,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [3.33e-08, 78, 0], 'false,true': [5.58e-08, 0, 45], 'false,false': [6.16e-05, 6, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 45], 'true,false': [0.0, 6, 0], 'false': [1.8e-05, 85, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 45], 'true,false': [0.0, 8, 0], 'false': [1.21e-05, 91, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [2.36e-08, 0, 45], 'true,false': [0.0, 4, 0], 'false': [0.209, 91, 0]}]]
[{'': [0.07496876301541104, 5.629299843169808e-17], 'true': [1.105288700071267e-15, 0.0]}, {'': [0.07410586634586562, -1.5543122344752193e-17], 'true': [-9.473903143468002e-16, -2.3129646346357427e-18]}, {'': [5.921189464667501e-17, 0.06631740615362845], 'false': [-3.947459643111668e-17, 0.0]}, {'': [0.04008720532250202, 7.266395713055285e-05], 'true': [-4.144832625267251e-16, -5.551115123125783e-18]}, {'': [-1.4913443614367774e-17, 0.01774070682301534], 'false': [1.973729821555834e-17, 1.1564823173178713e-18]}, {'': [2.00642715293703e-17, 0.010425859500244368], 'false': [-2.960594732333751e-17, 0.0]}, {'': [1.423362852083534e-17, 0.008641417189711604], 'false': [6.908054375445419e-17, 6.322559501411215e-10]}, {'': [0.006505729557430155, 3.828344830689984e-12], 'true': [-8.388351741612294e-17, -1.1564823173178713e-18]}, {'': [0.00626915639749335, 1.597075951340767e-12], 'true': [-3.947459643111668e-17, 0.0]}, {'': [0.002944999850823114, 0.0004822549808670744], 'true': [1.2335811384723961e-17, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(B).;true;true
2;false;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(B).;true;true
4;false;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(B).;true;true
5;false;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(B).;true;true
6;false;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048768;  // std dev = 6.50e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.11231637819360626;  // std dev = 5.58e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.3742544246877977;  // std dev = 0.143, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.4026818723398488;  // std dev = 0.086, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   else return -0.10159632948783617;  // std dev = 5.48e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3254809919956629;  // std dev = 0.018, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14424729589456592;  // std dev = 0.003, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 2.58e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2584257800500468;  // std dev = 0.016, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11893931426746074;  // std dev = 0.059, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21205451438888215;  // std dev = 0.014, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11464585407934627;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.0795688511944272;  // std dev = 0.076, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07319247546411044;  // std dev = 1.83e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17878000203118422;  // std dev = 0.012, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10359625207635473;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06837992716472417;  // std dev = 4.01e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15402025510266468;  // std dev = 0.011, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09382832940745885;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06415032560851196;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13500304136038577;  // std dev = 0.010, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08614902218589471;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067036
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.1844491958618164 seconds
Total inference time: 3.017 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06538
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.452 seconds
Refined model CLL: -0.06538


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066111
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.203821336746216 seconds
Total inference time: 2.917 seconds
AUC ROC: 1.0
Total revision time: 9.203821336746216
Best scored revision CLL: -0.064184


Dataset: 4_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:01:46
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066111, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.203821336746216, 'Inference time': 2.917, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066111, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.1323721408843994, 'Inference time': 2.917}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.30e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839155;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109544;  // std dev = 2.98e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.6909019836395263;  // std dev = 0.167, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5606883068315701;  // std dev = 0.020, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360624;  // std dev = 6.83e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4214774268827655;  // std dev = 0.020, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783616;  // std dev = 5.67e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.31869227788230203;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.3017267385250283;  // std dev = 0.096, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   else return -0.09269127618926107;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 2.98e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2603822692984954;  // std dev = 0.025, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12210246249255183;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109158;  // std dev = 5.77e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21343430537066624;  // std dev = 0.022, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10074194018987967;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17979031478395685;  // std dev = 0.019, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10015421768529054;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15478556536953778;  // std dev = 0.017, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0913884180187871;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06837479616365393;  // std dev = 0.005, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13559979558764168;  // std dev = 0.015, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08407795172666832;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.0641161633620358;  // std dev = 0.005, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070998
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.2448313236236572 seconds
Total inference time: 2.976 seconds
AUC ROC: 1.0


Dataset: 4_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:01:52
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070998, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.2448313236236572, 'Inference time': 2.976}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos  examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048766;  // std dev = 7.60e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839136;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360622;  // std dev = 7.30e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783619;  // std dev = 5.58e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926108;  // std dev = 1.05e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839683;  // std dev = 4.21e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0787767547310916;  // std dev = 5.27e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( female(A) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.18571317643556665;  // std dev = 0.080, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1788229297212643;  // std dev = 0.012, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09438002039719204;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07346477205488433;  // std dev = 0.020, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06841304798451167;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else return 0.14884148112101447;  // std dev = 0.237, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06417954961368186;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else return 0.13051095824188058;  // std dev = 0.233, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073992
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.4505038261413574 seconds
Total inference time: 3.121 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066786
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.572 seconds
Parameter learned model CLL: -0.066786


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [2.23e-07, 0, 45], 'true,false': [0.0, 6, 0], 'false': [7.6e-08, 79, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 102, 0], 'false,true': [0.0, 0, 45], 'false,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 45], 'true,false': [0.0, 5, 0], 'false': [7.3e-08, 94, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [5.58e-08, 85, 0], 'false,true': [0.0, 0, 45], 'false,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [2.98e-08, 0, 45], 'true,false': [2.63e-09, 3, 0], 'false': [1.05e-08, 90, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [4.21e-08, 71, 0], 'false,true': [0.0, 0, 45], 'false,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'female(A)'}, {'true': [5.27e-08, 92, 0], 'false,true': [0.0, 0, 23], 'false,false': [0.08, 2, 22]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.012, 0, 45], 'true,false': [0.002, 4, 0], 'false': [0.02, 92, 0]}], ['workedunder(A, B)', {'': 'actor(B)'}, {'true': [0.0, 82, 0], 'false': [0.237, 1, 45]}], ['workedunder(A, B)', {'': 'actor(B)'}, {'true': [0.0, 81, 0], 'false': [0.233, 1, 45]}]]
[{'': [0.10380622837370317, 7.307797124114954e-17], 'true': [1.105288700071267e-15, -6.938893903907228e-18]}, {'': [-1.0884539457109378e-17, 0.04182928783975578], 'false': [-9.473903143468002e-16, 0.0]}, {'': [0.040122030722945186, 5.669223955532714e-17], 'true': [-3.947459643111668e-17, 0.0]}, {'': [3.657205257588751e-17, 0.020202215093805483], 'false': [-4.144832625267251e-16, 0.0]}, {'': [0.010013797405959831, 1.2335811384723962e-18], 'true': [1.973729821555834e-17, 2.3129646346357427e-18]}, {'': [2.5019110414088035e-17, 0.010425859500244368], 'false': [-2.960594732333751e-17, 0.0]}, {'': [3.0169103930031426e-17, 0.0033918934599012286], 'false': [0.0, 0.00635953851714031]}, {'': [0.005598605239254683, 4.346385820956584e-06], 'true': [3.116047702528885e-06, 1.0558298439277553e-06]}, {'': [-1.286233991943779e-17, 0.0012244751457538947]}, {'': [-1.3706457094137734e-17, 0.0011849061017925647]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- actor(B).;true;true
1;false;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(B).;true;true
3;false;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(B).;true;true
5;false;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(B).;true;true
6;false;female(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- actor(B).;true;true
9;;workedunder(A, B) :- actor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.16e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839136;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.5275463194571225;  // std dev = 0.133, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.5263367491402023;  // std dev = 0.136, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.11231637819360621;  // std dev = 7.60e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783616;  // std dev = 5.58e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42443890881096535;  // std dev = 0.000991, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1764662325419538;  // std dev = 0.000193, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926108;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( female(A) )
%   | then return 0.30537917704722883;  // std dev = 0.095, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.32554637253445756;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839683;  // std dev = 3.65e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( female(A) )
%   | then return 0.26211846100637953;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.22033702699210758;  // std dev = 0.126, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109161;  // std dev = 5.16e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21654588842330785;  // std dev = 0.013, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.23934102229646123;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1820601894366687;  // std dev = 0.011, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.19971780712198162;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420264;  // std dev = 5.37e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( female(A) )
%   | then return 0.1550262254878766;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.1309941799974045;  // std dev = 0.090, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13852062514811345;  // std dev = 0.019, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.18788140583526328;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.087665
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 3.2224390506744385 seconds
Total inference time: 2.704 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070531
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.384 seconds
Refined model CLL: -0.070531


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073992
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.628942876815795 seconds
Total inference time: 3.121 seconds
AUC ROC: 1.0
Total revision time: 9.628942876815795
Best scored revision CLL: -0.066786


Dataset: 4_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:02:12
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073992, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.628942876815795, 'Inference time': 3.121, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073992, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.4505038261413574, 'Inference time': 3.121}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 7.88e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( female(A) )
%   | then return 0.8164822684328453;  // std dev = 0.200, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839144;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7237321131963371;  // std dev = 0.028, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.28052658778904555;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5595631808348952;  // std dev = 0.034, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.22208842779487434;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11610466287466542;  // std dev = 0.331, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10125107713038975;  // std dev = 3.49e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( female(A) )
%   | then return 0.4001904128198075;  // std dev = 0.122, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.3890972469826152;  // std dev = 0.124, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09240212432158423;  // std dev = 6.50e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3285225486190245;  // std dev = 0.023, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.25432057902940824;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08493929614312615;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( female(A) )
%   | then return 0.24375836564191397;  // std dev = 0.094, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.2370523969478489;  // std dev = 0.096, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07856594587989262;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21689096768178312;  // std dev = 0.014, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.25339975005855103;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18231172151397973;  // std dev = 0.012, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.20883326932668378;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07507453720221809;  // std dev = 0.154, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06813903673209769;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( female(A) )
%   | then return 0.13166605252508756;  // std dev = 0.090, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.15507760539117743;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06393772864508158;  // std dev = 1.05e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13871188251262875;  // std dev = 0.019, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1985466877985822;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.089021
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 3.4776341915130615 seconds
Total inference time: 2.624 seconds
AUC ROC: 1.0


Dataset: 4_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:02:18
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.089021, 'Precision': [0.742291, 0.5], 'Recall': 1.0, 'F1': 0.852086, 'Learning time': 3.4776341915130615, 'Inference time': 2.624}


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos  examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.30e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.28052658778904566;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360618;  // std dev = 8.56e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.5048577441463519;  // std dev = 0.192, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783623;  // std dev = 5.05e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else return 0.4238999380618654;  // std dev = 0.046, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0926912761892609;  // std dev = 6.41e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3250584815599148;  // std dev = 0.041, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.4312518362413587;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 6.14e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25814414449769973;  // std dev = 0.036, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.3291209500378118;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109157;  // std dev = 6.50e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21185975547078734;  // std dev = 0.032, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.26172506770867704;  // std dev = 0.011, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333714;  // std dev = 3.80e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1786398165615879;  // std dev = 0.028, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.21722952116487507;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420265;  // std dev = 4.83e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1539156628750735;  // std dev = 0.025, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1798118115050712;  // std dev = 0.011, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13187209513279233;  // std dev = 1.83e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.11901631963469468;  // std dev = 0.071, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   else if ( actor(A) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return -0.3834100244042706;  // std dev = 0.874, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06419184008202622;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.093331
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 3.424999952316284 seconds
Total inference time: 2.594 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06891
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.553 seconds
Parameter learned model CLL: -0.06891


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(B)'}, {'true': [8.3e-08, 89, 0], 'false': [0.0, 0, 56]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 108, 0], 'false,true': [0.0, 0, 56], 'false,false': [5.27e-09, 3, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'female(A)'}, {'true': [8.56e-08, 108, 0], 'false,true': [0.0, 0, 27], 'false,false': [0.192, 2, 29]}], ['workedunder(A, B)', {'': 'actor(B)'}, {'true': [5.05e-08, 91, 0], 'false': [0.046, 0, 56]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [6.41e-08, 111, 0], 'false,true': [0.041, 0, 56], 'false,false': [0.01, 3, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [6.14e-08, 114, 0], 'false,true': [0.036, 0, 56], 'false,false': [0.01, 4, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [6.5e-08, 113, 0], 'false,true': [0.032, 0, 56], 'false,false': [0.011, 6, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [3.8e-08, 119, 0], 'false,true': [0.028, 0, 56], 'false,false': [0.007, 3, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [4.83e-08, 100, 0], 'false,true': [0.025, 0, 56], 'false,false': [0.011, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'female(A)', 'false': 'actor(A)', 'false,false': 'movie(C, A), movie(C, B)'}, {'true,true': [1.83e-08, 0, 27], 'true,false': [0.071, 2, 29], 'false,true': [0.0, 109, 0], 'false,false,true': [0.874, 5, 0], 'false,false,false': [0.0, 5, 0]}]]
[{'': [7.734137924355023e-17, -1.2688263138573217e-16]}, {'': [-6.1679056923619804e-18, 0.04826199367997695], 'false': [-1.9032394707859825e-16, 9.25185853854297e-18]}, {'': [6.78469626159818e-17, 0.02040599077930502], 'false': [-3.9474596431116675e-16, 0.03699135640823985]}, {'': [2.8060581941075384e-17, 3.7972721961709865e-05]}, {'': [3.700743415417188e-17, 0.027636932447358382], 'false': [3.0636271128552704e-05, 3.4179349820232886e-05]}, {'': [3.311191476952221e-17, 0.02148256612116063], 'false': [2.3335870087642136e-05, 2.351779369945406e-05]}, {'': [3.7334933571465444e-17, 0.01962238992899106], 'false': [1.773692303894522e-05, 2.133283768755249e-05]}, {'': [1.2128486823636164e-17, 0.007577082498287077], 'false': [1.369414589785789e-05, 1.6233049473207695e-05]}, {'': [2.3314683517128286e-17, 0.014328996520744767], 'false': [1.0785896382739127e-05, 1.1801460438726208e-05]}, {'': [0.0027646784860019084, 0.01052391176173368], 'false': [-1.6806128354417508e-17, 0.1019002492019904], 'false,false': [0.1528503738029856, 0.0], 'true': [1.2335811384723961e-17, 0.005095687781050725]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(B).;true;true
1;;workedunder(A, B) :- actor(B).;true;true
1;false;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(B).;true;true
2;false;female(A).;true;true
3;;workedunder(A, B) :- actor(B).;true;true
4;;workedunder(A, B) :- actor(B).;true;true
4;false;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(B).;true;true
5;false;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(B).;true;true
6;false;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(B).;true;true
7;false;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- actor(B).;true;true
8;false;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;female(A).;true;true
9;false;actor(A).;true;true
9;false,false;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.16e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283913;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( female(A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.6649625702277708;  // std dev = 0.208, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360624;  // std dev = 6.99e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5623144202428031;  // std dev = 0.050, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2227993173165383;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783628;  // std dev = 3.33e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( female(A) )
%   | then return 0.39416163056058046;  // std dev = 0.113, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.40873750538243764;  // std dev = 0.110, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32885912149543195;  // std dev = 0.033, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.25523477357503266;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then return -0.09269127618926104;  // std dev = 2.98e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else return -0.1883914737950071;  // std dev = 0.524, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08501272561168233;  // std dev = 0.012, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   else if ( female(A) )
%   | then return 0.23996397153722876;  // std dev = 0.087, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.24874126803265817;  // std dev = 0.085, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07831266663358473;  // std dev = 0.018, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2164089214149498;  // std dev = 0.020, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2541463835918223;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07296775861311412;  // std dev = 0.014, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.18196092983053253;  // std dev = 0.017, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.20903439966953438;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1564249077078266;  // std dev = 0.015, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.17694303081283858;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then return -0.06848530057792442;  // std dev = 3.94e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.29509672002660886;  // std dev = 0.569, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0626265157579834;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13687481095039797;  // std dev = 0.014, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15162604792498055;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0652386083233651;  // std dev = 0.110, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.084257
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 3.719554901123047 seconds
Total inference time: 2.89 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066805
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.801 seconds
Refined model CLL: -0.066805


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.084257
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 10.498554853439332 seconds
Total inference time: 2.89 seconds
AUC ROC: 1.0
Total revision time: 10.498554853439332
Best scored revision CLL: -0.066805


Dataset: 4_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:02:39
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.084257, 'Precision': [0.735892, 0.5], 'Recall': 1.0, 'F1': 0.847854, 'Learning time': 10.498554853439332, 'Inference time': 2.89, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.093331, 'Precision': [0.735892, 0.5], 'Recall': 1.0, 'F1': 0.847854, 'Learning time': 3.424999952316284, 'Inference time': 2.594}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048768;  // std dev = 6.66e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1254446385283913;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360617;  // std dev = 9.54e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.38171290045857575;  // std dev = 0.132, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else return 0.4175135841583101;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return -0.10159632948783633;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32449615086723027;  // std dev = 0.029, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14284377597594802;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09269127618926083;  // std dev = 7.45e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 6.05e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( female(A) )
%   | then return 0.2474879782235415;  // std dev = 0.072, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.2544536668139481;  // std dev = 3.94e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109154;  // std dev = 7.22e-08, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21270421299743322;  // std dev = 0.027, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15724648010394615;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17925686483952982;  // std dev = 0.024, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.13751338176757968;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07345713571990176;  // std dev = 0.020, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15438222966026793;  // std dev = 0.021, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1232302499852301;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07008665755028548;  // std dev = 0.144, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13528580676701157;  // std dev = 0.019, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11080187357037614;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06423778798199674;  // std dev = 0.017, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069737
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.8117527961730957 seconds
Total inference time: 2.973 seconds
AUC ROC: 1.0


Dataset: 4_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:02:46
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069737, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.8117527961730957, 'Inference time': 2.973}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos  examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.43e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283913;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 7.88e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783624;  // std dev = 4.71e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926092;  // std dev = 6.05e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 5.48e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109158;  // std dev = 6.23e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 4.59e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06842697784420268;  // std dev = 3.80e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.12456898857515225;  // std dev = 0.042, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.12892500769801016;  // std dev = 0.031, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   else if ( actor(A) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return -0.32219085129413805;  // std dev = 0.632, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06419184008202622;  // std dev = 1.86e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.08046
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 3.6760361194610596 seconds
Total inference time: 2.589 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065515
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.717 seconds
Parameter learned model CLL: -0.065515


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [8.43e-08, 108, 0], 'false,true': [0.0, 0, 58], 'false,false': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 117, 0], 'false,true': [0.0, 0, 58], 'false,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [7.88e-08, 104, 0], 'false,true': [1.19e-07, 0, 58], 'false,false': [2.63e-09, 3, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [4.71e-08, 94, 0], 'false,true': [0.0, 0, 58], 'false,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [6.05e-08, 108, 0], 'false,true': [0.0, 0, 58], 'false,false': [0.0, 11, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [5.48e-08, 99, 0], 'false,true': [0.0, 0, 58], 'false,false': [2.63e-09, 6, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [6.23e-08, 107, 0], 'false,true': [0.0, 0, 58], 'false,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [4.59e-08, 101, 0], 'false,true': [0.0, 0, 58], 'false,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 58], 'true,false': [0.0, 9, 0], 'false': [3.8e-08, 84, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'female(A)', 'false': 'actor(A)', 'false,false': 'movie(C, A), movie(C, B)'}, {'true,true': [0.042, 1, 20], 'true,false': [0.031, 1, 38], 'false,true': [0.0, 102, 0], 'false,false,true': [0.632, 3, 0], 'false,false,false': [1.86e-09, 7, 0]}]]
[{'': [6.579099405186112e-17, 0.09609467455621257], 'false': [-3.675221047035001e-16, -7.93016446160826e-18]}, {'': [-3.795634272222758e-18, 0.04308576245887642], 'false': [-1.2250736823450003e-16, 0.0]}, {'': [5.978123978750843e-17, 0.020846347594112944], 'false': [2.4501473646900006e-16, 2.3129646346357427e-18]}, {'': [2.362176648138631e-17, 0.01626384593324757], 'false': [-3.3689526264487507e-16, 0.0]}, {'': [3.39234813079909e-17, 0.022901820383961328], 'false': [-1.5313421029312505e-16, 0.0]}, {'': [3.027880976250427e-17, 0.009842119970933802], 'false': [-3.062684205862501e-17, 1.1564823173178713e-18]}, {'': [3.631570641297241e-17, 0.0070731799132398646], 'false': [-2.2970131543968756e-17, -1.1564823173178713e-18]}, {'': [2.088538363156235e-17, 0.003782461804781654], 'false': [-3.062684205862501e-17, 0.0]}, {'': [0.005688223030843589, 1.7182023000151233e-17], 'true': [0.0, 0.0]}, {'': [0.0012657788567156454, 0.0053010942519643445], 'false': [-1.5782582212808597e-17, 0.053916426727006195], 'false,false': [0.13312697957285477, 4.956352788505163e-19], 'true': [0.0017815325217672335, 0.0009814241288552085]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(B).;true;true
0;false;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- actor(B).;true;true
1;false;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(B).;true;true
2;false;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(B).;true;true
3;false;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(B).;true;true
4;false;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(B).;true;true
5;false;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(B).;true;true
6;false;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(B).;true;true
7;false;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;female(A).;true;true
9;false;actor(A).;true;true
9;false,false;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 7.88e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.12544463852839144;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11439755686751248;  // std dev = 0.202, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.10272673975871213;  // std dev = 0.133, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09242153591368846;  // std dev = 5.58e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.08495577768191885;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0785801035818052;  // std dev = 5.96e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07307560473496168;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07012104070603312;  // std dev = 0.185, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06394922013560098;  // std dev = 3.08e-05, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066094
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.7335879802703857 seconds
Total inference time: 2.826 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063436
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.698 seconds
Refined model CLL: -0.063436


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066094
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.824624099731446 seconds
Total inference time: 2.826 seconds
AUC ROC: 1.0
Total revision time: 10.824624099731446
Best scored revision CLL: -0.063436


Dataset: 4_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:03:06
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066094, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.824624099731446, 'Inference time': 2.826, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.08046, 'Precision': [0.736364, 0.5], 'Recall': 1.0, 'F1': 0.848168, 'Learning time': 3.6760361194610596, 'Inference time': 2.589}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.69e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283913;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.11231637819360626;  // std dev = 6.83e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.10159632948783641;  // std dev = 0.000, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.092691276189261;  // std dev = 3.65e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839678;  // std dev = 4.83e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07877675473109157;  // std dev = 6.58e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07324622576333707;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06842697784420265;  // std dev = 5.05e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06419184008202626;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068287
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.422860860824585 seconds
Total inference time: 2.788 seconds
AUC ROC: 1.0


Dataset: 4_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:03:13
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068287, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.422860860824585, 'Inference time': 2.788}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos  examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.99e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else return -0.14185106490048807;  // std dev = 0.000, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283915;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else return -0.12544463852839183;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360629;  // std dev = 4.08e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.11231637819360678;  // std dev = 0.000, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783621;  // std dev = 4.21e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.10159632948783655;  // std dev = 0.000, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.09269127618926075;  // std dev = 8.43e-08, 263.000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.08518475138839678;  // std dev = 8.16e-08, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109173;  // std dev = 2.24e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.07877675473109147;  // std dev = 5.37e-08, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 1.18e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.07324622576333682;  // std dev = 1.05e-07, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420271;  // std dev = 7.45e-09, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.06842697784420289;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.06419184008202623;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.481450796127319 seconds
Total inference time: 2.845 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065435
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.053 seconds
Parameter learned model CLL: -0.065435


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [1.09e-06, 0, 178], 'true,false': [6.99e-08, 72, 0], 'false': [0.0, 295, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 178], 'true,false': [0.0, 75, 0], 'false': [0.0, 293, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [5.9e-07, 0, 178], 'true,false': [4.08e-08, 57, 0], 'false': [0.0, 280, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3.77e-07, 0, 178], 'true,false': [4.21e-08, 59, 0], 'false': [0.0, 285, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3.58e-07, 0, 178], 'true,false': [0.0, 53, 0], 'false': [8.43e-08, 263, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3.63e-07, 0, 178], 'true,false': [1.83e-08, 60, 0], 'false': [8.16e-08, 293, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3e-07, 0, 178], 'true,false': [2.24e-08, 59, 0], 'false': [5.37e-08, 306, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 178], 'true,false': [1.18e-08, 44, 0], 'false': [1.05e-07, 296, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 178], 'true,false': [7.45e-09, 43, 0], 'false': [0.0, 310, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [7.6e-08, 0, 178], 'true,false': [0.0, 61, 0], 'false': [0.0, 299, 0]}]]
[{'': [0.20505600000000557, -1.1139864925052418e-16], 'true': [6.706246045376226e-15, 6.78469626159818e-17]}, {'': [0.14889132686668924, -5.759518762560538e-17], 'true': [-3.193450497798203e-15, -2.6645352591003756e-17]}, {'': [0.08190294727931476, -7.930164461608261e-17], 'true': [1.9559884299013994e-15, 2.921639538487254e-17]}, {'': [0.050384153641418704, -6.077010240053489e-17], 'true': [7.983626244495507e-16, 3.010774304068221e-17]}, {'': [0.03021477879640401, 2.70168340593194e-17], 'true': [7.185263620045957e-16, -3.142140635731575e-18]}, {'': [0.02184171305043828, 2.27349424837916e-17], 'true': [7.384854276158345e-16, 5.551115123125783e-18]}, {'': [0.015565774367629966, 9.433267529494795e-18], 'true': [5.03966406683779e-16, 8.467802730191872e-18]}, {'': [0.00995948026137855, 3.750753461571475e-17], 'true': [-1.6965205769552953e-16, 3.1540426835941946e-18]}, {'': [0.007665837861141886, -3.6529918874763216e-17], 'true': [-4.490789762528723e-17, 1.290957005378089e-18]}, {'': [0.007467175936621049, -5.940992773913881e-18], 'true': [3.2433481618263e-17, -2.7300566179307128e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.50e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.14185106490048804;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.12544463852839177;  // std dev = 0.000, 267.000 (wgt'ed) examples reached here.  /* #neg=267 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360626;  // std dev = 4.71e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.11231637819360683;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783619;  // std dev = 4.59e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.10159632948783656;  // std dev = 0.000, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.0926912761892607;  // std dev = 9.88e-08, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.08518475138839678;  // std dev = 7.60e-08, 273.000 (wgt'ed) examples reached here.  /* #neg=273 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0787767547310917;  // std dev = 3.07e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.07877675473109147;  // std dev = 6.50e-08, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 7.45e-09, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.07324622576333682;  // std dev = 9.88e-08, 278.000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.11e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.06842697784420282;  // std dev = 0.000, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.06419184008202623;  // std dev = 0.000, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.534274101257324 seconds
Total inference time: 3.197 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065435
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.775 seconds
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.843724897384645 seconds
Total inference time: 2.845 seconds
AUC ROC: 1.0
Total revision time: 14.843724897384645
Best scored revision CLL: -0.065435


Dataset: 4_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:03:38
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063555, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 14.843724897384645, 'Inference time': 2.845, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063555, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.481450796127319, 'Inference time': 2.845}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.14e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.14185106490048824;  // std dev = 0.000, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839127;  // std dev = 3.94e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.12544463852839202;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360629;  // std dev = 3.49e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.11231637819360686;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783619;  // std dev = 4.08e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.10159632948783644;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926104;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.09269127618926067;  // std dev = 6.66e-08, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0851847513883968;  // std dev = 1.05e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.08518475138839678;  // std dev = 7.88e-08, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109172;  // std dev = 2.11e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.07877675473109147;  // std dev = 5.16e-08, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.07324622576333682;  // std dev = 1.05e-07, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420262;  // std dev = 2.36e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.0684269778442028;  // std dev = 0.000, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.06419184008202625;  // std dev = 0.000, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.580759763717651 seconds
Total inference time: 3.148 seconds
AUC ROC: 1.0


Dataset: 4_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:03:47
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063555, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.580759763717651, 'Inference time': 3.148}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos  examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 6.99e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( female(A) )
%   | then return 0.7748156017661789;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.8295775065280829;  // std dev = 0.167, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283914;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7278382077391181;  // std dev = 0.031, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.271203790061412;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 7.45e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5636365315919819;  // std dev = 0.039, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2206357114373633;  // std dev = 0.013, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42369456855112186;  // std dev = 0.039, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.18483303502821619;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10476188826586924;  // std dev = 0.147, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09242539698710409;  // std dev = 3.80e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3249173198500626;  // std dev = 0.035, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1594222206543387;  // std dev = 0.009, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2580469779006176;  // std dev = 0.030, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13715624519303296;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.08495905589264856;  // std dev = 3.94e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.22174261930461364;  // std dev = 0.474, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08495905589264871;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.078278008502458;  // std dev = 0.016, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21179068105919271;  // std dev = 0.027, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1252448392003119;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07299461432602726;  // std dev = 0.009, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17858889497830974;  // std dev = 0.023, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11215470127561192;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1538768661738662;  // std dev = 0.021, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10024187860873461;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06852577881445705;  // std dev = 0.048, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06363128961698415;  // std dev = 0.017, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13489218315082338;  // std dev = 0.019, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09118116056255454;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076482
   Precision = 0.743929 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.853165


Total learning time: 3.1957497596740723 seconds
Total inference time: 2.884 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067656
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total scoring time: 1.461 seconds
Parameter learned model CLL: -0.067656


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(B)', 'false': 'female(A)'}, {'true': [6.99e-08, 71, 0], 'false,true': [0.276, 1, 11], 'false,false': [0.167, 1, 34]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 91, 0], 'false,true': [0.031, 0, 45], 'false,false': [0.009, 3, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [7.45e-08, 91, 0], 'false,true': [0.039, 0, 45], 'false,false': [0.013, 8, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.039, 0, 45], 'true,false': [0.009, 5, 0], 'false': [0.147, 82, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [3.8e-08, 81, 0], 'false,true': [0.035, 0, 45], 'false,false': [0.009, 7, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'false': 'actor(A)', 'false,false': 'movie(D, A), movie(D, B)'}, {'true,true': [0.03, 0, 45], 'true,false': [0.007, 5, 0], 'false,true': [3.94e-08, 77, 0], 'false,false,true': [0.474, 4, 0], 'false,false,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.016, 92, 0], 'false,true': [0.027, 0, 45], 'false,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.009, 84, 0], 'false,true': [0.023, 0, 45], 'false,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.021, 0, 45], 'true,false': [0.004, 4, 0], 'false': [0.048, 96, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.017, 88, 0], 'false,true': [0.019, 0, 45], 'false,false': [0.005, 6, 0]}]]
[{'': [6.880255363874209e-17, 0.04074241738343243], 'false': [0.07638888888888877, 0.027755102040817953]}, {'': [-1.4640303621430636e-17, 0.058503263187175726], 'false': [2.145283200631651e-05, 2.5812231024121186e-05]}, {'': [6.100126508929432e-17, 0.07886016746532204], 'false': [3.3377531797521935e-05, 2.0619268141203184e-05]}, {'': [0.033358989295757445, 0.0002638800759325024], 'true': [3.315678387032506e-05, 1.6222016531319826e-05]}, {'': [1.7818394222379055e-17, 0.027352478046970993], 'false': [2.690411486465649e-05, 1.0813197751690412e-05]}, {'': [0.014076235736633587, 0.0034804006764350705], 'true': [2.057458412502279e-05, 1.0157319962036949e-05], 'false': [2.0185873175002847e-17, 0.032742050634431294], 'false,false': [0.056129229659025066, 0.0]}, {'': [2.7581318481206334e-06, 0.011805491833380484], 'false': [1.568189156516316e-05, -2.3129646346357427e-18]}, {'': [8.992936094806161e-07, 0.007618784374635692], 'false': [1.2132095551094697e-05, 0.0]}, {'': [0.004850362171597671, 2.3972100809821716e-05], 'true': [9.570131184578735e-06, 4.473845738539595e-06]}, {'': [3.2016140700158204e-06, 0.005312769811373219], 'false': [7.696222782395248e-06, 4.506957203943608e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(B).;true;true
1;;workedunder(A, B) :- actor(B).;true;true
1;false;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(B).;true;true
2;false;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(B).;true;true
4;false;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
5;false;actor(A).;true;true
5;false,false;movie(D, A), movie(D, B).;true;true
6;;workedunder(A, B) :- actor(B).;true;true
6;false;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(B).;true;true
7;false;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- actor(B).;true;true
9;false;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048766;  // std dev = 7.88e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.12544463852839147;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360624;  // std dev = 5.87e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783615;  // std dev = 5.96e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 4.34e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.08197696022815311;  // std dev = 0.293, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07302928837866844;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0682370549004355;  // std dev = 3.87e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06402424448594307;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069086
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.219022035598755 seconds
Total inference time: 2.7 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064868
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.38 seconds
Refined model CLL: -0.064868


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069086
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.255771795272828 seconds
Total inference time: 2.7 seconds
AUC ROC: 1.0
Total revision time: 9.255771795272828
Best scored revision CLL: -0.064868


Dataset: 4_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:04:06
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069086, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.255771795272828, 'Inference time': 2.7, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076482, 'Precision': [0.743929, 0.5], 'Recall': 1.0, 'F1': 0.853165, 'Learning time': 3.1957497596740723, 'Inference time': 2.884}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.94e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839147;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.11231637819360628;  // std dev = 4.71e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1015963294878362;  // std dev = 5.37e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09691569844343784;  // std dev = 0.298, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08485612566100725;  // std dev = 3.49e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07849422642903847;  // std dev = 2.36e-05, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07300133061072804;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06821212378285305;  // std dev = 3.62e-05, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06400266440670006;  // std dev = 1.05e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( female(A) )
%   | then return 0.11749045750050806;  // std dev = 0.055, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.12834420514829578;  // std dev = 0.195, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070348
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.2516660690307617 seconds
Total inference time: 2.881 seconds
AUC ROC: 1.0


Dataset: 4_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:04:12
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070348, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.2516660690307617, 'Inference time': 2.881}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos  examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.16e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( female(A) )
%   | then return 0.8164822684328453;  // std dev = 0.200, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.8146706742299468;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283915;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( female(A) )
%   | then return 0.7278056532693119;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.6846861293705284;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 7.15e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else return 0.5689684194263703;  // std dev = 0.037, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42769699736398636;  // std dev = 0.037, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.5732806198681213;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10629416154908435;  // std dev = 0.463, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09229694563967233;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32763523680435;  // std dev = 0.033, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.4309532617432749;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25989754337981774;  // std dev = 0.029, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.32637850337744395;  // std dev = 0.012, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.08872022633484611;  // std dev = 0.346, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07820974768339695;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2130940592002535;  // std dev = 0.025, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2633752026784088;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07275412496065582;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( female(A) )
%   | then return 0.15990020349498815;  // std dev = 0.079, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.18292583660323114;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15567989551199932;  // std dev = 0.010, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.24354923434840178;  // std dev = 0.005, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(A) )
%   | then return -0.06799605949513234;  // std dev = 2.98e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( female(B) )
%   | | then return -0.06799605949513238;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1922618672783521;  // std dev = 0.556, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13629527127299096;  // std dev = 0.009, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.20176534523418932;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06668212905806435;  // std dev = 0.283, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.088643
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 3.5269570350646973 seconds
Total inference time: 2.754 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070319
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.45 seconds
Parameter learned model CLL: -0.070319


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(B)', 'false': 'female(A)'}, {'true': [8.16e-08, 90, 0], 'false,true': [0.2, 1, 23], 'false,false': [0.204, 1, 22]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'female(A)'}, {'true': [0.0, 78, 0], 'false,true': [0.0, 0, 23], 'false,false': [0.204, 1, 22]}], ['workedunder(A, B)', {'': 'actor(B)'}, {'true': [7.15e-08, 87, 0], 'false': [0.037, 0, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.037, 0, 45], 'true,false': [0.012, 5, 0], 'false': [0.463, 99, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 97, 0], 'false,true': [0.033, 0, 45], 'false,false': [0.012, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.029, 0, 45], 'true,false': [0.012, 8, 0], 'false': [0.346, 90, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 86, 0], 'false,true': [0.025, 0, 45], 'false,false': [0.008, 4, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'female(A)'}, {'true': [0.0, 79, 0], 'false,true': [0.079, 1, 23], 'false,false': [0.0, 0, 22]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'false': 'actor(A)', 'false,false': 'female(B)'}, {'true,true': [0.01, 0, 45], 'true,false': [0.005, 7, 0], 'false,true': [2.98e-08, 74, 0], 'false,false,true': [0.0, 4, 0], 'false,false,false': [0.556, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.009, 0, 45], 'true,false': [0.004, 4, 0], 'false': [0.283, 89, 0]}]]
[{'': [7.401486830834377e-17, 0.04074241738343243], 'false': [0.039930555555556024, 0.04158790170132359]}, {'': [-2.5620531337503614e-17, 0.02125877418597641], 'false': [-7.723290606088045e-17, 0.04158790170132266]}, {'': [5.870144727903127e-17, 3.0333041651747155e-05]}, {'': [0.09020616278472411, 0.0021628233554176696], 'true': [3.022513368560927e-05, 2.903046437006118e-05]}, {'': [-5.722799096005961e-18, 0.05181603287556061], 'false': [2.448561080797952e-05, 2.9099142468136386e-05]}, {'': [0.04406956332248267, 0.001333110407390397], 'true': [1.8670433388005373e-05, 1.843704893214615e-05]}, {'': [-6.454785026890445e-18, 0.0170338125706856], 'false': [1.4190068134981951e-05, 1.4094536953931924e-05]}, {'': [-7.729400804352355e-18, 0.003361970622029292], 'false': [0.006190212782930536, 0.0]}, {'': [0.01856961207286387, 0.0045951635240576464], 'true': [2.0722164280704034e-06, 3.994911862354693e-06], 'false': [1.200241107702872e-17, 0.03812837280003979], 'false,false': [0.0, 0.06176796393606447]}, {'': [0.008569584031369856, 0.0008977990641015056], 'true': [1.6620907305167322e-06, 3.1115881610824236e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(B).;true;true
1;;workedunder(A, B) :- actor(B).;true;true
1;false;female(A).;true;true
2;;workedunder(A, B) :- actor(B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(B).;true;true
4;false;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(B).;true;true
6;false;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(B).;true;true
7;false;female(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
8;false;actor(A).;true;true
8;false,false;female(B).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.16e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839144;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11231637819360622;  // std dev = 7.15e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10159632948783626;  // std dev = 4.21e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926103;  // std dev = 3.16e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08518475138839679;  // std dev = 3.16e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109161;  // std dev = 4.94e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( female(A) )
%   | then return 0.1977354460340511;  // std dev = 0.058, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.19721273866020397;  // std dev = 0.059, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17889288716683902;  // std dev = 0.000257, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09434151053928619;  // std dev = 3.87e-05, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.07324622576333707;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else return -0.22925768592965803;  // std dev = 0.331, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.14404332405421302;  // std dev = 0.048, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.1541400648197646;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.06851956875929913;  // std dev = 0.008, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06418627825466039;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13566985512400043;  // std dev = 0.004, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09892319374602809;  // std dev = 0.000740, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071958
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.2582688331604004 seconds
Total inference time: 3.076 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065841
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.519 seconds
Refined model CLL: -0.065841


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071958
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.754225868225097 seconds
Total inference time: 3.076 seconds
AUC ROC: 1.0
Total revision time: 9.754225868225097
Best scored revision CLL: -0.065841


Dataset: 4_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:04:32
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.071958, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.754225868225097, 'Inference time': 3.076, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.088643, 'Precision': [0.742291, 0.5], 'Recall': 1.0, 'F1': 0.852086, 'Learning time': 3.5269570350646973, 'Inference time': 2.754}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.14185106490048766;  // std dev = 7.45e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839147;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.28052658778904555;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 6.32e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.22751829855267258;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783624;  // std dev = 4.71e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.19001757973666858;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.16247682877816091;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09231873526765882;  // std dev = 0.026, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14156033701618326;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08792209475716446;  // std dev = 0.330, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12521447261805543;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07835685878333606;  // std dev = 0.022, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0731143126737545;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1121301248458317;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.14169226434758175;  // std dev = 0.052, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.06807672959282077;  // std dev = 0.021, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06410402714953811;  // std dev = 2.58e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13463658371906762;  // std dev = 0.004, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11538978148806678;  // std dev = 0.001, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072097
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.2007060050964355 seconds
Total inference time: 3.017 seconds
AUC ROC: 1.0


Dataset: 4_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:04:39
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072097, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.2007060050964355, 'Inference time': 3.017}


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos  examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.69e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( female(A) )
%   | then return 0.822434649385226;  // std dev = 0.186, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.8581489350995117;  // std dev = 1.79e-07, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7229214324831331;  // std dev = 0.027, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.27575895482010776;  // std dev = 0.008, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360618;  // std dev = 9.19e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5587597968977284;  // std dev = 0.033, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.22461805615725144;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783633;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( female(A) )
%   | then return 0.40275555892923454;  // std dev = 0.113, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.39561568979639006;  // std dev = 0.109, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926086;  // std dev = 7.07e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3270333430071663;  // std dev = 0.024, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.25769286754729;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25948380360598594;  // std dev = 0.021, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.20868343292984137;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0851847513883968;  // std dev = 5.37e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21280034972684345;  // std dev = 0.018, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.17770420439013557;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07972740461445897;  // std dev = 0.101, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07318172066724919;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( female(A) )
%   | then return 0.18150427985003248;  // std dev = 3.49e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.16619840075754094;  // std dev = 0.060, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06837051238518584;  // std dev = 4.94e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1551785042714125;  // std dev = 0.007, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.17815399075482083;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06414201822704138;  // std dev = 0.000, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   else if ( female(A) )
%   | then return 0.1263866620117439;  // std dev = 0.054, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.13515357122548236;  // std dev = 2.79e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096855
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 3.593899965286255 seconds
Total inference time: 2.57 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069343
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.597 seconds
Parameter learned model CLL: -0.069343


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(B)', 'false': 'female(A)'}, {'true': [8.69e-08, 105, 0], 'false,true': [0.186, 1, 27], 'false,false': [1.79e-07, 0, 29]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 95, 0], 'false,true': [0.027, 0, 56], 'false,false': [0.008, 6, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [9.19e-08, 118, 0], 'false,true': [0.033, 0, 56], 'false,false': [0.007, 5, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'female(A)'}, {'true': [0.0, 111, 0], 'false,true': [0.113, 1, 27], 'false,false': [0.109, 1, 29]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [7.07e-08, 115, 0], 'false,true': [0.024, 0, 56], 'false,false': [0.006, 5, 0]}], ['workedunder(A, B)', {'': 'director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.021, 0, 56], 'true,false': [0.0, 4, 0], 'false': [5.37e-08, 92, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.018, 0, 56], 'true,false': [0.003, 3, 0], 'false': [0.101, 107, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'female(A)'}, {'true': [0.0, 100, 0], 'false,true': [3.49e-08, 0, 27], 'false,false': [0.06, 1, 29]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [4.94e-08, 115, 0], 'false,true': [0.007, 0, 56], 'false,false': [0.002, 6, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'female(A)'}, {'true': [0.0, 133, 0], 'false,true': [0.054, 1, 27], 'false,false': [2.79e-08, 0, 29]}]]
[{'': [7.190015778524824e-17, 0.017236072637734554], 'false': [0.03443877551020513, 1.1025663141105003e-15]}, {'': [-1.402386978473882e-17, 0.08719104290091505], 'false': [1.2769498892506448e-05, 1.136516206322787e-05]}, {'': [7.150588972162025e-17, 0.04619715098392105], 'false': [1.9354451766468677e-05, 9.321376943594029e-06]}, {'': [-8.001607384685813e-18, 0.012346859831331007], 'false': [0.012826857662541593, 0.011874251916317894]}, {'': [4.344350965924526e-17, 0.02573750327920577], 'false': [9.877449560491414e-06, 7.150057708704693e-06]}, {'': [0.013644929972482107, 3.137586808723268e-17], 'true': [7.530403286485196e-06, 0.0]}, {'': [0.00736528604125167, 9.579593127915377e-05], 'true': [5.723742508424921e-06, 3.897877312517006e-06]}, {'': [-1.7763568394002505e-17, 0.0019387819488141272], 'false': [4.5231308410654523e-17, 0.003572715733633902]}, {'': [2.1239049166742126e-17, 0.009712820110598727], 'false': [7.557167654318306e-07, 8.363004108807859e-07]}, {'': [-1.8364591384777024e-17, 0.0014332322369706096], 'false': [0.002878547791868431, 2.6798486801296883e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(B).;true;true
0;false;female(A).;true;true
1;;workedunder(A, B) :- actor(B).;true;true
1;false;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(B).;true;true
2;false;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(B).;true;true
4;;workedunder(A, B) :- actor(B).;true;true
4;false;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(B).;true;true
7;false;female(A).;true;true
8;;workedunder(A, B) :- actor(B).;true;true
8;false;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- actor(B).;true;true
9;false;female(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.43e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839144;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360617;  // std dev = 9.31e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else if ( female(A) )
%   | then return 0.5315206219270028;  // std dev = 0.124, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.5331103429149548;  // std dev = 0.120, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783637;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4231229966284099;  // std dev = 0.001, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.17726621792313166;  // std dev = 0.000284, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926094;  // std dev = 5.37e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32451721130806;  // std dev = 0.001, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15289318498259288;  // std dev = 0.000226, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839678;  // std dev = 5.05e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( female(A) )
%   | then return 0.2579246734849008;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.23234194090414914;  // std dev = 0.096, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2137879741684377;  // std dev = 0.015, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.16603787622613547;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07946601834558821;  // std dev = 0.084, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07319945147123558;  // std dev = 4.71e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1800476209829899;  // std dev = 0.013, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14356470907176921;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.14329984781643362;  // std dev = 0.052, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.14709500790589564;  // std dev = 0.051, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.06899976737111059;  // std dev = 0.067, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.12563292347751107;  // std dev = 0.052, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.1380423708544508;  // std dev = 2.79e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( actor(A) )
%   | then return -0.06411887541832682;  // std dev = 0.000, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return -0.30593377011333595;  // std dev = 0.592, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0641188754183268;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.088053
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 4.304584264755249 seconds
Total inference time: 2.835 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068093
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.801 seconds
Refined model CLL: -0.068093


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.088053
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 11.296484230041504 seconds
Total inference time: 2.835 seconds
AUC ROC: 1.0
Total revision time: 11.296484230041504
Best scored revision CLL: -0.068093


Dataset: 4_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:04:59
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.088053, 'Precision': [0.735892, 0.5], 'Recall': 1.0, 'F1': 0.847854, 'Learning time': 11.296484230041504, 'Inference time': 2.835, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.096855, 'Precision': [0.735892, 0.5], 'Recall': 1.0, 'F1': 0.847854, 'Learning time': 3.593899965286255, 'Inference time': 2.57}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.69e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( female(A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.6913094771863096;  // std dev = 0.152, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360617;  // std dev = 9.54e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( female(A) )
%   | then return 0.5274062676284647;  // std dev = 0.145, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.536145926220138;  // std dev = 0.141, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4267893492763922;  // std dev = 0.018, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.3286282882167381;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10648511421485624;  // std dev = 0.467, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09228094921073392;  // std dev = 6.58e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3270093519941592;  // std dev = 0.016, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.26164119342872927;  // std dev = 0.004, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08483640047187184;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( female(A) )
%   | then return 0.24059815369907686;  // std dev = 0.088, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.21740036191908033;  // std dev = 0.175, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07847754979176735;  // std dev = 6.99e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21802288770824346;  // std dev = 0.027, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2570065790204333;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1657759568069263;  // std dev = 0.073, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.1862101498634008;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( actor(A) )
%   | then return -0.0729866042440499;  // std dev = 5.87e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return -0.2884620736341674;  // std dev = 0.528, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07298660424405003;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06778006831352885;  // std dev = 0.025, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( female(A) )
%   | then return 0.1566689884108085;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.1339040345440747;  // std dev = 0.098, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06401639320251057;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0.13986249609130813;  // std dev = 0.020, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( actor(B) )
%   | then return -0.06401639320251051;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return -0.2686340558177178;  // std dev = 0.012, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.09584
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 3.8198418617248535 seconds
Total inference time: 2.634 seconds
AUC ROC: 1.0


Dataset: 4_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:05:06
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.09584, 'Precision': [0.735892, 0.5], 'Recall': 1.0, 'F1': 0.847854, 'Learning time': 3.8198418617248535, 'Inference time': 2.634}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos  examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004877;  // std dev = 5.58e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839108;  // std dev = 7.60e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.11231637819360624;  // std dev = 7.88e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783663;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926103;  // std dev = 2.98e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839678;  // std dev = 3.65e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109158;  // std dev = 5.77e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333711;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( female(A) )
%   | then return 0.16517541567343866;  // std dev = 0.053, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.17067745355274894;  // std dev = 0.247, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1538235157174897;  // std dev = 0.003, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08556618160983724;  // std dev = 0.000351, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then return -0.06842697784420267;  // std dev = 3.57e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.18504596525348233;  // std dev = 0.522, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07130741052639263;  // std dev = 0.016, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06392390831099028;  // std dev = 0.013, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.134849353934558;  // std dev = 0.002, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07897068823001936;  // std dev = 0.000327, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075514
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 3.5171430110931396 seconds
Total inference time: 2.626 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065139
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.677 seconds
Parameter learned model CLL: -0.065139


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [5.58e-08, 117, 0], 'false,true': [0.0, 0, 58], 'false,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [7.6e-08, 99, 0], 'false,true': [0.0, 0, 58], 'false,false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [1.19e-07, 0, 58], 'true,false': [0.0, 9, 0], 'false': [7.88e-08, 115, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 96, 0], 'false,true': [0.0, 0, 58], 'false,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 58], 'true,false': [0.0, 4, 0], 'false': [2.98e-08, 98, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [3.65e-08, 90, 0], 'false,true': [0.0, 0, 58], 'false,false': [5.27e-09, 11, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [5.77e-08, 104, 0], 'false,true': [0.0, 0, 58], 'false,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'female(A)'}, {'true': [0.0, 116, 0], 'false,true': [0.053, 1, 20], 'false,false': [0.247, 1, 38]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'false': 'actor(A)', 'false,false': 'movie(D, A), movie(D, B)'}, {'true,true': [0.003, 0, 58], 'true,false': [0.000351, 3, 0], 'false,true': [3.57e-08, 80, 0], 'false,false,true': [0.522, 5, 0], 'false,false,false': [0.016, 6, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.013, 102, 0], 'false,true': [0.002, 0, 58], 'false,false': [0.000327, 3, 0]}]]
[{'': [2.6569439905559303e-17, 0.08496093749999956], 'false': [-3.675221047035001e-16, -6.938893903907228e-18]}, {'': [5.8314744727786e-17, 0.08301375796543166], 'false': [-1.2250736823450003e-16, 0.0]}, {'': [0.05183955851928754, 5.406303424261632e-17], 'true': [2.4501473646900006e-16, -1.5419764230904951e-18]}, {'': [-4.972873964466847e-17, 0.012601093207619572], 'false': [-3.3689526264487507e-16, -1.1564823173178713e-18]}, {'': [0.010314593401574014, 9.063045098980869e-18], 'true': [-1.5313421029312505e-16, 0.0]}, {'': [1.4802973661668754e-17, 0.015523578989371775], 'false': [-3.062684205862501e-17, 2.523234146875356e-18]}, {'': [3.202566417187951e-17, 0.0070731799132398646], 'false': [-2.2970131543968756e-17, -1.1564823173178713e-18]}, {'': [-7.656710514656252e-18, 0.002019414330219523], 'false': [0.0028422439552702977, 0.0015657568771340598]}, {'': [0.0026799006419664993, 0.0036960150522588834], 'false': [1.5959455978986624e-17, 0.02795726569261786], 'false,false': [0.054399952897462876, 4.148446218314091e-05], 'true': [1.1600702490575788e-07, 4.112271917433574e-08]}, {'': [1.6685296710035568e-06, 0.002137985511220804], 'false': [9.32022100033912e-08, 3.564368366085202e-08]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(B).;true;true
0;false;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- actor(B).;true;true
1;false;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(B).;true;true
3;false;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(B).;true;true
5;false;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(B).;true;true
6;false;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(B).;true;true
7;false;female(A).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true
8;false;actor(A).;true;true
8;false,false;movie(D, A), movie(D, B).;true;true
9;;workedunder(A, B) :- actor(B).;true;true
9;false;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.43e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283913;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 7.60e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1015963294878362;  // std dev = 5.27e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926105;  // std dev = 2.36e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.08518475138839683;  // std dev = 5.27e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109161;  // std dev = 5.67e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333707;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06842697784420267;  // std dev = 4.59e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0765
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 3.417801856994629 seconds
Total inference time: 2.661 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064776
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.704 seconds
Refined model CLL: -0.064776


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0765
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 10.315944868087769 seconds
Total inference time: 2.661 seconds
AUC ROC: 1.0
Total revision time: 10.315944868087769
Best scored revision CLL: -0.064776


Dataset: 4_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:05:26
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.0765, 'Precision': [0.736364, 0.5], 'Recall': 1.0, 'F1': 0.848168, 'Learning time': 10.315944868087769, 'Inference time': 2.661, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075514, 'Precision': [0.736364, 0.5], 'Recall': 1.0, 'F1': 0.848168, 'Learning time': 3.5171430110931396, 'Inference time': 2.626}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.16e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839136;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.5331103429149542;  // std dev = 0.120, 60.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   else return -0.1123163781936062;  // std dev = 8.30e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42293590757722926;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.17738214267363106;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926083;  // std dev = 7.45e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32439019572268296;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.15296051391952314;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 6.75e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25768059650966313;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.13417614713942355;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109155;  // std dev = 6.91e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( female(A) )
%   | then return 0.1957724468015317;  // std dev = 0.070, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.2030442504265098;  // std dev = 0.052, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 4.83e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.18001109840958443;  // std dev = 0.004, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14215879265263504;  // std dev = 0.001, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420265;  // std dev = 5.67e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1549513376517788;  // std dev = 0.003, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1257280872735315;  // std dev = 0.000714, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13572805232930116;  // std dev = 0.003, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11220731119980888;  // std dev = 0.000592, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then return -0.06419184008202626;  // std dev = 2.36e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( female(B) )
%   | | then return -0.06419184008202626;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.20500457699024444;  // std dev = 0.632, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080292
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 3.428997755050659 seconds
Total inference time: 2.541 seconds
AUC ROC: 1.0


Dataset: 4_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:05:32
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.080292, 'Precision': [0.736364, 0.5], 'Recall': 1.0, 'F1': 0.848168, 'Learning time': 3.428997755050659, 'Inference time': 2.541}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos  examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.83e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.14185106490048804;  // std dev = 0.000, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839155;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.12544463852839186;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1123163781936063;  // std dev = 3.49e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.11231637819360683;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783619;  // std dev = 4.83e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.10159632948783646;  // std dev = 0.000, 319.000 (wgt'ed) examples reached here.  /* #neg=319 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.09269127618926065;  // std dev = 1.10e-07, 319.000 (wgt'ed) examples reached here.  /* #neg=319 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.08518475138839679;  // std dev = 8.16e-08, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.07877675473109146;  // std dev = 6.32e-08, 274.000 (wgt'ed) examples reached here.  /* #neg=274 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 1.05e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.07324622576333681;  // std dev = 1.10e-07, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0684269778442027;  // std dev = 1.58e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.06842697784420272;  // std dev = 0.000, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.06419184008202625;  // std dev = 0.000, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.387527227401733 seconds
Total inference time: 2.865 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065435
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.994 seconds
Parameter learned model CLL: -0.065435


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [1.09e-06, 0, 178], 'true,false': [6.83e-08, 68, 0], 'false': [0.0, 292, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 178], 'true,false': [0.0, 50, 0], 'false': [0.0, 299, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [5.9e-07, 0, 178], 'true,false': [3.49e-08, 53, 0], 'false': [0.0, 299, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3.77e-07, 0, 178], 'true,false': [4.83e-08, 65, 0], 'false': [0.0, 319, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3.58e-07, 0, 178], 'true,false': [0.0, 57, 0], 'false': [1.1e-07, 319, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3.63e-07, 0, 178], 'true,false': [1.83e-08, 55, 0], 'false': [8.16e-08, 297, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3e-07, 0, 178], 'true,false': [0.0, 47, 0], 'false': [6.32e-08, 274, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 178], 'true,false': [1.05e-08, 49, 0], 'false': [1.1e-07, 298, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 178], 'true,false': [1.58e-08, 53, 0], 'false': [0.0, 283, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [7.6e-08, 0, 178], 'true,false': [0.0, 45, 0], 'false': [0.0, 285, 0]}]]
[{'': [0.20001321964439722, -1.0037632825378127e-16], 'true': [6.706246045376226e-15, 6.857259857978908e-17]}, {'': [0.12222202910395347, -6.53509205130527e-17], 'true': [-3.193450497798203e-15, -3.3306690738754695e-17]}, {'': [0.07881562227933359, -9.208538799566516e-17], 'true': [1.9559884299013994e-15, 2.3042364662031552e-17]}, {'': [0.05280067292074149, -7.517497596207956e-17], 'true': [7.983626244495507e-16, 3.586874387250506e-17]}, {'': [0.03139833656387848, 3.758748798103978e-17], 'true': [7.185263620045957e-16, -1.947759692324836e-18]}, {'': [0.020890085060692638, 2.2428747972225384e-17], 'true': [7.384854276158345e-16, 6.0557619525008536e-18]}, {'': [0.013757775963642369, 1.458687185638892e-17], 'true': [5.03966406683779e-16, -1.1810883240693154e-18]}, {'': [0.010608019594829774, 4.0236270691113053e-17], 'true': [-1.6965205769552953e-16, 2.2657612747452172e-18]}, {'': [0.008648237960451754, -7.061489202562832e-18], 'true': [-4.490789762528723e-17, 4.7132109535973624e-18]}, {'': [0.006327397791244252, -9.349246523159213e-18], 'true': [3.2433481618263e-17, -1.8503717077085942e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- actor(A), director(B).;true;true
9;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 5.05e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.14185106490048813;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.12544463852839186;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360629;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.11231637819360688;  // std dev = 0.000, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783627;  // std dev = 2.36e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.10159632948783655;  // std dev = 0.000, 271.000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.09269127618926062;  // std dev = 3.65e-08, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.67e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.08518475138839679;  // std dev = 8.43e-08, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109177;  // std dev = 1.29e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.07877675473109146;  // std dev = 6.32e-08, 278.000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 1.05e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.07324622576333686;  // std dev = 1.12e-07, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.24e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.06842697784420286;  // std dev = 0.000, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.06419184008202625;  // std dev = 0.000, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.559201002120972 seconds
Total inference time: 2.849 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065435
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.954 seconds
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.894728229522705 seconds
Total inference time: 2.865 seconds
AUC ROC: 1.0
Total revision time: 14.894728229522705
Best scored revision CLL: -0.065435


Dataset: 4_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:05:57
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063555, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 14.894728229522705, 'Inference time': 2.865, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063555, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.387527227401733, 'Inference time': 2.865}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 4.47e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.14185106490048807;  // std dev = 0.000, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.12544463852839188;  // std dev = 0.000, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360628;  // std dev = 4.34e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.11231637819360682;  // std dev = 0.000, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783626;  // std dev = 2.58e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.10159632948783653;  // std dev = 0.000, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926103;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.09269127618926061;  // std dev = 4.21e-08, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0851847513883968;  // std dev = 1.83e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.08518475138839678;  // std dev = 8.43e-08, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109177;  // std dev = 1.05e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.07877675473109146;  // std dev = 5.77e-08, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 7.45e-09, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.07324622576333689;  // std dev = 1.10e-07, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.11e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.06842697784420289;  // std dev = 0.000, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.06419184008202625;  // std dev = 0.000, 313.000 (wgt'ed) examples reached here.  /* #neg=313 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.416960000991821 seconds
Total inference time: 2.825 seconds
AUC ROC: 1.0


Dataset: 4_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:06:06
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063555, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.416960000991821, 'Inference time': 2.825}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos  examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.74e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.1254446385283915;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360622;  // std dev = 7.45e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.388674144511302;  // std dev = 0.119, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   else return -0.10159632948783623;  // std dev = 5.16e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32548322033124727;  // std dev = 0.018, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1438502542526166;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09543090958027368;  // std dev = 0.174, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08497149887196835;  // std dev = 3.80e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25842733046123567;  // std dev = 0.016, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12622154627538582;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2120556226822403;  // std dev = 0.014, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11367507217563029;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07852453151611186;  // std dev = 0.004, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17878082126032935;  // std dev = 0.012, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10382904667547349;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07305851599455082;  // std dev = 0.003, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1540208799297552;  // std dev = 0.011, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09341001935413348;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06822712454497017;  // std dev = 0.004, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06407860312716726;  // std dev = 3.87e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13500353106520532;  // std dev = 0.010, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08631521256868466;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067294
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.2141928672790527 seconds
Total inference time: 3.002 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065365
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.45 seconds
Parameter learned model CLL: -0.065365


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [7.74e-08, 81, 0], 'false,true': [2.23e-07, 0, 45], 'false,false': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 45], 'true,false': [0.0, 7, 0], 'false': [0.0, 77, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 45], 'true,false': [2.63e-09, 3, 0], 'false': [7.45e-08, 97, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'female(A)'}, {'true,true': [4.21e-08, 0, 11], 'true,false': [0.119, 2, 34], 'false': [5.16e-08, 94, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.018, 0, 45], 'true,false': [0.003, 4, 0], 'false': [0.174, 91, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [3.8e-08, 76, 0], 'false,true': [0.016, 0, 45], 'false,false': [2.63e-09, 3, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.014, 0, 45], 'true,false': [0.003, 4, 0], 'false': [0.004, 85, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.012, 0, 45], 'true,false': [0.003, 6, 0], 'false': [0.003, 82, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.011, 0, 45], 'true,false': [0.002, 5, 0], 'false': [0.004, 77, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [3.87e-08, 93, 0], 'false,true': [0.01, 0, 45], 'false,false': [0.003, 7, 0]}]]
[{'': [7.401486830834377e-17, 0.11649408284023735], 'false': [1.105288700071267e-15, -7.93016446160826e-18]}, {'': [0.0831635545216455, -2.5953265510717945e-17], 'true': [-9.473903143468002e-16, -1.982541115402065e-18]}, {'': [0.026121113751917464, 5.722799096005961e-17], 'true': [-3.947459643111668e-17, 2.3129646346357427e-18]}, {'': [0.01097906709828568, 2.834611977766357e-17], 'true': [1.6148698540002277e-16, 0.014139125745607975]}, {'': [0.016520621861814484, 0.00033399880471323334], 'true': [7.365471215021241e-06, 2.3895943579779755e-06]}, {'': [1.8990657000167152e-17, 0.008674475266058848], 'false': [5.6012187079229e-06, 2.3129646346357427e-18]}, {'': [0.007958257731345205, 1.980186082609571e-07], 'true': [4.252010079596068e-06, 1.6006513668224975e-06]}, {'': [0.008293911564855318, 9.08312876159946e-08], 'true': [3.279720336138128e-06, 1.5879387268967944e-06]}, {'': [0.005512404438087812, 1.6820160072409513e-07], 'true': [2.581295065374868e-06, 9.67796899441209e-07]}, {'': [1.6116140680042596e-17, 0.00570807593031856], 'false': [2.072211583543155e-06, 1.2710470207812273e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(B).;true;true
0;false;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;female(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(B).;true;true
5;false;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- actor(B).;true;true
9;false;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.60e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6725335205032132;  // std dev = 0.194, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   else return -0.12544463852839158;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5640998419850813;  // std dev = 0.033, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.21937409961582466;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1139669681763595;  // std dev = 0.143, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42403648261450777;  // std dev = 0.033, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.18698060192373026;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10322416464495482;  // std dev = 0.132, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3251461643698355;  // std dev = 0.030, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15978095376907142;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09241592986002158;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2582008967053958;  // std dev = 0.026, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13829806887686422;  // std dev = 0.005, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.08495101787617611;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21189794942821216;  // std dev = 0.022, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1219865340506073;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07857601492915417;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17866662855448945;  // std dev = 0.020, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10951177493941186;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07307205671163512;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15393520897931795;  // std dev = 0.017, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0998147146720653;  // std dev = 0.004, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06965236886444344;  // std dev = 0.097, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1349373005931382;  // std dev = 0.016, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09126820109041485;  // std dev = 0.004, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06397473526041689;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066767
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.1798908710479736 seconds
Total inference time: 3.039 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065406
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.409 seconds
Refined model CLL: -0.065406


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067294
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.253083738327026 seconds
Total inference time: 3.002 seconds
AUC ROC: 1.0
Total revision time: 9.253083738327026
Best scored revision CLL: -0.065365


Dataset: 4_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:06:25
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067294, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.253083738327026, 'Inference time': 3.002, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067294, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.2141928672790527, 'Inference time': 3.002}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048768;  // std dev = 6.66e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839147;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360625;  // std dev = 6.14e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783621;  // std dev = 4.71e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 3.16e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( female(A) )
%   | then return 0.2551722425694894;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.23626352068294032;  // std dev = 0.078, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21213884941141178;  // std dev = 0.009, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10585177186871997;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08131631769344509;  // std dev = 0.215, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.16714964877394123;  // std dev = 0.055, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   else return -0.0733032659645246;  // std dev = 0.025, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15559632875091006;  // std dev = 0.007, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11141797521622386;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06852280709029782;  // std dev = 0.023, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13623014012460152;  // std dev = 0.006, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10120092102879903;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06663954812015337;  // std dev = 0.186, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068788
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.1064698696136475 seconds
Total inference time: 2.988 seconds
AUC ROC: 1.0


Dataset: 4_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:06:31
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068788, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.1064698696136475, 'Inference time': 2.988}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos  examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.30e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839147;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.5275463194571225;  // std dev = 0.133, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.5263367491402023;  // std dev = 0.136, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.11706376655160783;  // std dev = 0.330, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10116383274307483;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42443890881096524;  // std dev = 0.000991, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17645451283241312;  // std dev = 0.000144, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3053791139822798;  // std dev = 0.095, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.3047745900112317;  // std dev = 0.097, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.09709467222639272;  // std dev = 0.427, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2622900828227816;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.19592535576285391;  // std dev = 0.000391, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.08444643636768409;  // std dev = 0.006, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07819958345328276;  // std dev = 5.37e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21477326043133654;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.16695621754072043;  // std dev = 0.000206, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07274529940533016;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1807665183728385;  // std dev = 0.000901, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14495351943570994;  // std dev = 0.000294, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0679883280413038;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1555222767106358;  // std dev = 0.000799, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12794362870924517;  // std dev = 0.000165, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06380467795780474;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1361723816119077;  // std dev = 0.000716, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11423860847460823;  // std dev = 0.000170, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076194
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 3.3593971729278564 seconds
Total inference time: 2.717 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066592
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.418 seconds
Parameter learned model CLL: -0.066592


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [8.3e-08, 91, 0], 'false,true': [2.23e-07, 0, 45], 'false,false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 79, 0], 'false,true': [0.0, 0, 45], 'false,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'female(A)'}, {'true,true': [0.133, 1, 23], 'true,false': [0.136, 1, 22], 'false': [0.33, 70, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 85, 0], 'false,true': [0.000991, 0, 45], 'false,false': [0.000144, 3, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'female(A)'}, {'true,true': [0.095, 1, 23], 'true,false': [0.097, 1, 22], 'false': [0.427, 90, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.001, 0, 45], 'true,false': [0.000391, 8, 0], 'false': [0.006, 92, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [5.37e-08, 90, 0], 'false,true': [0.001, 0, 45], 'false,false': [0.000206, 3, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 89, 0], 'false,true': [0.000901, 0, 45], 'false,false': [0.000294, 7, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 76, 0], 'false,true': [0.000799, 0, 45], 'false,false': [0.000165, 3, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 77, 0], 'false,true': [0.000716, 0, 45], 'false,false': [0.00017, 7, 0]}]]
[{'': [7.564156871072495e-17, 0.12815948736205124], 'false': [1.105288700071267e-15, -6.938893903907228e-18]}, {'': [-2.5296220814244072e-17, 0.04182928783975578], 'false': [-9.473903143468002e-16, 0.0]}, {'': [0.0181629835776121, 0.0015551010392965612], 'true': [0.017801055297602637, 0.01853990077514756]}, {'': [-1.5673736818237504e-17, 0.021156636361984355], 'false': [2.181738499492288e-08, 6.8675795929692045e-09]}, {'': [0.009297067857001982, 0.0020213074733996758], 'true': [0.00910981753763553, 0.009492272882228165]}, {'': [0.026908572903627276, 3.4268720886810733e-07], 'true': [3.0788491400812747e-08, 1.914805549535492e-08]}, {'': [3.20731096002823e-17, 0.008538151386042947], 'false': [2.3388676753357788e-08, 1.4140767718810269e-08]}, {'': [-4.366045602458481e-18, 0.012359287264382431], 'false': [1.803464592479524e-08, 1.2382878948415308e-08]}, {'': [-8.034508730839949e-18, 0.004708192745892054], 'false': [1.4184653249513544e-08, 9.099930646979301e-09]}, {'': [-8.651088503572648e-18, 0.007304849214332281], 'false': [1.1378631232301157e-08, 4.130173199477584e-09]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(B).;true;true
0;false;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- actor(B).;true;true
1;false;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
3;;workedunder(A, B) :- actor(B).;true;true
3;false;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(B).;true;true
6;false;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(B).;true;true
7;false;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- actor(B).;true;true
8;false;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- actor(B).;true;true
9;false;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.74e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1272479170081665;  // std dev = 0.154, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.5275463194571225;  // std dev = 0.133, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.5263367491402023;  // std dev = 0.136, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.11213671443955438;  // std dev = 3.94e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10144823067153112;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42443890881096524;  // std dev = 0.000991, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17648381210626482;  // std dev = 0.000176, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0925672604410964;  // std dev = 4.08e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3254106600776191;  // std dev = 0.000890, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15220084480750481;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08507949029331541;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2583759398349642;  // std dev = 0.000777, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13361797906683173;  // std dev = 0.000121, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07868636140689052;  // std dev = 2.79e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21201822478923343;  // std dev = 0.000678, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11896229332126518;  // std dev = 0.000113, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07316780423971347;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17875270857579512;  // std dev = 0.000595, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10702482123653087;  // std dev = 0.000127, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0683583296591986;  // std dev = 2.79e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1539991036895927;  // std dev = 0.000528, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09722528782487483;  // std dev = 8.67e-05, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06413126828149271;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1349862205456134;  // std dev = 0.000474, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08898669247909628;  // std dev = 8.01e-05, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074136
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 3.2217469215393066 seconds
Total inference time: 2.741 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06586
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.37 seconds
Refined model CLL: -0.06586


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074136
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 9.369144094467163 seconds
Total inference time: 2.741 seconds
AUC ROC: 1.0
Total revision time: 9.369144094467163
Best scored revision CLL: -0.06586


Dataset: 4_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:06:50
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.074136, 'Precision': [0.742291, 0.5], 'Recall': 1.0, 'F1': 0.852086, 'Learning time': 9.369144094467163, 'Inference time': 2.741, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076194, 'Precision': [0.742291, 0.5], 'Recall': 1.0, 'F1': 0.852086, 'Learning time': 3.3593971729278564, 'Inference time': 2.717}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.45e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839144;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( female(A) )
%   | then return 0.6842684934301482;  // std dev = 0.169, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.6827378447875044;  // std dev = 0.172, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 7.15e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.564225933826104;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.22117933132209386;  // std dev = 0.000236, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783621;  // std dev = 5.05e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( female(A) )
%   | then return 0.39853640151513064;  // std dev = 0.122, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.39779979644085983;  // std dev = 0.124, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926107;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3309102288511016;  // std dev = 0.002, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2532489604268406;  // std dev = 0.000525, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 5.37e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.26211952489267293;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.20833587916756965;  // std dev = 0.000432, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0787767547310916;  // std dev = 5.77e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21465336607750557;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.175943294141102;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18067899022253905;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15186847307595905;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then return -0.07324622576333707;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333707;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.27937759675148044;  // std dev = 0.627, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.15531061693526646;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.14304604750262295;  // std dev = 0.059, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.06858397024865899;  // std dev = 0.055, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13684694919751955;  // std dev = 0.006, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.151857435787697;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.06418240999761574;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( female(B) )
%   | | then return -0.0641824099976157;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.18091572969806555;  // std dev = 0.639, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081807
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 3.4243030548095703 seconds
Total inference time: 2.974 seconds
AUC ROC: 1.0


Dataset: 4_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:06:57
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.081807, 'Precision': [0.742291, 0.5], 'Recall': 1.0, 'F1': 0.852086, 'Learning time': 3.4243030548095703, 'Inference time': 2.974}


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos  examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.74e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360618;  // std dev = 8.82e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783626;  // std dev = 4.21e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.0926912761892609;  // std dev = 6.14e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 6.32e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253562;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( actor(A) )
%   | then return -0.07877675473109162;  // std dev = 4.94e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else return -0.5019990896767387;  // std dev = 0.518, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07142875924846595;  // std dev = 0.069, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09540755620869844;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.0874852310575792;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06749835003647185;  // std dev = 0.050, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801079;  // std dev = 5.16e-08, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.0807485635055348;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.06435699894785968;  // std dev = 2.98e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else return -0.14046966997557772;  // std dev = 0.533, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071099
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 3.484980821609497 seconds
Total inference time: 2.953 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063595
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.669 seconds
Parameter learned model CLL: -0.063595


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [7.74e-08, 82, 0], 'false,true': [0.0, 0, 56], 'false,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 94, 0], 'false,true': [0.0, 0, 56], 'false,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [8.82e-08, 111, 0], 'false,true': [1.03e-07, 0, 56], 'false,false': [2.63e-09, 3, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [4.21e-08, 97, 0], 'false,true': [0.0, 0, 56], 'false,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 56], 'true,false': [0.0, 5, 0], 'false': [6.14e-08, 112, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [6.32e-08, 117, 0], 'false,true': [0.0, 0, 56], 'false,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'false': 'actor(A)'}, {'true': [0.0, 0, 56], 'false,true': [4.94e-08, 86, 0], 'false,false': [0.518, 3, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.069, 119, 0], 'false,true': [0.0, 0, 56], 'false,false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 56], 'true,false': [0.0, 5, 0], 'false': [0.05, 110, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'false': 'actor(A)'}, {'true,true': [5.16e-08, 0, 56], 'true,false': [0.0, 5, 0], 'false,true': [2.98e-08, 88, 0], 'false,false': [0.533, 6, 0]}]]
[{'': [7.311224796312007e-17, 0.04826199367997677], 'false': [-1.2688263138573217e-16, 0.0]}, {'': [-1.4173059888831785e-17, 0.044419605220055364], 'false': [-1.9032394707859825e-16, 0.0]}, {'': [7.001406461600086e-17, 0.021515213257540407], 'false': [1.9032394707859825e-16, 2.3129646346357427e-18]}, {'': [1.8312957107219077e-17, 0.016767339707732778], 'false': [-3.489272363107635e-16, 0.0]}, {'': [0.012860145087506835, 3.3703198961835107e-17], 'true': [-1.2688263138573217e-16, 0.0]}, {'': [3.416070845000482e-17, 0.007208001629798563], 'false': [-3.172065784643304e-17, 0.0]}, {'': [-1.586032892321652e-17, 0.008852968335811793], 'false': [2.840105411831796e-17, 0.08955857239842273]}, {'': [4.037225539938885e-05, 0.00885828723038129], 'false': [-3.9650822308041306e-17, -3.0839528461809902e-18]}, {'': [0.0043425972257035645, 2.292558063242588e-05], 'true': [-1.1895246692412391e-17, 0.0]}, {'': [0.003470462290970057, 0.0033715525790828293], 'true': [4.7580986769649563e-17, -1.3877787807814458e-18], 'false': [1.0092936587501423e-17, 0.047397626524719357]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(B).;true;true
0;false;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- actor(B).;true;true
1;false;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(B).;true;true
2;false;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(B).;true;true
3;false;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(B).;true;true
5;false;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;false;actor(A).;true;true
7;;workedunder(A, B) :- actor(B).;true;true
7;false;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.56e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283913;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 8.56e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783633;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( female(A) )
%   | then return 0.39897394438523337;  // std dev = 0.096, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.40020992037010517;  // std dev = 0.093, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926086;  // std dev = 7.07e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( female(A) )
%   | then return 0.3080145779256145;  // std dev = 0.087, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.3088641813680305;  // std dev = 0.084, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 6.50e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   else if ( female(A) )
%   | then return 0.26115437269116626;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.23187389601498473;  // std dev = 0.110, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109162;  // std dev = 5.16e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( female(A) )
%   | then return 0.18339421763531577;  // std dev = 0.112, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else return 0.21858408483084948;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 4.28e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1841227728798824;  // std dev = 0.004, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.263975593829739;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1580534235237213;  // std dev = 0.004, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.21618329840431272;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06989661828914644;  // std dev = 0.148, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1381386440339291;  // std dev = 0.004, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.18219169432517887;  // std dev = 0.001, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A) )
%   | then return -0.06410361347013087;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.2563175258881978;  // std dev = 0.666, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06410361347013076;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.092289
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 3.586113929748535 seconds
Total inference time: 2.673 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068343
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 2.319 seconds
Refined model CLL: -0.068343


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071099
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 11.059094751358032 seconds
Total inference time: 2.953 seconds
AUC ROC: 1.0
Total revision time: 11.059094751358032
Best scored revision CLL: -0.063595


Dataset: 4_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:07:18
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.071099, 'Precision': [0.735892, 0.5], 'Recall': 1.0, 'F1': 0.847854, 'Learning time': 11.059094751358032, 'Inference time': 2.953, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.071099, 'Precision': [0.735892, 0.5], 'Recall': 1.0, 'F1': 0.847854, 'Learning time': 3.484980821609497, 'Inference time': 2.953}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048774;  // std dev = 4.21e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839108;  // std dev = 7.88e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 8.43e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( female(A) )
%   | then return 0.5315206219270028;  // std dev = 0.124, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.5331103429149548;  // std dev = 0.120, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783638;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42312299662840996;  // std dev = 0.001, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.17733577277343135;  // std dev = 0.000207, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32451721130805994;  // std dev = 0.001, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15293221137045956;  // std dev = 0.000188, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A) )
%   | then return -0.09269127618926103;  // std dev = 3.16e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926103;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.20928318206949853;  // std dev = 0.521, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0850062503028193;  // std dev = 0.012, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.257767164776465;  // std dev = 0.001, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.13403715411768188;  // std dev = 0.000165, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21158906762868693;  // std dev = 0.000992, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11926130026775113;  // std dev = 0.000183, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07874134341624672;  // std dev = 0.039, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.16835244106401384;  // std dev = 0.053, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.16880253209515272;  // std dev = 0.051, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else if ( actor(A) )
%   | then return -0.07326074772285662;  // std dev = 4.59e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return -0.22030869729319727;  // std dev = 0.518, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06723471732005756;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06795214619532756;  // std dev = 0.025, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   else if ( female(A) )
%   | then return 0.1451991888728575;  // std dev = 0.052, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.14559923400368308;  // std dev = 0.050, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06392415140981797;  // std dev = 0.018, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1369385040556363;  // std dev = 0.001, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14129574125591524;  // std dev = 0.000296, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082005
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 4.427121877670288 seconds
Total inference time: 2.612 seconds
AUC ROC: 1.0


Dataset: 4_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:07:25
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.082005, 'Precision': [0.735892, 0.5], 'Recall': 1.0, 'F1': 0.847854, 'Learning time': 4.427121877670288, 'Inference time': 2.612}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos  examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048766;  // std dev = 7.74e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839133;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360618;  // std dev = 8.69e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783637;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.3207118471601496;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.3101117670742672;  // std dev = 0.065, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   else return -0.09269127618926097;  // std dev = 4.59e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 6.23e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.256495604080492;  // std dev = 0.007, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12265186948386074;  // std dev = 0.000933, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109158;  // std dev = 6.23e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2106922769627921;  // std dev = 0.006, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10983586990283378;  // std dev = 0.000972, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1777817730626457;  // std dev = 0.006, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0999056721184346;  // std dev = 0.000953, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420265;  // std dev = 4.89e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15326359023527855;  // std dev = 0.005, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09136184603370727;  // std dev = 0.000963, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13441270173788442;  // std dev = 0.004, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08356610807488513;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070899
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.485793113708496 seconds
Total inference time: 2.621 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.65 seconds
Parameter learned model CLL: -0.064847


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 58], 'true,false': [0.0, 6, 0], 'false': [7.74e-08, 92, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 58], 'true,false': [0.0, 3, 0], 'false': [0.0, 116, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [8.69e-08, 110, 0], 'false,true': [1.19e-07, 0, 58], 'false,false': [2.63e-09, 3, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 120, 0], 'false,true': [0.0, 0, 58], 'false,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'female(A)'}, {'true,true': [2.11e-08, 0, 20], 'true,false': [0.065, 1, 38], 'false': [4.59e-08, 105, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [6.23e-08, 116, 0], 'false,true': [0.007, 0, 58], 'false,false': [0.000933, 3, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [6.23e-08, 107, 0], 'false,true': [0.006, 0, 58], 'false,false': [0.000972, 8, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 107, 0], 'false,true': [0.006, 0, 58], 'false,false': [0.000953, 4, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [4.89e-08, 102, 0], 'false,true': [0.005, 0, 58], 'false,false': [0.000963, 5, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 93, 0], 'false,true': [0.004, 0, 58], 'false,false': [2.63e-09, 6, 0]}]]
[{'': [0.08496093749999956, 6.516526448886789e-17], 'true': [-3.675221047035001e-16, -6.938893903907228e-18]}, {'': [0.033382492117425555, -9.570888143320316e-18], 'true': [-1.2250736823450003e-16, 0.0]}, {'': [6.863196879500968e-17, 0.020846347594112944], 'false': [2.4501473646900006e-16, 2.3129646346357427e-18]}, {'': [-2.2204460492503132e-17, 0.01626384593324757], 'false': [-3.3689526264487507e-16, 0.0]}, {'': [0.002847550778199424, 2.0089749969407594e-17], 'true': [2.2204460492503132e-17, 0.004269744517430537]}, {'': [3.34981085016211e-17, 0.006723005239970634], 'false': [9.217293098428731e-07, 2.89901924276544e-07]}, {'': [3.631570641297241e-17, 0.010944286646960774], 'false': [7.007048143170929e-07, 1.1821054507824003e-07]}, {'': [-3.112774835397635e-18, 0.004654421505606537], 'false': [5.412519126262708e-07, 2.271478886008843e-07]}, {'': [2.3401759832785162e-17, 0.004372809820526042], 'false': [4.265352179922621e-07, 1.8551664024701876e-07]}, {'': [-1.4325458382260084e-17, 0.004037209338299192], 'false': [3.4279044753301723e-07, 1.1564823173178713e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(B).;true;true
2;false;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(B).;true;true
3;false;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;female(A).;true;true
5;;workedunder(A, B) :- actor(B).;true;true
5;false;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(B).;true;true
6;false;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(B).;true;true
7;false;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- actor(B).;true;true
8;false;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- actor(B).;true;true
9;false;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048768;  // std dev = 6.66e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 7.74e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10574193368054198;  // std dev = 0.479, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09234322072466541;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( female(A) )
%   | then return 0.301025984143511;  // std dev = 0.088, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.3101117670742672;  // std dev = 0.065, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25779197672263326;  // std dev = 0.006, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12178526881949452;  // std dev = 0.000972, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then return -0.08488928064028024;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else return -0.1759406923979263;  // std dev = 0.499, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2116067015298542;  // std dev = 0.005, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10941135886907827;  // std dev = 0.001, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07846839087424436;  // std dev = 0.029, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17845154859916776;  // std dev = 0.005, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09919697659078094;  // std dev = 0.001, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.072806264021975;  // std dev = 0.030, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06785396686113362;  // std dev = 0.015, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15377108476673124;  // std dev = 0.004, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09099961447603216;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13480850140319015;  // std dev = 0.004, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08351565995370351;  // std dev = 0.000802, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A) )
%   | then return -0.06406096465907928;  // std dev = 1.83e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else return -0.16504847956161672;  // std dev = 0.475, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072364
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 3.5211868286132812 seconds
Total inference time: 2.73 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064382
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.649 seconds
Refined model CLL: -0.064382


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072364
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 10.305979942321777 seconds
Total inference time: 2.73 seconds
AUC ROC: 1.0
Total revision time: 10.305979942321777
Best scored revision CLL: -0.064382


Dataset: 4_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:45
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072364, 'Precision': [0.736364, 0.5], 'Recall': 1.0, 'F1': 0.848168, 'Learning time': 10.305979942321777, 'Inference time': 2.73, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070899, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.485793113708496, 'Inference time': 2.621}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.56e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( female(A) )
%   | then return 0.8105298874804645;  // std dev = 0.213, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.832507909458486;  // std dev = 0.158, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7261241329559046;  // std dev = 0.016, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.2739260269386626;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.12684590979336993;  // std dev = 0.149, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11217674535193821;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5619155249619597;  // std dev = 0.020, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.224189238323446;  // std dev = 7.45e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42239227266481477;  // std dev = 0.019, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.18650227025426533;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1026854318656045;  // std dev = 0.109, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0924937690195117;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32402354845752973;  // std dev = 0.017, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.15959733076510238;  // std dev = 0.005, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0850171033385375;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25743210203356565;  // std dev = 0.015, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1399055353229949;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21135362247557316;  // std dev = 0.013, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12342808438691957;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.079322838192655;  // std dev = 0.073, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07307455855057321;  // std dev = 4.59e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1782666687122642;  // std dev = 0.012, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11118658827744683;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06827669330940385;  // std dev = 5.05e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15363132291891843;  // std dev = 0.010, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10059851953503088;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13469972133925806;  // std dev = 0.009, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0916121174741739;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06501334919641905;  // std dev = 0.076, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074662
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 3.3616230487823486 seconds
Total inference time: 2.653 seconds
AUC ROC: 1.0


Dataset: 4_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:07:51
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.074662, 'Precision': [0.736364, 0.5], 'Recall': 1.0, 'F1': 0.848168, 'Learning time': 3.3616230487823486, 'Inference time': 2.653}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos  examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.14e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.1418510649004881;  // std dev = 0.000, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.12544463852839183;  // std dev = 0.000, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360626;  // std dev = 4.71e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.11231637819360685;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783619;  // std dev = 4.59e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.10159632948783645;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.09269127618926062;  // std dev = 1.15e-07, 338.000 (wgt'ed) examples reached here.  /* #neg=338 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.08518475138839679;  // std dev = 8.69e-08, 312.000 (wgt'ed) examples reached here.  /* #neg=312 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109168;  // std dev = 3.49e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.07877675473109146;  // std dev = 5.37e-08, 313.000 (wgt'ed) examples reached here.  /* #neg=313 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.07324622576333681;  // std dev = 9.88e-08, 269.000 (wgt'ed) examples reached here.  /* #neg=269 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0684269778442027;  // std dev = 1.49e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.06842697784420276;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202616;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.0641918400820261;  // std dev = 8.69e-08, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.818696737289429 seconds
Total inference time: 2.831 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065435
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.799 seconds
Parameter learned model CLL: -0.065435


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [1.09e-06, 0, 178], 'true,false': [6.14e-08, 61, 0], 'false': [0.0, 289, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 178], 'true,false': [0.0, 62, 0], 'false': [0.0, 288, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [5.9e-07, 0, 178], 'true,false': [4.71e-08, 62, 0], 'false': [0.0, 297, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3.77e-07, 0, 178], 'true,false': [4.59e-08, 63, 0], 'false': [0.0, 305, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3.58e-07, 0, 178], 'true,false': [0.0, 55, 0], 'false': [1.15e-07, 338, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3.63e-07, 0, 178], 'true,false': [1.83e-08, 60, 0], 'false': [8.69e-08, 312, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3e-07, 0, 178], 'true,false': [3.49e-08, 69, 0], 'false': [5.37e-08, 313, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 178], 'true,false': [0.0, 64, 0], 'false': [9.88e-08, 269, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 178], 'true,false': [1.49e-08, 52, 0], 'false': [0.0, 297, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'director(B), actor(A)'}, {'true,true': [7.6e-08, 0, 178], 'true,false': [0.0, 65, 0], 'false': [8.69e-08, 275, 0]}]]
[{'': [0.19008770854852555, -1.229312691626471e-16], 'true': [6.706246045376226e-15, 6.188128333976282e-17]}, {'': [0.13677867277023462, -6.167905692361981e-17], 'true': [-3.193450497798203e-15, -4.118569284899774e-17]}, {'': [0.08541410707145755, -9.569599134816164e-17], 'true': [1.9559884299013994e-15, 3.581364595565021e-17]}, {'': [0.052028956092804744, -7.134547961525596e-17], 'true': [7.983626244495507e-16, 3.348291661567932e-17]}, {'': [0.03081898679378054, 3.9416202057697863e-17], 'true': [7.185263620045957e-16, -2.0185873175002845e-18]}, {'': [0.02184171305043828, 2.419716848542008e-17], 'true': [7.384854276158345e-16, 5.551115123125783e-18]}, {'': [0.01675986806376247, 9.222299885065198e-18], 'true': [5.03966406683779e-16, 1.769920763895177e-17]}, {'': [0.012190996024905953, 3.631956363086014e-17], 'true': [-1.6965205769552953e-16, -1.734723475976807e-18]}, {'': [0.00855900721974485, -1.4952498648150256e-17], 'true': [-4.490789762528723e-17, 4.270088556250602e-18]}, {'': [0.0076970296644222145, 2.7452787518003872e-17], 'true': [3.2433481618263e-17, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;true;director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 4.94e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.14185106490048813;  // std dev = 0.000, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.1254446385283918;  // std dev = 0.000, 278.000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360629;  // std dev = 4.08e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.11231637819360682;  // std dev = 0.000, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783627;  // std dev = 2.36e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.10159632948783645;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #neg=318 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.09269127618926075;  // std dev = 8.16e-08, 261.000 (wgt'ed) examples reached here.  /* #neg=261 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 2.58e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else return -0.08518475138839679;  // std dev = 8.43e-08, 315.000 (wgt'ed) examples reached here.  /* #neg=315 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.07877675473109144;  // std dev = 6.32e-08, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.07324622576333688;  // std dev = 1.11e-07, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.47e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.0684269778442027;  // std dev = 0.000, 274.000 (wgt'ed) examples reached here.  /* #neg=274 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.06419184008202623;  // std dev = 0.000, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.332837820053101 seconds
Total inference time: 2.886 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065435
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.789 seconds
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.739534557342528 seconds
Total inference time: 2.831 seconds
AUC ROC: 1.0
Total revision time: 14.739534557342528
Best scored revision CLL: -0.065435


Dataset: 4_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:16
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063555, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 14.739534557342528, 'Inference time': 2.831, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063555, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.818696737289429, 'Inference time': 2.831}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5.77e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.14185106490048816;  // std dev = 0.000, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839155;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.1254446385283918;  // std dev = 0.000, 278.000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360633;  // std dev = 2.36e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.11231637819360678;  // std dev = 0.000, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783621;  // std dev = 3.80e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.10159632948783655;  // std dev = 0.000, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.09269127618926064;  // std dev = 2.98e-08, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.08518475138839678;  // std dev = 8.16e-08, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109176;  // std dev = 1.49e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.07877675473109146;  // std dev = 5.58e-08, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 1.29e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.07324622576333684;  // std dev = 1.01e-07, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0684269778442027;  // std dev = 1.39e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.06842697784420271;  // std dev = 0.000, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.06419184008202625;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.544526100158691 seconds
Total inference time: 2.843 seconds
AUC ROC: 1.0


Dataset: 4_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:08:25
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063555, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.544526100158691, 'Inference time': 2.843}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos  examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.14185106490048768;  // std dev = 6.66e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.12544463852839155;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 6.23e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10159632948783617;  // std dev = 5.67e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926107;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08600969473187235;  // std dev = 0.068, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07871690858520447;  // std dev = 2.24e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07319430698950666;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06984270607721997;  // std dev = 0.128, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06406407259309255;  // std dev = 7.45e-09, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065509
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.10357403755188 seconds
Total inference time: 3.241 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064087
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.496 seconds
Parameter learned model CLL: -0.064087


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [2.23e-07, 0, 45], 'true,false': [0.0, 7, 0], 'false': [6.66e-08, 73, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 45], 'true,false': [0.0, 5, 0], 'false': [0.0, 74, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [6.23e-08, 78, 0], 'false,true': [0.0, 0, 45], 'false,false': [2.63e-09, 3, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 45], 'true,false': [0.0, 5, 0], 'false': [5.67e-08, 83, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [2.98e-08, 0, 45], 'true,false': [0.0, 4, 0], 'false': [0.0, 89, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 45], 'true,false': [0.0, 5, 0], 'false': [0.068, 83, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [2.24e-08, 76, 0], 'false,true': [5.58e-08, 0, 45], 'false,false': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 70, 0], 'false,true': [0.0, 0, 45], 'false,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 45], 'true,false': [1.86e-09, 6, 0], 'false': [0.128, 88, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [7.45e-09, 67, 0], 'false,true': [2.36e-08, 0, 45], 'false,false': [0.0, 8, 0]}]]
[{'': [0.11649408284023735, 6.083413833562501e-17], 'true': [1.105288700071267e-15, -7.93016446160826e-18]}, {'': [0.06424978612186535, -3.00060276925718e-17], 'true': [-9.473903143468002e-16, 0.0]}, {'': [4.981769982292369e-17, 0.026121113751917464], 'false': [-3.947459643111668e-17, 2.3129646346357427e-18]}, {'': [0.024252759220113572, 3.879092495678258e-17], 'true': [-4.144832625267251e-16, 0.0]}, {'': [0.012812322212040247, -1.247441600702423e-18], 'true': [1.973729821555834e-17, 0.0]}, {'': [0.010425859500244368, 5.580358463546472e-05], 'true': [-2.960594732333751e-17, 0.0]}, {'': [6.573688961596321e-18, 0.00969838176228774], 'false': [6.908054375445419e-17, -9.912705577010326e-19]}, {'': [-1.3481279584734044e-17, 0.005640433129233889], 'false': [-8.388351741612294e-17, -6.938893903907229e-19]}, {'': [0.00507784138437273, 0.00018574797131645025], 'true': [-3.947459643111668e-17, 5.782411586589357e-19]}, {'': [8.285246452426541e-19, 0.0050344624983226565], 'false': [1.2335811384723961e-17, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(B).;true;true
2;false;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(B).;true;true
6;false;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(B).;true;true
7;false;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- actor(B).;true;true
9;false;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048766;  // std dev = 7.45e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.6490635746493423;  // std dev = 0.234, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.6953328964755449;  // std dev = 0.141, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   else return -0.12544463852839152;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 6.50e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5640959877885926;  // std dev = 0.033, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.223303442425469;  // std dev = 7.45e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783615;  // std dev = 5.96e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42403320864421895;  // std dev = 0.033, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1869697297541069;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3251437947814075;  // std dev = 0.029, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1577422940329852;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09226182397229218;  // std dev = 0.021, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25819923624222;  // std dev = 0.026, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13826388754288288;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08521822383606346;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07880549616365487;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21189676799320303;  // std dev = 0.022, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12301171090511868;  // std dev = 0.006, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17866576425598205;  // std dev = 0.020, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10966995894441507;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07307769732981764;  // std dev = 0.018, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06846113804825622;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15393455835321107;  // std dev = 0.018, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0996865314494156;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13493679793713634;  // std dev = 0.016, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0904558872221435;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.06422197880215709;  // std dev = 1.29e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return -0.14805865508943858;  // std dev = 0.247, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068522
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.229229211807251 seconds
Total inference time: 2.964 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065951
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.42 seconds
Refined model CLL: -0.065951


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065509
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.248803249359131 seconds
Total inference time: 3.241 seconds
AUC ROC: 1.0
Total revision time: 9.248803249359131
Best scored revision CLL: -0.064087


Dataset: 4_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:08:44
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065509, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.248803249359131, 'Inference time': 3.241, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065509, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.10357403755188, 'Inference time': 3.241}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 7.88e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839144;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360625;  // std dev = 6.32e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783615;  // std dev = 5.87e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09269127618926107;  // std dev = 1.05e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 4.94e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.07877675473109173;  // std dev = 2.69e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.1390570932206922;  // std dev = 0.159, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07276281948973662;  // std dev = 0.013, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06804162251073742;  // std dev = 0.011, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367078;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.13385490872109876;  // std dev = 0.110, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | else return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1356747224195588;  // std dev = 0.006, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06382354024998892;  // std dev = 0.010, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069982
   Precision = 0.743929 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.853165


Total learning time: 3.2752270698547363 seconds
Total inference time: 2.939 seconds
AUC ROC: 1.0


Dataset: 4_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:08:51
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069982, 'Precision': [0.743929, 0.5], 'Recall': 1.0, 'F1': 0.853165, 'Learning time': 3.2752270698547363, 'Inference time': 2.939}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos  examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048766;  // std dev = 6.99e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839147;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.4997262021679603;  // std dev = 0.185, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else return -0.11373862412396511;  // std dev = 0.114, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4241577551860989;  // std dev = 0.046, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17525978705879872;  // std dev = 0.009, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10246362441047621;  // std dev = 0.106, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32523653298072863;  // std dev = 0.041, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1513512340925742;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09249890618997843;  // std dev = 2.36e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08502146451836627;  // std dev = 3.94e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2582672309244992;  // std dev = 0.036, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1329203694334954;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0786365251540244;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21194758838399702;  // std dev = 0.031, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1193094109009202;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07312456347968363;  // std dev = 3.87e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17870478334055145;  // std dev = 0.027, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10847430082359834;  // std dev = 0.006, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06832047404007448;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15396530680079745;  // std dev = 0.024, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09859601442413372;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06409786338041755;  // std dev = 2.79e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1349615927984157;  // std dev = 0.022, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09130197753036258;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069173
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.094862937927246 seconds
Total inference time: 3.033 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065075
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.427 seconds
Parameter learned model CLL: -0.065075


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [2.23e-07, 0, 45], 'true,false': [0.0, 4, 0], 'false': [6.99e-08, 80, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 83, 0], 'false,true': [0.0, 0, 45], 'false,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'female(A)'}, {'true,true': [0.0, 0, 23], 'true,false': [0.185, 2, 22], 'false': [0.114, 81, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.046, 0, 45], 'true,false': [0.009, 6, 0], 'false': [0.106, 107, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.041, 0, 45], 'true,false': [0.006, 3, 0], 'false': [2.36e-08, 68, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [3.94e-08, 111, 0], 'false,true': [0.036, 0, 45], 'false,false': [0.005, 3, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 88, 0], 'false,true': [0.031, 0, 45], 'false,false': [0.006, 4, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [3.87e-08, 79, 0], 'false,true': [0.027, 0, 45], 'false,false': [0.006, 7, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 100, 0], 'false,true': [0.024, 0, 45], 'false,false': [0.004, 4, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [2.79e-08, 87, 0], 'false,true': [0.022, 0, 45], 'false,false': [0.0, 3, 0]}]]
[{'': [0.07496876301541104, 6.106226635438361e-17], 'true': [1.105288700071267e-15, 0.0]}, {'': [-2.140188963132832e-17, 0.07410586634586562], 'false': [-9.473903143468002e-16, -2.3129646346357427e-18]}, {'': [0.0181629835776121, 0.0001618226789138244], 'true': [-3.089316242435218e-16, 0.0340541927432401]}, {'': [0.03734015515817421, 0.00010537260418316378], 'true': [4.615159994839265e-05, 1.4543652884340305e-05]}, {'': [0.013344399669773318, 8.163404592832034e-18], 'true': [3.726629892740381e-05, 1.1494241289896253e-05]}, {'': [1.400281292320017e-17, 0.008993671808767293], 'false': [2.8398881492750248e-05, 9.2607111546091e-06]}, {'': [-5.046468293750712e-18, 0.008246937861764883], 'false': [2.1590769433268678e-05, 8.542020166178027e-06]}, {'': [1.8972165610683054e-17, 0.009622688145989907], 'false': [1.6672241527857267e-05, 5.797778717649733e-06]}, {'': [-6.661338147750939e-18, 0.004794475791404349], 'false': [1.313289945281188e-05, 4.482426885023955e-06]}, {'': [8.932828933765627e-18, 0.0030096093056699996], 'false': [1.0549722427619398e-05, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- actor(B).;true;true
1;false;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
2;true;female(A).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(B).;true;true
5;false;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(B).;true;true
6;false;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(B).;true;true
7;false;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- actor(B).;true;true
8;false;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- actor(B).;true;true
9;false;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.69e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839147;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( female(A) )
%   | then return 0.7194734122109543;  // std dev = 5.96e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.6490635746493422;  // std dev = 0.234, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360618;  // std dev = 8.56e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5638300726752233;  // std dev = 0.058, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.21942701477678736;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783615;  // std dev = 5.96e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42386288584033294;  // std dev = 0.058, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.18487291769827757;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32504638415319875;  // std dev = 0.052, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.16239801526037784;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09444211481386747;  // std dev = 0.087, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.251550175930371;  // std dev = 3.94e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.24765417838659498;  // std dev = 0.082, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( actor(A) )
%   | then return -0.08504841054985143;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else return -0.16515039576231721;  // std dev = 0.196, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07829987734783182;  // std dev = 0.012, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.213293009840463;  // std dev = 0.042, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1716149078493699;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.14812690964664804;  // std dev = 0.089, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.18529166291850074;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.0731263779040331;  // std dev = 0.036, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.15403061555436703;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.14470783000349915;  // std dev = 0.067, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.06833005861447292;  // std dev = 0.034, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06396666620454952;  // std dev = 0.008, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( female(A) )
%   | then return 0.12118906670380526;  // std dev = 0.066, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.12618168440879415;  // std dev = 0.067, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.087881
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 3.3745501041412354 seconds
Total inference time: 2.824 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072085
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.387 seconds
Refined model CLL: -0.072085


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069173
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.283413042068482 seconds
Total inference time: 3.033 seconds
AUC ROC: 1.0
Total revision time: 9.283413042068482
Best scored revision CLL: -0.065075


Dataset: 4_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:09:10
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069173, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.283413042068482, 'Inference time': 3.033, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069173, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.094862937927246, 'Inference time': 3.033}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 6.66e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839144;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11613611595291784;  // std dev = 0.330, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10504245990510033;  // std dev = 0.313, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09208202528530833;  // std dev = 1.05e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08466744279422206;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else return 0.24777317748344863;  // std dev = 0.337, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07833236968242384;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21098681425125518;  // std dev = 3.65e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1065832764337205;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07286058569626941;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1779974596252114;  // std dev = 3.65e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0968513537369759;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15342698502307137;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08870413241238492;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06831491124029782;  // std dev = 0.020, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06388034301325264;  // std dev = 3.65e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else return 0.1298372729093742;  // std dev = 0.214, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073951
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 3.0753209590911865 seconds
Total inference time: 2.843 seconds
AUC ROC: 1.0


Dataset: 4_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:09:16
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073951, 'Precision': [0.742291, 0.5], 'Recall': 1.0, 'F1': 0.852086, 'Learning time': 3.0753209590911865, 'Inference time': 2.843}


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos  examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.30e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.11497491567408707;  // std dev = 0.331, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10135392965350574;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( female(A) )
%   | then return 0.39897394438523337;  // std dev = 0.096, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.4175135841583101;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09248827984148866;  // std dev = 2.36e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( female(A) )
%   | then return 0.3080145779256145;  // std dev = 0.087, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.30513719516894144;  // std dev = 0.084, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08501244328516828;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25959523353840824;  // std dev = 0.011, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.18694223215214748;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07862877673102206;  // std dev = 4.47e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2128777081028461;  // std dev = 0.010, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1612298360217949;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07311784019667586;  // std dev = 3.94e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( female(A) )
%   | then return 0.16915043673997124;  // std dev = 0.059, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.16762010509668565;  // std dev = 0.057, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1559203127663694;  // std dev = 0.007, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.16152571988432843;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06925585881281024;  // std dev = 0.094, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13648209624604865;  // std dev = 0.006, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14196808886023113;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06491941573061367;  // std dev = 0.089, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.084417
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 3.5134389400482178 seconds
Total inference time: 2.574 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066782
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.726 seconds
Parameter learned model CLL: -0.066782


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [7.3e-08, 114, 0], 'false,true': [0.0, 0, 56], 'false,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 107, 0], 'false,true': [0.0, 0, 56], 'false,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [1.03e-07, 0, 56], 'true,false': [0.0, 8, 0], 'false': [0.331, 125, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'female(A)'}, {'true': [0.0, 111, 0], 'false,true': [0.096, 1, 27], 'false,false': [0.0, 0, 29]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'female(A)'}, {'true': [2.36e-08, 105, 0], 'false,true': [0.087, 1, 27], 'false,false': [0.084, 1, 29]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 106, 0], 'false,true': [0.011, 0, 56], 'false,false': [0.002, 6, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [4.47e-08, 106, 0], 'false,true': [0.01, 0, 56], 'false,false': [0.002, 6, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'female(A)'}, {'true': [3.94e-08, 98, 0], 'false,true': [0.059, 1, 27], 'false,false': [0.057, 1, 29]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.007, 0, 56], 'true,false': [0.002, 3, 0], 'false': [0.094, 100, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.006, 0, 56], 'true,false': [0.0, 3, 0], 'false': [0.089, 101, 0]}]]
[{'': [4.674623261579606e-17, 0.08740894901144611], 'false': [-1.2688263138573217e-16, -6.938893903907228e-18]}, {'': [-6.22554967079527e-18, 0.03445358635281509], 'false': [-1.9032394707859825e-16, 0.0]}, {'': [0.04875941233691253, 0.0008764098703551433], 'true': [1.9032394707859825e-16, -1.734723475976807e-18]}, {'': [-1.0002009230857266e-17, 0.004644692439814939], 'false': [0.009280392558716948, -1.5313421029312505e-16]}, {'': [5.28677630773884e-18, 0.007297422230553228], 'false': [0.007574816756032855, 0.0070345237547700425]}, {'': [-2.1994984450121027e-17, 0.0174310902065026], 'false': [2.2632655942711466e-06, 7.922540241761533e-07]}, {'': [1.885284381438945e-17, 0.012235096434037071], 'false': [1.7201640516122701e-06, 9.93405927930217e-07]}, {'': [1.586032892321652e-17, 0.0034034462018175085], 'false': [0.0035246437681902038, 0.003289197893577641]}, {'': [0.004864318408887051, 8.771311634165058e-05], 'true': [8.639781689364792e-07, 8.166383812513445e-07]}, {'': [0.003742627428665961, 7.800166217870377e-05], 'true': [6.928392206419418e-07, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(B).;true;true
0;false;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- actor(B).;true;true
1;false;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(B).;true;true
3;false;female(A).;true;true
4;;workedunder(A, B) :- actor(B).;true;true
5;;workedunder(A, B) :- actor(B).;true;true
5;false;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(B).;true;true
6;false;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048782;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   else if ( female(A) )
%   | then return 0.822434649385226;  // std dev = 0.186, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.8248156017661784;  // std dev = 0.180, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7263798063385706;  // std dev = 0.002, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2734697803924959;  // std dev = 0.000423, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1286708061390766;  // std dev = 0.208, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11199512681404221;  // std dev = 3.33e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( female(A) )
%   | then return 0.5344329505420727;  // std dev = 0.146, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.5357217336307685;  // std dev = 0.141, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4291922358553953;  // std dev = 0.003, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.3283035556809056;  // std dev = 0.000724, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10369818351098492;  // std dev = 0.259, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09227106660773644;  // std dev = 6.05e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else return 0.32864068713592587;  // std dev = 0.003, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08482800782554274;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   else return 0.26057542515102106;  // std dev = 0.003, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07847033916479987;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( female(A) )
%   | then return 0.21388648808558586;  // std dev = 4.47e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.1931984188494936;  // std dev = 0.108, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0729803460055765;  // std dev = 3.33e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.18142745606728392;  // std dev = 0.009, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.4384458425258704;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06819419781803936;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15602168986886006;  // std dev = 0.008, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.33469079254583384;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06398641837023528;  // std dev = 4.21e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13656097732751882;  // std dev = 0.008, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2627046608921523;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095567
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 3.629654884338379 seconds
Total inference time: 2.559 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070502
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.728 seconds
Refined model CLL: -0.070502


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.084417
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 10.597093824386596 seconds
Total inference time: 2.574 seconds
AUC ROC: 1.0
Total revision time: 10.597093824386596
Best scored revision CLL: -0.066782


Dataset: 4_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:09:36
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.084417, 'Precision': [0.735892, 0.5], 'Recall': 1.0, 'F1': 0.847854, 'Learning time': 10.597093824386596, 'Inference time': 2.574, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.084417, 'Precision': [0.735892, 0.5], 'Recall': 1.0, 'F1': 0.847854, 'Learning time': 3.5134389400482178, 'Inference time': 2.574}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048763;  // std dev = 8.94e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360618;  // std dev = 8.69e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926094;  // std dev = 5.16e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 6.05e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109157;  // std dev = 6.32e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420264;  // std dev = 5.48e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801079;  // std dev = 5.16e-08, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077221
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 3.4269752502441406 seconds
Total inference time: 2.551 seconds
AUC ROC: 1.0


Dataset: 4_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:09:42
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.077221, 'Precision': [0.735892, 0.5], 'Recall': 1.0, 'F1': 0.847854, 'Learning time': 3.4269752502441406, 'Inference time': 2.551}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos  examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048774;  // std dev = 4.21e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.1254446385283911;  // std dev = 7.60e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 7.88e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10399233860984787;  // std dev = 0.272, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.3207118471601496;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.30004169099267897;  // std dev = 0.090, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   else return -0.09248996932687599;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25775912377774535;  // std dev = 0.014, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12163827943528546;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08730299946603773;  // std dev = 0.244, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07846432778358552;  // std dev = 4.83e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2115841339895158;  // std dev = 0.012, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10922866799994133;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17843540144716047;  // std dev = 0.011, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09908698334717563;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.07523709368403196;  // std dev = 0.284, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15375910246379687;  // std dev = 0.010, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09077640152476928;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06801313481377194;  // std dev = 0.003, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06385760310748287;  // std dev = 4.77e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13479932995403124;  // std dev = 0.009, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08355726312680657;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069323
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.52614688873291 seconds
Total inference time: 2.762 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064406
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.772 seconds
Parameter learned model CLL: -0.064406


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [4.21e-08, 120, 0], 'false,true': [0.0, 0, 58], 'false,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 58], 'true,false': [0.0, 8, 0], 'false': [7.6e-08, 108, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [7.88e-08, 104, 0], 'false,true': [1.19e-07, 0, 58], 'false,false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 58], 'true,false': [0.0, 4, 0], 'false': [0.272, 114, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'female(A)'}, {'true,true': [2.11e-08, 0, 20], 'true,false': [0.09, 2, 38], 'false': [0.0, 109, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.014, 0, 58], 'true,false': [0.002, 5, 0], 'false': [0.244, 107, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [4.83e-08, 96, 0], 'false,true': [0.012, 0, 58], 'false,false': [0.002, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.011, 0, 58], 'true,false': [0.002, 9, 0], 'false': [0.284, 126, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.01, 0, 58], 'true,false': [0.002, 6, 0], 'false': [0.003, 117, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [4.77e-08, 113, 0], 'false,true': [0.009, 0, 58], 'false,false': [0.002, 6, 0]}]]
[{'': [1.4802973661668754e-17, 0.06035379812695064], 'false': [-3.675221047035001e-16, 0.0]}, {'': [0.07604300775570302, 5.3455182667137164e-17], 'true': [-1.2250736823450003e-16, 0.0]}, {'': [5.978123978750843e-17, 0.0474865377396351], 'false': [2.4501473646900006e-16, -1.734723475976807e-18]}, {'': [0.01626384593324757, 0.0006487171475421533], 'true': [-3.3689526264487507e-16, 0.0]}, {'': [0.005506846810506941, -1.731540497121804e-17], 'true': [2.2204460492503132e-17, 0.008117851763764772]}, {'': [0.010520637636986224, 0.0005554483736016988], 'true': [3.5220812555282237e-06, 7.876904799475337e-07]}, {'': [2.42861286636753e-17, 0.007522557792452351], 'false': [2.6760828649068138e-06, 6.534430488938647e-07]}, {'': [0.008957926835791167, 0.0006395607781123623], 'true': [2.0657706400300875e-06, 5.938985556243182e-07]}, {'': [0.005081996614086707, 6.227474151928696e-08], 'true': [1.626925771436305e-06, 6.504151764316161e-07]}, {'': [2.0141214163553725e-17, 0.004052140420505572], 'false': [1.306774595728324e-06, 5.599190638615655e-07]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(B).;true;true
0;false;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(B).;true;true
2;false;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;female(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(B).;true;true
6;false;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- actor(B).;true;true
9;false;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1418510649004878;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839113;  // std dev = 6.99e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360624;  // std dev = 7.30e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783635;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926086;  // std dev = 7.07e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08518475138839682;  // std dev = 5.77e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07877675473109158;  // std dev = 6.75e-08, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333713;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420265;  // std dev = 4.47e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( female(A) )
%   | then return 0.11598895090891687;  // std dev = 0.057, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | else return 0.1340070300080111;  // std dev = 1.05e-08, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068192
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.389143228530884 seconds
Total inference time: 2.69 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064365
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.732 seconds
Refined model CLL: -0.064365


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068192
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 10.419290117263794 seconds
Total inference time: 2.69 seconds
AUC ROC: 1.0
Total revision time: 10.419290117263794
Best scored revision CLL: -0.064365


Dataset: 4_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:10:02
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068192, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 10.419290117263794, 'Inference time': 2.69, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069323, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.52614688873291, 'Inference time': 2.762}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.69e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0.000, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11497491567408707;  // std dev = 0.331, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.10493459764443887;  // std dev = 0.313, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.09506325392010737;  // std dev = 0.298, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08453484618611824;  // std dev = 6.32e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07821840636616591;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07580465977631334;  // std dev = 0.324, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06781003772971352;  // std dev = 3.65e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06364723422902686;  // std dev = 3.07e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069344
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.3891100883483887 seconds
Total inference time: 2.943 seconds
AUC ROC: 1.0


Dataset: 4_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:10:09
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069344, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.3891100883483887, 'Inference time': 2.943}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos  examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.14e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.14185106490048813;  // std dev = 0.000, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839133;  // std dev = 2.58e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.12544463852839197;  // std dev = 0.000, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360636;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.11231637819360682;  // std dev = 0.000, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783627;  // std dev = 1.83e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.10159632948783642;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926104;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.09269127618926061;  // std dev = 9.19e-08, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.05e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.08518475138839678;  // std dev = 7.74e-08, 273.000 (wgt'ed) examples reached here.  /* #neg=273 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109175;  // std dev = 7.45e-09, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.07877675473109147;  // std dev = 4.21e-08, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.07324622576333682;  // std dev = 9.88e-08, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420262;  // std dev = 2.47e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.06842697784420283;  // std dev = 0.000, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.06419184008202612;  // std dev = 7.60e-08, 270.000 (wgt'ed) examples reached here.  /* #neg=270 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.725759983062744 seconds
Total inference time: 2.998 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065435
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.87 seconds
Parameter learned model CLL: -0.065435


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [1.09e-06, 0, 178], 'true,false': [6.14e-08, 61, 0], 'false': [0.0, 291, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'actor(A), director(B)'}, {'true,true': [0.0, 0, 178], 'true,false': [2.58e-08, 66, 0], 'false': [0.0, 272, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [5.9e-07, 0, 178], 'true,false': [0.0, 42, 0], 'false': [0.0, 284, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3.77e-07, 0, 178], 'true,false': [1.83e-08, 46, 0], 'false': [0.0, 297, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3.58e-07, 0, 178], 'true,false': [0.0, 58, 0], 'false': [9.19e-08, 332, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3.63e-07, 0, 178], 'true,false': [1.05e-08, 54, 0], 'false': [7.74e-08, 273, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [3e-07, 0, 178], 'true,false': [7.45e-09, 54, 0], 'false': [4.21e-08, 308, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 178], 'true,false': [0.0, 54, 0], 'false': [9.88e-08, 276, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 178], 'true,false': [2.47e-08, 55, 0], 'false': [0.0, 311, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'director(B), actor(A)'}, {'true,true': [7.6e-08, 0, 178], 'true,false': [0.0, 62, 0], 'false': [7.6e-08, 270, 0]}]]
[{'': [0.19008770854852555, -1.251385402326637e-16], 'true': [6.706246045376226e-15, 6.188128333976282e-17]}, {'': [0.14086836113344384, -8.163404592832034e-17], 'true': [-3.193450497798203e-15, 1.0092936587501423e-17]}, {'': [0.06885957338951988, -8.287580324666662e-17], 'true': [1.9559884299013994e-15, -7.93016446160826e-18]}, {'': [0.04397445270299505, -6.42957441870461e-17], 'true': [7.983626244495507e-16, 7.240584943207542e-18]}, {'': [0.03167900240747105, 2.5414743937202377e-17], 'true': [7.185263620045957e-16, -2.3927220358300786e-17]}, {'': [0.02068745902619883, 2.1960455432145953e-17], 'true': [7.384854276158345e-16, 2.05596856412066e-18]}, {'': [0.014867337532180235, 5.767392335715099e-18], 'true': [5.03966406683779e-16, 1.02798428206033e-18]}, {'': [0.01119200093271006, 3.539841527790354e-17], 'true': [-1.6965205769552953e-16, -1.2335811384723961e-17]}, {'': [0.008821177652452487, -2.498894267645047e-17], 'true': [-4.490789762528723e-17, 1.1102230246251566e-17]}, {'': [0.007526473848444706, 2.1382073066854867e-17], 'true': [3.2433481618263e-17, -8.953411488912552e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(A), director(B).;true;true
0;true;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;actor(A), director(B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;true;director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6.14e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.14185106490048824;  // std dev = 0.000, 270.000 (wgt'ed) examples reached here.  /* #neg=270 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.12544463852839197;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360628;  // std dev = 4.34e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.11231637819360688;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1015963294878362;  // std dev = 4.21e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.10159632948783656;  // std dev = 0.000, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.09269127618926064;  // std dev = 2.11e-08, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.08518475138839678;  // std dev = 8.43e-08, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109168;  // std dev = 3.49e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.07877675473109146;  // std dev = 5.37e-08, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 7.45e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.0732462257633369;  // std dev = 1.05e-07, 318.000 (wgt'ed) examples reached here.  /* #neg=318 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.89e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.06842697784420276;  // std dev = 0.000, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.06419184008202623;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.521627187728882 seconds
Total inference time: 2.823 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065435
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.823 seconds
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.940387170791627 seconds
Total inference time: 2.998 seconds
AUC ROC: 1.0
Total revision time: 14.940387170791627
Best scored revision CLL: -0.065435


Dataset: 4_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:10:33
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063555, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 14.940387170791627, 'Inference time': 2.998, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063555, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.725759983062744, 'Inference time': 2.998}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 5.58e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.14185106490048804;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.1254446385283918;  // std dev = 0.000, 271.000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360629;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.11231637819360688;  // std dev = 0.000, 313.000 (wgt'ed) examples reached here.  /* #neg=313 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783616;  // std dev = 5.05e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.10159632948783655;  // std dev = 0.000, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.09269127618926067;  // std dev = 0.000, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1.67e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.08518475138839678;  // std dev = 7.15e-08, 255.000 (wgt'ed) examples reached here.  /* #neg=255 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109179;  // std dev = 7.45e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.07877675473109146;  // std dev = 5.96e-08, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 7.45e-09, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.07324622576333686;  // std dev = 8.82e-08, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2.58e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.06842697784420287;  // std dev = 0.000, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else return -0.06419184008202625;  // std dev = 0.000, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.348582983016968 seconds
Total inference time: 2.877 seconds
AUC ROC: 1.0


Dataset: 4_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:10:42
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063555, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 5.348582983016968, 'Inference time': 2.877}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos  examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 7.88e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839147;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360625;  // std dev = 6.66e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783616;  // std dev = 5.58e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.092691276189261;  // std dev = 3.94e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 5.37e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0787767547310917;  // std dev = 3.49e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06842697784420268;  // std dev = 3.25e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06973
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.1800310611724854 seconds
Total inference time: 2.902 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065127
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.386 seconds
Parameter learned model CLL: -0.065127


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [7.88e-08, 86, 0], 'false,true': [2.23e-07, 0, 45], 'false,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 45], 'true,false': [0.0, 4, 0], 'false': [0.0, 93, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 45], 'true,false': [0.0, 5, 0], 'false': [6.66e-08, 92, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [5.58e-08, 73, 0], 'false,true': [0.0, 0, 45], 'false,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [3.94e-08, 95, 0], 'false,true': [2.98e-08, 0, 45], 'false,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [5.37e-08, 93, 0], 'false,true': [0.0, 0, 45], 'false,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [5.58e-08, 0, 45], 'true,false': [0.0, 4, 0], 'false': [3.49e-08, 79, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 83, 0], 'false,true': [0.0, 0, 45], 'false,false': [2.63e-09, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.0, 0, 45], 'true,false': [1.86e-09, 5, 0], 'false': [3.25e-08, 78, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 91, 0], 'false,true': [2.36e-08, 0, 45], 'false,false': [0.0, 8, 0]}]]
[{'': [7.229359230117299e-17, 0.09000000000000079], 'false': [1.105288700071267e-15, -2.7755575615628915e-18]}, {'': [0.05351918877289897, -2.1488187573390126e-17], 'true': [-9.473903143468002e-16, 0.0]}, {'': [0.040122030722945186, 4.827056628805028e-17], 'true': [-3.947459643111668e-17, 0.0]}, {'': [4.258389683493751e-17, 0.015789556783927943], 'false': [-4.144832625267251e-16, -1.1564823173178713e-18]}, {'': [1.636118141552862e-17, 0.012812322212040247], 'false': [1.973729821555834e-17, 0.0]}, {'': [3.1038493161563513e-17, 0.008684597667842037], 'false': [-2.960594732333751e-17, 0.0]}, {'': [0.0062413099982688465, 1.545880160870471e-17], 'true': [6.908054375445419e-17, 0.0]}, {'': [-6.6880905097900996e-18, 0.008704372113015304], 'false': [-8.388351741612294e-17, 7.709882115452476e-19]}, {'': [0.00440248848025115, 1.3521947094793573e-17], 'true': [-3.947459643111668e-17, 6.938893903907229e-19]}, {'': [-1.2810265668751807e-17, 0.0050344624983226565], 'false': [1.2335811384723961e-17, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(B).;true;true
0;false;movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- actor(A), director(B).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(B).;true;true
3;false;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(B).;true;true
4;false;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(B).;true;true
5;false;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(B).;true;true
7;false;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- actor(B).;true;true
9;false;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048766;  // std dev = 8.02e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.1254446385283916;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360625;  // std dev = 5.58e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( female(A) )
%   | then return 0.4997262021679602;  // std dev = 0.185, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.5362897848908588;  // std dev = 0.111, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42434638573760197;  // std dev = 0.026, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.17467651500736983;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10245307360111405;  // std dev = 0.076, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09261924948782337;  // std dev = 4.83e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32535321256655203;  // std dev = 0.023, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1531374767545327;  // std dev = 0.004, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2583399916782657;  // std dev = 0.020, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1331571420440519;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08582683517819777;  // std dev = 0.058, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21199481564116798;  // std dev = 0.018, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11941300654555291;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.08003798014348992;  // std dev = 0.076, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1787367927390434;  // std dev = 0.016, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10683732538988881;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07475258138597597;  // std dev = 0.087, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15398785687615923;  // std dev = 0.014, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0968501407260837;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.0691542158886556;  // std dev = 0.067, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06389682557766968;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13497800840525834;  // std dev = 0.012, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08939083718956847;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067717
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.135573148727417 seconds
Total inference time: 2.963 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065576
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.436 seconds
Refined model CLL: -0.065576


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06973
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.137604209899902 seconds
Total inference time: 2.902 seconds
AUC ROC: 1.0
Total revision time: 9.137604209899902
Best scored revision CLL: -0.065127


Dataset: 4_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:11:01
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06973, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 9.137604209899902, 'Inference time': 2.902, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06973, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.1800310611724854, 'Inference time': 2.902}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.30e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1254446385283916;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.11231637819360626;  // std dev = 5.77e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1015963294878363;  // std dev = 2.58e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926092;  // std dev = 5.87e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08858726090507647;  // std dev = 0.305, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07853018491472982;  // std dev = 2.98e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07303228505318744;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06823967886931462;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A) )
%   | then return -0.06402656034120903;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return -0.13737272174942944;  // std dev = 0.328, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06747
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.133765935897827 seconds
Total inference time: 2.971 seconds
AUC ROC: 1.0


Dataset: 4_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:11:08
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06747, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.133765935897827, 'Inference time': 2.971}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos  examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 6.99e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( female(A) )
%   | then return 0.8164822684328453;  // std dev = 0.200, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283914;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7237321131963372;  // std dev = 0.028, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.27719369136570265;  // std dev = 0.013, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5595631808348953;  // std dev = 0.034, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.22266473662960157;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11369480939860728;  // std dev = 0.115, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42064809292947564;  // std dev = 0.034, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1861905621453037;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.10251170901212467;  // std dev = 0.107, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09249854776498072;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.322846905088642;  // std dev = 0.031, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.16036071500695948;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08502116023605312;  // std dev = 3.94e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.256634044068863;  // std dev = 0.027, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14202629734989103;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0786362638048494;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2107930867296143;  // std dev = 0.023, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12520560344435197;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07312433670916871;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17785760943562537;  // std dev = 0.020, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11212344369488582;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15332237349635286;  // std dev = 0.018, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10043059051727729;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.0694241120135794;  // std dev = 0.075, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1344594577516726;  // std dev = 0.016, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09380412020588068;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then return -0.06403150179325491;  // std dev = 1.97e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return -0.18415360696010177;  // std dev = 0.483, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073388
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 3.2947731018066406 seconds
Total inference time: 3.096 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065423
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.403 seconds
Parameter learned model CLL: -0.065423


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'actor(B)', 'false': 'female(A)'}, {'true': [6.99e-08, 71, 0], 'false,true': [0.2, 1, 23], 'false,false': [5.96e-08, 0, 22]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 91, 0], 'false,true': [0.028, 0, 45], 'false,false': [0.013, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.034, 0, 45], 'true,false': [0.006, 4, 0], 'false': [0.115, 84, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.034, 0, 45], 'true,false': [0.006, 5, 0], 'false': [0.107, 103, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 87, 0], 'false,true': [0.031, 0, 45], 'false,false': [0.005, 3, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [3.94e-08, 88, 0], 'false,true': [0.027, 0, 45], 'false,false': [0.004, 4, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 87, 0], 'false,true': [0.023, 0, 45], 'false,false': [0.004, 3, 0]}], ['workedunder(A, B)', {'': 'actor(B)', 'false': 'movie(C, A), movie(C, B)'}, {'true': [0.0, 97, 0], 'false,true': [0.02, 0, 45], 'false,false': [0.005, 6, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true': [0.018, 0, 45], 'true,false': [0.004, 5, 0], 'false': [0.075, 97, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'false': 'actor(A)'}, {'true,true': [0.016, 0, 45], 'true,false': [0.0, 3, 0], 'false,true': [1.97e-08, 78, 0], 'false,false': [0.483, 5, 0]}]]
[{'': [6.880255363874209e-17, 0.021266540642723226], 'false': [0.039930555555556024, 1.6148698540002277e-16]}, {'': [-1.4640303621430636e-17, 0.14905312738647014], 'false': [1.7347989122463838e-05, 1.6662297853065055e-05]}, {'': [0.045896929686033656, 0.00015770602471447206], 'true': [2.6350181504379103e-05, 9.86403570326505e-06]}, {'': [0.03316661460108348, 0.00011056224017817576], 'true': [2.5758945558251868e-05, 6.477537139820688e-06]}, {'': [-2.5522368382187506e-18, 0.013700901935573847], 'false': [2.0724508472251083e-05, 7.059481045794865e-06]}, {'': [1.766263902812749e-17, 0.01192967044521202], 'false': [1.577928749952267e-05, 4.761236716662592e-06]}, {'': [-3.317907889684376e-17, 0.006626482595975004], 'false': [1.1997809280403813e-05, 4.579585186507973e-06]}, {'': [-2.6324875841627422e-17, 0.008737586164784527], 'false': [9.26856258993938e-06, 3.781850643510646e-06]}, {'': [0.005802067411112353, 5.7876614377348197e-05], 'true': [7.304571303640767e-06, 3.4228982584247338e-06]}, {'': [0.0030584877612351963, 0.003623336437449217], 'false': [4.981769982292369e-18, 0.046587300865539215], 'true': [5.870631443547245e-06, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- actor(B).;true;true
0;false;female(A).;true;true
1;;workedunder(A, B) :- actor(B).;true;true
1;false;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
3;true;movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- actor(B).;true;true
4;false;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- actor(B).;true;true
5;false;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(B).;true;true
6;false;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- actor(B).;true;true
7;false;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- actor(A), director(B).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true
9;false;actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.56e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( female(A) )
%   | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.8146706742299468;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839147;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7237223348029779;  // std dev = 0.029, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2783538432817608;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 6.99e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5595550873766878;  // std dev = 0.036, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.22286046873335366;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783616;  // std dev = 5.77e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( female(A) )
%   | then return 0.41546303948912644;  // std dev = 6.66e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.39951567584155084;  // std dev = 0.124, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926094;  // std dev = 5.16e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.325703356167782;  // std dev = 0.044, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.25900086125246446;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 5.16e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( female(A) )
%   | then return 0.23345550982820593;  // std dev = 0.094, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.2439356672154708;  // std dev = 0.096, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109165;  // std dev = 4.47e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( female(A) )
%   | then return 0.19188910977028054;  // std dev = 0.094, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.1993578910481846;  // std dev = 0.096, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( female(A) )
%   | then return 0.14297898481556068;  // std dev = 0.130, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.1874811683146992;  // std dev = 2.36e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420267;  // std dev = 3.73e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( female(A) )
%   | then return 0.1406202613806897;  // std dev = 0.098, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.16057690803758276;  // std dev = 2.11e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.141519673038565;  // std dev = 0.009, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.36212565331046376;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.993093
   AUC PR    = 0.649298
   CLL	      = -0.109955
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 3.7600698471069336 seconds
Total inference time: 2.847 seconds
AUC ROC: 0.993093


Results scoring model
   AUC ROC   = 0.998906
   AUC PR    = 0.897839
   CLL	      = -0.078267
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.348 seconds
Refined model CLL: -0.078267


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073388
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 9.805842948913575 seconds
Total inference time: 3.096 seconds
AUC ROC: 1.0
Total revision time: 9.805842948913575
Best scored revision CLL: -0.065423


Dataset: 4_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:11:28
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073388, 'Precision': [0.742291, 0.5], 'Recall': 1.0, 'F1': 0.852086, 'Learning time': 9.805842948913575, 'Inference time': 3.096, 'parameter': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073388, 'Precision': [0.742291, 0.5], 'Recall': 1.0, 'F1': 0.852086, 'Learning time': 3.2947731018066406, 'Inference time': 3.096}}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048766;  // std dev = 7.45e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.12544463852839144;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 6.32e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783626;  // std dev = 4.71e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09269127618926107;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839679;  // std dev = 2.98e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( female(A) )
%   | then return 0.22794368305285861;  // std dev = 0.092, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.2551722425694895;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109164;  // std dev = 4.47e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2120827906177435;  // std dev = 0.015, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10642983703037945;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17880086558575092;  // std dev = 0.013, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09632893015255098;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07351586763908645;  // std dev = 0.024, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06840979159663793;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1540361638093018;  // std dev = 0.012, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08862869214849506;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1350155177664744;  // std dev = 0.011, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08189573141894432;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06442629464327618;  // std dev = 0.020, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068936
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.2415859699249268 seconds
Total inference time: 2.843 seconds
AUC ROC: 1.0


Dataset: 4_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:11:34
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068936, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 3.2415859699249268, 'Inference time': 2.843}


