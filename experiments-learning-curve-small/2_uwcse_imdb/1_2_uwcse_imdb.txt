Starting experiment #1 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( publication(C, D), ta(E, D, F) )
%   | | then if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.6581489350995122;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return 0.858148935099512;  // std dev = 1.03e-07, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( publication(J, A), publication(K, B) )
%   | | then if ( publication(J, L), professor(L) )
%   | | | then return 0.12130682983635446;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( ta(M, A, N) )
%   | | | then return 0.7369368138873904;  // std dev = 1.875, 33.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=29 */
%   | | | else return 0.5389999989292985;  // std dev = 3.196, 47.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=32 */
%   else return -0.14185106490048807;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.7194734122109543;  // std dev = 5.96e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.46822511450864773;  // std dev = 1.728, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return 0.7291098928136793;  // std dev = 0.058, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(H, A), publication(I, B) )
%   | | then if ( publication(H, J), professor(J) )
%   | | | then return 0.0700041350220289;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.6242148193795789;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( tempadvisedby(K, B), publication(L, K) )
%   | | | then return 0.2657271860410937;  // std dev = 1.402, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.48298319290173236;  // std dev = 3.998, 79.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=57 */
%   else return -0.12544463852839136;  // std dev = 2.98e-08, 179.000 (wgt'ed) examples reached here.  /* #neg=179 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(C, D) )
%   | | then return 0.38557755475331057;  // std dev = 0.840, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.5765191643865365;  // std dev = 0.215, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( publication(E, A) )
%   | | then if ( publication(E, F), professor(F) )
%   | | | then return 0.09396571801455106;  // std dev = 2.539, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return 0.42122145698360264;  // std dev = 1.256, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( projectmember(G, B) )
%   | | | then return 0.6764191892176562;  // std dev = 0.040, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3529046959625586;  // std dev = 3.951, 73.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=50 */
%   else return -0.11231637819360639;  // std dev = 6.99e-08, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), tempadvisedby(D, B) )
%   | then if ( publication(C, A) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.46165465227007496;  // std dev = 0.221, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.30530119393073607;  // std dev = 1.544, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | | else if ( publication(G, A), ta(H, D, I) )
%   | | | then return -0.22070009541553404;  // std dev = 0.262, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.23662731274867072;  // std dev = 3.181, 50.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=31 */
%   | else if ( publication(J, A) )
%   | | then if ( publication(J, K), professor(K) )
%   | | | then return 0.2726606212135712;  // std dev = 2.332, 32.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=21 */
%   | | | else return 0.549469949550645;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(L, B) )
%   | | | then return 0.2599025499571688;  // std dev = 1.205, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.4670958563332822;  // std dev = 1.622, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   else return -0.10159632948783645;  // std dev = 0.000, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( hasposition(D, C), projectmember(E, D) )
%   | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | then if ( publication(I, B), publication(I, D) )
%   | | | then return 0.13703778168886233;  // std dev = 1.114, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.3923017493521563;  // std dev = 1.323, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | else if ( sameperson(B, D) )
%   | | | then return 0.554127602372028;  // std dev = 0.115, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.18998524353006493;  // std dev = 4.019, 86.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=60 */
%   | else if ( publication(J, A), publication(K, B) )
%   | | then return 0.3307618667194462;  // std dev = 0.655, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( ta(L, A, M) )
%   | | | then return 0.040305927790371364;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.09314633988439763;  // std dev = 1.365, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else if ( ta(N, A, P) )
%   | then return -0.10022631885810444;  // std dev = 0.051, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.09147354461008554;  // std dev = 0.062, 135.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=1 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, D), tempadvisedby(D, E) )
%   | | then if ( ta(F, D, G), publication(C, E) )
%   | | | then return 0.2834393073584029;  // std dev = 0.845, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.0019518945196819225;  // std dev = 2.161, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | else if ( publication(H, A), ta(I, A, J) )
%   | | | then return 0.18982252863554738;  // std dev = 1.520, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return 0.3065397020482874;  // std dev = 2.356, 71.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=64 */
%   | else if ( publication(K, A) )
%   | | then if ( ta(L, A, M) )
%   | | | then return -0.1504056114551;  // std dev = 1.072, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.28442779552672376;  // std dev = 0.931, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( tempadvisedby(N, B), ta(P, N, Q) )
%   | | | then return 0.017528693542290474;  // std dev = 0.853, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.13233068672864803;  // std dev = 1.917, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   else return -0.08513120225081273;  // std dev = 0.004, 197.000 (wgt'ed) examples reached here.  /* #neg=197 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B), publication(G, F) )
%   | | | then return 0.3397572522099281;  // std dev = 0.173, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.015272728219397165;  // std dev = 1.625, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else if ( tempadvisedby(H, B) )
%   | | | then return 0.195873026340047;  // std dev = 0.956, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.24674077118501847;  // std dev = 0.050, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(I, B), publication(J, A) )
%   | | then if ( projectmember(K, B) )
%   | | | then return 0.4140609822044227;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.18303610968548842;  // std dev = 1.752, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | else if ( ta(L, A, M), publication(N, B) )
%   | | | then return 0.14577715866120766;  // std dev = 2.607, 39.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=30 */
%   | | | else return 0.05320710619007208;  // std dev = 3.642, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   else return -0.07870772630291858;  // std dev = 0.004, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.1931507317246156;  // std dev = 0.117, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.318962988380209;  // std dev = 0.036, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2286545659292666;  // std dev = 0.144, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( tempadvisedby(I, B), publication(J, B) )
%   | | then if ( ta(K, A, L), ta(K, I, M) )
%   | | | then return -0.3266376257512676;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.13849455954051013;  // std dev = 2.477, 44.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=30 */
%   | | else if ( ta(N, A, P) )
%   | | | then return -0.011088327862881466;  // std dev = 2.629, 30.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=18 */
%   | | | else return 0.08980478434070802;  // std dev = 2.719, 36.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=23 */
%   else return -0.07321001164176207;  // std dev = 0.003, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( ta(D, A, E), publication(F, B) )
%   | then if ( tempadvisedby(G, B) )
%   | | then if ( ta(H, G, E) )
%   | | | then return 0.24201538112850995;  // std dev = 0.172, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.15733907187204793;  // std dev = 1.761, 28.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=23 */
%   | | else if ( ta(D, I, J), tempadvisedby(I, K) )
%   | | | then return 0.21623660040175918;  // std dev = 0.862, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.39324807062243383;  // std dev = 0.482, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(L, A), publication(L, B) )
%   | | then return 0.17590859185243932;  // std dev = 0.031, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else if ( publication(M, A), publication(N, B) )
%   | | | then return -0.2012476127941275;  // std dev = 1.627, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | | else return 0.12249271941723434;  // std dev = 2.901, 47.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=34 */
%   else if ( ta(P, A, Q) )
%   | then return -0.07667219227583581;  // std dev = 0.062, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.06494554332408109;  // std dev = 0.045, 162.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=1 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then if ( ta(E, C, F), publication(D, B) )
%   | | then return -0.260385979863117;  // std dev = 1.302, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( publication(G, A), publication(G, B) )
%   | | | then return 0.07746667549808707;  // std dev = 0.961, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.2647659983394962;  // std dev = 1.181, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( publication(H, A) )
%   | | then if ( publication(H, B) )
%   | | | then return 0.16105493499699117;  // std dev = 0.160, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return 0.008152393130480926;  // std dev = 2.588, 35.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=17 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.26879550315082007;  // std dev = 0.984, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | | else return 0.14704019421153544;  // std dev = 1.974, 28.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=23 */
%   else return -0.06420223935273073;  // std dev = 0.007, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */


Starting fold 1

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos	 examples: 56
Target test neg examples: 3308

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583099;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.023790755631025878;  // std dev = 0.154, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.26932114521402895;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09070977761578683;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.21988205462710556;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08350049674800492;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18460064037347698;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07732858878256614;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.14867666923878964;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.027034678977782712;  // std dev = 0.101, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.14507062977920795;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0702031650614777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077622
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.567 seconds
Total inference time: 0.899 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102769
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.328 seconds
Parameter learned model CLL: -0.102769


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [5.27e-09, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.154, 5, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.063, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.056, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.022, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 0], 'false': [0.101, 5, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.064, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [-4.4408920985006264e-17, nan], 'true,true': [-4.4408920985006264e-17, nan]}, {'': [4.4408920985006264e-17, 0.0], 'true': [4.4408920985006264e-17, nan], 'true,true': [4.4408920985006264e-17, nan]}, {'': [0.0, 0.023736408665978894], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0008007657841786142, 2.7755575615628915e-18], 'true': [0.0008007657841786142, nan], 'true,true': [0.0008007657841786142, nan], 'true,true,true': [0.0008007657841786142, nan]}, {'': [0.0006210086063809017, 0.0], 'true': [0.0006210086063809017, nan], 'true,true': [0.0006210086063809017, nan]}, {'': [0.0004852223481672635, 0.0], 'true': [0.0004852223481672635, nan]}, {'': [0.0, 0.010104221444053017], 'true': [0.0, nan]}, {'': [0.0008118917192243946, 0.0], 'true': [0.0008118917192243946, nan], 'true,true': [0.0008118917192243946, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.023790755631025878;  // std dev = 0.377, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.26932114521402895;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09070977761578683;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.21988205462710556;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08350049674800492;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.18460064037347698;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07732858878256614;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.14867666923878964;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.027034678977782712;  // std dev = 0.246, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.14507062977920795;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0702031650614777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.983525
   AUC PR    = 0.339394
   CLL	      = -0.136745
   Precision = 0.339394 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.506787


Total learning time: 0.478 seconds
Total inference time: 0.717 seconds
AUC ROC: 0.983525


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102769
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.308 seconds
Refined model CLL: -0.102769


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077622
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.681 seconds
Total inference time: 0.899 seconds
AUC ROC: 1.0
Total revision time: 1.681
Best scored revision CLL: -0.102769


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:00:03
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.077622, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.681, 'Inference time': 0.899, 'parameter_5': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.077622, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.567, 'Inference time': 0.899}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.2616542581102339;  // std dev = 0.383, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03450968484132694;  // std dev = 0.191, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.24864960615442436;  // std dev = 0.390, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09563460663628548;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2374510135037581;  // std dev = 0.064, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.14542987577165287;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08767709229601989;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19723809210012946;  // std dev = 0.018, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, B) )
%   | | then return -0.12827088369151338;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08091269193334906;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.11653263928012769;  // std dev = 0.094, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.005608458926524388;  // std dev = 0.121, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.13279649800654886;  // std dev = 0.282, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07548644156491618;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076608
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.714 seconds
Total inference time: 0.948 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.117179
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.385 seconds
Parameter learned model CLL: -0.117179


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 10], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 10], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.383, 1, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.191, 9, 4]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.39, 1, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.064, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.73e-09, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.018, 0, 10], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.27e-09, 9, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.094, 1, 6], 'true,false': [0.0, 0, 0], 'false': [0.121, 9, 4]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.282, 1, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 9, 0]}]]
[{'': [0.0826446280991734, -9.25185853854297e-18], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.058998885327700486, 0.0], 'true': [8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.036843003418682206, -1.5419764230904951e-18], 'true': [-1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.7763568394002506e-16, nan]}, {'': [0.02227066962361243, 3.0839528461809902e-18], 'true': [0.02227066962361243, nan], 'true,true': [1.3322676295501878e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.02092679294633239, 0.03640519009598654], 'true': [0.02092679294633239, nan], 'true,true': [0.02092679294633239, nan]}, {'': [0.013857517458532224, 3.0839528461809902e-18], 'true': [0.013857517458532224, nan], 'true,true': [0.013857517458532224, nan], 'true,true,true': [0.013857517458532224, nan]}, {'': [0.012492001468661756, 1.5419764230904951e-18], 'true': [0.00041413112713434286, 0.0], 'true,true': [0.00041413112713434286, nan], 'true,false': [0.0, nan]}, {'': [0.009045486321836686, 3.0839528461809902e-18], 'true': [0.00031766283393632746, 0.0], 'true,false': [0.0, nan]}, {'': [0.008903609916449092, 0.014654710104086918], 'true': [0.008903609916449092, nan]}, {'': [0.007208191761721736, 7.709882115452476e-19], 'true': [0.007208191761721736, nan], 'true,true': [0.007208191761721736, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.37032177382684206;  // std dev = 0.149, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0.288187501476636;  // std dev = 0.136, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2297148783164822;  // std dev = 0.129, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22772306651441815;  // std dev = 1.49e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.21561798225690687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109175;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19016537001653297;  // std dev = 1.05e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.18138294105261676;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0.13362599263205435;  // std dev = 0.092, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.11614867207133117;  // std dev = 0.092, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.06419184008202618;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068655
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.673 seconds
Total inference time: 0.753 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.109121
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.321 seconds
Refined model CLL: -0.109121


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068655
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.093 seconds
Total inference time: 0.753 seconds
AUC ROC: 1.0
Total revision time: 2.093
Best scored revision CLL: -0.109121


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:00:08
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068655, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.093, 'Inference time': 0.753, 'parameter_10': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076608, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.714, 'Inference time': 0.948}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 1.49e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 9.13e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583098;  // std dev = 1.18e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.283129745037476;  // std dev = 0.394, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.01609901942900502;  // std dev = 0.182, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.25565465371580814;  // std dev = 0.400, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09405410433917648;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.23217843293368157;  // std dev = 0.089, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.149005301578339;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08634015973149366;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19347505977485735;  // std dev = 0.020, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, B) )
%   | | then return -0.1310815858586169;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07976798053937616;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.12803461633107643;  // std dev = 0.077, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.004518866008483557;  // std dev = 0.116, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.13696047672832418;  // std dev = 0.294, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07379596451695812;  // std dev = 5.27e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075204
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.67 seconds
Total inference time: 0.952 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.112941
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.373 seconds
Parameter learned model CLL: -0.112941


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [1.49e-08, 0, 15], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.27e-09, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.13e-09, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 15], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.394, 1, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.182, 14, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.4, 1, 15], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.089, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.02, 0, 15], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.73e-09, 14, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.077, 1, 10], 'true,false': [0.0, 0, 0], 'false': [0.116, 14, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.294, 1, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 14, 0]}]]
[{'': [0.05859374999999978, -7.93016446160826e-18], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.041829287839756535, 1.982541115402065e-18], 'true': [1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.02612111375191717, 5.9476233462061954e-18], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.015789556783928405, 0.0], 'true': [0.015789556783928405, nan], 'true,true': [1.4802973661668753e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.014124143999590711, 0.03313891957798716], 'true': [0.014124143999590711, nan], 'true,true': [0.014124143999590711, nan]}, {'': [0.010004387338065523, -9.912705577010326e-19], 'true': [0.010004387338065523, nan], 'true,true': [0.010004387338065523, nan], 'true,true,true': [0.010004387338065523, nan]}, {'': [0.009006104015198538, -2.9738116731030977e-18], 'true': [0.0005251959835119428, 0.0], 'true,true': [0.0005251959835119428, nan], 'true,false': [0.0, nan]}, {'': [0.006551722142516925, 9.912705577010326e-19], 'true': [0.00040494010463144235, 0.0], 'true,false': [0.0, nan]}, {'': [0.0059973181102113285, 0.01355840975130821], 'true': [0.0059973181102113285, nan]}, {'': [0.005392132499383143, 1.982541115402065e-18], 'true': [0.005392132499383143, nan], 'true,true': [0.005392132499383143, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360638;  // std dev = 9.13e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.37032177382684206;  // std dev = 0.149, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.288187501476636;  // std dev = 0.136, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926097;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2297148783164822;  // std dev = 0.129, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22173461622045731;  // std dev = 0.033, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.21561798225690687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18584548164262849;  // std dev = 0.029, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.18138294105261676;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.13490635128129927;  // std dev = 0.092, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.15008091666333234;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11715385207226504;  // std dev = 0.092, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.13192466384686985;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06419184008202619;  // std dev = 5.27e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06889
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.779 seconds
Total inference time: 0.891 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104345
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.332 seconds
Refined model CLL: -0.104345


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06889
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.154 seconds
Total inference time: 0.891 seconds
AUC ROC: 1.0
Total revision time: 2.154
Best scored revision CLL: -0.104345


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:00:12
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06889, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.154, 'Inference time': 0.891, 'parameter_15': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075204, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.67, 'Inference time': 0.952}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1.58e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.29315163893685564;  // std dev = 0.399, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.006525473414597625;  // std dev = 0.177, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.259120320931274;  // std dev = 0.407, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09324152646401342;  // std dev = 7.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2293224418060505;  // std dev = 0.107, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.1507236698496583;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08565154604145349;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19142653237310644;  // std dev = 0.021, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then return -0.13242791761142325;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07917743544922426;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.13346073100182151;  // std dev = 0.067, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.009844900824241555;  // std dev = 0.113, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.13902730468452035;  // std dev = 0.303, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07292531141263617;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07448
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.671 seconds
Total inference time: 0.975 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.110613
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.378 seconds
Parameter learned model CLL: -0.110613


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [1.49e-08, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.58e-08, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 20], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.399, 1, 14], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.177, 19, 6]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.407, 1, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 19, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.107, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.021, 0, 20], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.067, 1, 14], 'true,false': [0.0, 0, 0], 'false': [0.113, 19, 6]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.303, 1, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}]]
[{'': [0.04535147392290242, -5.843279076974508e-18], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.03237580555397633, 2.921639538487254e-18], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.02021770255628346, 1.3147377923192643e-17], 'true': [-2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.6645352591003756e-16, nan]}, {'': [0.012221093081438202, -5.843279076974508e-18], 'true': [0.012221093081438202, nan], 'true,true': [1.3322676295501878e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.010633911082358515, 0.031172550772856775], 'true': [0.010633911082358515, nan], 'true,true': [0.010633911082358515, nan]}, {'': [0.007896737860492779, 2.921639538487254e-18], 'true': [0.007896737860492779, nan], 'true,true': [0.007896737860492779, nan], 'true,true,true': [0.007896737860492779, nan]}, {'': [0.007092805425683357, -1.460819769243627e-18], 'true': [0.0005695863167473503, 0.0], 'true,true': [0.0005695863167473503, nan], 'true,false': [0.0, nan]}, {'': [0.005176032599623282, -4.382459307730881e-18], 'true': [0.0004404673355671906, 0.0], 'true,false': [0.0, nan]}, {'': [0.00451443710385571, 0.012869047451762532], 'true': [0.00451443710385571, nan]}, {'': [0.004372149966985032, -7.304098846218135e-19], 'true': [0.004372149966985032, nan], 'true,true': [0.004372149966985032, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360635;  // std dev = 1.58e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.38043430461215655;  // std dev = 0.134, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.2952147552984745;  // std dev = 0.121, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.09269127618926096;  // std dev = 7.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.23516924660370822;  // std dev = 0.116, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.08518475138839685;  // std dev = 1.05e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21886830164013574;  // std dev = 0.030, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.21946380782085897;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109173;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1837584466396722;  // std dev = 0.026, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1841833987298778;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13875647247653294;  // std dev = 0.082, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.15071384501131901;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.06842697784420272;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.12072637141945848;  // std dev = 0.083, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.13242022814520693;  // std dev = 3.73e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.06419184008202619;  // std dev = 8.33e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068916
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.762 seconds
Total inference time: 0.787 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102072
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.349 seconds
Refined model CLL: -0.102072


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068916
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.16 seconds
Total inference time: 0.787 seconds
AUC ROC: 1.0
Total revision time: 2.16
Best scored revision CLL: -0.102072


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:00:17
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068916, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.16, 'Inference time': 0.787, 'parameter_20': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.07448, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.671, 'Inference time': 0.975}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 2.36e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1.29e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.2989537880364964;  // std dev = 0.402, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 6.578161799607391E-4;  // std dev = 0.173, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2611858861461465;  // std dev = 0.413, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09274661309383415;  // std dev = 7.45e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22753905963516555;  // std dev = 0.122, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.15173355480470269;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08523171331503927;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19014356282734504;  // std dev = 0.021, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, B) )
%   | | then return -0.1332178068826342;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0788170786028098;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.13662440437191936;  // std dev = 0.060, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.01313191725548673;  // std dev = 0.111, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1402583992854074;  // std dev = 0.311, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07239438501918906;  // std dev = 1.29e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074038
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.686 seconds
Total inference time: 0.946 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.109148
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.398 seconds
Parameter learned model CLL: -0.109148


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [2.36e-08, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.29e-08, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.402, 1, 18], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.173, 24, 7]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.413, 1, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 24, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.122, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.021, 0, 25], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.06, 1, 18], 'true,false': [0.0, 0, 0], 'false': [0.111, 24, 7]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.311, 1, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.29e-08, 24, 0]}]]
[{'': [0.03698224852071082, 6.938893903907228e-18], 'true': [7.105427357601002e-16, 0.0], 'true,true': [7.105427357601002e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.026401128419570055, -2.3129646346357427e-18], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.016486699015016572, 9.25185853854297e-18], 'true': [-2.842170943040401e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.842170943040401e-16, nan]}, {'': [0.009965795208791005, -3.469446951953614e-18], 'true': [0.009965795208791005, nan], 'true,true': [-3.552713678800501e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.008521436462911007, 0.02987675330111143], 'true': [0.008521436462911007, nan], 'true,true': [0.008521436462911007, nan]}, {'': [0.006572013476992621, 2.3129646346357427e-18], 'true': [0.006572013476992621, nan], 'true,true': [0.006572013476992621, nan], 'true,true,true': [0.006572013476992621, nan]}, {'': [0.005888034552386341, 0.0], 'true': [0.0005909514704797481, 0.0], 'true,true': [0.0005909514704797481, nan], 'true,false': [0.0, nan]}, {'': [0.0043072045744950455, 0.0], 'true': [0.00045785524129354104, 0.0], 'true,false': [0.0, nan]}, {'': [0.0036180753792807016, 0.012404354968648319], 'true': [0.0036180753792807016, nan]}, {'': [0.0037219975779915117, 6.938893903907228e-18], 'true': [0.0037219975779915117, nan], 'true,true': [0.0037219975779915117, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048774;  // std dev = 1.29e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360636;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.3850692145554257;  // std dev = 0.126, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2984246790471678;  // std dev = 0.114, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09269127618926103;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2376682048880379;  // std dev = 0.109, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839683;  // std dev = 1.39e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21709254325071264;  // std dev = 0.030, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.22124083439002482;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109173;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1824642555175222;  // std dev = 0.026, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.18547412402163294;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.14062857789764197;  // std dev = 0.077, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.15110721753819423;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06842697784420275;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.12245838310132535;  // std dev = 0.078, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.1327280296385096;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.0641918400820262;  // std dev = 6.45e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068931
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.819 seconds
Total inference time: 0.779 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100645
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.346 seconds
Refined model CLL: -0.100645


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068931
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.249 seconds
Total inference time: 0.779 seconds
AUC ROC: 1.0
Total revision time: 2.249
Best scored revision CLL: -0.100645


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:00:21
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068931, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.249, 'Inference time': 0.779, 'parameter_25': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.074038, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.686, 'Inference time': 0.946}}


Starting fold 2

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos	 examples: 58
Target test neg examples: 3423

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583099;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075901
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.573 seconds
Total inference time: 0.91 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.335 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [5.27e-09, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [-4.4408920985006264e-17, nan], 'true,true': [-4.4408920985006264e-17, nan]}, {'': [4.4408920985006264e-17, 0.0], 'true': [4.4408920985006264e-17, nan], 'true,true': [4.4408920985006264e-17, nan]}, {'': [-2.2204460492503132e-17, 1.3877787807814458e-18], 'true': [-2.2204460492503132e-17, nan], 'true,true': [-2.2204460492503132e-17, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}, {'': [-5.551115123125783e-18, -1.3877787807814458e-18], 'true': [-5.551115123125783e-18, nan], 'true,true': [-5.551115123125783e-18, nan]}, {'': [0.0, -6.938893903907229e-19], 'true': [0.0, nan]}, {'': [0.0, 6.938893903907229e-19], 'true': [0.0, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'true,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.159504
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 0.474 seconds
Total inference time: 0.725 seconds
AUC ROC: 0.976337


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.316 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075901
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.698 seconds
Total inference time: 0.91 seconds
AUC ROC: 1.0
Total revision time: 1.698
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:00:25
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075901, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.698, 'Inference time': 0.91, 'parameter_5': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075901, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.573, 'Inference time': 0.91}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.002709444583679941;  // std dev = 0.174, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2746571296024751;  // std dev = 0.094, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09291939100796998;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22363156205746998;  // std dev = 0.083, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08537831635817641;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1873332381895923;  // std dev = 0.023, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07894294013259427;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.14718703323795257;  // std dev = 1.86e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.012209666967526324;  // std dev = 0.112, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1488452362597697;  // std dev = 0.093, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07256437534687589;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083574
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.657 seconds
Total inference time: 0.919 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.105599
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.341 seconds
Parameter learned model CLL: -0.105599


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [1.18e-08, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 10, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.174, 10, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.094, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 10, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.083, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.023, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [1.86e-09, 0, 7], 'true,false': [0.0, 0, 0], 'false': [0.112, 10, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.093, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 10, 0]}]]
[{'': [-8.881784197001253e-17, -1.1102230246251566e-17], 'true': [-8.881784197001253e-17, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [8.881784197001253e-17, 2.7755575615628915e-18], 'true': [8.881784197001253e-17, nan]}, {'': [-1.7763568394002506e-16, 0.0], 'true': [-1.7763568394002506e-16, nan], 'true,true': [-1.7763568394002506e-16, nan]}, {'': [1.3322676295501878e-16, 1.3877787807814458e-18], 'true': [1.3322676295501878e-16, nan], 'true,true': [1.3322676295501878e-16, nan]}, {'': [-3.172065784643304e-17, 0.03033765841332212], 'true': [-3.172065784643304e-17, nan], 'true,true': [-3.172065784643304e-17, nan]}, {'': [0.0008858752529391945, 1.3877787807814458e-18], 'true': [0.0008858752529391945, nan], 'true,true': [0.0008858752529391945, nan], 'true,true,true': [0.0008858752529391945, nan]}, {'': [0.0006811242993782218, 1.3877787807814458e-18], 'true': [0.0006811242993782218, nan], 'true,true': [0.0006811242993782218, nan]}, {'': [0.000528222857329147, -2.7755575615628915e-18], 'true': [0.000528222857329147, nan]}, {'': [3.96508223080413e-18, 0.012476928734031433], 'true': [3.96508223080413e-18, nan]}, {'': [0.0008593922148943334, 6.938893903907229e-19], 'true': [0.0008593922148943334, nan], 'true,true': [0.0008593922148943334, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( director(B), actor(A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07877675473109173;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527736;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.152743858093671;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( director(B), actor(A) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06419184008202619;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.159504
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 0.576 seconds
Total inference time: 0.777 seconds
AUC ROC: 0.976337


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.311 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.159504
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 1.8849999999999998 seconds
Total inference time: 0.777 seconds
AUC ROC: 0.976337
Total revision time: 1.8849999999999998
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:00:29
{'AUC ROC': 0.976337, 'AUC PR': 0.263636, 'CLL': -0.159504, 'Precision': [0.263636, 0.5], 'Recall': 1.0, 'F1': 0.417266, 'Learning time': 1.8849999999999998, 'Inference time': 0.777, 'parameter_10': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.083574, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.657, 'Inference time': 0.919}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 1.49e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583098;  // std dev = 1.18e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.023790755631025864;  // std dev = 0.154, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2693211452140289;  // std dev = 0.110, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09070977761578682;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.21988205462710556;  // std dev = 0.097, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08350049674800489;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18460064037347695;  // std dev = 0.022, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07732858878256613;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.14867666923878967;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.02703467897778271;  // std dev = 0.101, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1450706297792079;  // std dev = 0.110, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07020316506147771;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081419
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.689 seconds
Total inference time: 0.862 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102769
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.363 seconds
Parameter learned model CLL: -0.102769


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [1.49e-08, 0, 15], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.39e-08, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [1.18e-08, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 12], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.154, 15, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.11, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.13e-09, 15, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.097, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.13e-09, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.022, 0, 15], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 15, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.0, 0, 0], 'false': [0.101, 15, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.11, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}]]
[{'': [-2.3684757858670006e-16, -1.4802973661668754e-17], 'true': [-2.3684757858670006e-16, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [1.7763568394002506e-16, 3.7007434154171884e-18], 'true': [1.7763568394002506e-16, nan]}, {'': [-2.3684757858670006e-16, 1.295260195396016e-17], 'true': [-2.3684757858670006e-16, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [1.4802973661668753e-16, -5.551115123125783e-18], 'true': [1.4802973661668753e-16, nan], 'true,true': [1.4802973661668753e-16, nan]}, {'': [-5.551115123125783e-17, 0.023736408665978873], 'true': [-5.551115123125783e-17, nan], 'true,true': [-5.551115123125783e-17, nan]}, {'': [0.0008007657841786624, 5.551115123125783e-18], 'true': [0.0008007657841786624, nan], 'true,true': [0.0008007657841786624, nan], 'true,true,true': [0.0008007657841786624, nan]}, {'': [0.0006210086063809017, 5.551115123125783e-18], 'true': [0.0006210086063809017, nan], 'true,true': [0.0006210086063809017, nan]}, {'': [0.00048522234816726536, 1.8503717077085942e-18], 'true': [0.00048522234816726536, nan]}, {'': [-1.850371707708594e-17, 0.010104221444053011], 'true': [-1.850371707708594e-17, nan]}, {'': [0.0008118917192244039, -2.7755575615628915e-18], 'true': [0.0008118917192244039, nan], 'true,true': [0.0008118917192244039, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583098;  // std dev = 4.71e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3207118471601497;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( actor(A), director(B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.09269127618926096;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2551722425694894;  // std dev = 2.36e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08518475138839685;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.20975771563253562;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07877675473109172;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527741;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.15274385809367078;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( director(B), actor(A) )
%   | then return 0.15274385809367075;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.06842697784420272;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06419184008202619;  // std dev = 7.90e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.159504
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 0.585 seconds
Total inference time: 0.741 seconds
AUC ROC: 0.976337


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.317 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.159504
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 1.954 seconds
Total inference time: 0.741 seconds
AUC ROC: 0.976337
Total revision time: 1.954
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:00:33
{'AUC ROC': 0.976337, 'AUC PR': 0.263636, 'CLL': -0.159504, 'Precision': [0.263636, 0.5], 'Recall': 1.0, 'F1': 0.417266, 'Learning time': 1.954, 'Inference time': 0.741, 'parameter_15': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.081419, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.689, 'Inference time': 0.862}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.32071184716014967;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0387691296654248;  // std dev = 0.139, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2662788018348659;  // std dev = 0.118, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08948188917930675;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.21772720073352594;  // std dev = 0.104, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0824542060003973;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18301865446767723;  // std dev = 0.021, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07642701205477209;  // std dev = 6.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.14953676864322163;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0356718968387347;  // std dev = 0.092, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.14282400667671258;  // std dev = 0.121, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06888062581581966;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080208
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.67 seconds
Total inference time: 0.86 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101101
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.383 seconds
Parameter learned model CLL: -0.101101


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 20, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [1.49e-08, 0, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.49e-08, 20, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [1.18e-08, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [1.49e-08, 0, 17], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.139, 20, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.118, 0, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.104, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 20, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.021, 0, 20], 'true,false': [0.0, 0, 0], 'false': [6.45e-09, 20, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.0, 0, 17], 'true,false': [0.0, 0, 0], 'false': [0.092, 20, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.121, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0]}]]
[{'': [-8.881784197001253e-17, 2.7755575615628915e-18], 'true': [-8.881784197001253e-17, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [2.6645352591003756e-16, 0.0], 'true': [2.6645352591003756e-16, nan]}, {'': [-2.6645352591003756e-16, 1.1102230246251566e-17], 'true': [-2.6645352591003756e-16, nan], 'true,true': [-2.6645352591003756e-16, nan]}, {'': [1.3322676295501878e-16, -1.3877787807814458e-18], 'true': [1.3322676295501878e-16, nan], 'true,true': [1.3322676295501878e-16, nan]}, {'': [1.3061447348531253e-17, 0.01938398590492036], 'true': [1.3061447348531253e-17, nan], 'true,true': [1.3061447348531253e-17, nan]}, {'': [0.0006990153993868154, -6.938893903907228e-18], 'true': [0.0006990153993868154, nan], 'true,true': [0.0006990153993868154, nan], 'true,true,true': [0.0006990153993868154, nan]}, {'': [0.0005447340774191456, 2.7755575615628915e-18], 'true': [0.0005447340774191456, nan], 'true,true': [0.0005447340774191456, nan]}, {'': [0.0004274391257233057, 2.0816681711721684e-18], 'true': [0.0004274391257233057, nan]}, {'': [0.0, 0.008416852713591183], 'true': [0.0, nan]}, {'': [0.0007268728987001455, -6.938893903907229e-19], 'true': [0.0007268728987001455, nan], 'true,true': [0.0007268728987001455, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.11231637819360636;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830986;  // std dev = 5.16e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.32071184716014967;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( actor(A), director(B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.09269127618926094;  // std dev = 1.05e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25517224256948945;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.08518475138839683;  // std dev = 1.39e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2097577156325356;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07877675473109173;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527744;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07324622576333704;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.1527438580936708;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( director(B), actor(A) )
%   | then return 0.15274385809367075;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.06842697784420274;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.0641918400820262;  // std dev = 6.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.159504
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 0.647 seconds
Total inference time: 0.753 seconds
AUC ROC: 0.976337


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.325 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.159504
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 2.025 seconds
Total inference time: 0.753 seconds
AUC ROC: 0.976337
Total revision time: 2.025
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:00:37
{'AUC ROC': 0.976337, 'AUC PR': 0.263636, 'CLL': -0.159504, 'Precision': [0.263636, 0.5], 'Recall': 1.0, 'F1': 0.417266, 'Learning time': 2.025, 'Inference time': 0.753, 'parameter_20': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.080208, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.67, 'Inference time': 0.86}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 2.36e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.32071184716014955;  // std dev = 2.11e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04839808440182412;  // std dev = 0.128, 28.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.264313075011489;  // std dev = 0.124, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08870046613471844;  // std dev = 1.58e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.21632839044604624;  // std dev = 0.109, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08178730951121496;  // std dev = 9.13e-09, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.181987265854608;  // std dev = 0.019, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07585157152694035;  // std dev = 9.13e-09, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.15009668450879407;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04132677176159757;  // std dev = 0.085, 28.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.14133482964143962;  // std dev = 0.127, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06803502328549647;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079433
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.765 seconds
Total inference time: 0.963 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100001
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.384 seconds
Parameter learned model CLL: -0.100001


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.36e-08, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.83e-08, 25, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 25], 'true,false': [0.0, 0, 0], 'false': [0.0, 25, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 25, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 25, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [2.11e-08, 0, 22], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.128, 25, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.124, 0, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.58e-08, 25, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.109, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.13e-09, 25, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.019, 0, 25], 'true,false': [0.0, 0, 0], 'false': [9.13e-09, 25, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.0, 0, 22], 'true,false': [0.0, 0, 0], 'false': [0.085, 25, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.127, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 25, 0]}]]
[{'': [7.105427357601002e-16, 1.3322676295501878e-17], 'true': [7.105427357601002e-16, nan], 'true,true': [7.105427357601002e-16, nan]}, {'': [-7.105427357601002e-17, -4.440892098500626e-18], 'true': [-7.105427357601002e-17, nan]}, {'': [-2.842170943040401e-16, 0.0], 'true': [-2.842170943040401e-16, nan], 'true,true': [-2.842170943040401e-16, nan]}, {'': [-3.552713678800501e-17, -2.220446049250313e-18], 'true': [-3.552713678800501e-17, nan], 'true,true': [-3.552713678800501e-17, nan]}, {'': [2.0185873175002847e-17, 0.016349056989322173], 'true': [2.0185873175002847e-17, nan], 'true,true': [2.0185873175002847e-17, nan]}, {'': [0.0006127353300398663, 9.992007221626408e-18], 'true': [0.0006127353300398663, nan], 'true,true': [0.0006127353300398663, nan], 'true,true,true': [0.0006127353300398663, nan]}, {'': [0.0004789843172035457, 3.3306690738754695e-18], 'true': [0.0004789843172035457, nan], 'true,true': [0.0004789843172035457, nan]}, {'': [0.0003768781042439251, 3.3306690738754695e-18], 'true': [0.0003768781042439251, nan]}, {'': [-2.7755575615628914e-17, 0.007191180866895775], 'true': [-2.7755575615628914e-17, nan]}, {'': [0.0006476721658665929, -5.551115123125783e-18], 'true': [0.0006476721658665929, nan], 'true,true': [0.0006476721658665929, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.12544463852839138;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.11231637819360639;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.10159632948783635;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.32071184716014955;  // std dev = 2.11e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( director(B), actor(A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.09269127618926096;  // std dev = 9.13e-09, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25517224256948956;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.08518475138839682;  // std dev = 1.75e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.20975771563253554;  // std dev = 1.49e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07877675473109175;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527747;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07324622576333704;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.15274385809367083;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( director(B), actor(A) )
%   | then return 0.15274385809367075;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.06842697784420276;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06419184008202622;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.159504
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 0.62 seconds
Total inference time: 0.772 seconds
AUC ROC: 0.976337


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.327 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.159504
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 2.096 seconds
Total inference time: 0.772 seconds
AUC ROC: 0.976337
Total revision time: 2.096
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:00:42
{'AUC ROC': 0.976337, 'AUC PR': 0.263636, 'CLL': -0.159504, 'Precision': [0.263636, 0.5], 'Recall': 1.0, 'F1': 0.417266, 'Learning time': 2.096, 'Inference time': 0.772, 'parameter_25': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079433, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.765, 'Inference time': 0.963}}


Starting fold 3

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos	 examples: 178
Target test neg examples: 3543

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583099;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100103
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.618 seconds
Total inference time: 0.928 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.323 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [5.27e-09, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [-4.4408920985006264e-17, nan], 'true,true': [-4.4408920985006264e-17, nan]}, {'': [4.4408920985006264e-17, 0.0], 'true': [4.4408920985006264e-17, nan], 'true,true': [4.4408920985006264e-17, nan]}, {'': [-2.2204460492503132e-17, 0.0], 'true': [-2.2204460492503132e-17, nan], 'true,true': [-2.2204460492503132e-17, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}, {'': [-5.551115123125783e-18, -1.3877787807814458e-18], 'true': [-5.551115123125783e-18, nan], 'true,true': [-5.551115123125783e-18, nan]}, {'': [0.0, -6.938893903907229e-19], 'true': [0.0, nan]}, {'': [0.0, 6.938893903907229e-19], 'true': [0.0, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'true,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.9283
   AUC PR    = 0.265885
   CLL	      = -0.36127
   Precision = 0.229974 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.37395


Total learning time: 0.468 seconds
Total inference time: 0.777 seconds
AUC ROC: 0.9283


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.298 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100103
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.707 seconds
Total inference time: 0.928 seconds
AUC ROC: 1.0
Total revision time: 1.707
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:00:46
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.100103, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.707, 'Inference time': 0.928, 'parameter_5': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.100103, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.618, 'Inference time': 0.928}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.224230697664227;  // std dev = 0.325, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.21493262873955543;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.10436215883741057;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1808828482205065;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, B) )
%   | | then return -0.0950023130645015;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.15561015848206675;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07029854293293386;  // std dev = 0.006, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.11642701178534748;  // std dev = 0.208, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06407950449046997;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079447
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.655 seconds
Total inference time: 1.011 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098459
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.343 seconds
Parameter learned model CLL: -0.098459


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 10], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 10], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.325, 1, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [2.63e-09, 0, 10], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.63e-09, 9, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.006, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.208, 1, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}]]
[{'': [0.0826446280991734, -9.25185853854297e-18], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.058998885327700486, 0.0], 'true': [8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.036843003418682206, -1.5419764230904951e-18], 'true': [-1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.7763568394002506e-16, nan]}, {'': [0.02227066962361243, 3.0839528461809902e-18], 'true': [0.02227066962361243, nan], 'true,true': [1.3322676295501878e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [-4.4408920985006264e-17, nan], 'true,true': [-4.4408920985006264e-17, nan]}, {'': [0.009573792011243714, 1.5419764230904951e-18], 'true': [0.009573792011243714, nan], 'true,true': [0.009573792011243714, nan], 'true,true,true': [0.009573792011243714, nan]}, {'': [0.008425550526761956, 0.0], 'true': [-1.1102230246251566e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-1.1102230246251566e-17, nan]}, {'': [0.006290299356797929, 7.709882115452476e-19], 'true': [5.551115123125783e-18, 0.0], 'true,false': [0.0, nan]}, {'': [-1.1102230246251566e-17, 3.152480293221599e-05], 'true': [-1.1102230246251566e-17, nan]}, {'': [0.0039258419559639775, 0.0], 'true': [0.0039258419559639775, nan], 'true,true': [0.0039258419559639775, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3526248449525416;  // std dev = 0.172, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3307202409819178;  // std dev = 0.021, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09728190560377076;  // std dev = 0.044, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2532747189563276;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.21660108430506622;  // std dev = 0.130, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.08482769196063292;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22049263528681645;  // std dev = 0.025, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.15346642404860802;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07847006778440203;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1849422511039734;  // std dev = 0.022, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.13457087363040968;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07298011046801657;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.15867736391313034;  // std dev = 0.019, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07334004940776782;  // std dev = 0.049, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13026592358527145;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.11041677002971888;  // std dev = 0.084, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.06367871930110601;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.089789
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.676 seconds
Total inference time: 0.837 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101411
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.319 seconds
Refined model CLL: -0.101411


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079447
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.9929999999999999 seconds
Total inference time: 1.011 seconds
AUC ROC: 1.0
Total revision time: 1.9929999999999999
Best scored revision CLL: -0.098459


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:00:50
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079447, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.9929999999999999, 'Inference time': 1.011, 'parameter_10': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079447, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.655, 'Inference time': 1.011}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 1.49e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583098;  // std dev = 1.18e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926094;  // std dev = 1.86e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.23389993044712148;  // std dev = 0.330, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.21330557280030996;  // std dev = 2.36e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.10526941242403036;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17969434175747062;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, B) )
%   | | then return -0.09575831855240317;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.15471174018065043;  // std dev = 3.23e-09, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0697172861789293;  // std dev = 0.005, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.12192280243255513;  // std dev = 0.211, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06411437322282508;  // std dev = 2.63e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079662
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.757 seconds
Total inference time: 1.075 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097265
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.363 seconds
Parameter learned model CLL: -0.097265


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [1.49e-08, 0, 15], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.18e-08, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 15], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.86e-09, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.33, 1, 15], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.33e-09, 14, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [2.36e-08, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 15], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.73e-09, 14, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [3.23e-09, 0, 15], 'true,false': [0.0, 0, 0], 'false': [0.005, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.211, 1, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 14, 0]}]]
[{'': [0.05859374999999978, -1.1895246692412391e-17], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.041829287839756535, 3.96508223080413e-18], 'true': [1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.02612111375191717, 9.912705577010326e-18], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.015789556783928405, -3.96508223080413e-18], 'true': [0.015789556783928405, nan], 'true,true': [1.4802973661668753e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [-1.4802973661668754e-17, 3.7007434154171884e-18], 'true': [-1.4802973661668754e-17, nan], 'true,true': [-1.4802973661668754e-17, nan]}, {'': [0.006787668945471635, 4.956352788505163e-18], 'true': [0.006787668945471635, nan], 'true,true': [0.006787668945471635, nan], 'true,true,true': [0.006787668945471635, nan]}, {'': [0.005946680930313829, -9.912705577010326e-19], 'true': [3.700743415417188e-17, 0.0], 'true,true': [3.700743415417188e-17, nan], 'true,false': [0.0, nan]}, {'': [0.0044457520354562255, 9.912705577010326e-19], 'true': [-2.960594732333751e-17, 0.0], 'true,false': [0.0, nan]}, {'': [7.401486830834377e-18, 2.3308538381308642e-05], 'true': [7.401486830834377e-18, nan]}, {'': [0.0027820162489956956, 4.956352788505163e-19], 'true': [0.0027820162489956956, nan], 'true,true': [0.0027820162489956956, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.3656025927936952;  // std dev = 0.156, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3275595058684046;  // std dev = 0.022, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.0958554738171627;  // std dev = 0.046, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.25387296418814365;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.22454831206840783;  // std dev = 0.118, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.08493849424837083;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21708327714624598;  // std dev = 0.026, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.15639273952081334;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07856525703997522;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18245919201089134;  // std dev = 0.023, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.13684925142402463;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07306272119176584;  // std dev = 5.27e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.15680525979099375;  // std dev = 0.020, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07181341168056514;  // std dev = 0.051, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1314404140687918;  // std dev = 3.73e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1154943902678834;  // std dev = 0.077, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.06383776961552468;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.090013
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.636 seconds
Total inference time: 0.912 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0993
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.333 seconds
Refined model CLL: -0.0993


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079662
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.0890000000000004 seconds
Total inference time: 1.075 seconds
AUC ROC: 1.0
Total revision time: 2.0890000000000004
Best scored revision CLL: -0.097265


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:00:54
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079662, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.0890000000000004, 'Inference time': 1.075, 'parameter_15': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079662, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.757, 'Inference time': 1.075}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.3207118471601496;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926093;  // std dev = 2.95e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.238964766666733;  // std dev = 0.332, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839683;  // std dev = 1.29e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2124568954916488;  // std dev = 1.83e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.10574741263677113;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17907370093620298;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then return -0.09615622364368014;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.15424211618307662;  // std dev = 5.89e-09, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0694115097213827;  // std dev = 0.004, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.12480071067170602;  // std dev = 0.213, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06413272339351228;  // std dev = 5.27e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079777
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.683 seconds
Total inference time: 1.01 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.09664
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.383 seconds
Parameter learned model CLL: -0.09664


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [1.49e-08, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.67e-08, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 20], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [2.11e-08, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.95e-09, 20, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.332, 1, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.29e-08, 19, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [1.83e-08, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 20], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [5.89e-09, 0, 20], 'true,false': [0.0, 0, 0], 'false': [0.004, 20, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.213, 1, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 19, 0]}]]
[{'': [0.04535147392290242, 0.0], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.03237580555397633, 0.0], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.02021770255628346, 1.460819769243627e-17], 'true': [-2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.6645352591003756e-16, nan]}, {'': [0.012221093081438202, -5.843279076974508e-18], 'true': [0.012221093081438202, nan], 'true,true': [1.3322676295501878e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [2.2204460492503132e-17, 6.938893903907228e-18], 'true': [2.2204460492503132e-17, nan], 'true,true': [2.2204460492503132e-17, nan]}, {'': [0.005253645502768649, 8.764918615461762e-18], 'true': [0.005253645502768649, nan], 'true,true': [0.005253645502768649, nan], 'true,true,true': [0.005253645502768649, nan]}, {'': [0.004592017311178531, -7.304098846218135e-19], 'true': [1.6653345369377347e-17, 0.0], 'true,true': [1.6653345369377347e-17, nan], 'true,false': [0.0, nan]}, {'': [0.003435442693163146, -7.304098846218135e-19], 'true': [-3.8857805861880476e-17, 0.0], 'true,false': [0.0, nan]}, {'': [3.608224830031759e-17, 1.8416757326483735e-05], 'true': [3.608224830031759e-17, nan]}, {'': [0.0021527720022481898, 1.460819769243627e-18], 'true': [0.0021527720022481898, nan], 'true,true': [0.0021527720022481898, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.37758205233937553;  // std dev = 0.138, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.32596836995571676;  // std dev = 0.019, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.09513691889951406;  // std dev = 0.048, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2541744775266878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2316454032145599;  // std dev = 0.105, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.08499435983150504;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21536196882311076;  // std dev = 0.023, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1590221869468545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07861324434837182;  // std dev = 7.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18120087751914177;  // std dev = 0.020, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1388895538756405;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07310436254300566;  // std dev = 6.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.155853460921973;  // std dev = 0.018, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07104244694960962;  // std dev = 0.053, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13203761630563549;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.11974699649971937;  // std dev = 0.068, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.06391813904716634;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.090174
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.641 seconds
Total inference time: 0.87 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098225
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.348 seconds
Refined model CLL: -0.098225


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079777
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.055 seconds
Total inference time: 1.01 seconds
AUC ROC: 1.0
Total revision time: 2.055
Best scored revision CLL: -0.09664


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:00:59
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079777, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.055, 'Inference time': 1.01, 'parameter_20': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079777, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.683, 'Inference time': 1.01}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 2.36e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 7.45e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.32071184716014955;  // std dev = 2.11e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 1.86e-09, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.24208158895572468;  // std dev = 0.334, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 1.67e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.21193585940340579;  // std dev = 1.49e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.10604251700645996;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109176;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17869242182476966;  // std dev = 5.27e-09, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, B) )
%   | | then return -0.09640173933490354;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.15395345158663387;  // std dev = 2.63e-09, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06922289234968945;  // std dev = 0.004, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.12657148225705747;  // std dev = 0.214, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06414404508556416;  // std dev = 1.18e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079848
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.723 seconds
Total inference time: 1.077 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096255
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.405 seconds
Parameter learned model CLL: -0.096255


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [2.36e-08, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [2.11e-08, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.86e-09, 25, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.334, 1, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.67e-08, 24, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [1.49e-08, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [5.27e-09, 0, 25], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [2.63e-09, 0, 25], 'true,false': [0.0, 0, 0], 'false': [0.004, 25, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.214, 1, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.18e-08, 24, 0]}]]
[{'': [0.03698224852071082, 9.25185853854297e-18], 'true': [7.105427357601002e-16, 0.0], 'true,true': [7.105427357601002e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.026401128419570055, -4.625929269271485e-18], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.016486699015016572, 2.3129646346357427e-18], 'true': [-2.842170943040401e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.842170943040401e-16, nan]}, {'': [0.009965795208791005, -2.3129646346357427e-18], 'true': [0.009965795208791005, nan], 'true,true': [-3.552713678800501e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [1.7763568394002505e-17, 3.3306690738754695e-18], 'true': [1.7763568394002505e-17, nan], 'true,true': [1.7763568394002505e-17, nan]}, {'': [0.004284130300889366, 1.1564823173178714e-17], 'true': [0.004284130300889366, nan], 'true,true': [0.004284130300889366, nan], 'true,true,true': [0.004284130300889366, nan]}, {'': [0.0037392843145064645, -4.625929269271485e-18], 'true': [8.881784197001253e-18, 0.0], 'true,true': [8.881784197001253e-18, nan], 'true,false': [0.0, nan]}, {'': [0.0027986981325497373, -1.1564823173178713e-18], 'true': [2.6645352591003756e-17, 0.0], 'true,false': [0.0, nan]}, {'': [8.881784197001253e-18, 1.5203517601055094e-05], 'true': [8.881784197001253e-18, nan]}, {'': [0.0017552546564151754, 5.782411586589357e-18], 'true': [0.0017552546564151754, nan], 'true,true': [0.0017552546564151754, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 7.45e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.3829062565819001;  // std dev = 0.129, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3249598478259679;  // std dev = 0.019, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.09467372657927767;  // std dev = 0.049, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2543657102720322;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.23484692095138107;  // std dev = 0.098, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else return -0.0850303893710575;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21428099002326406;  // std dev = 0.023, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.1602279993096256;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07864419068631402;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18041066441094344;  // std dev = 0.020, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.13982302586275366;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07313121475613432;  // std dev = 1.18e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.1552557356872448;  // std dev = 0.018, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07054673527332428;  // std dev = 0.054, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13241468329085704;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.12174798706675742;  // std dev = 0.064, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else return -0.06396991832712733;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.090258
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.656 seconds
Total inference time: 0.887 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097542
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.339 seconds
Refined model CLL: -0.097542


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079848
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.123 seconds
Total inference time: 1.077 seconds
AUC ROC: 1.0
Total revision time: 2.123
Best scored revision CLL: -0.096255


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:01:03
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079848, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.123, 'Inference time': 1.077, 'parameter_25': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079848, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.723, 'Inference time': 1.077}}


Starting fold 4

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos	 examples: 45
Target test neg examples: 1891

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995121;  // std dev = 1.83e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14386322081379793;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12543301544918353;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10782354562777509;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0915038324011376;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10727366813057375;  // std dev = 0.430, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.26938289662120624;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05849903121643009;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.21983651750092428;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04806372799306112;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.184510292871869;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03924640463813624;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), female(A) )
%   then if ( movie(D, B) )
%   | then return 0.14868605266703983;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.050121239156834;  // std dev = 0.425, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.14407581883831078;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.022275693207769374;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */


Results
   AUC ROC   = 0.617228
   AUC PR    = 0.275087
   CLL	      = -0.328587
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.244444
   F1        = 0.392857


Total learning time: 0.643 seconds
Total inference time: 0.704 seconds
AUC ROC: 0.617228


Results scoring model
   AUC ROC   = 0.8
   AUC PR    = 0.873077
   CLL	      = -0.460242
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.6
   F1        = 0.75


Total scoring time: 0.327 seconds
Parameter learned model CLL: -0.460242


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.83e-08, 0, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.195, 5, 2]}], ['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.0, 0, 0], 'false': [1.195, 5, 2]}], ['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [1.05e-08, 0, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.195, 5, 2]}], ['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.195, 5, 2]}], ['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.43, 5, 3]}], ['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.035, 0, 3], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.195, 5, 2]}], ['workedunder(A, B)', {'': 'female(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.03, 0, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.195, 5, 2]}], ['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.015, 0, 3], 'true,false': [0.0, 0, 0], 'false': [1.195, 5, 2]}], ['workedunder(A, B)', {'': 'genre(B, C), female(A)', 'true': 'movie(D, B)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'false': [0.425, 5, 3]}], ['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.032, 0, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.195, 5, 2]}]]
[{'': [1.4802973661668753e-16, 0.20408163265306123], 'true': [1.4802973661668753e-16, nan], 'true,true': [1.4802973661668753e-16, nan]}, {'': [0.0, 0.2040816326530612], 'true': [0.0, nan]}, {'': [3.700743415417188e-17, 0.2040816326530612], 'true': [3.700743415417188e-17, nan], 'true,true': [3.700743415417188e-17, nan]}, {'': [-3.700743415417188e-17, 0.20408163265306117], 'true': [-3.700743415417188e-17, nan], 'true,true': [-3.700743415417188e-17, nan]}, {'': [0.0, 0.18507940803820871], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.00040388537715515166, 0.20408163265306123], 'true': [0.00040388537715515166, nan], 'true,true': [0.00040388537715515166, nan], 'true,true,true': [0.00040388537715515166, nan]}, {'': [0.0003087431913252799, 0.20408163265306126], 'true': [0.0003087431913252799, nan], 'true,true': [0.0003087431913252799, nan]}, {'': [0.0002387488359730285, 0.2040816326530612], 'true': [0.0002387488359730285, nan]}, {'': [0.0, 0.18089929938703123], 'true': [0.0, nan]}, {'': [0.00035084326052653436, 0.20408163265306126], 'true': [0.00035084326052653436, nan], 'true,true': [0.00035084326052653436, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
1;;workedunder(A, B) :- director(B), female(A).;true;true
2;;workedunder(A, B) :- director(B), female(A).;true;true
3;;workedunder(A, B) :- director(B), female(A).;true;true
4;;workedunder(A, B) :- female(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), female(A).;true;true
6;;workedunder(A, B) :- female(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), female(A).;true;true
8;;workedunder(A, B) :- genre(B, C), female(A).;true;true
9;;workedunder(A, B) :- director(B), female(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.14386322081379793;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.12543301544918353;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.10782354562777509;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.0915038324011376;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( movie(D, A), movie(D, B) )
%   | then return 0.6342827583757109;  // std dev = 0.384, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.20893178601650858;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.2368620240003837;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.06466196482489012;  // std dev = 0.381, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(A), director(B) )
%   then return 0.1968652357082493;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.05366451213329707;  // std dev = 0.379, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.16766394124457884;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.04425883356921863;  // std dev = 0.377, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), female(A) )
%   then return 0.15807711827784565;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( movie(D, A), movie(D, B) )
%   | then return 0.46057665210521637;  // std dev = 0.416, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.2013749672287811;  // std dev = 7.45e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.11866342996682244;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return 0.026047508087415922;  // std dev = 0.311, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */


Results
   AUC ROC   = 0.878318
   AUC PR    = 0.151581
   CLL	      = -0.361163
   Precision = 0.305556 at threshold = 0.5
   Recall    = 0.244444
   F1        = 0.271605


Total learning time: 0.633 seconds
Total inference time: 0.631 seconds
AUC ROC: 0.878318


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.273475
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.6
   F1        = 0.75


Total scoring time: 0.308 seconds
Refined model CLL: -0.273475


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.878318
   AUC PR    = 0.151581
   CLL	      = -0.361163
   Precision = 0.305556 at threshold = 0.5
   Recall    = 0.244444
   F1        = 0.271605


Total learning time: 1.911 seconds
Total inference time: 0.631 seconds
AUC ROC: 0.878318
Total revision time: 1.911
Best scored revision CLL: -0.273475


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:01:07
{'AUC ROC': 0.878318, 'AUC PR': 0.151581, 'CLL': -0.361163, 'Precision': [0.305556, 0.5], 'Recall': 0.244444, 'F1': 0.271605, 'Learning time': 1.911, 'Inference time': 0.631, 'parameter_5': {'AUC ROC': 0.617228, 'AUC PR': 0.275087, 'CLL': -0.328587, 'Precision': [1.0, 0.5], 'Recall': 0.244444, 'F1': 0.392857, 'Learning time': 0.643, 'Inference time': 0.704}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.2455476429148023;  // std dev = 0.529, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.046757595817104224;  // std dev = 0.130, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.18758456857182637;  // std dev = 0.584, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08883316074915137;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.24004294413249969;  // std dev = 0.054, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.1258104436879529;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08190061346778234;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1990679339955081;  // std dev = 0.015, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, B) )
%   | | then return -0.11263532628066664;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07594938047746903;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.11478289164153202;  // std dev = 0.106, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.041247798130421565;  // std dev = 0.089, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.09512114171471266;  // std dev = 0.409, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06812230025242749;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07251
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.663 seconds
Total inference time: 0.787 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.119993
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.38 seconds
Parameter learned model CLL: -0.119993


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 10], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 10], 'true,true,false,true': [0.0, 3, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.529, 2, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.13, 8, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.584, 3, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 7, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.054, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.015, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.015, 0, 10], 'true,false,true': [0.013, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.106, 2, 9], 'true,false': [0.0, 0, 0], 'false': [0.089, 8, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.409, 3, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 7, 0]}]]
[{'': [0.1775147928994082, -7.93016446160826e-18], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.1267254164139365, -1.982541115402065e-18], 'true': [8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.0791361552720809, -1.982541115402065e-18], 'true': [-1.7763568394002506e-16, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan], 'true,false,true': [2.3129646346357427e-18, nan], 'true,true': [-1.7763568394002506e-16, nan]}, {'': [0.047835817002196974, 0.0], 'true': [0.047835817002196974, nan], 'true,true': [1.3322676295501878e-16, -1.1564823173178713e-18], 'true,true,false': [-1.1564823173178713e-18, nan]}, {'': [0.025423459199263334, 0.01687922394025166], 'true': [0.025423459199263334, nan], 'true,true': [0.025423459199263334, nan]}, {'': [0.02626274918627824, 9.912705577010326e-19], 'true': [0.02626274918627824, nan], 'true,true': [0.02626274918627824, nan], 'true,true,true': [0.02626274918627824, nan]}, {'': [0.024029483255572304, 0.0], 'true': [0.00028665458681675915, 0.00021170596190943358], 'true,true': [0.00028665458681675915, nan], 'true,false': [0.00021170596190943358, nan]}, {'': [0.017459228600786855, -9.912705577010326e-19], 'true': [0.00022340289900710242, 0.00017434827328595184], 'true,false': [0.00017434827328595184, nan]}, {'': [0.011269671028870108, 0.007852503928302957], 'true': [0.011269671028870108, nan]}, {'': [0.012850451659018831, 9.912705577010326e-19], 'true': [0.012850451659018831, nan], 'true,true': [0.012850451659018831, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.22284736654100507;  // std dev = 0.251, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.28831098766477903;  // std dev = 0.417, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10306671957248463;  // std dev = 0.044, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2779171554333087;  // std dev = 0.072, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11306273262681747;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08946125184136895;  // std dev = 0.033, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22582049869163118;  // std dev = 0.063, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.10221114707455566;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.0824490378260019;  // std dev = 0.031, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18886400324865832;  // std dev = 0.055, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.09320582168951262;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07643254680717558;  // std dev = 0.029, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.14631307253656556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.13148904362725888;  // std dev = 0.249, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07325272809810629;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.14381281428024378;  // std dev = 0.047, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.08005766036563909;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06913137493807286;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077229
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.685 seconds
Total inference time: 0.687 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.103077
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.327 seconds
Refined model CLL: -0.103077


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077229
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.055 seconds
Total inference time: 0.687 seconds
AUC ROC: 1.0
Total revision time: 2.055
Best scored revision CLL: -0.103077


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:01:11
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.077229, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.055, 'Inference time': 0.687, 'parameter_10': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.07251, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.663, 'Inference time': 0.787}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 1.49e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583098;  // std dev = 1.18e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.2655914307135616;  // std dev = 0.544, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.03757085974267287;  // std dev = 0.141, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.21046855822236943;  // std dev = 0.611, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08957956611501618;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2344479204732716;  // std dev = 0.076, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.1302475652129967;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0825375101979051;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1950789455125201;  // std dev = 0.017, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, B) )
%   | | then return -0.11621667997103048;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07649884927201546;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.12373071064633265;  // std dev = 0.093, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.03540671047959197;  // std dev = 0.095, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.108933181352948;  // std dev = 0.431, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06895831193052425;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073524
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.771 seconds
Total inference time: 0.797 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.115389
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.374 seconds
Parameter learned model CLL: -0.115389


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 12, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [1.49e-08, 0, 15], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.27e-09, 12, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.13e-09, 12, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 15], 'true,true,false,true': [0.0, 3, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 12, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.544, 2, 13], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.141, 13, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.611, 3, 15], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 12, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.076, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.016, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 12, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.017, 0, 15], 'true,false,true': [0.014, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.73e-09, 12, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.093, 2, 13], 'true,false': [0.0, 0, 0], 'false': [0.095, 13, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.431, 3, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 12, 0]}]]
[{'': [0.1388888888888886, -1.1564823173178714e-17], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.09915090450905224, 2.3129646346357427e-18], 'true': [1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.06191671407861871, 6.938893903907228e-18], 'true': [-2.3684757858670006e-16, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan], 'true,false,true': [2.3129646346357427e-18, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.037427097561904175, 0.0], 'true': [0.037427097561904175, nan], 'true,true': [1.4802973661668753e-16, -1.1564823173178713e-18], 'true,true,false': [-1.1564823173178713e-18, nan]}, {'': [0.019748692010094392, 0.01974869201009443], 'true': [0.019748692010094392, nan], 'true,true': [0.019748692010094392, nan]}, {'': [0.020728459311077887, -1.1564823173178713e-18], 'true': [0.020728459311077887, nan], 'true,true': [0.020728459311077887, nan], 'true,true,true': [0.020728459311077887, nan]}, {'': [0.0188309622796107, -1.1564823173178713e-18], 'true': [0.00038181578445654435, 0.00024103035542883075], 'true,true': [0.00038181578445654435, nan], 'true,false': [0.00024103035542883075, nan]}, {'': [0.013739918322701071, 1.1564823173178713e-18], 'true': [0.00029756991793968474, 0.0001975216421788902], 'true,false': [0.0001975216421788902, nan]}, {'': [0.008686673773876651, 0.008935271290187537], 'true': [0.008686673773876651, nan]}, {'': [0.010317926751372906, -5.782411586589357e-19], 'true': [0.010317926751372906, nan], 'true,true': [0.010317926751372906, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), female(A) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.24554764291480236;  // std dev = 0.159, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26390014388016136;  // std dev = 0.028, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09023884596926861;  // std dev = 0.039, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2159153431469846;  // std dev = 0.024, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08310977577252694;  // std dev = 0.036, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18160667300930122;  // std dev = 0.021, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07700036259016599;  // std dev = 0.034, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), female(A) )
%   | then return 0.15025066898588413;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.11421254817044725;  // std dev = 0.097, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.06778624741466632;  // std dev = 0.001, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1400228110297747;  // std dev = 0.025, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.06423034030771367;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06992280589793107;  // std dev = 0.050, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074856
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.845 seconds
Total inference time: 0.718 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099595
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.346 seconds
Refined model CLL: -0.099595


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074856
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.336 seconds
Total inference time: 0.718 seconds
AUC ROC: 1.0
Total revision time: 2.336
Best scored revision CLL: -0.099595


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:01:16
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.074856, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.336, 'Inference time': 0.718, 'parameter_15': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073524, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.771, 'Inference time': 0.797}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.2771957289128433;  // std dev = 0.553, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.03363368713934516;  // std dev = 0.145, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.22333928293829006;  // std dev = 0.627, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08990118177427149;  // std dev = 5.27e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2312712732848783;  // std dev = 0.093, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.13278848520074507;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0828117120696383;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19280527584205176;  // std dev = 0.018, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then return -0.11825836177929583;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0767352395213919;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.12893764763635954;  // std dev = 0.084, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0329549711912405;  // std dev = 0.097, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.11675074044643081;  // std dev = 0.445, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06931592497974902;  // std dev = 3.73e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074013
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.721 seconds
Total inference time: 0.782 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.112717
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.38 seconds
Parameter learned model CLL: -0.112717


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 17, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [1.49e-08, 0, 20], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 17, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 17, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 20], 'true,true,false,true': [0.0, 3, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 17, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.553, 2, 17], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.145, 18, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.627, 3, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 17, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.093, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.016, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 17, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.018, 0, 20], 'true,false,true': [0.015, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 17, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.084, 2, 17], 'true,false': [0.0, 0, 0], 'false': [0.097, 18, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.445, 3, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 17, 0]}]]
[{'': [0.11342155009451807, -3.2653618371328133e-18], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.08097011483536962, 0.0], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.05056336575040308, 1.3061447348531253e-17], 'true': [-2.6645352591003756e-16, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan], 'true,false,true': [2.3129646346357427e-18, nan], 'true,true': [-2.6645352591003756e-16, nan]}, {'': [0.030564283831271546, -8.163404592832034e-18], 'true': [0.030564283831271546, nan], 'true,true': [1.3322676295501878e-16, -1.1564823173178713e-18], 'true,true,false': [-1.1564823173178713e-18, nan]}, {'': [0.01609604665216519, 0.02092679294633239], 'true': [0.01609604665216519, nan], 'true,true': [0.01609604665216519, nan]}, {'': [0.017069060859609554, 1.6326809185664067e-18], 'true': [0.017069060859609554, nan], 'true,true': [0.017069060859609554, nan], 'true,true,true': [0.017069060859609554, nan]}, {'': [0.015444248004436697, -5.714383214982423e-18], 'true': [0.000433919446183606, 0.00026135919110048994], 'true,true': [0.000433919446183606, nan], 'true,false': [0.00026135919110048994, nan]}, {'': [0.011296748422239069, -2.44902137784961e-18], 'true': [0.0003382767311279067, 0.00021358579756707943], 'true,false': [0.00021358579756707943, nan]}, {'': [0.007053129964392914, 0.00933381133517777], 'true': [0.007053129964392914, nan]}, {'': [0.00861245923559527, 8.163404592832033e-19], 'true': [0.00861245923559527, nan], 'true,true': [0.00861245923559527, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.2877361057467733;  // std dev = 0.225, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.33371898796996496;  // std dev = 0.064, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.09945706035620307;  // std dev = 0.060, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2640857981232516;  // std dev = 0.056, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1201159050754169;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08475176554740521;  // std dev = 0.000826, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21606888474985242;  // std dev = 0.049, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.10798901473328167;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07840483352380975;  // std dev = 0.000770, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18173321954087546;  // std dev = 0.043, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.0980184838622697;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07292349157440864;  // std dev = 0.000720, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06849889401758268;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.1562663563949151;  // std dev = 0.038, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07188357736307167;  // std dev = 0.034, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13676069604554003;  // std dev = 0.034, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.08398919373617862;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06375489519354362;  // std dev = 0.000955, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065069
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.841 seconds
Total inference time: 0.713 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097125
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.342 seconds
Refined model CLL: -0.097125


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065069
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.284 seconds
Total inference time: 0.713 seconds
AUC ROC: 1.0
Total revision time: 2.284
Best scored revision CLL: -0.097125


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:01:20
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065069, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.284, 'Inference time': 0.713, 'parameter_20': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.074013, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.721, 'Inference time': 0.782}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 2.36e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.27937153482520855;  // std dev = 0.555, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.003769452592268213;  // std dev = 0.175, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.23729154285846535;  // std dev = 0.650, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09300877274405452;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.23398381483774602;  // std dev = 0.114, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.13583189559776307;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08545414196626172;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1947722909511815;  // std dev = 0.020, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, B) )
%   | | then return -0.12068665331746094;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07900802645877553;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.12779791356916234;  // std dev = 0.082, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.011498295514697958;  // std dev = 0.114, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1258761867652284;  // std dev = 0.465, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07266815689285261;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076983
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.704 seconds
Total inference time: 0.764 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.114622
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.396 seconds
Parameter learned model CLL: -0.114622


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [2.36e-08, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-08, 22, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.29e-08, 22, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false,true': [0.0, 3, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.555, 2, 18], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.175, 23, 7]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.65, 3, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.114, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.015, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.02, 0, 25], 'true,false,true': [0.013, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.082, 2, 18], 'true,false': [0.0, 0, 0], 'false': [0.114, 23, 7]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.465, 3, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}]]
[{'': [0.09566326530612335, 5.046468293750712e-18], 'true': [7.105427357601002e-16, 0.0], 'true,true': [7.105427357601002e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.06829271484041863, -2.523234146875356e-18], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.042646716329660696, 7.569702440626067e-18], 'true': [-2.842170943040401e-16, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan], 'true,false,true': [2.3129646346357427e-18, nan], 'true,true': [-2.842170943040401e-16, nan]}, {'': [0.025778868218658442, -1.261617073437678e-18], 'true': [0.025778868218658442, nan], 'true,true': [-3.552713678800501e-17, -1.1564823173178713e-18], 'true,true,false': [-1.1564823173178713e-18, nan]}, {'': [0.015381192815554334, 0.03057249436178083], 'true': [0.015381192815554334, nan], 'true,true': [0.015381192815554334, nan]}, {'': [0.015098443236374857, -3.784851220313033e-18], 'true': [0.015098443236374857, nan], 'true,true': [0.015098443236374857, nan], 'true,true,true': [0.015098443236374857, nan]}, {'': [0.01357201402704913, -1.261617073437678e-18], 'true': [0.0005214975216896356, 0.00021590780541362367], 'true,true': [0.0005214975216896356, nan], 'true,false': [0.00021590780541362367, nan]}, {'': [0.009898495181483046, -1.0092936587501423e-17], 'true': [0.0004029509489896066, 0.00017593623879167317], 'true,false': [0.00017593623879167317, nan]}, {'': [0.006658937625368541, 0.012939352291766274], 'true': [0.006658937625368541, nan]}, {'': [0.007734504059705642, -2.523234146875356e-18], 'true': [0.007734504059705642, nan], 'true,true': [0.007734504059705642, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360638;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926093;  // std dev = 1.18e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014955;  // std dev = 2.11e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948956;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08518475138839682;  // std dev = 1.49e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253554;  // std dev = 1.49e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109179;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527747;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07324622576333704;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420275;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06419184008202622;  // std dev = 5.27e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063955
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.769 seconds
Total inference time: 0.646 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.344 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063955
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.213 seconds
Total inference time: 0.646 seconds
AUC ROC: 1.0
Total revision time: 2.213
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:01:24
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063955, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.213, 'Inference time': 0.646, 'parameter_25': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076983, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.704, 'Inference time': 0.764}}


Starting fold 5

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos	 examples: 45
Target test neg examples: 2071

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583099;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.023790755631025878;  // std dev = 0.154, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.26932114521402895;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09070977761578683;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.21988205462710556;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08350049674800492;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18460064037347698;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07732858878256614;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.14867666923878964;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.027034678977782712;  // std dev = 0.101, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.14507062977920795;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0702031650614777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078269
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.58 seconds
Total inference time: 0.749 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102769
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.334 seconds
Parameter learned model CLL: -0.102769


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [5.27e-09, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.154, 5, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.063, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.056, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.022, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 0], 'false': [0.101, 5, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.064, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [-4.4408920985006264e-17, nan], 'true,true': [-4.4408920985006264e-17, nan]}, {'': [4.4408920985006264e-17, 0.0], 'true': [4.4408920985006264e-17, nan], 'true,true': [4.4408920985006264e-17, nan]}, {'': [0.0, 0.023736408665978894], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0008007657841786142, 2.7755575615628915e-18], 'true': [0.0008007657841786142, nan], 'true,true': [0.0008007657841786142, nan], 'true,true,true': [0.0008007657841786142, nan]}, {'': [0.0006210086063809017, 0.0], 'true': [0.0006210086063809017, nan], 'true,true': [0.0006210086063809017, nan]}, {'': [0.0004852223481672635, 0.0], 'true': [0.0004852223481672635, nan]}, {'': [0.0, 0.010104221444053017], 'true': [0.0, nan]}, {'': [0.0008118917192243946, 0.0], 'true': [0.0008118917192243946, nan], 'true,true': [0.0008118917192243946, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.023790755631025878;  // std dev = 0.377, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.26932114521402895;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09070977761578683;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.21988205462710556;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08350049674800492;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.18460064037347698;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07732858878256614;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.14867666923878964;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.027034678977782712;  // std dev = 0.246, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.14507062977920795;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0702031650614777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.98318
   AUC PR    = 0.399657
   CLL	      = -0.145691
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 0.467 seconds
Total inference time: 0.64 seconds
AUC ROC: 0.98318


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102769
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.305 seconds
Refined model CLL: -0.102769


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078269
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.686 seconds
Total inference time: 0.749 seconds
AUC ROC: 1.0
Total revision time: 1.686
Best scored revision CLL: -0.102769


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:01:28
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.078269, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.686, 'Inference time': 0.749, 'parameter_5': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.078269, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.58, 'Inference time': 0.749}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05510917406658726;  // std dev = 0.119, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2629384589303888;  // std dev = 0.074, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08815948596189063;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2153471994162996;  // std dev = 0.065, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08132513978810843;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18126172813236446;  // std dev = 0.018, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07545242316095276;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.1504901884429053;  // std dev = 1.86e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04531658671258642;  // std dev = 0.079, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.14027561787004128;  // std dev = 0.076, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06744779637291397;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075681
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.624 seconds
Total inference time: 0.72 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099221
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.346 seconds
Parameter learned model CLL: -0.099221


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [1.18e-08, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 10, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.119, 10, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.074, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 10, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.065, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.018, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [1.86e-09, 0, 9], 'true,false': [0.0, 0, 0], 'false': [0.079, 10, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.076, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}]]
[{'': [-8.881784197001253e-17, -1.1102230246251566e-17], 'true': [-8.881784197001253e-17, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [8.881784197001253e-17, 2.7755575615628915e-18], 'true': [8.881784197001253e-17, nan]}, {'': [-1.7763568394002506e-16, 0.0], 'true': [-1.7763568394002506e-16, nan], 'true,true': [-1.7763568394002506e-16, nan]}, {'': [1.3322676295501878e-16, 1.3877787807814458e-18], 'true': [1.3322676295501878e-16, nan], 'true,true': [1.3322676295501878e-16, nan]}, {'': [-3.700743415417188e-17, 0.014124143999590747], 'true': [-3.700743415417188e-17, nan], 'true,true': [-3.700743415417188e-17, nan]}, {'': [0.0005428270490787646, 2.7755575615628915e-18], 'true': [0.0005428270490787646, nan], 'true,true': [0.0005428270490787646, nan], 'true,true,true': [0.0005428270490787646, nan]}, {'': [0.0004252552067716464, 1.3877787807814458e-18], 'true': [0.0004252552067716464, nan], 'true,true': [0.0004252552067716464, nan]}, {'': [0.00033524304050218666, -2.0816681711721684e-18], 'true': [0.00033524304050218666, nan]}, {'': [3.0839528461809902e-18, 0.006269034858084544], 'true': [3.0839528461809902e-18, nan]}, {'': [0.0005803947907187995, -2.7755575615628915e-18], 'true': [0.0005803947907187995, nan], 'true,true': [0.0005803947907187995, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( female(A) )
%   | then return 0.04510976492720925;  // std dev = 0.338, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2607515090816796;  // std dev = 0.053, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08745886729289766;  // std dev = 0.014, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.21375145555259323;  // std dev = 0.047, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08072763027486565;  // std dev = 0.013, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.18005888629167432;  // std dev = 0.041, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07493725903836762;  // std dev = 0.013, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.1511286649430511;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( movie(D, A), movie(D, B) )
%   | then return 0.014865434399509195;  // std dev = 0.215, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.06921042896142503;  // std dev = 0.009, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13824010339190243;  // std dev = 0.052, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.0666460445277386;  // std dev = 0.015, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.984307
   AUC PR    = 0.408495
   CLL	      = -0.143667
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 0.611 seconds
Total inference time: 0.647 seconds
AUC ROC: 0.984307


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097817
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.312 seconds
Refined model CLL: -0.097817


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.984307
   AUC PR    = 0.408495
   CLL	      = -0.143667
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 1.893 seconds
Total inference time: 0.647 seconds
AUC ROC: 0.984307
Total revision time: 1.893
Best scored revision CLL: -0.097817


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:01:31
{'AUC ROC': 0.984307, 'AUC PR': 0.408495, 'CLL': -0.143667, 'Precision': [0.348837, 0.5], 'Recall': 1.0, 'F1': 0.517241, 'Learning time': 1.893, 'Inference time': 0.647, 'parameter_10': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075681, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.624, 'Inference time': 0.72}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 1.49e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583098;  // std dev = 1.18e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.044055614618742064;  // std dev = 0.133, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2652005372402781;  // std dev = 0.099, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08905210716139503;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2169605380750909;  // std dev = 0.087, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08208751399730622;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18245380064358746;  // std dev = 0.020, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07611068262659135;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.14984349270535008;  // std dev = 4.17e-09, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.03876645869179644;  // std dev = 0.088, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.14201084034376066;  // std dev = 0.101, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0684159273100364;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07659
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.688 seconds
Total inference time: 0.772 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.1005
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.373 seconds
Parameter learned model CLL: -0.1005


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [1.49e-08, 0, 15], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.39e-08, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [1.18e-08, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 13], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.133, 15, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.099, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 15, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.087, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.02, 0, 15], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [4.17e-09, 0, 13], 'true,false': [0.0, 0, 0], 'false': [0.088, 15, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.101, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}]]
[{'': [-2.3684757858670006e-16, -1.4802973661668754e-17], 'true': [-2.3684757858670006e-16, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [1.7763568394002506e-16, 3.7007434154171884e-18], 'true': [1.7763568394002506e-16, nan]}, {'': [-2.3684757858670006e-16, 1.295260195396016e-17], 'true': [-2.3684757858670006e-16, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [1.4802973661668753e-16, -5.551115123125783e-18], 'true': [1.4802973661668753e-16, nan], 'true,true': [1.4802973661668753e-16, nan]}, {'': [-5.124106267500723e-17, 0.017740706823015356], 'true': [-5.124106267500723e-17, nan], 'true,true': [-5.124106267500723e-17, nan]}, {'': [0.0006536835110271255, 3.7007434154171884e-18], 'true': [0.0006536835110271255, nan], 'true,true': [0.0006536835110271255, nan], 'true,true,true': [0.0006536835110271255, nan]}, {'': [0.0005102783381582506, 9.251858538542971e-19], 'true': [0.0005102783381582506, nan], 'true,true': [0.0005102783381582506, nan]}, {'': [0.000401005076848752, -1.8503717077085942e-18], 'true': [0.000401005076848752, nan]}, {'': [1.708035422500241e-17, 0.007757946348196108], 'true': [1.708035422500241e-17, nan]}, {'': [0.00068586411339762, 0.0], 'true': [0.00068586411339762, nan], 'true,true': [0.00068586411339762, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583098;  // std dev = 4.71e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3207118471601497;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( actor(B) )
%   | then return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0.18291080604367946;  // std dev = 0.338, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2587803127324018;  // std dev = 0.036, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08678992763672808;  // std dev = 0.023, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.21232114920898262;  // std dev = 0.031, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08015616460092813;  // std dev = 0.022, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1789858006945595;  // std dev = 0.028, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07444380461211196;  // std dev = 0.020, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.1517036010154662;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( actor(B) )
%   | then return -0.06816086757484886;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0.08423721633227708;  // std dev = 0.211, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1365986124655507;  // std dev = 0.034, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.0660185569694547;  // std dev = 0.030, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.98318
   AUC PR    = 0.399657
   CLL	      = -0.143138
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 0.594 seconds
Total inference time: 0.645 seconds
AUC ROC: 0.98318


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.33 seconds
Refined model CLL: -0.096719


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.98318
   AUC PR    = 0.399657
   CLL	      = -0.143138
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 1.9849999999999999 seconds
Total inference time: 0.645 seconds
AUC ROC: 0.98318
Total revision time: 1.9849999999999999
Best scored revision CLL: -0.096719


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:01:35
{'AUC ROC': 0.98318, 'AUC PR': 0.399657, 'CLL': -0.143138, 'Precision': [0.348837, 0.5], 'Recall': 1.0, 'F1': 0.517241, 'Learning time': 1.9849999999999999, 'Inference time': 0.645, 'parameter_15': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.07659, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.688, 'Inference time': 0.772}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.32071184716014967;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0387691296654248;  // std dev = 0.139, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.26627880183486585;  // std dev = 0.118, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08948188917930675;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.21772720073352594;  // std dev = 0.104, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0824542060003973;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18301865446767723;  // std dev = 0.021, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07642701205477209;  // std dev = 6.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.14953676864322163;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0356718968387347;  // std dev = 0.092, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.14282400667671258;  // std dev = 0.121, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06888062581581966;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077027
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.651 seconds
Total inference time: 0.73 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101101
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.378 seconds
Parameter learned model CLL: -0.101101


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 20, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [1.49e-08, 0, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.49e-08, 20, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [1.18e-08, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [1.49e-08, 0, 17], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.139, 20, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.118, 0, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.104, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.021, 0, 20], 'true,false': [0.0, 0, 0], 'false': [6.45e-09, 20, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.0, 0, 17], 'true,false': [0.0, 0, 0], 'false': [0.092, 20, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.121, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0]}]]
[{'': [-8.881784197001253e-17, 2.7755575615628915e-18], 'true': [-8.881784197001253e-17, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [2.6645352591003756e-16, 0.0], 'true': [2.6645352591003756e-16, nan]}, {'': [-2.6645352591003756e-16, 1.1102230246251566e-17], 'true': [-2.6645352591003756e-16, nan], 'true,true': [-2.6645352591003756e-16, nan]}, {'': [1.3322676295501878e-16, -1.3877787807814458e-18], 'true': [1.3322676295501878e-16, nan], 'true,true': [1.3322676295501878e-16, nan]}, {'': [1.3061447348531253e-17, 0.019383985904920364], 'true': [1.3061447348531253e-17, nan], 'true,true': [1.3061447348531253e-17, nan]}, {'': [0.0006990153993868154, -6.938893903907228e-18], 'true': [0.0006990153993868154, nan], 'true,true': [0.0006990153993868154, nan], 'true,true,true': [0.0006990153993868154, nan]}, {'': [0.0005447340774191511, 0.0], 'true': [0.0005447340774191511, nan], 'true,true': [0.0005447340774191511, nan]}, {'': [0.0004274391257233001, 2.0816681711721684e-18], 'true': [0.0004274391257233001, nan]}, {'': [0.0, 0.008416852713591183], 'true': [0.0, nan]}, {'': [0.0007268728987001427, -6.938893903907229e-19], 'true': [0.0007268728987001427, nan], 'true,true': [0.0007268728987001427, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.11231637819360636;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830986;  // std dev = 5.16e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.32071184716014967;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( actor(A), director(B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.09269127618926096;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25517224256948945;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.08518475138839683;  // std dev = 1.39e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2097577156325356;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07877675473109173;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527744;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07324622576333704;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.1527438580936708;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( director(B), actor(A) )
%   | then return 0.15274385809367075;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.06842697784420274;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.0641918400820262;  // std dev = 6.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.97972
   AUC PR    = 0.348837
   CLL	      = -0.145678
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 0.609 seconds
Total inference time: 0.655 seconds
AUC ROC: 0.97972


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.333 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.97972
   AUC PR    = 0.348837
   CLL	      = -0.145678
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 1.9709999999999999 seconds
Total inference time: 0.655 seconds
AUC ROC: 0.97972
Total revision time: 1.9709999999999999
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:01:39
{'AUC ROC': 0.97972, 'AUC PR': 0.348837, 'CLL': -0.145678, 'Precision': [0.348837, 0.5], 'Recall': 1.0, 'F1': 0.517241, 'Learning time': 1.9709999999999999, 'Inference time': 0.655, 'parameter_20': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.077027, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.651, 'Inference time': 0.73}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 2.36e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 1.29e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.32071184716014955;  // std dev = 2.11e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.048398084401824124;  // std dev = 0.128, 28.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.264313075011489;  // std dev = 0.124, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08870046613471842;  // std dev = 1.75e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.21632839044604624;  // std dev = 0.109, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08178730951121496;  // std dev = 9.13e-09, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18198726585460803;  // std dev = 0.019, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07585157152694035;  // std dev = 9.13e-09, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.15009668450879407;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04132677176159757;  // std dev = 0.085, 28.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.14133482964143962;  // std dev = 0.127, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06803502328549647;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076233
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.781 seconds
Total inference time: 0.764 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100001
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.388 seconds
Parameter learned model CLL: -0.100001


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.36e-08, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.49e-08, 25, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 25], 'true,false': [0.0, 0, 0], 'false': [0.0, 25, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.29e-08, 25, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 25, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [2.11e-08, 0, 22], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.128, 25, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.124, 0, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.75e-08, 25, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.109, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.13e-09, 25, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.019, 0, 25], 'true,false': [0.0, 0, 0], 'false': [9.13e-09, 25, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.0, 0, 22], 'true,false': [0.0, 0, 0], 'false': [0.085, 25, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.127, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 25, 0]}]]
[{'': [7.105427357601002e-16, 8.881784197001253e-18], 'true': [7.105427357601002e-16, nan], 'true,true': [7.105427357601002e-16, nan]}, {'': [-7.105427357601002e-17, -2.220446049250313e-18], 'true': [-7.105427357601002e-17, nan]}, {'': [-2.842170943040401e-16, 6.661338147750939e-18], 'true': [-2.842170943040401e-16, nan], 'true,true': [-2.842170943040401e-16, nan]}, {'': [-3.552713678800501e-17, -2.220446049250313e-18], 'true': [-3.552713678800501e-17, nan], 'true,true': [-3.552713678800501e-17, nan]}, {'': [2.0185873175002847e-17, 0.016349056989322177], 'true': [2.0185873175002847e-17, nan], 'true,true': [2.0185873175002847e-17, nan]}, {'': [0.0006127353300398663, 1.2212453270876722e-17], 'true': [0.0006127353300398663, nan], 'true,true': [0.0006127353300398663, nan], 'true,true,true': [0.0006127353300398663, nan]}, {'': [0.0004789843172035457, 3.3306690738754695e-18], 'true': [0.0004789843172035457, nan], 'true,true': [0.0004789843172035457, nan]}, {'': [0.00037687810424392066, 3.3306690738754695e-18], 'true': [0.00037687810424392066, nan]}, {'': [-2.7755575615628914e-17, 0.007191180866895775], 'true': [-2.7755575615628914e-17, nan]}, {'': [0.0006476721658665929, -4.996003610813204e-18], 'true': [0.0006476721658665929, nan], 'true,true': [0.0006476721658665929, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.12544463852839138;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.11231637819360638;  // std dev = 1.29e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.10159632948783635;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.32071184716014955;  // std dev = 2.11e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( actor(B) )
%   | then return -0.09269127618926094;  // std dev = 1.18e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0.1553505978203854;  // std dev = 0.453, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2590934771859046;  // std dev = 0.053, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.08689868050160847;  // std dev = 0.029, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.21254781529061278;  // std dev = 0.047, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.08024912884818633;  // std dev = 0.027, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17915549327605715;  // std dev = 0.041, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07452412245678502;  // std dev = 0.025, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.15161231531905023;  // std dev = 2.11e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( director(B), actor(A) )
%   | then return 0.1741279115714932;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.06954611690410395;  // std dev = 0.024, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13520684351828904;  // std dev = 0.028, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06517978184682877;  // std dev = 0.022, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.98318
   AUC PR    = 0.399657
   CLL	      = -0.143802
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 0.608 seconds
Total inference time: 0.634 seconds
AUC ROC: 0.98318


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095665
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.33 seconds
Refined model CLL: -0.095665


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.98318
   AUC PR    = 0.399657
   CLL	      = -0.143802
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 2.107 seconds
Total inference time: 0.634 seconds
AUC ROC: 0.98318
Total revision time: 2.107
Best scored revision CLL: -0.095665


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:01:43
{'AUC ROC': 0.98318, 'AUC PR': 0.399657, 'CLL': -0.143802, 'Precision': [0.348837, 0.5], 'Recall': 1.0, 'F1': 0.517241, 'Learning time': 2.107, 'Inference time': 0.634, 'parameter_25': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076233, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.781, 'Inference time': 0.764}}


Starting fold 1

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos	 examples: 56
Target test neg examples: 3308

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583099;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.2518113266019146;  // std dev = 0.377, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2043805033631121;  // std dev = 0.351, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.23028649709148005;  // std dev = 7.45e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.13883301112013177;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19201334068750064;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(D, B) )
%   | | then return -0.12305103690939956;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.11824408812945152;  // std dev = 0.102, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1032410315600457;  // std dev = 0.247, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066382
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.605 seconds
Total inference time: 0.996 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.112319
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.327 seconds
Parameter learned model CLL: -0.112319


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 5], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [5.27e-09, 0, 5], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.377, 1, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.351, 1, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [7.45e-09, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 5], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.102, 1, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.247, 1, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}]]
[{'': [0.1388888888888887, 0.0], 'true': [0.0, 0.0], 'true,true': [0.0, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.09915090450905224, 0.0], 'true': [0.0, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.061916714078618984, 0.0], 'true': [-4.4408920985006264e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-4.4408920985006264e-17, nan]}, {'': [0.03742709756190412, 0.0], 'true': [0.03742709756190412, nan], 'true,true': [4.4408920985006264e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.02373640866597888, 0.0], 'true': [0.02373640866597888, nan], 'true,true': [0.02373640866597888, nan]}, {'': [0.02054806366231014, 0.0], 'true': [0.02054806366231014, nan], 'true,true': [0.02054806366231014, nan], 'true,true,true': [0.02054806366231014, nan]}, {'': [0.018923501575330865, 0.0], 'true': [1.1102230246251566e-17, 0.0], 'true,true': [1.1102230246251566e-17, nan], 'true,false': [0.0, nan]}, {'': [0.013786883615350293, 0.0], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}, {'': [0.010453478807193455, 0.0], 'true': [0.010453478807193455, nan]}, {'': [0.010194806214885046, 0.0], 'true': [0.010194806214885046, nan], 'true,true': [0.010194806214885046, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.33099526521728556;  // std dev = 0.474, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.26053178561396195;  // std dev = 0.434, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20842329832206566;  // std dev = 0.414, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.24361910222570216;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.201063332492829;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20156233108362387;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.17069281965225447;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.11790677519082632;  // std dev = 0.291, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.10192903434099217;  // std dev = 0.291, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068181
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.495 seconds
Total inference time: 0.799 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.121145
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.302 seconds
Refined model CLL: -0.121145


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066382
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.729 seconds
Total inference time: 0.996 seconds
AUC ROC: 1.0
Total revision time: 1.729
Best scored revision CLL: -0.112319


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:01:47
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066382, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.729, 'Inference time': 0.996, 'parameter_5': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066382, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.605, 'Inference time': 0.996}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.2455476429148023;  // std dev = 0.529, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.046757595817104224;  // std dev = 0.130, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.21061937934857453;  // std dev = 0.509, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08883316074915137;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.23587256772043128;  // std dev = 0.053, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.1388300451774366;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08190061346778234;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19608140314046615;  // std dev = 0.015, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, B) )
%   | | then return -0.12304867999597051;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07594938047746903;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.11301117796955105;  // std dev = 0.105, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.03998112423511257;  // std dev = 0.087, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.10831096061466372;  // std dev = 0.362, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06820275480619285;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069962
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.657 seconds
Total inference time: 0.961 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.116834
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.357 seconds
Parameter learned model CLL: -0.116834


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 10], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 10], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 8, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.529, 2, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.13, 8, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.509, 2, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.053, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.73e-09, 8, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.015, 0, 10], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.105, 2, 9], 'true,false': [0.0, 0, 0], 'false': [0.087, 8, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.362, 2, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 8, 0]}]]
[{'': [0.1388888888888887, -6.938893903907228e-18], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.09915090450905217, 0.0], 'true': [8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.0619167140786188, -1.734723475976807e-18], 'true': [-1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.7763568394002506e-16, nan]}, {'': [0.037427097561904134, 1.734723475976807e-18], 'true': [0.037427097561904134, nan], 'true,true': [1.3322676295501878e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.025423459199263334, 0.01687922394025166], 'true': [0.025423459199263334, nan], 'true,true': [0.025423459199263334, nan]}, {'': [0.021553479020700383, 0.0], 'true': [0.021553479020700383, nan], 'true,true': [0.021553479020700383, nan], 'true,true,true': [0.021553479020700383, nan]}, {'': [0.01973394753792203, 1.734723475976807e-18], 'true': [0.00028039569342488415, 0.0], 'true,true': [0.00028039569342488415, nan], 'true,false': [0.0, nan]}, {'': [0.014327242491246185, 0.0], 'true': [0.00021868932905059202, 0.0], 'true,false': [0.0, nan]}, {'': [0.011089160025433297, 0.007592452299117952], 'true': [0.011089160025433297, nan]}, {'': [0.010925239845978844, 0.0], 'true': [0.010925239845978844, nan], 'true,true': [0.010925239845978844, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.33099526521728556;  // std dev = 0.474, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.33099526521728556;  // std dev = 0.474, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A), director(B) )
%   | then return 0.33984521881958574;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.21626336310277242;  // std dev = 0.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.103527302245485;  // std dev = 0.053, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.20277104802461202;  // std dev = 0.358, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.2235521343357101;  // std dev = 0.381, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09139581769201825;  // std dev = 0.035, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2396658947484574;  // std dev = 0.030, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.1494470293004129;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.08409640458805276;  // std dev = 0.032, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19875880530941764;  // std dev = 0.026, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.13142817647331656;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07785115204504643;  // std dev = 0.030, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), female(A) )
%   | then return 0.16178246699470744;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.10026023229063359;  // std dev = 0.120, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.07933016489731272;  // std dev = 0.062, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.09949212304686199;  // std dev = 0.227, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.11674099600847165;  // std dev = 0.249, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07100119200069233;  // std dev = 0.044, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073726
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.772 seconds
Total inference time: 0.79 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.114725
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.319 seconds
Refined model CLL: -0.114725


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073726
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.105 seconds
Total inference time: 0.79 seconds
AUC ROC: 1.0
Total revision time: 2.105
Best scored revision CLL: -0.114725


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:01:52
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073726, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.105, 'Inference time': 0.79, 'parameter_10': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069962, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.657, 'Inference time': 0.961}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 1.49e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583098;  // std dev = 1.18e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.2616542581102339;  // std dev = 0.541, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.015178190561246478;  // std dev = 0.161, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2315557811015893;  // std dev = 0.533, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09142266356490901;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2341329247351663;  // std dev = 0.080, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.14331830429833195;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08410703717825217;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1948614876355691;  // std dev = 0.018, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, B) )
%   | | then return -0.12660491559539977;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07785055273937615;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.11930390658930572;  // std dev = 0.095, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.02164582120592054;  // std dev = 0.106, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1216546775473397;  // std dev = 0.384, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07100106758103565;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072567
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.641 seconds
Total inference time: 0.913 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.115104
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.373 seconds
Parameter learned model CLL: -0.115104


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [1.49e-08, 0, 15], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 13, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-08, 13, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 15], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.541, 2, 12], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.161, 13, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.533, 2, 15], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.08, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.018, 0, 15], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.27e-09, 13, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.095, 2, 12], 'true,false': [0.0, 0, 0], 'false': [0.106, 13, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.384, 2, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 13, 0]}]]
[{'': [0.10380622837370206, -1.2810265668751807e-17], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.0741058663458661, 4.270088556250602e-18], 'true': [1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.04627685204491911, 8.540177112501205e-18], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.027973194025506288, -2.135044278125301e-18], 'true': [0.027973194025506288, nan], 'true,true': [1.4802973661668753e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.020926792946332373, 0.026035873255495577], 'true': [0.020926792946332373, nan], 'true,true': [0.020926792946332373, nan]}, {'': [0.01668043600743499, -2.135044278125301e-18], 'true': [0.01668043600743499, nan], 'true,true': [0.01668043600743499, nan], 'true,true,true': [0.01668043600743499, nan]}, {'': [0.015166744143672702, -3.2025664171879517e-18], 'true': [0.00042786724923316776, 0.0], 'true,true': [0.00042786724923316776, nan], 'true,false': [0.0, nan]}, {'': [0.011020213226397528, 2.135044278125301e-18], 'true': [0.0003318516480047403, 0.0], 'true,false': [0.0, nan]}, {'': [0.009013893737200568, 0.011181156994593695], 'true': [0.009013893737200568, nan]}, {'': [0.008657784090597961, 2.135044278125301e-18], 'true': [0.008657784090597961, nan], 'true,true': [0.008657784090597961, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.37032177382684206;  // std dev = 0.149, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.33099526521728556;  // std dev = 0.474, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.288187501476636;  // std dev = 0.136, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.26053178561396195;  // std dev = 0.434, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2297148783164822;  // std dev = 0.129, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.20842329832206566;  // std dev = 0.414, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.23302174508484613;  // std dev = 0.029, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.20834065737486795;  // std dev = 0.010, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07877675473109172;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19399153681801984;  // std dev = 0.025, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.1760655700771351;  // std dev = 0.009, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.165450375213474;  // std dev = 0.022, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08235038018803643;  // std dev = 0.108, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1140837047482862;  // std dev = 0.083, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.10326480298431355;  // std dev = 0.262, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06355234914561612;  // std dev = 0.001, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066609
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.738 seconds
Total inference time: 0.833 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108116
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.342 seconds
Refined model CLL: -0.108116


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066609
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.094 seconds
Total inference time: 0.833 seconds
AUC ROC: 1.0
Total revision time: 2.094
Best scored revision CLL: -0.108116


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:01:56
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066609, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.094, 'Inference time': 0.833, 'parameter_15': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072567, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.641, 'Inference time': 0.913}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.2771957289128433;  // std dev = 0.553, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.03363368713934516;  // std dev = 0.145, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.22333928293829006;  // std dev = 0.627, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08990118177427149;  // std dev = 5.27e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2312712732848783;  // std dev = 0.093, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.13278848520074507;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08281171206963829;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19280527584205176;  // std dev = 0.018, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then return -0.11825836177929583;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0767352395213919;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.12893764763635954;  // std dev = 0.084, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0329549711912405;  // std dev = 0.097, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.11675074044643081;  // std dev = 0.445, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06931592497974902;  // std dev = 3.73e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071184
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.674 seconds
Total inference time: 0.879 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.112717
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.384 seconds
Parameter learned model CLL: -0.112717


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 17, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [1.49e-08, 0, 20], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 17, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 17, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 20], 'true,true,false,true': [0.0, 3, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 17, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.553, 2, 17], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.145, 18, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.627, 3, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 17, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.093, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.016, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 17, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.018, 0, 20], 'true,false,true': [0.015, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 17, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.084, 2, 17], 'true,false': [0.0, 0, 0], 'false': [0.097, 18, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.445, 3, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 17, 0]}]]
[{'': [0.11342155009451807, -3.2653618371328133e-18], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.08097011483536962, 0.0], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.05056336575040308, 1.3061447348531253e-17], 'true': [-2.6645352591003756e-16, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan], 'true,false,true': [2.3129646346357427e-18, nan], 'true,true': [-2.6645352591003756e-16, nan]}, {'': [0.030564283831271546, -8.163404592832034e-18], 'true': [0.030564283831271546, nan], 'true,true': [1.3322676295501878e-16, -1.1564823173178713e-18], 'true,true,false': [-1.1564823173178713e-18, nan]}, {'': [0.01609604665216519, 0.02092679294633239], 'true': [0.01609604665216519, nan], 'true,true': [0.01609604665216519, nan]}, {'': [0.017069060859609554, 1.6326809185664067e-18], 'true': [0.017069060859609554, nan], 'true,true': [0.017069060859609554, nan], 'true,true,true': [0.017069060859609554, nan]}, {'': [0.015444248004436697, -2.44902137784961e-18], 'true': [0.000433919446183606, 0.00026135919110049227], 'true,true': [0.000433919446183606, nan], 'true,false': [0.00026135919110049227, nan]}, {'': [0.011296748422239074, -2.44902137784961e-18], 'true': [0.0003382767311279122, 0.00021358579756707943], 'true,false': [0.00021358579756707943, nan]}, {'': [0.007053129964392914, 0.00933381133517777], 'true': [0.007053129964392914, nan]}, {'': [0.008612459235595275, 8.163404592832033e-19], 'true': [0.008612459235595275, nan], 'true,true': [0.008612459235595275, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415830986;  // std dev = 5.16e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601496;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926096;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948945;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08518475138839685;  // std dev = 1.18e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109172;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527744;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07324622576333704;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06842697784420272;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06419184008202619;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.831 seconds
Total inference time: 0.799 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.342 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.231 seconds
Total inference time: 0.799 seconds
AUC ROC: 1.0
Total revision time: 2.231
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:02:00
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063421, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.231, 'Inference time': 0.799, 'parameter_20': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.071184, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.674, 'Inference time': 0.879}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 2.36e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 7.45e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.2813401211268724;  // std dev = 0.556, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.007159595496279425;  // std dev = 0.167, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.23553325929357363;  // std dev = 0.647, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09209091037748988;  // std dev = 9.13e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2325247433081473;  // std dev = 0.114, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.13542091217554988;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0846749905272399;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19372346831677376;  // std dev = 0.020, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, B) )
%   | | then return -0.12036076736311015;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0783388560431111;  // std dev = 9.13e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.12935634632658322;  // std dev = 0.080, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.017635973963276645;  // std dev = 0.110, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.12464367633549325;  // std dev = 0.463, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07168372609067443;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073341
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.841 seconds
Total inference time: 0.946 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.11352
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.39 seconds
Parameter learned model CLL: -0.11352


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [2.36e-08, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 22, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.67e-08, 22, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false,true': [0.0, 3, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.556, 2, 19], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.167, 23, 6]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.647, 3, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.13e-09, 22, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.114, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.015, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.02, 0, 25], 'true,false,true': [0.014, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.13e-09, 22, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.08, 2, 19], 'true,false': [0.0, 0, 0], 'false': [0.11, 23, 6]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.463, 3, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}]]
[{'': [0.09566326530612335, 2.523234146875356e-18], 'true': [7.105427357601002e-16, 0.0], 'true,true': [7.105427357601002e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.06829271484041863, 0.0], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.042646716329660696, 1.2616170734376778e-17], 'true': [-2.842170943040401e-16, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan], 'true,false,true': [2.3129646346357427e-18, nan], 'true,true': [-2.842170943040401e-16, nan]}, {'': [0.025778868218658442, -2.523234146875356e-18], 'true': [0.025778868218658442, nan], 'true,true': [-3.552713678800501e-17, -1.1564823173178713e-18], 'true,true,false': [-1.1564823173178713e-18, nan]}, {'': [0.014726261702974683, 0.028043395541636915], 'true': [0.014726261702974683, nan], 'true,true': [0.014726261702974683, nan]}, {'': [0.01493666462846542, 3.784851220313033e-18], 'true': [0.01493666462846542, nan], 'true,true': [0.01493666462846542, nan], 'true,true,true': [0.01493666462846542, nan]}, {'': [0.013440933873145822, -1.261617073437678e-18], 'true': [0.0005202813489866908, 0.0002344620006675078], 'true,true': [0.0005202813489866908, nan], 'true,false': [0.0002344620006675078, nan]}, {'': [0.009817502464929382, 3.784851220313033e-18], 'true': [0.00040314329222160164, 0.00019111422920531593], 'true,false': [0.00019111422920531593, nan]}, {'': [0.006394120346217835, 0.012028523690106664], 'true': [0.006394120346217835, nan]}, {'': [0.007655618685946884, -1.8924256101565167e-18], 'true': [0.007655618685946884, nan], 'true,true': [0.007655618685946884, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048777;  // std dev = 7.45e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.3829062565819001;  // std dev = 0.129, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.33765052052044126;  // std dev = 0.187, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.33272226509535374;  // std dev = 0.025, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.13863049019719711;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926093;  // std dev = 1.18e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2633584389955113;  // std dev = 0.022, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12289086143986043;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08518475138839683;  // std dev = 1.39e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2155280640599664;  // std dev = 0.019, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11024707634504376;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109179;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18131991766478314;  // std dev = 0.017, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.09988867618960351;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07324622576333704;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15594194570409015;  // std dev = 0.015, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.09125996903298515;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06842697784420274;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13649996499725187;  // std dev = 0.013, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.08396893011566357;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.0641918400820262;  // std dev = 6.45e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064083
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.752 seconds
Total inference time: 0.762 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096885
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.365 seconds
Refined model CLL: -0.096885


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064083
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.348 seconds
Total inference time: 0.762 seconds
AUC ROC: 1.0
Total revision time: 2.348
Best scored revision CLL: -0.096885


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:02:05
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064083, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.348, 'Inference time': 0.762, 'parameter_25': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073341, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.841, 'Inference time': 0.946}}


Starting fold 2

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos	 examples: 58
Target test neg examples: 3423

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583099;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.023790755631025878;  // std dev = 0.154, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.26932114521402895;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09070977761578683;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.21988205462710556;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08350049674800492;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18460064037347698;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07732858878256614;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.14867666923878964;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.027034678977782712;  // std dev = 0.101, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.14507062977920795;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0702031650614777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081419
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.564 seconds
Total inference time: 0.854 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102769
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.329 seconds
Parameter learned model CLL: -0.102769


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [5.27e-09, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.154, 5, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.063, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.056, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.022, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 0], 'false': [0.101, 5, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.064, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [-4.4408920985006264e-17, nan], 'true,true': [-4.4408920985006264e-17, nan]}, {'': [4.4408920985006264e-17, 0.0], 'true': [4.4408920985006264e-17, nan], 'true,true': [4.4408920985006264e-17, nan]}, {'': [0.0, 0.023736408665978894], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0008007657841786142, 2.7755575615628915e-18], 'true': [0.0008007657841786142, nan], 'true,true': [0.0008007657841786142, nan], 'true,true,true': [0.0008007657841786142, nan]}, {'': [0.0006210086063809017, 0.0], 'true': [0.0006210086063809017, nan], 'true,true': [0.0006210086063809017, nan]}, {'': [0.0004852223481672635, 0.0], 'true': [0.0004852223481672635, nan]}, {'': [0.0, 0.010104221444053017], 'true': [0.0, nan]}, {'': [0.0008118917192243946, 0.0], 'true': [0.0008118917192243946, nan], 'true,true': [0.0008118917192243946, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.023790755631025878;  // std dev = 0.377, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.26932114521402895;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09070977761578683;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.21988205462710556;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08350049674800492;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.18460064037347698;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07732858878256614;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.14867666923878964;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.027034678977782712;  // std dev = 0.246, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.14507062977920795;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0702031650614777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.166335
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 0.48 seconds
Total inference time: 0.742 seconds
AUC ROC: 0.976337


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102769
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.306 seconds
Refined model CLL: -0.102769


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081419
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.679 seconds
Total inference time: 0.854 seconds
AUC ROC: 1.0
Total revision time: 1.679
Best scored revision CLL: -0.102769


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:02:09
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.081419, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.679, 'Inference time': 0.854, 'parameter_5': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.081419, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.564, 'Inference time': 0.854}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05510917406658727;  // std dev = 0.119, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2629384589303888;  // std dev = 0.074, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08815948596189063;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2153471994162996;  // std dev = 0.065, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08132513978810842;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18126172813236446;  // std dev = 0.018, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07545242316095276;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.1504901884429053;  // std dev = 1.86e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04531658671258642;  // std dev = 0.079, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.14027561787004128;  // std dev = 0.076, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06744779637291397;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078895
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.618 seconds
Total inference time: 0.905 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099221
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.337 seconds
Parameter learned model CLL: -0.099221


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [1.18e-08, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 10, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.119, 10, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.074, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 10, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.065, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.018, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [1.86e-09, 0, 9], 'true,false': [0.0, 0, 0], 'false': [0.079, 10, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.076, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}]]
[{'': [-8.881784197001253e-17, -1.1102230246251566e-17], 'true': [-8.881784197001253e-17, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [8.881784197001253e-17, 2.7755575615628915e-18], 'true': [8.881784197001253e-17, nan]}, {'': [-1.7763568394002506e-16, 0.0], 'true': [-1.7763568394002506e-16, nan], 'true,true': [-1.7763568394002506e-16, nan]}, {'': [1.3322676295501878e-16, 1.3877787807814458e-18], 'true': [1.3322676295501878e-16, nan], 'true,true': [1.3322676295501878e-16, nan]}, {'': [-3.700743415417188e-17, 0.014124143999590747], 'true': [-3.700743415417188e-17, nan], 'true,true': [-3.700743415417188e-17, nan]}, {'': [0.0005428270490787646, 2.7755575615628915e-18], 'true': [0.0005428270490787646, nan], 'true,true': [0.0005428270490787646, nan], 'true,true,true': [0.0005428270490787646, nan]}, {'': [0.0004252552067716464, 1.3877787807814458e-18], 'true': [0.0004252552067716464, nan], 'true,true': [0.0004252552067716464, nan]}, {'': [0.00033524304050218666, -2.0816681711721684e-18], 'true': [0.00033524304050218666, nan]}, {'': [3.0839528461809902e-18, 0.006269034858084544], 'true': [3.0839528461809902e-18, nan]}, {'': [0.0005803947907187995, -2.7755575615628915e-18], 'true': [0.0005803947907187995, nan], 'true,true': [0.0005803947907187995, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( female(A) )
%   | then return 0.010659504648091699;  // std dev = 0.358, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.261494424733241;  // std dev = 0.060, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08770681703672208;  // std dev = 0.012, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2142915405022098;  // std dev = 0.053, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08093928322981843;  // std dev = 0.011, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1804647324454268;  // std dev = 0.047, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07511989439010541;  // std dev = 0.011, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.15091213246399038;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( female(A) )
%   | then return -0.007378661185767136;  // std dev = 0.234, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.06801010457652322;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13894073141502253;  // std dev = 0.060, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06698212497832345;  // std dev = 0.015, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.16253
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 0.566 seconds
Total inference time: 0.757 seconds
AUC ROC: 0.976337


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098326
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.314 seconds
Refined model CLL: -0.098326


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.16253
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 1.835 seconds
Total inference time: 0.757 seconds
AUC ROC: 0.976337
Total revision time: 1.835
Best scored revision CLL: -0.098326


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:02:13
{'AUC ROC': 0.976337, 'AUC PR': 0.263636, 'CLL': -0.16253, 'Precision': [0.263636, 0.5], 'Recall': 1.0, 'F1': 0.417266, 'Learning time': 1.835, 'Inference time': 0.757, 'parameter_10': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.078895, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.618, 'Inference time': 0.905}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 1.49e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583098;  // std dev = 1.18e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04405561461874207;  // std dev = 0.133, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.24305974696517352;  // std dev = 0.357, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08905210716139503;  // std dev = 6.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22073407376320234;  // std dev = 0.088, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.1108385412110885;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08208751399730621;  // std dev = 5.27e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18520204765414958;  // std dev = 0.020, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, B) )
%   | | then return -0.10037698820241901;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07611068262659135;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.151844105521369;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.03968844277986106;  // std dev = 0.089, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1292242551254333;  // std dev = 0.247, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06835718785805643;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072396
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.674 seconds
Total inference time: 0.991 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.103468
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.377 seconds
Parameter learned model CLL: -0.103468


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [1.49e-08, 0, 15], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.18e-08, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 15], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 13], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.133, 15, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.357, 1, 15], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.45e-09, 14, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.088, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.27e-09, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.02, 0, 15], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.0, 0, 13], 'true,false': [0.0, 0, 0], 'false': [0.089, 15, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.247, 1, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}]]
[{'': [0.05859374999999978, -1.1895246692412391e-17], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.041829287839756535, 3.96508223080413e-18], 'true': [1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.02612111375191717, 9.912705577010326e-18], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.015789556783928405, -3.96508223080413e-18], 'true': [0.015789556783928405, nan], 'true,true': [1.4802973661668753e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [-5.124106267500723e-17, 0.01774070682301535], 'true': [-5.124106267500723e-17, nan], 'true,true': [-5.124106267500723e-17, nan]}, {'': [0.007966047201680405, 2.9738116731030977e-18], 'true': [0.007966047201680405, nan], 'true,true': [0.007966047201680405, nan], 'true,true,true': [0.007966047201680405, nan]}, {'': [0.0069312043652756325, 1.982541115402065e-18], 'true': [0.0005220097187384217, 0.0], 'true,true': [0.0005220097187384217, nan], 'true,false': [0.0, nan]}, {'': [0.005162799697473009, -1.982541115402065e-18], 'true': [0.0004097747364232518, 0.0], 'true,false': [0.0, nan]}, {'': [-2.1350442781253012e-17, 0.008005434489837574], 'true': [-2.1350442781253012e-17, nan]}, {'': [0.003820717398630682, -9.912705577010326e-19], 'true': [0.003820717398630682, nan], 'true,true': [0.003820717398630682, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.3656025927936952;  // std dev = 0.156, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3286129918235207;  // std dev = 0.019, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( actor(B) )
%   | then return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0.16708981790417066;  // std dev = 0.376, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.26426522767494837;  // std dev = 0.037, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.22111123906911906;  // std dev = 0.128, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22027880900108524;  // std dev = 0.035, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.19375261936173527;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18479003551723075;  // std dev = 0.030, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.16526541548881404;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.15683384674852072;  // std dev = 0.021, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0.0653084650263684;  // std dev = 0.256, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1399435024392741;  // std dev = 0.036, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.11135724410473435;  // std dev = 0.088, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.06419184008202619;  // std dev = 6.97e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071773
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.692 seconds
Total inference time: 0.845 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102653
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.338 seconds
Refined model CLL: -0.102653


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071773
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.081 seconds
Total inference time: 0.845 seconds
AUC ROC: 1.0
Total revision time: 2.081
Best scored revision CLL: -0.102653


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:02:17
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.071773, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.081, 'Inference time': 0.845, 'parameter_15': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072396, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.674, 'Inference time': 0.991}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.3207118471601496;  // std dev = 2.11e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05510917406658727;  // std dev = 0.119, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2462195091736137;  // std dev = 0.358, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08815948596189062;  // std dev = 1.05e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.21817848444117893;  // std dev = 0.093, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.1100629675378072;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08132513978810844;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18332715537895758;  // std dev = 0.018, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then return -0.09973602828884602;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07545242316095277;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.15200783067187734;  // std dev = 3.23e-09, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.046085180741697825;  // std dev = 0.080, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.130653465416797;  // std dev = 0.249, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0673994689604939;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071596
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.698 seconds
Total inference time: 0.938 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101424
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.379 seconds
Parameter learned model CLL: -0.101424


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [1.49e-08, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.67e-08, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 20], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [2.11e-08, 0, 18], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.119, 20, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.358, 1, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.05e-08, 19, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.093, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.018, 0, 20], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [3.23e-09, 0, 18], 'true,false': [0.0, 0, 0], 'false': [0.08, 20, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.249, 1, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}]]
[{'': [0.04535147392290242, 0.0], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.03237580555397633, 0.0], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.02021770255628346, 1.460819769243627e-17], 'true': [-2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.6645352591003756e-16, nan]}, {'': [0.012221093081438202, -5.843279076974508e-18], 'true': [0.012221093081438202, nan], 'true,true': [1.3322676295501878e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [2.4671622769447922e-17, 0.014124143999590728], 'true': [2.4671622769447922e-17, nan], 'true,true': [2.4671622769447922e-17, nan]}, {'': [0.006107443761371216, 5.843279076974508e-18], 'true': [0.006107443761371216, nan], 'true,true': [0.006107443761371216, nan], 'true,true,true': [0.006107443761371216, nan]}, {'': [0.0052982670547561325, 0.0], 'true': [0.00043258751238569595, 0.0], 'true,true': [0.00043258751238569595, nan], 'true,false': [0.0, nan]}, {'': [0.003958298042289136, -7.304098846218135e-18], 'true': [0.00034074789925346295, 0.0], 'true,false': [0.0, nan]}, {'': [1.5419764230904953e-17, 0.0064237358906498905], 'true': [1.5419764230904953e-17, nan]}, {'': [0.002942658667187842, 0.0], 'true': [0.002942658667187842, nan], 'true,true': [0.002942658667187842, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.37758205233937553;  // std dev = 0.138, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.32655242804411316;  // std dev = 0.018, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( actor(B) )
%   | then return -0.09269127618926093;  // std dev = 1.18e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0.16660652130865855;  // std dev = 0.377, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2619346662422029;  // std dev = 0.039, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.22902896693036956;  // std dev = 0.113, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.08518475138839683;  // std dev = 1.29e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21777529102502488;  // std dev = 0.036, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.19680335477960953;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109179;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18296650581496943;  // std dev = 0.031, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.16753513925008362;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.15567484092151648;  // std dev = 0.019, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( actor(B) )
%   | then return -0.06842697784420274;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0.06540019146531689;  // std dev = 0.258, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.138412147703113;  // std dev = 0.038, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.11659545582394679;  // std dev = 0.078, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.0641918400820262;  // std dev = 6.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07183
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.816 seconds
Total inference time: 0.881 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100782
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.352 seconds
Refined model CLL: -0.100782


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07183
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.2449999999999997 seconds
Total inference time: 0.881 seconds
AUC ROC: 1.0
Total revision time: 2.2449999999999997
Best scored revision CLL: -0.100782


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:02:22
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.07183, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.2449999999999997, 'Inference time': 0.881, 'parameter_20': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.071596, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.698, 'Inference time': 0.938}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 2.36e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 1.05e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.3027377983188709;  // std dev = 0.404, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.046757595817104224;  // std dev = 0.130, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.23970025242289883;  // std dev = 0.521, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08883316074915143;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2231374653196388;  // std dev = 0.105, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.12985587952330657;  // std dev = 0.020, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08190061346778238;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18693181396758432;  // std dev = 0.019, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, B) )
%   | | then return -0.11591784033976593;  // std dev = 0.018, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07594938047746908;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.14212007424389092;  // std dev = 0.056, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.040762033150282144;  // std dev = 0.087, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1265187669938099;  // std dev = 0.372, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06815314388618644;  // std dev = 9.13e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071777
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.765 seconds
Total inference time: 0.906 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.105834
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.394 seconds
Parameter learned model CLL: -0.105834


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [2.36e-08, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-08, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.404, 1, 22], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.13, 24, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.521, 2, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.105, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.02, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.019, 0, 25], 'true,false,true': [0.018, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.056, 1, 22], 'true,false': [0.0, 0, 0], 'false': [0.087, 24, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.372, 2, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.13e-09, 23, 0]}]]
[{'': [0.06858710562414343, 9.654113257610057e-18], 'true': [7.105427357601002e-16, 0.0], 'true,true': [7.105427357601002e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.04896340963409988, -2.413528314402514e-18], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.030576155100552255, 4.827056628805028e-18], 'true': [-2.842170943040401e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.842170943040401e-16, nan]}, {'': [0.01848251731452055, -2.413528314402514e-18], 'true': [0.01848251731452055, nan], 'true,true': [-3.552713678800501e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.007107461498470833, 0.016879223940251636], 'true': [0.007107461498470833, nan], 'true,true': [0.007107461498470833, nan]}, {'': [0.010046124562809193, -1.206764157201257e-17], 'true': [0.010046124562809193, nan], 'true,true': [0.010046124562809193, nan], 'true,true,true': [0.010046124562809193, nan]}, {'': [0.008985943127128916, -3.620292471603771e-18], 'true': [0.0004440957651802524, 0.0003846819075887069], 'true,true': [0.0004440957651802524, nan], 'true,false': [0.0003846819075887069, nan]}, {'': [0.006636620956276003, -6.033820786006285e-18], 'true': [0.000348332569834775, 0.00031623216264176253], 'true,false': [0.00031623216264176253, nan]}, {'': [0.0031429778487625393, 0.007579033590430336], 'true': [0.0031429778487625393, nan]}, {'': [0.005118877308578411, 3.620292471603771e-18], 'true': [0.005118877308578411, nan], 'true,true': [0.005118877308578411, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360638;  // std dev = 1.05e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.3656025927936952;  // std dev = 0.156, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.3869777068850071;  // std dev = 0.122, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926094;  // std dev = 1.18e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then return 0.2848967264457383;  // std dev = 0.142, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.2997444556074342;  // std dev = 0.111, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.22716784100726567;  // std dev = 0.135, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.23869711605396288;  // std dev = 0.106, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else return -0.08518475138839682;  // std dev = 1.58e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2242493600533541;  // std dev = 0.020, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.21790653016198042;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07877675473109176;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.187657666060258;  // std dev = 0.018, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.18305356515601245;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07324622576333704;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420275;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then return 0.13295791423679226;  // std dev = 0.096, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.13962947326851022;  // std dev = 0.075, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11539459151171114;  // std dev = 0.096, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.12177620899355872;  // std dev = 0.075, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else return -0.0641918400820262;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071081
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.814 seconds
Total inference time: 0.779 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.10639
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.35 seconds
Refined model CLL: -0.10639


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071777
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.323 seconds
Total inference time: 0.906 seconds
AUC ROC: 1.0
Total revision time: 2.323
Best scored revision CLL: -0.105834


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:02:26
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.071777, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.323, 'Inference time': 0.906, 'parameter_25': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.071777, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.765, 'Inference time': 0.906}}


Starting fold 3

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos	 examples: 178
Target test neg examples: 3543

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583099;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100103
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.569 seconds
Total inference time: 0.937 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.319 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [5.27e-09, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [-4.4408920985006264e-17, nan], 'true,true': [-4.4408920985006264e-17, nan]}, {'': [4.4408920985006264e-17, 0.0], 'true': [4.4408920985006264e-17, nan], 'true,true': [4.4408920985006264e-17, nan]}, {'': [-2.2204460492503132e-17, 0.0], 'true': [-2.2204460492503132e-17, nan], 'true,true': [-2.2204460492503132e-17, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}, {'': [-5.551115123125783e-18, -1.3877787807814458e-18], 'true': [-5.551115123125783e-18, nan], 'true,true': [-5.551115123125783e-18, nan]}, {'': [0.0, -6.938893903907229e-19], 'true': [0.0, nan]}, {'': [0.0, 6.938893903907229e-19], 'true': [0.0, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'true,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.9283
   AUC PR    = 0.265885
   CLL	      = -0.36127
   Precision = 0.229974 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.37395


Total learning time: 0.462 seconds
Total inference time: 0.757 seconds
AUC ROC: 0.9283


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.3 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100103
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.65 seconds
Total inference time: 0.937 seconds
AUC ROC: 1.0
Total revision time: 1.65
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:02:30
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.100103, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.65, 'Inference time': 0.937, 'parameter_5': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.100103, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.569, 'Inference time': 0.937}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527736;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.15274385809367094;  // std dev = 1.86e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202619;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100103
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.605 seconds
Total inference time: 0.914 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.344 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [1.18e-08, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 10, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [1.83e-08, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 10, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [2.63e-09, 0, 10], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 10, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [1.86e-09, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 10, 0]}]]
[{'': [-8.881784197001253e-17, -1.1102230246251566e-17], 'true': [-8.881784197001253e-17, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [8.881784197001253e-17, 2.7755575615628915e-18], 'true': [8.881784197001253e-17, nan]}, {'': [-1.7763568394002506e-16, 0.0], 'true': [-1.7763568394002506e-16, nan], 'true,true': [-1.7763568394002506e-16, nan]}, {'': [1.3322676295501878e-16, 1.3877787807814458e-18], 'true': [1.3322676295501878e-16, nan], 'true,true': [1.3322676295501878e-16, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [-4.4408920985006264e-17, nan], 'true,true': [-4.4408920985006264e-17, nan]}, {'': [3.3306690738754695e-17, 1.3877787807814458e-18], 'true': [3.3306690738754695e-17, nan], 'true,true': [3.3306690738754695e-17, nan], 'true,true,true': [3.3306690738754695e-17, nan]}, {'': [-2.7755575615628914e-17, 0.0], 'true': [-2.7755575615628914e-17, nan], 'true,true': [-2.7755575615628914e-17, nan]}, {'': [5.551115123125783e-18, 6.938893903907229e-19], 'true': [5.551115123125783e-18, nan]}, {'': [0.0, 6.938893903907229e-19], 'true': [0.0, nan]}, {'': [0.0, 1.3877787807814458e-18], 'true': [0.0, nan], 'true,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527736;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.15274385809367094;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06419184008202619;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.9283
   AUC PR    = 0.265885
   CLL	      = -0.36127
   Precision = 0.229974 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.37395


Total learning time: 0.495 seconds
Total inference time: 0.767 seconds
AUC ROC: 0.9283


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.305 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100103
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.7489999999999999 seconds
Total inference time: 0.914 seconds
AUC ROC: 1.0
Total revision time: 1.7489999999999999
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:02:34
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.100103, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.7489999999999999, 'Inference time': 0.914, 'parameter_10': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.100103, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.605, 'Inference time': 0.914}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 1.49e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583098;  // std dev = 1.18e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0668535809799228;  // std dev = 0.100, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.26052392094793925;  // std dev = 0.078, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08721993895288162;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.21361775200205219;  // std dev = 0.069, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08052153708884968;  // std dev = 6.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17997876576236765;  // std dev = 0.016, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07475769751167859;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.15118530190346857;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05239676920313805;  // std dev = 0.067, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1383789761987274;  // std dev = 0.081, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06642437218956464;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102387
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.642 seconds
Total inference time: 0.908 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097829
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.351 seconds
Parameter learned model CLL: -0.097829


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [1.49e-08, 0, 15], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.39e-08, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [1.18e-08, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 14], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.1, 15, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.078, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.069, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.45e-09, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.016, 0, 15], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.0, 0, 14], 'true,false': [0.0, 0, 0], 'false': [0.067, 15, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.081, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}]]
[{'': [-2.3684757858670006e-16, -1.4802973661668754e-17], 'true': [-2.3684757858670006e-16, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [1.7763568394002506e-16, 3.7007434154171884e-18], 'true': [1.7763568394002506e-16, nan]}, {'': [-2.3684757858670006e-16, 1.295260195396016e-17], 'true': [-2.3684757858670006e-16, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [1.4802973661668753e-16, -5.551115123125783e-18], 'true': [1.4802973661668753e-16, nan], 'true,true': [1.4802973661668753e-16, nan]}, {'': [-3.172065784643304e-17, 0.010013797405959847], 'true': [-3.172065784643304e-17, nan], 'true,true': [-3.172065784643304e-17, nan]}, {'': [0.00040096646052920624, -2.7755575615628915e-18], 'true': [0.00040096646052920624, nan], 'true,true': [0.00040096646052920624, nan], 'true,true,true': [0.00040096646052920624, nan]}, {'': [0.00031530994661096805, 2.7755575615628915e-18], 'true': [0.00031530994661096805, nan], 'true,true': [0.00031530994661096805, nan]}, {'': [0.0002494040001123336, -2.7755575615628915e-18], 'true': [0.0002494040001123336, nan]}, {'': [0.0, 0.004516167461693946], 'true': [0.0, nan]}, {'': [0.00043745242875677565, -2.7755575615628915e-18], 'true': [0.00043745242875677565, nan], 'true,true': [0.00043745242875677565, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583098;  // std dev = 4.71e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3207118471601497;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( movie(D, A), movie(D, B) )
%   | then return -0.010010651519378832;  // std dev = 0.370, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25968720161272796;  // std dev = 0.065, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08696290039167656;  // std dev = 0.011, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2130033624301802;  // std dev = 0.058, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.0803021623444973;  // std dev = 0.011, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17951302593368818;  // std dev = 0.051, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07456843592072128;  // std dev = 0.010, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.1514314523623228;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( movie(D, A), movie(D, B) )
%   | then return -0.01906308669861986;  // std dev = 0.244, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.06813269761899798;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1375850875155131;  // std dev = 0.067, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06615942622045283;  // std dev = 0.014, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.93809
   AUC PR    = 0.282432
   CLL	      = -0.364119
   Precision = 0.229974 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.37395


Total learning time: 0.639 seconds
Total inference time: 0.818 seconds
AUC ROC: 0.93809


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097298
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.337 seconds
Refined model CLL: -0.097298


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.93809
   AUC PR    = 0.282432
   CLL	      = -0.364119
   Precision = 0.229974 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.37395


Total learning time: 1.969 seconds
Total inference time: 0.818 seconds
AUC ROC: 0.93809
Total revision time: 1.969
Best scored revision CLL: -0.097298


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:02:38
{'AUC ROC': 0.93809, 'AUC PR': 0.282432, 'CLL': -0.364119, 'Precision': [0.229974, 0.5], 'Recall': 1.0, 'F1': 0.37395, 'Learning time': 1.969, 'Inference time': 0.818, 'parameter_15': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.102387, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.642, 'Inference time': 0.908}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.3207118471601496;  // std dev = 2.58e-08, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07300541317262235;  // std dev = 0.088, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.25925463969399626;  // std dev = 0.080, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08673141753615289;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.21270557918308536;  // std dev = 0.071, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0801032327670146;  // std dev = 5.27e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17929997756375154;  // std dev = 0.014, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07439571394076487;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.15155271826886146;  // std dev = 5.59e-09, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.056156142590076084;  // std dev = 0.059, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1373632318220765;  // std dev = 0.084, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06589044242871876;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101839
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.675 seconds
Total inference time: 0.93 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097086
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.372 seconds
Parameter learned model CLL: -0.097086


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 20, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [1.49e-08, 0, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.49e-08, 20, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [1.18e-08, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [2.58e-08, 0, 19], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.088, 20, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.08, 0, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.071, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 20, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.014, 0, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [5.59e-09, 0, 19], 'true,false': [0.0, 0, 0], 'false': [0.059, 20, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.084, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0]}]]
[{'': [-8.881784197001253e-17, 2.7755575615628915e-18], 'true': [-8.881784197001253e-17, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [2.6645352591003756e-16, 0.0], 'true': [2.6645352591003756e-16, nan]}, {'': [-2.6645352591003756e-16, 1.1102230246251566e-17], 'true': [-2.6645352591003756e-16, nan], 'true,true': [-2.6645352591003756e-16, nan]}, {'': [1.3322676295501878e-16, -1.3877787807814458e-18], 'true': [1.3322676295501878e-16, nan], 'true,true': [1.3322676295501878e-16, nan]}, {'': [3.5059674461847047e-17, 0.007750664054197188], 'true': [3.5059674461847047e-17, nan], 'true,true': [3.5059674461847047e-17, nan]}, {'': [0.00031665335936146286, -1.3877787807814458e-18], 'true': [0.00031665335936146286, nan], 'true,true': [0.00031665335936146286, nan], 'true,true,true': [0.00031665335936146286, nan]}, {'': [0.0002495007527727799, 1.3877787807814458e-18], 'true': [0.0002495007527727799, nan], 'true,true': [0.0002495007527727799, nan]}, {'': [0.00019769746837647317, -2.7755575615628915e-18], 'true': [0.00019769746837647317, nan]}, {'': [2.921639538487254e-17, 0.003525074422150588], 'true': [2.921639538487254e-17, nan]}, {'': [0.00034915553527503087, -2.0816681711721684e-18], 'true': [0.00034915553527503087, nan], 'true,true': [0.00034915553527503087, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.11231637819360636;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830986;  // std dev = 5.16e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3207118471601496;  // std dev = 2.58e-08, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( movie(D, A), movie(D, B) )
%   | then return -0.023790755631025853;  // std dev = 0.377, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return -0.09269127618926094;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25870946823062435;  // std dev = 0.069, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.08656600794524431;  // std dev = 0.011, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.21230426206638137;  // std dev = 0.061, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07996197032766869;  // std dev = 0.010, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17899505451930847;  // std dev = 0.054, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07427377462601119;  // std dev = 0.009, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.15171370057218297;  // std dev = 2.11e-08, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( movie(D, A), movie(D, B) )
%   | then return -0.027001536108336447;  // std dev = 0.250, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return -0.06819823300566938;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13683798987698764;  // std dev = 0.071, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.06571984810996945;  // std dev = 0.013, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.93809
   AUC PR    = 0.282432
   CLL	      = -0.363568
   Precision = 0.229974 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.37395


Total learning time: 0.638 seconds
Total inference time: 0.772 seconds
AUC ROC: 0.93809


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096734
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.319 seconds
Refined model CLL: -0.096734


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.93809
   AUC PR    = 0.282432
   CLL	      = -0.363568
   Precision = 0.229974 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.37395


Total learning time: 2.004 seconds
Total inference time: 0.772 seconds
AUC ROC: 0.93809
Total revision time: 2.004
Best scored revision CLL: -0.096734


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:02:43
{'AUC ROC': 0.93809, 'AUC PR': 0.282432, 'CLL': -0.363568, 'Precision': [0.229974, 0.5], 'Recall': 1.0, 'F1': 0.37395, 'Learning time': 2.004, 'Inference time': 0.772, 'parameter_20': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.101839, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.675, 'Inference time': 0.93}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 2.36e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.32071184716014955;  // std dev = 2.98e-08, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07679115606043746;  // std dev = 0.080, 26.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2584720063484288;  // std dev = 0.081, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08643202110149016;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.21214210152521065;  // std dev = 0.072, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07984671116808922;  // std dev = 7.45e-09, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1788799461422449;  // std dev = 0.013, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07417361050085396;  // std dev = 7.45e-09, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.15177995658021523;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05848721025655763;  // std dev = 0.054, 26.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.13673042441164462;  // std dev = 0.085, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06556260645372648;  // std dev = 1.34e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101504
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.787 seconds
Total inference time: 0.954 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096623
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.383 seconds
Parameter learned model CLL: -0.096623


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.36e-08, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.83e-08, 25, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 25], 'true,false': [0.0, 0, 0], 'false': [0.0, 25, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 25, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 25, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [2.98e-08, 0, 24], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.08, 25, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.081, 0, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 25, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.072, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 25, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.013, 0, 25], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 25, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.0, 0, 24], 'true,false': [0.0, 0, 0], 'false': [0.054, 25, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.085, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.34e-08, 25, 0]}]]
[{'': [7.105427357601002e-16, 1.3322676295501878e-17], 'true': [7.105427357601002e-16, nan], 'true,true': [7.105427357601002e-16, nan]}, {'': [-7.105427357601002e-17, -4.440892098500626e-18], 'true': [-7.105427357601002e-17, nan]}, {'': [-2.842170943040401e-16, 0.0], 'true': [-2.842170943040401e-16, nan], 'true,true': [-2.842170943040401e-16, nan]}, {'': [-3.552713678800501e-17, -2.220446049250313e-18], 'true': [-3.552713678800501e-17, nan], 'true,true': [-3.552713678800501e-17, nan]}, {'': [3.700743415417188e-17, 0.0063203455027754435], 'true': [3.700743415417188e-17, nan], 'true,true': [3.700743415417188e-17, nan]}, {'': [0.00026132258392318696, -5.551115123125783e-18], 'true': [0.00026132258392318696, nan], 'true,true': [0.00026132258392318696, nan], 'true,true,true': [0.00026132258392318696, nan]}, {'': [0.00020615420276687502, 2.220446049250313e-18], 'true': [0.00020615420276687502, nan], 'true,true': [0.00020615420276687502, nan]}, {'': [0.0001635278099136972, 2.220446049250313e-18], 'true': [0.0001635278099136972, nan]}, {'': [-1.3877787807814457e-17, 0.002889551113782295], 'true': [-1.3877787807814457e-17, nan]}, {'': [0.0002900398765660439, 7.216449660063518e-18], 'true': [0.0002900398765660439, nan], 'true,true': [0.0002900398765660439, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.12544463852839138;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.11231637819360639;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.10159632948783635;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.32071184716014955;  // std dev = 2.98e-08, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( actor(A), actor(B) )
%   | then return -0.09269127618926094;  // std dev = 1.18e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0.04510976492720925;  // std dev = 0.338, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2574039491743656;  // std dev = 0.055, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.08609439775019714;  // std dev = 0.015, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.21135836174462067;  // std dev = 0.048, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07955802844047434;  // std dev = 0.014, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1782860107136897;  // std dev = 0.043, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07392414597117342;  // std dev = 0.013, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.15209509525032686;  // std dev = 2.11e-08, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( actor(B), actor(A) )
%   | then return -0.06827613105375184;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0.011990480920457717;  // std dev = 0.219, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13573180561962897;  // std dev = 0.055, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.0652095168970505;  // std dev = 0.020, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.9283
   AUC PR    = 0.265885
   CLL	      = -0.37774
   Precision = 0.229974 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.37395


Total learning time: 0.6 seconds
Total inference time: 0.825 seconds
AUC ROC: 0.9283


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095947
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.323 seconds
Refined model CLL: -0.095947


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.9283
   AUC PR    = 0.265885
   CLL	      = -0.37774
   Precision = 0.229974 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.37395


Total learning time: 2.093 seconds
Total inference time: 0.825 seconds
AUC ROC: 0.9283
Total revision time: 2.093
Best scored revision CLL: -0.095947


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:02:47
{'AUC ROC': 0.9283, 'AUC PR': 0.265885, 'CLL': -0.37774, 'Precision': [0.229974, 0.5], 'Recall': 1.0, 'F1': 0.37395, 'Learning time': 2.093, 'Inference time': 0.825, 'parameter_25': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.101504, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.787, 'Inference time': 0.954}}


Starting fold 4

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos	 examples: 45
Target test neg examples: 1891

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583099;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.23803122249026756;  // std dev = 0.370, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.010010651519378832;  // std dev = 0.165, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.21549338253865144;  // std dev = 0.365, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09185281015069582;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2401442450121177;  // std dev = 0.042, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.13851442904126202;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08447269268551708;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19915309401669487;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(D, B) )
%   | | then return -0.12279782037546687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07816497883457847;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.10757639303770454;  // std dev = 0.109, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.018459044115957557;  // std dev = 0.109, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1120144323124498;  // std dev = 0.260, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07148037446199772;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075373
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.67 seconds
Total inference time: 0.776 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.120092
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.334 seconds
Parameter learned model CLL: -0.120092


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 5], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [5.27e-09, 0, 5], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.37, 1, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.165, 4, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.365, 1, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.042, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.017, 0, 5], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.109, 1, 4], 'true,false': [0.0, 0, 0], 'false': [0.109, 4, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.26, 1, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}]]
[{'': [0.1388888888888887, 0.0], 'true': [0.0, 0.0], 'true,true': [0.0, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.09915090450905224, 0.0], 'true': [0.0, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.061916714078618984, 0.0], 'true': [-4.4408920985006264e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-4.4408920985006264e-17, nan]}, {'': [0.03742709756190412, 0.0], 'true': [0.03742709756190412, nan], 'true,true': [4.4408920985006264e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.027344342783207666, 0.02734434278320768], 'true': [0.027344342783207666, nan], 'true,true': [0.027344342783207666, nan]}, {'': [0.02216760748919559, 0.0], 'true': [0.02216760748919559, nan], 'true,true': [0.02216760748919559, nan], 'true,true,true': [0.02216760748919559, nan]}, {'': [0.02020779195980701, 0.0], 'true': [0.00035228511245780634, 0.0], 'true,true': [0.00035228511245780634, nan], 'true,false': [0.0, nan]}, {'': [0.014623197317386663, 0.0], 'true': [0.00027243823453915184, 0.0], 'true,false': [0.0, nan]}, {'': [0.011853476987988085, 0.0117749440659], 'true': [0.011853476987988085, nan]}, {'': [0.011257632111943848, 0.0], 'true': [0.011257632111943848, nan], 'true,true': [0.011257632111943848, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.33099526521728556;  // std dev = 0.474, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.33984521881958574;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10136009703424018;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20273169410075245;  // std dev = 0.359, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08451162956827243;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.23031011463501816;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.1483949933680464;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07819844983290557;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19203034792912066;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.13060271246859118;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07274431507888653;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.16398091060098308;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07768497269117544;  // std dev = 0.043, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.10081381413072837;  // std dev = 0.230, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06322710009293289;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083277
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.649 seconds
Total inference time: 0.657 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107334
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.312 seconds
Refined model CLL: -0.107334


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083277
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.965 seconds
Total inference time: 0.657 seconds
AUC ROC: 1.0
Total revision time: 1.965
Best scored revision CLL: -0.107334


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:02:51
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.083277, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.965, 'Inference time': 0.657, 'parameter_5': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075373, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.67, 'Inference time': 0.776}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.27477816678799294;  // std dev = 0.390, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.01752707194391358;  // std dev = 0.159, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.24023232963747318;  // std dev = 0.384, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0912277419218708;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.23086939782169164;  // std dev = 0.069, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.1460157928587641;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08394125967433566;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19252271941128848;  // std dev = 0.019, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, B) )
%   | | then return -0.12873235782965373;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07770794118875995;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.12582097409504123;  // std dev = 0.085, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.02310469560887495;  // std dev = 0.104, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.12693170073731605;  // std dev = 0.279, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0707834154031785;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075201
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.629 seconds
Total inference time: 0.776 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.112346
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.349 seconds
Parameter learned model CLL: -0.112346


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 10], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 10], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.39, 1, 8], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.159, 9, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.384, 1, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.069, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.73e-09, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.019, 0, 10], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.085, 1, 8], 'true,false': [0.0, 0, 0], 'false': [0.104, 9, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.279, 1, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}]]
[{'': [0.0826446280991734, -9.25185853854297e-18], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.058998885327700486, 0.0], 'true': [8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.036843003418682206, -1.5419764230904951e-18], 'true': [-1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.7763568394002506e-16, nan]}, {'': [0.02227066962361243, 3.0839528461809902e-18], 'true': [0.02227066962361243, nan], 'true,true': [1.3322676295501878e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.01687922394025164, 0.02542345919926334], 'true': [0.01687922394025164, nan], 'true,true': [0.01687922394025164, nan]}, {'': [0.013404141278912733, 3.0839528461809902e-18], 'true': [0.013404141278912733, nan], 'true,true': [0.013404141278912733, nan], 'true,true,true': [0.013404141278912733, nan]}, {'': [0.012166579141076212, 1.5419764230904951e-18], 'true': [0.00047028733207078456, 0.0], 'true,true': [0.00047028733207078456, nan], 'true,false': [0.0, nan]}, {'': [0.00886145636397535, -7.709882115452476e-19], 'true': [0.00036534521372890707, 0.0], 'true,false': [0.0, nan]}, {'': [0.00724756269894138, 0.010898876427519407], 'true': [0.00724756269894138, nan]}, {'': [0.0070786506487544535, -1.5419764230904951e-18], 'true': [0.0070786506487544535, nan], 'true,true': [0.0070786506487544535, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.37032177382684206;  // std dev = 0.149, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.288187501476636;  // std dev = 0.136, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2297148783164822;  // std dev = 0.129, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22772306651441815;  // std dev = 1.49e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.21561798225690687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109175;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19016537001653297;  // std dev = 1.05e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.18138294105261676;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13362599263205435;  // std dev = 0.092, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.11614867207133117;  // std dev = 0.092, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.06419184008202618;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073113
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.706 seconds
Total inference time: 0.621 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.109121
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.319 seconds
Refined model CLL: -0.109121


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073113
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.003 seconds
Total inference time: 0.621 seconds
AUC ROC: 1.0
Total revision time: 2.003
Best scored revision CLL: -0.109121


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:02:55
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073113, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.003, 'Inference time': 0.621, 'parameter_10': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075201, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.629, 'Inference time': 0.776}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 1.49e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583098;  // std dev = 1.18e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.28626158688103215;  // std dev = 0.396, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -8.239154449474823E-4;  // std dev = 0.172, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2527096616391007;  // std dev = 0.398, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09262200847634516;  // std dev = 6.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22994998098178662;  // std dev = 0.090, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.1490289961912221;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08512596137273755;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1918733607502811;  // std dev = 0.020, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, B) )
%   | | then return -0.13110017021930326;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07872627045586869;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.13050639504319145;  // std dev = 0.075, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.013823620625497739;  // std dev = 0.111, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.13492991876583174;  // std dev = 0.293, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07227009717778676;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076653
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.675 seconds
Total inference time: 0.762 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.111297
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.379 seconds
Parameter learned model CLL: -0.111297


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [1.49e-08, 0, 15], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.18e-08, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 15], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.396, 1, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.172, 14, 4]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.398, 1, 15], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.45e-09, 14, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.09, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.73e-09, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.02, 0, 15], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.33e-09, 14, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.075, 1, 11], 'true,false': [0.0, 0, 0], 'false': [0.111, 14, 4]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.293, 1, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}]]
[{'': [0.05859374999999978, -1.1895246692412391e-17], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.041829287839756535, 3.96508223080413e-18], 'true': [1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.02612111375191717, 9.912705577010326e-18], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.015789556783928405, -3.96508223080413e-18], 'true': [0.015789556783928405, nan], 'true,true': [1.4802973661668753e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.013055024766288345, 0.029538641895440382], 'true': [0.013055024766288345, nan], 'true,true': [0.013055024766288345, nan]}, {'': [0.009888349307473537, 2.9738116731030977e-18], 'true': [0.009888349307473537, nan], 'true,true': [0.009888349307473537, nan], 'true,true,true': [0.009888349307473537, nan]}, {'': [0.008921425731783346, 9.912705577010326e-19], 'true': [0.0005396208760418316, 0.0], 'true,true': [0.0005396208760418316, nan], 'true,false': [0.0, nan]}, {'': [0.006503780954681723, 4.956352788505163e-18], 'true': [0.00041787249497544644, 0.0], 'true,false': [0.0, nan]}, {'': [0.005563392871494648, 0.012340450132599877], 'true': [0.005563392871494648, nan]}, {'': [0.005361180921045913, -9.912705577010326e-19], 'true': [0.005361180921045913, nan], 'true,true': [0.005361180921045913, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.37032177382684206;  // std dev = 0.149, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.288187501476636;  // std dev = 0.136, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926097;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2297148783164822;  // std dev = 0.129, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22173461622045731;  // std dev = 0.033, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.21561798225690687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1858454816426285;  // std dev = 0.029, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.18138294105261676;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.13490635128129927;  // std dev = 0.092, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.15008091666333234;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11715385207226504;  // std dev = 0.092, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.13192466384686985;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06419184008202619;  // std dev = 6.97e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074142
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.758 seconds
Total inference time: 0.679 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104345
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.348 seconds
Refined model CLL: -0.104345


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074142
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.16 seconds
Total inference time: 0.679 seconds
AUC ROC: 1.0
Total revision time: 2.16
Best scored revision CLL: -0.104345


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:02:59
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.074142, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.16, 'Inference time': 0.679, 'parameter_15': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076653, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.675, 'Inference time': 0.762}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.2963940163748902;  // std dev = 0.401, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.020795080824146064;  // std dev = 0.157, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2541606527785265;  // std dev = 0.402, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09095716855000942;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2256147333066736;  // std dev = 0.104, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.15050397808390376;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08371105875549209;  // std dev = 5.27e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.188743453699032;  // std dev = 0.021, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then return -0.13225595201863677;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07750984671473352;  // std dev = 1.05e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.13656474854816833;  // std dev = 0.064, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.025147141474397273;  // std dev = 0.102, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.13552331612946517;  // std dev = 0.300, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0704806967174095;  // std dev = 3.73e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075216
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.704 seconds
Total inference time: 0.79 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107826
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.391 seconds
Parameter learned model CLL: -0.107826


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [1.49e-08, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.67e-08, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 20], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.401, 1, 16], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.157, 19, 4]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.402, 1, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.104, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.27e-09, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.021, 0, 20], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-08, 19, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.064, 1, 16], 'true,false': [0.0, 0, 0], 'false': [0.102, 19, 4]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.3, 1, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 19, 0]}]]
[{'': [0.04535147392290242, 0.0], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.03237580555397633, 0.0], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.02021770255628346, 1.460819769243627e-17], 'true': [-2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.6645352591003756e-16, nan]}, {'': [0.012221093081438202, -5.843279076974508e-18], 'true': [0.012221093081438202, nan], 'true,true': [1.3322676295501878e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.009461710305608181, 0.02455304881289914], 'true': [0.009461710305608181, nan], 'true,true': [0.009461710305608181, nan]}, {'': [0.007682524509513693, -4.382459307730881e-18], 'true': [0.007682524509513693, nan], 'true,true': [0.007682524509513693, nan], 'true,true,true': [0.007682524509513693, nan]}, {'': [0.006930707405507423, 1.460819769243627e-18], 'true': [0.0005408006301585777, 0.0], 'true,true': [0.0005408006301585777, nan], 'true,false': [0.0, nan]}, {'': [0.005074242089925024, 5.843279076974508e-18], 'true': [0.00042125807675001957, 0.0], 'true,false': [0.0, nan]}, {'': [0.004043894740954666, 0.010492269725396925], 'true': [0.004043894740954666, nan]}, {'': [0.004272068691211056, 7.304098846218135e-19], 'true': [0.004272068691211056, nan], 'true,true': [0.004272068691211056, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.3742544246877977;  // std dev = 0.143, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.2909242422166067;  // std dev = 0.130, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.09269127618926096;  // std dev = 7.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.23183649445512625;  // std dev = 0.124, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.2551722425694894;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.08518475138839683;  // std dev = 1.29e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21879037638978233;  // std dev = 0.037, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.21710849455068426;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109173;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18370574355078007;  // std dev = 0.032, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1824694642521657;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13679684353669463;  // std dev = 0.089, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.1507305660947832;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.06842697784420274;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11884773586984528;  // std dev = 0.089, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.13243331494089794;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.0641918400820262;  // std dev = 6.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074155
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.797 seconds
Total inference time: 0.667 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.10199
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.353 seconds
Refined model CLL: -0.10199


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074155
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.245 seconds
Total inference time: 0.667 seconds
AUC ROC: 1.0
Total revision time: 2.245
Best scored revision CLL: -0.10199


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:03:03
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.074155, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.245, 'Inference time': 0.667, 'parameter_20': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075216, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.704, 'Inference time': 0.79}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 2.36e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.28476374947759214;  // std dev = 0.559, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.031446369026385305;  // std dev = 0.147, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.23159010364996518;  // std dev = 0.638, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09008030647231612;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22922933233582074;  // std dev = 0.108, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.13443922264363636;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08296437010134561;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19134039848122308;  // std dev = 0.019, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, B) )
%   | | then return -0.11958123278417261;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07686680181907163;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.13234508556097022;  // std dev = 0.077, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.03161015514930411;  // std dev = 0.098, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1217842447718732;  // std dev = 0.456, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06951415817838048;  // std dev = 9.13e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074307
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.722 seconds
Total inference time: 0.754 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.110976
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.412 seconds
Parameter learned model CLL: -0.110976


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [2.36e-08, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-08, 22, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.29e-08, 22, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false,true': [0.0, 3, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.559, 2, 21], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.147, 23, 4]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.638, 3, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.108, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.017, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.019, 0, 25], 'true,false,true': [0.015, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.077, 2, 21], 'true,false': [0.0, 0, 0], 'false': [0.098, 23, 4]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.456, 3, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.13e-09, 22, 0]}]]
[{'': [0.09566326530612335, 5.046468293750712e-18], 'true': [7.105427357601002e-16, 0.0], 'true,true': [7.105427357601002e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.06829271484041863, -2.523234146875356e-18], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.042646716329660696, 7.569702440626067e-18], 'true': [-2.842170943040401e-16, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan], 'true,false,true': [2.3129646346357427e-18, nan], 'true,true': [-2.842170943040401e-16, nan]}, {'': [0.025778868218658442, -1.261617073437678e-18], 'true': [0.025778868218658442, nan], 'true,true': [-3.552713678800501e-17, -1.1564823173178713e-18], 'true,true,false': [-1.1564823173178713e-18, nan]}, {'': [0.01356879013344431, 0.021567897256988225], 'true': [0.01356879013344431, nan], 'true,true': [0.01356879013344431, nan]}, {'': [0.014517242386680593, -6.308085367188389e-18], 'true': [0.014517242386680593, nan], 'true,true': [0.014517242386680593, nan], 'true,true,true': [0.014517242386680593, nan]}, {'': [0.01309862298998298, -2.523234146875356e-18], 'true': [0.0004671966195862343, 0.00027585058777148075], 'true,true': [0.0004671966195862343, nan], 'true,false': [0.00027585058777148075, nan]}, {'': [0.00959737965126749, -2.523234146875356e-18], 'true': [0.0003643199739323588, 0.0002250250676899291], 'true,false': [0.0002250250676899291, nan]}, {'': [0.005932419266892484, 0.009535367353106632], 'true': [0.005932419266892484, nan]}, {'': [0.007411433720887531, 3.784851220313033e-18], 'true': [0.007411433720887531, nan], 'true,true': [0.007411433720887531, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360638;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.35644182961170445;  // std dev = 0.167, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return 0.37032177382684206;  // std dev = 0.149, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3329273062870002;  // std dev = 0.008, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.13961057512646635;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926093;  // std dev = 1.18e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2634916375434764;  // std dev = 0.007, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12366869390545598;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08518475138839682;  // std dev = 1.49e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2156179047987026;  // std dev = 0.006, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11087777923546889;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109179;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18138311918944836;  // std dev = 0.005, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.1004094372685435;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07324622576333704;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15598812817483487;  // std dev = 0.004, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.09169664745485238;  // std dev = 0.000946, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06842697784420275;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13653482125158892;  // std dev = 0.004, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.08433999569557193;  // std dev = 0.000877, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06419184008202622;  // std dev = 5.27e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065039
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.747 seconds
Total inference time: 0.67 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.09692
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.349 seconds
Refined model CLL: -0.09692


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065039
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.2299999999999995 seconds
Total inference time: 0.67 seconds
AUC ROC: 1.0
Total revision time: 2.2299999999999995
Best scored revision CLL: -0.09692


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:03:07
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.065039, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.2299999999999995, 'Inference time': 0.67, 'parameter_25': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.074307, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.722, 'Inference time': 0.754}}


Starting fold 5

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos	 examples: 45
Target test neg examples: 2071

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583099;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.23803122249026756;  // std dev = 0.370, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.010010651519378832;  // std dev = 0.165, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.21549338253865144;  // std dev = 0.365, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09185281015069582;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2401442450121177;  // std dev = 0.042, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.13851442904126202;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08447269268551708;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19915309401669487;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(D, B) )
%   | | then return -0.12279782037546687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07816497883457847;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.10757639303770454;  // std dev = 0.109, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.018459044115957557;  // std dev = 0.109, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1120144323124498;  // std dev = 0.260, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07148037446199772;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073378
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.624 seconds
Total inference time: 0.792 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.120092
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.336 seconds
Parameter learned model CLL: -0.120092


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 5], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [5.27e-09, 0, 5], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.37, 1, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.165, 4, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.365, 1, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.042, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.017, 0, 5], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.109, 1, 4], 'true,false': [0.0, 0, 0], 'false': [0.109, 4, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.26, 1, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}]]
[{'': [0.1388888888888887, 0.0], 'true': [0.0, 0.0], 'true,true': [0.0, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.09915090450905224, 0.0], 'true': [0.0, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.061916714078618984, 0.0], 'true': [-4.4408920985006264e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-4.4408920985006264e-17, nan]}, {'': [0.03742709756190412, 0.0], 'true': [0.03742709756190412, nan], 'true,true': [4.4408920985006264e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.027344342783207666, 0.02734434278320768], 'true': [0.027344342783207666, nan], 'true,true': [0.027344342783207666, nan]}, {'': [0.02216760748919559, 0.0], 'true': [0.02216760748919559, nan], 'true,true': [0.02216760748919559, nan], 'true,true,true': [0.02216760748919559, nan]}, {'': [0.02020779195980701, 0.0], 'true': [0.00035228511245780634, 0.0], 'true,true': [0.00035228511245780634, nan], 'true,false': [0.0, nan]}, {'': [0.014623197317386663, 0.0], 'true': [0.00027243823453915184, 0.0], 'true,false': [0.0, nan]}, {'': [0.011853476987988085, 0.0117749440659], 'true': [0.011853476987988085, nan]}, {'': [0.011257632111943848, 0.0], 'true': [0.011257632111943848, nan], 'true,true': [0.011257632111943848, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.33099526521728556;  // std dev = 0.474, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.26053178561396195;  // std dev = 0.434, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20842329832206566;  // std dev = 0.414, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.24361910222570216;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.201063332492829;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20156233108362387;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.17069281965225447;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.11790677519082632;  // std dev = 0.291, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.10192903434099217;  // std dev = 0.291, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069754
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.588 seconds
Total inference time: 0.653 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.121145
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.314 seconds
Refined model CLL: -0.121145


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073378
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.862 seconds
Total inference time: 0.792 seconds
AUC ROC: 1.0
Total revision time: 1.862
Best scored revision CLL: -0.120092


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:03:11
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073378, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.862, 'Inference time': 0.792, 'parameter_5': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073378, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.624, 'Inference time': 0.792}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.27477816678799294;  // std dev = 0.390, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.01752707194391358;  // std dev = 0.159, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.24023232963747318;  // std dev = 0.384, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0912277419218708;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.23086939782169164;  // std dev = 0.069, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.1460157928587641;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08394125967433565;  // std dev = 6.45e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19252271941128848;  // std dev = 0.019, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, B) )
%   | | then return -0.12873235782965373;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07770794118875995;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.12582097409504123;  // std dev = 0.085, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.02310469560887495;  // std dev = 0.104, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.126931700737316;  // std dev = 0.279, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0707834154031785;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072875
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.627 seconds
Total inference time: 0.786 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.112346
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.349 seconds
Parameter learned model CLL: -0.112346


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 10], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 10], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.39, 1, 8], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.159, 9, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.384, 1, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.069, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.45e-09, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.019, 0, 10], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.085, 1, 8], 'true,false': [0.0, 0, 0], 'false': [0.104, 9, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.279, 1, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}]]
[{'': [0.0826446280991734, -9.25185853854297e-18], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.058998885327700486, 0.0], 'true': [8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.036843003418682206, -1.5419764230904951e-18], 'true': [-1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.7763568394002506e-16, nan]}, {'': [0.02227066962361243, 3.0839528461809902e-18], 'true': [0.02227066962361243, nan], 'true,true': [1.3322676295501878e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.01687922394025164, 0.025423459199263334], 'true': [0.01687922394025164, nan], 'true,true': [0.01687922394025164, nan]}, {'': [0.013404141278912741, 3.0839528461809902e-18], 'true': [0.013404141278912741, nan], 'true,true': [0.013404141278912741, nan], 'true,true,true': [0.013404141278912741, nan]}, {'': [0.012166579141076212, 4.625929269271485e-18], 'true': [0.00047028733207078456, 0.0], 'true,true': [0.00047028733207078456, nan], 'true,false': [0.0, nan]}, {'': [0.008861456363975345, -7.709882115452476e-19], 'true': [0.0003653452137289015, 0.0], 'true,false': [0.0, nan]}, {'': [0.00724756269894138, 0.010898876427519407], 'true': [0.00724756269894138, nan]}, {'': [0.007078650648754464, -1.5419764230904951e-18], 'true': [0.007078650648754464, nan], 'true,true': [0.007078650648754464, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.33099526521728556;  // std dev = 0.474, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.26053178561396195;  // std dev = 0.434, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.20842329832206566;  // std dev = 0.414, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22668840892911887;  // std dev = 0.054, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.201063332492829;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18947172428638065;  // std dev = 0.047, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.17069281965225447;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( female(A) )
%   | then return 0.14898975892121247;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.12136892503008029;  // std dev = 0.295, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13106939500821468;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.10466419656696747;  // std dev = 0.294, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070444
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.708 seconds
Total inference time: 0.666 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108098
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.32 seconds
Refined model CLL: -0.108098


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070444
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.004 seconds
Total inference time: 0.666 seconds
AUC ROC: 1.0
Total revision time: 2.004
Best scored revision CLL: -0.108098


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:03:15
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070444, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.004, 'Inference time': 0.666, 'parameter_10': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072875, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.627, 'Inference time': 0.786}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 1.49e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583098;  // std dev = 1.18e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.29118305263519184;  // std dev = 0.398, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04101588577058464;  // std dev = 0.137, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2456184025439423;  // std dev = 0.389, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08929900375209651;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22451616053879683;  // std dev = 0.081, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.14875403390150949;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08229819730937026;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18792937648633926;  // std dev = 0.019, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, B) )
%   | | then return -0.13088447532558659;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07629245263459675;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.13512662206410525;  // std dev = 0.070, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.036823944156401264;  // std dev = 0.091, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.12976688933604552;  // std dev = 0.286, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06869324178407352;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071065
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.675 seconds
Total inference time: 0.766 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107147
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.364 seconds
Parameter learned model CLL: -0.107147


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [1.49e-08, 0, 15], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.18e-08, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 15], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.398, 1, 13], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.137, 14, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.389, 1, 15], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.081, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.019, 0, 15], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.07, 1, 13], 'true,false': [0.0, 0, 0], 'false': [0.091, 14, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.286, 1, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}]]
[{'': [0.05859374999999978, -1.1895246692412391e-17], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.041829287839756535, 3.96508223080413e-18], 'true': [1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.02612111375191717, 9.912705577010326e-18], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.015789556783928405, -3.96508223080413e-18], 'true': [0.015789556783928405, nan], 'true,true': [1.4802973661668753e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.011335346179263335, 0.018692421824458363], 'true': [0.011335346179263335, nan], 'true,true': [0.011335346179263335, nan]}, {'': [0.009438276053550868, -1.982541115402065e-18], 'true': [0.009438276053550868, nan], 'true,true': [0.009438276053550868, nan], 'true,true,true': [0.009438276053550868, nan]}, {'': [0.008574312601712084, 0.0], 'true': [0.00043776856323221776, 0.0], 'true,true': [0.00043776856323221776, nan], 'true,false': [0.0, nan]}, {'': [0.006276801936103471, -9.912705577010326e-19], 'true': [0.000342613391813081, 0.0], 'true,false': [0.0, nan]}, {'': [0.004878255135449094, 0.00821759304069824], 'true': [0.004878255135449094, nan]}, {'': [0.005098070018702574, -3.96508223080413e-18], 'true': [0.005098070018702574, nan], 'true,true': [0.005098070018702574, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.3526248449525416;  // std dev = 0.172, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2758086622505463;  // std dev = 0.157, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2551722425694894;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.22015481517812302;  // std dev = 0.149, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22142953017731315;  // std dev = 0.048, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.20899007385224086;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18563943393809118;  // std dev = 0.042, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.17653326386340415;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.15014612682605466;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.12933810499863777;  // std dev = 0.106, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1319757396421033;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.11189250539448621;  // std dev = 0.106, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.06419184008202619;  // std dev = 6.97e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070524
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.755 seconds
Total inference time: 0.664 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104034
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.329 seconds
Refined model CLL: -0.104034


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070524
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.123 seconds
Total inference time: 0.664 seconds
AUC ROC: 1.0
Total revision time: 2.123
Best scored revision CLL: -0.104034


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:03:19
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070524, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.123, 'Inference time': 0.664, 'parameter_15': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.071065, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.675, 'Inference time': 0.766}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.2989537880364964;  // std dev = 0.402, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05331955015598376;  // std dev = 0.121, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.23288290715592214;  // std dev = 0.511, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08830345523156219;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22372823171342682;  // std dev = 0.088, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.12853174698810468;  // std dev = 0.020, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08144817362860969;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18734979453398287;  // std dev = 0.017, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then return -0.11485150751894083;  // std dev = 0.018, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07555870889111634;  // std dev = 8.33e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.14083789889878834;  // std dev = 0.061, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04480330668075676;  // std dev = 0.082, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.12223375902179373;  // std dev = 0.361, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06756926779382934;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070224
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.725 seconds
Total inference time: 0.838 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106371
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.388 seconds
Parameter learned model CLL: -0.106371


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [1.49e-08, 0, 20], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.67e-08, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 20], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.402, 1, 18], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.121, 19, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.511, 2, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.088, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.02, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.017, 0, 20], 'true,false,true': [0.018, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.33e-09, 18, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.061, 1, 18], 'true,false': [0.0, 0, 0], 'false': [0.082, 19, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.361, 2, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 18, 0]}]]
[{'': [0.08264462809917356, -3.0839528461809902e-18], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.05899888532770057, 0.0], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.03684300341868208, 1.5419764230904953e-17], 'true': [-2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.6645352591003756e-16, nan]}, {'': [0.022270669623612512, -4.625929269271485e-18], 'true': [0.022270669623612512, nan], 'true,true': [1.3322676295501878e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.008521436462911007, 0.014726261702974645], 'true': [0.008521436462911007, nan], 'true,true': [0.008521436462911007, nan]}, {'': [0.011857328644709585, -1.5419764230904951e-18], 'true': [0.011857328644709585, nan], 'true,true': [0.011857328644709585, nan], 'true,true,true': [0.011857328644709585, nan]}, {'': [0.010643838954429597, 3.0839528461809902e-18], 'true': [0.00038918278860641255, 0.0003839527992036684], 'true,true': [0.00038918278860641255, nan], 'true,false': [0.0003839527992036684, nan]}, {'': [0.00785415327340171, 3.854941057726238e-18], 'true': [0.00030563185336224816, 0.00031607023517590815], 'true,false': [0.00031607023517590815, nan]}, {'': [0.003778806648609219, 0.006704342533044674], 'true': [0.003778806648609219, nan]}, {'': [0.005930413475853554, 3.0839528461809902e-18], 'true': [0.005930413475853554, nan], 'true,true': [0.005930413475853554, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.3656025927936952;  // std dev = 0.156, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.3742544246877977;  // std dev = 0.143, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926093;  // std dev = 1.05e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( female(A) )
%   | then return 0.2848967264457383;  // std dev = 0.142, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.2909242422166067;  // std dev = 0.130, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.22716784100726567;  // std dev = 0.135, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.23183649445512625;  // std dev = 0.124, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.08518475138839683;  // std dev = 1.18e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2277126587403857;  // std dev = 0.008, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.21547318319861675;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07877675473109179;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19015839529814973;  // std dev = 0.007, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1812777843941213;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07324622576333704;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420274;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( female(A) )
%   | then return 0.13216545622986162;  // std dev = 0.096, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.13484817342454922;  // std dev = 0.088, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11476211550772082;  // std dev = 0.096, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.11731309438371997;  // std dev = 0.088, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.0641918400820262;  // std dev = 6.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070194
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.896 seconds
Total inference time: 0.662 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.109111
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.346 seconds
Refined model CLL: -0.109111


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070224
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.355 seconds
Total inference time: 0.838 seconds
AUC ROC: 1.0
Total revision time: 2.355
Best scored revision CLL: -0.106371


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:03:24
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070224, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.355, 'Inference time': 0.838, 'parameter_20': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070224, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.725, 'Inference time': 0.838}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 2.36e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.28626158688103204;  // std dev = 0.560, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04499091580279051;  // std dev = 0.132, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2293705775076882;  // std dev = 0.632, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08897626297533588;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22736155030988775;  // std dev = 0.101, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.13386403003633507;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08202277789532754;  // std dev = 9.13e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18998103903315378;  // std dev = 0.018, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, B) )
%   | | then return -0.1191238671349038;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07605481838665586;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.1338103283719797;  // std dev = 0.076, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.03961209268009466;  // std dev = 0.089, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.12011403283579167;  // std dev = 0.450, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06831500853411866;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070783
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.712 seconds
Total inference time: 0.8 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.109501
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.388 seconds
Parameter learned model CLL: -0.109501


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [2.36e-08, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-08, 22, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.29e-08, 22, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false,true': [0.0, 3, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.56, 2, 22], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.132, 23, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.632, 3, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.101, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.017, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.13e-09, 22, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.018, 0, 25], 'true,false,true': [0.016, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.076, 2, 22], 'true,false': [0.0, 0, 0], 'false': [0.089, 23, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.45, 3, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 22, 0]}]]
[{'': [0.09566326530612335, 5.046468293750712e-18], 'true': [7.105427357601002e-16, 0.0], 'true,true': [7.105427357601002e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.06829271484041863, -2.523234146875356e-18], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.042646716329660696, 7.569702440626067e-18], 'true': [-2.842170943040401e-16, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan], 'true,false,true': [2.3129646346357427e-18, nan], 'true,true': [-2.842170943040401e-16, nan]}, {'': [0.025778868218658442, -1.261617073437678e-18], 'true': [0.025778868218658442, nan], 'true,true': [-3.552713678800501e-17, -1.1564823173178713e-18], 'true,true,false': [-1.1564823173178713e-18, nan]}, {'': [0.01305502476628842, 0.017444153587660202], 'true': [0.01305502476628842, nan], 'true,true': [0.01305502476628842, nan]}, {'': [0.014247543743692612, 0.0], 'true': [0.014247543743692612, nan], 'true,true': [0.014247543743692612, nan], 'true,true,true': [0.014247543743692612, nan]}, {'': [0.01287718258419728, 3.784851220313033e-18], 'true': [0.0004061311251200728, 0.0002991115022820424], 'true,true': [0.0004061311251200728, nan], 'true,false': [0.0002991115022820424, nan]}, {'': [0.009450170359587432, 0.0], 'true': [0.00031784236006465516, 0.00024411528076205327], 'true,false': [0.00024411528076205327, nan]}, {'': [0.005730917958563279, 0.007846611287825801], 'true': [0.005730917958563279, nan]}, {'': [0.007231015349760422, -1.261617073437678e-18], 'true': [0.007231015349760422, nan], 'true,true': [0.007231015349760422, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360638;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.33765052052044126;  // std dev = 0.187, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0.3829062565819001;  // std dev = 0.129, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926093;  // std dev = 1.18e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.33272226509535374;  // std dev = 0.025, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.13863049019719711;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2633584389955112;  // std dev = 0.022, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12289086143986043;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08518475138839682;  // std dev = 1.49e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21552806405996644;  // std dev = 0.019, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11024707634504376;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109179;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18131991766478311;  // std dev = 0.017, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.09988867618960351;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07324622576333704;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420275;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15594194570409015;  // std dev = 0.015, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.09125996903298515;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13649996499725187;  // std dev = 0.013, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.08396893011566357;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06419184008202622;  // std dev = 5.27e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064605
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.773 seconds
Total inference time: 0.681 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096885
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.344 seconds
Refined model CLL: -0.096885


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064605
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.217 seconds
Total inference time: 0.681 seconds
AUC ROC: 1.0
Total revision time: 2.217
Best scored revision CLL: -0.096885


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:03:28
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.064605, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.217, 'Inference time': 0.681, 'parameter_25': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070783, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.712, 'Inference time': 0.8}}


Starting fold 1

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos	 examples: 56
Target test neg examples: 3308

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583099;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.23803122249026756;  // std dev = 0.370, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.010010651519378832;  // std dev = 0.165, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.21549338253865144;  // std dev = 0.365, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09185281015069582;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2401442450121177;  // std dev = 0.042, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.13851442904126202;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08447269268551708;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19915309401669487;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(D, B) )
%   | | then return -0.12279782037546687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07816497883457847;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.10757639303770454;  // std dev = 0.109, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.018459044115957557;  // std dev = 0.109, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1120144323124498;  // std dev = 0.260, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07148037446199772;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072874
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.591 seconds
Total inference time: 0.929 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.120092
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.331 seconds
Parameter learned model CLL: -0.120092


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 5], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [5.27e-09, 0, 5], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.37, 1, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.165, 4, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.365, 1, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.042, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.017, 0, 5], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.109, 1, 4], 'true,false': [0.0, 0, 0], 'false': [0.109, 4, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.26, 1, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}]]
[{'': [0.1388888888888887, 0.0], 'true': [0.0, 0.0], 'true,true': [0.0, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.09915090450905224, 0.0], 'true': [0.0, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.061916714078618984, 0.0], 'true': [-4.4408920985006264e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-4.4408920985006264e-17, nan]}, {'': [0.03742709756190412, 0.0], 'true': [0.03742709756190412, nan], 'true,true': [4.4408920985006264e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.027344342783207666, 0.02734434278320768], 'true': [0.027344342783207666, nan], 'true,true': [0.027344342783207666, nan]}, {'': [0.02216760748919559, 0.0], 'true': [0.02216760748919559, nan], 'true,true': [0.02216760748919559, nan], 'true,true,true': [0.02216760748919559, nan]}, {'': [0.02020779195980701, 0.0], 'true': [0.00035228511245780634, 0.0], 'true,true': [0.00035228511245780634, nan], 'true,false': [0.0, nan]}, {'': [0.014623197317386663, 0.0], 'true': [0.00027243823453915184, 0.0], 'true,false': [0.0, nan]}, {'': [0.011853476987988085, 0.0117749440659], 'true': [0.011853476987988085, nan]}, {'': [0.011257632111943848, 0.0], 'true': [0.011257632111943848, nan], 'true,true': [0.011257632111943848, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.33099526521728556;  // std dev = 0.474, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.26053178561396195;  // std dev = 0.434, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20842329832206566;  // std dev = 0.414, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.24361910222570216;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.201063332492829;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20156233108362387;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.17069281965225447;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.11790677519082632;  // std dev = 0.291, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.10192903434099217;  // std dev = 0.291, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068294
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.623 seconds
Total inference time: 0.755 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.121145
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.303 seconds
Refined model CLL: -0.121145


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072874
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.8479999999999999 seconds
Total inference time: 0.929 seconds
AUC ROC: 1.0
Total revision time: 1.8479999999999999
Best scored revision CLL: -0.120092


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:03:32
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072874, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.8479999999999999, 'Inference time': 0.929, 'parameter_5': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072874, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.591, 'Inference time': 0.929}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.27477816678799294;  // std dev = 0.390, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.01752707194391358;  // std dev = 0.159, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.24023232963747318;  // std dev = 0.384, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0912277419218708;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.23086939782169164;  // std dev = 0.069, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.1460157928587641;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08394125967433565;  // std dev = 6.45e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19252271941128848;  // std dev = 0.019, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, B) )
%   | | then return -0.12873235782965373;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07770794118875995;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.12582097409504123;  // std dev = 0.085, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.02310469560887495;  // std dev = 0.104, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.126931700737316;  // std dev = 0.279, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0707834154031785;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072445
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.607 seconds
Total inference time: 0.926 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.112346
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.341 seconds
Parameter learned model CLL: -0.112346


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 10], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 10], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.39, 1, 8], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.159, 9, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.384, 1, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.069, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.45e-09, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.019, 0, 10], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.085, 1, 8], 'true,false': [0.0, 0, 0], 'false': [0.104, 9, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.279, 1, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}]]
[{'': [0.0826446280991734, -9.25185853854297e-18], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.058998885327700486, 0.0], 'true': [8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.036843003418682206, -1.5419764230904951e-18], 'true': [-1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.7763568394002506e-16, nan]}, {'': [0.02227066962361243, 3.0839528461809902e-18], 'true': [0.02227066962361243, nan], 'true,true': [1.3322676295501878e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.01687922394025164, 0.025423459199263334], 'true': [0.01687922394025164, nan], 'true,true': [0.01687922394025164, nan]}, {'': [0.013404141278912733, 3.0839528461809902e-18], 'true': [0.013404141278912733, nan], 'true,true': [0.013404141278912733, nan], 'true,true,true': [0.013404141278912733, nan]}, {'': [0.012166579141076212, 4.625929269271485e-18], 'true': [0.00047028733207078456, 0.0], 'true,true': [0.00047028733207078456, nan], 'true,false': [0.0, nan]}, {'': [0.008861456363975345, -7.709882115452476e-19], 'true': [0.0003653452137289015, 0.0], 'true,false': [0.0, nan]}, {'': [0.00724756269894138, 0.010898876427519407], 'true': [0.00724756269894138, nan]}, {'': [0.007078650648754464, -1.5419764230904951e-18], 'true': [0.007078650648754464, nan], 'true,true': [0.007078650648754464, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.33099526521728556;  // std dev = 0.474, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.26053178561396195;  // std dev = 0.434, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.20842329832206566;  // std dev = 0.414, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22668840892911885;  // std dev = 0.054, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.201063332492829;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18947172428638065;  // std dev = 0.047, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.17069281965225447;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.12136892503008029;  // std dev = 0.295, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.14898975892121247;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.10466419656696747;  // std dev = 0.294, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.13106939500821468;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068975
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.692 seconds
Total inference time: 0.777 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108098
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.32 seconds
Refined model CLL: -0.108098


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068975
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.96 seconds
Total inference time: 0.777 seconds
AUC ROC: 1.0
Total revision time: 1.96
Best scored revision CLL: -0.108098


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:03:36
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068975, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.96, 'Inference time': 0.777, 'parameter_10': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072445, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.607, 'Inference time': 0.926}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 1.49e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583098;  // std dev = 1.18e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.2889116069025027;  // std dev = 0.397, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.01973778383348262;  // std dev = 0.158, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.24938898883018118;  // std dev = 0.394, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09104462787048782;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22741665489401783;  // std dev = 0.088, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.14894396445556393;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08378547875605427;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19004135025453753;  // std dev = 0.020, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, B) )
%   | | then return -0.13103347482834285;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07757389515754;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.13284390724508918;  // std dev = 0.072, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.02448459776914611;  // std dev = 0.103, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1325619913287098;  // std dev = 0.290, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07057863050888402;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072344
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.677 seconds
Total inference time: 0.907 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.109388
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.387 seconds
Parameter learned model CLL: -0.109388


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [1.49e-08, 0, 15], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.18e-08, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 15], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.397, 1, 12], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.158, 14, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.394, 1, 15], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.088, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.02, 0, 15], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 14, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.072, 1, 12], 'true,false': [0.0, 0, 0], 'false': [0.103, 14, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.29, 1, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}]]
[{'': [0.05859374999999978, -1.1895246692412391e-17], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.041829287839756535, 3.96508223080413e-18], 'true': [1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.02612111375191717, 9.912705577010326e-18], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.015789556783928405, -3.96508223080413e-18], 'true': [0.015789556783928405, nan], 'true,true': [1.4802973661668753e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.012135063365328803, 0.02483698955222149], 'true': [0.012135063365328803, nan], 'true,true': [0.012135063365328803, nan]}, {'': [0.009707116918274063, 0.0], 'true': [0.009707116918274063, nan], 'true,true': [0.009707116918274063, nan], 'true,true,true': [0.009707116918274063, nan]}, {'': [0.008783682620798892, -4.956352788505163e-18], 'true': [0.0005163042248604347, 0.0], 'true,true': [0.0005163042248604347, nan], 'true,false': [0.0, nan]}, {'': [0.006417061209773478, 3.96508223080413e-18], 'true': [0.0004018000840499081, 0.0], 'true,false': [0.0, nan]}, {'': [0.0051943796108817756, 0.010625652342250555], 'true': [0.0051943796108817756, nan]}, {'': [0.005272353679051458, 0.0], 'true': [0.005272353679051458, nan], 'true,true': [0.005272353679051458, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.3656025927936952;  // std dev = 0.156, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.2848967264457383;  // std dev = 0.142, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.22716784100726567;  // std dev = 0.135, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2216540921000068;  // std dev = 0.038, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.21383787184654923;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1857911868999164;  // std dev = 0.033, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.18008336421304177;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.13341961705690356;  // std dev = 0.096, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.1500981145151622;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11574034398009356;  // std dev = 0.096, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.13193813445258917;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.06419184008202619;  // std dev = 6.97e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069024
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.748 seconds
Total inference time: 0.811 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104262
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.333 seconds
Refined model CLL: -0.104262


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069024
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.145 seconds
Total inference time: 0.811 seconds
AUC ROC: 1.0
Total revision time: 2.145
Best scored revision CLL: -0.104262


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:03:40
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069024, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.145, 'Inference time': 0.811, 'parameter_15': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072344, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.677, 'Inference time': 0.907}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.2948741519508115;  // std dev = 0.400, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.006565625491467061;  // std dev = 0.168, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.256751574800099;  // std dev = 0.405, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09214058434713664;  // std dev = 1.39e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22755683780551542;  // std dev = 0.107, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.15064096677416247;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08471718580335746;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19015201946042887;  // std dev = 0.021, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then return -0.13236318662420715;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07837511633783827;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.13503092440174594;  // std dev = 0.065, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.017103803401773518;  // std dev = 0.109, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.13737716101469444;  // std dev = 0.302, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07175016729928936;  // std dev = 9.13e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073434
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.645 seconds
Total inference time: 0.939 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.109297
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.38 seconds
Parameter learned model CLL: -0.109297


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [1.49e-08, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.67e-08, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 20], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.4, 1, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.168, 19, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.405, 1, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.39e-08, 19, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.107, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.021, 0, 20], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.065, 1, 15], 'true,false': [0.0, 0, 0], 'false': [0.109, 19, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.302, 1, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.13e-09, 19, 0]}]]
[{'': [0.04535147392290242, 0.0], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.03237580555397633, 0.0], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.02021770255628346, 1.460819769243627e-17], 'true': [-2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.6645352591003756e-16, nan]}, {'': [0.012221093081438202, -5.843279076974508e-18], 'true': [0.012221093081438202, nan], 'true,true': [1.3322676295501878e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.010013797405959826, 0.028186985290849956], 'true': [0.010013797405959826, nan], 'true,true': [0.010013797405959826, nan]}, {'': [0.007808509250787164, 1.0225738384705389e-17], 'true': [0.007808509250787164, nan], 'true,true': [0.007808509250787164, nan], 'true,true,true': [0.007808509250787164, nan]}, {'': [0.007026943193917078, -7.304098846218135e-18], 'true': [0.0005671675255706443, 0.0], 'true,true': [0.0005671675255706443, nan], 'true,false': [0.0, nan]}, {'': [0.005136441941644336, -3.652049423109067e-18], 'true': [0.0004401184122591661, 0.0], 'true,false': [0.0, nan]}, {'': [0.004264522241366361, 0.011829241057660757], 'true': [0.004264522241366361, nan]}, {'': [0.004339548243003477, 4.382459307730881e-18], 'true': [0.004339548243003477, nan], 'true,true': [0.004339548243003477, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.38043430461215655;  // std dev = 0.134, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926093;  // std dev = 1.18e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.2952147552984745;  // std dev = 0.121, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.23516924660370822;  // std dev = 0.116, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.08518475138839683;  // std dev = 1.29e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21886830164013574;  // std dev = 0.030, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.21946380782085897;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109179;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1837584466396722;  // std dev = 0.026, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1841833987298778;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420274;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.13875647247653294;  // std dev = 0.082, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.15071384501131901;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.12072637141945848;  // std dev = 0.083, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.13242022814520693;  // std dev = 3.73e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.0641918400820262;  // std dev = 6.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069055
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.751 seconds
Total inference time: 0.807 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102072
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.347 seconds
Refined model CLL: -0.102072


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069055
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.1229999999999998 seconds
Total inference time: 0.807 seconds
AUC ROC: 1.0
Total revision time: 2.1229999999999998
Best scored revision CLL: -0.102072


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:03:45
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069055, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.1229999999999998, 'Inference time': 0.807, 'parameter_20': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073434, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.645, 'Inference time': 0.939}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 2.36e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 7.45e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.3000416909926791;  // std dev = 0.403, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.010010651519378808;  // std dev = 0.165, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2592106697451913;  // std dev = 0.411, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09185281015069584;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22608118174601813;  // std dev = 0.121, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.1516193835513823;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08447269268551706;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1890883444952146;  // std dev = 0.021, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, B) )
%   | | then return -0.1331285568311468;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07816497883457844;  // std dev = 7.45e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.1377510344290933;  // std dev = 0.059, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.019078848050891255;  // std dev = 0.107, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.13887243728264714;  // std dev = 0.310, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07143924842240736;  // std dev = 9.13e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073186
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.676 seconds
Total inference time: 0.911 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108055
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.398 seconds
Parameter learned model CLL: -0.108055


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [2.36e-08, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.403, 1, 19], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.165, 24, 6]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.411, 1, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.121, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.021, 0, 25], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 24, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.059, 1, 19], 'true,false': [0.0, 0, 0], 'false': [0.107, 24, 6]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.31, 1, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.13e-09, 24, 0]}]]
[{'': [0.03698224852071082, 9.25185853854297e-18], 'true': [7.105427357601002e-16, 0.0], 'true,true': [7.105427357601002e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.026401128419570055, -4.625929269271485e-18], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.016486699015016572, 2.3129646346357427e-18], 'true': [-2.842170943040401e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.842170943040401e-16, nan]}, {'': [0.009965795208791005, -2.3129646346357427e-18], 'true': [0.009965795208791005, nan], 'true,true': [-3.552713678800501e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.008117851763764816, 0.027344342783207704], 'true': [0.008117851763764816, nan], 'true,true': [0.008117851763764816, nan]}, {'': [0.006501679618015621, 0.0], 'true': [0.006501679618015621, nan], 'true,true': [0.006501679618015621, nan], 'true,true,true': [0.006501679618015621, nan]}, {'': [0.005835120894571875, -1.1564823173178713e-18], 'true': [0.0005816904601249107, 0.0], 'true,true': [0.0005816904601249107, nan], 'true,false': [0.0, nan]}, {'': [0.004274226096943099, 2.3129646346357427e-18], 'true': [0.00045197469849920233, 0.0], 'true,false': [0.0, nan]}, {'': [0.0034560538752862495, 0.011507455007982649], 'true': [0.0034560538752862495, nan]}, {'': [0.0036914857029446157, 3.469446951953614e-18], 'true': [0.0036914857029446157, nan], 'true,true': [0.0036914857029446157, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 7.45e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.3850692145554257;  // std dev = 0.126, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926094;  // std dev = 1.05e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.2984246790471678;  // std dev = 0.114, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2376682048880379;  // std dev = 0.109, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839682;  // std dev = 1.67e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21709254325071264;  // std dev = 0.030, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.22124083439002482;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109176;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1824642555175222;  // std dev = 0.026, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.18547412402163294;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420275;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.14062857789764197;  // std dev = 0.077, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.15110721753819423;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.12245838310132535;  // std dev = 0.078, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.1327280296385096;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.0641918400820262;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06907
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.804 seconds
Total inference time: 0.795 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100645
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.343 seconds
Refined model CLL: -0.100645


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06907
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.221 seconds
Total inference time: 0.795 seconds
AUC ROC: 1.0
Total revision time: 2.221
Best scored revision CLL: -0.100645


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:03:49
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06907, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.221, 'Inference time': 0.795, 'parameter_25': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073186, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.676, 'Inference time': 0.911}}


Starting fold 2

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos	 examples: 58
Target test neg examples: 3423

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583099;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.23803122249026756;  // std dev = 0.370, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.010010651519378832;  // std dev = 0.165, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.21549338253865144;  // std dev = 0.365, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09185281015069582;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2401442450121177;  // std dev = 0.042, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.13851442904126202;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08447269268551708;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19915309401669487;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(D, B) )
%   | | then return -0.12279782037546687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07816497883457847;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.10757639303770454;  // std dev = 0.109, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.018459044115957557;  // std dev = 0.109, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1120144323124498;  // std dev = 0.260, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07148037446199772;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073924
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.577 seconds
Total inference time: 0.924 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.120092
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.328 seconds
Parameter learned model CLL: -0.120092


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 5], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [5.27e-09, 0, 5], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.37, 1, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.165, 4, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.365, 1, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.042, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.017, 0, 5], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.109, 1, 4], 'true,false': [0.0, 0, 0], 'false': [0.109, 4, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.26, 1, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}]]
[{'': [0.1388888888888887, 0.0], 'true': [0.0, 0.0], 'true,true': [0.0, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.09915090450905224, 0.0], 'true': [0.0, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.061916714078618984, 0.0], 'true': [-4.4408920985006264e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-4.4408920985006264e-17, nan]}, {'': [0.03742709756190412, 0.0], 'true': [0.03742709756190412, nan], 'true,true': [4.4408920985006264e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.027344342783207666, 0.02734434278320768], 'true': [0.027344342783207666, nan], 'true,true': [0.027344342783207666, nan]}, {'': [0.02216760748919559, 0.0], 'true': [0.02216760748919559, nan], 'true,true': [0.02216760748919559, nan], 'true,true,true': [0.02216760748919559, nan]}, {'': [0.02020779195980701, 0.0], 'true': [0.00035228511245780634, 0.0], 'true,true': [0.00035228511245780634, nan], 'true,false': [0.0, nan]}, {'': [0.014623197317386663, 0.0], 'true': [0.00027243823453915184, 0.0], 'true,false': [0.0, nan]}, {'': [0.011853476987988085, 0.0117749440659], 'true': [0.011853476987988085, nan]}, {'': [0.011257632111943848, 0.0], 'true': [0.011257632111943848, nan], 'true,true': [0.011257632111943848, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.33099526521728556;  // std dev = 0.474, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.26053178561396195;  // std dev = 0.434, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20842329832206566;  // std dev = 0.414, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.24361910222570216;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.201063332492829;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20156233108362387;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.17069281965225447;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.11790677519082632;  // std dev = 0.291, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.10192903434099217;  // std dev = 0.291, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070262
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.604 seconds
Total inference time: 0.769 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.121145
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.31 seconds
Refined model CLL: -0.121145


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073924
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.819 seconds
Total inference time: 0.924 seconds
AUC ROC: 1.0
Total revision time: 1.819
Best scored revision CLL: -0.120092


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:03:53
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073924, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.819, 'Inference time': 0.924, 'parameter_5': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073924, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.577, 'Inference time': 0.924}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.27477816678799294;  // std dev = 0.390, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.01752707194391358;  // std dev = 0.159, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2402323296374732;  // std dev = 0.384, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0912277419218708;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.23086939782169164;  // std dev = 0.069, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.1460157928587641;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08394125967433565;  // std dev = 6.45e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19252271941128848;  // std dev = 0.019, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, B) )
%   | | then return -0.12873235782965373;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07770794118875995;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.1258209740950412;  // std dev = 0.085, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.02310469560887495;  // std dev = 0.104, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.126931700737316;  // std dev = 0.279, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0707834154031785;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073663
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.638 seconds
Total inference time: 0.906 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.112346
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.346 seconds
Parameter learned model CLL: -0.112346


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 10], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 10], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.39, 1, 8], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.159, 9, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.384, 1, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.069, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.45e-09, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.019, 0, 10], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.085, 1, 8], 'true,false': [0.0, 0, 0], 'false': [0.104, 9, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.279, 1, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}]]
[{'': [0.0826446280991734, -9.25185853854297e-18], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.058998885327700486, 0.0], 'true': [8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.036843003418682206, -1.5419764230904951e-18], 'true': [-1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.7763568394002506e-16, nan]}, {'': [0.02227066962361243, 3.0839528461809902e-18], 'true': [0.02227066962361243, nan], 'true,true': [1.3322676295501878e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.01687922394025164, 0.025423459199263334], 'true': [0.01687922394025164, nan], 'true,true': [0.01687922394025164, nan]}, {'': [0.013404141278912722, 3.0839528461809902e-18], 'true': [0.013404141278912722, nan], 'true,true': [0.013404141278912722, nan], 'true,true,true': [0.013404141278912722, nan]}, {'': [0.012166579141076212, 4.625929269271485e-18], 'true': [0.00047028733207078456, 0.0], 'true,true': [0.00047028733207078456, nan], 'true,false': [0.0, nan]}, {'': [0.008861456363975345, -7.709882115452476e-19], 'true': [0.0003653452137289015, 0.0], 'true,false': [0.0, nan]}, {'': [0.007247562698941393, 0.010898876427519407], 'true': [0.007247562698941393, nan]}, {'': [0.007078650648754464, -1.5419764230904951e-18], 'true': [0.007078650648754464, nan], 'true,true': [0.007078650648754464, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.3136916014290807;  // std dev = 0.464, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.24818750282382282;  // std dev = 0.427, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1989814793512739;  // std dev = 0.408, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2262122736367876;  // std dev = 0.064, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.19485738393061242;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1891499637344493;  // std dev = 0.056, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.16608817048049013;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.1159764209070884;  // std dev = 0.291, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.14909095391629723;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.09973986047687693;  // std dev = 0.290, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.13114876281036358;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071691
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.763 seconds
Total inference time: 0.832 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107653
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.33 seconds
Refined model CLL: -0.107653


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071691
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.077 seconds
Total inference time: 0.832 seconds
AUC ROC: 1.0
Total revision time: 2.077
Best scored revision CLL: -0.107653


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:03:58
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.071691, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.077, 'Inference time': 0.832, 'parameter_10': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073663, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.638, 'Inference time': 0.906}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 1.49e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583098;  // std dev = 1.18e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.2616542581102339;  // std dev = 0.541, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.015178190561246478;  // std dev = 0.161, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2315557811015893;  // std dev = 0.533, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09142266356490901;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2341329247351663;  // std dev = 0.080, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.14331830429833195;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08410703717825217;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19486148763556907;  // std dev = 0.018, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, B) )
%   | | then return -0.12660491559539977;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07785055273937615;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.11930390658930572;  // std dev = 0.095, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.02164582120592054;  // std dev = 0.106, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1216546775473397;  // std dev = 0.384, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07100106758103565;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073724
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.653 seconds
Total inference time: 0.93 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.115104
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.38 seconds
Parameter learned model CLL: -0.115104


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [1.49e-08, 0, 15], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 13, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-08, 13, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 15], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.541, 2, 12], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.161, 13, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.533, 2, 15], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.08, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.018, 0, 15], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.27e-09, 13, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.095, 2, 12], 'true,false': [0.0, 0, 0], 'false': [0.106, 13, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.384, 2, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 13, 0]}]]
[{'': [0.10380622837370206, -1.2810265668751807e-17], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.0741058663458661, 4.270088556250602e-18], 'true': [1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.04627685204491911, 8.540177112501205e-18], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.027973194025506288, -2.135044278125301e-18], 'true': [0.027973194025506288, nan], 'true,true': [1.4802973661668753e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.020926792946332373, 0.026035873255495574], 'true': [0.020926792946332373, nan], 'true,true': [0.020926792946332373, nan]}, {'': [0.01668043600743499, -2.135044278125301e-18], 'true': [0.01668043600743499, nan], 'true,true': [0.01668043600743499, nan], 'true,true,true': [0.01668043600743499, nan]}, {'': [0.015166744143672714, -3.2025664171879517e-18], 'true': [0.00042786724923318256, 0.0], 'true,true': [0.00042786724923318256, nan], 'true,false': [0.0, nan]}, {'': [0.011020213226397539, 2.135044278125301e-18], 'true': [0.00033185164800474766, 0.0], 'true,false': [0.0, nan]}, {'': [0.009013893737200568, 0.011181156994593695], 'true': [0.009013893737200568, nan]}, {'': [0.008657784090597961, 2.135044278125301e-18], 'true': [0.008657784090597961, nan], 'true,true': [0.008657784090597961, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.24447694627626118;  // std dev = 0.599, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.19761619591113222;  // std dev = 0.561, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.16037775696173293;  // std dev = 0.537, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.2551722425694894;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22897389202004492;  // std dev = 0.123, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.17120074142545327;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19125986834543768;  // std dev = 0.109, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14825645195085732;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.16353189523315445;  // std dev = 0.097, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07877147415675219;  // std dev = 0.080, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.07911265348713648;  // std dev = 0.348, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.12896376394630069;  // std dev = 1.05e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.06371598435435903;  // std dev = 0.000940, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069218
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.691 seconds
Total inference time: 0.807 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.105564
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.336 seconds
Refined model CLL: -0.105564


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069218
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.0599999999999996 seconds
Total inference time: 0.807 seconds
AUC ROC: 1.0
Total revision time: 2.0599999999999996
Best scored revision CLL: -0.105564


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:04:02
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069218, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.0599999999999996, 'Inference time': 0.807, 'parameter_15': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073724, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.653, 'Inference time': 0.93}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.2771957289128433;  // std dev = 0.553, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.03363368713934516;  // std dev = 0.145, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.23757748587977012;  // std dev = 0.539, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08990118177427148;  // std dev = 5.27e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22875573814689182;  // std dev = 0.092, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.14598620746771782;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0828117120696383;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19099135221422803;  // std dev = 0.018, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then return -0.128709064345262;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07673523952139188;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.1278648764433784;  // std dev = 0.083, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.032412942925935405;  // std dev = 0.096, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.12497022678719771;  // std dev = 0.391, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06935090005232405;  // std dev = 9.13e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072406
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.679 seconds
Total inference time: 0.946 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.110727
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.4 seconds
Parameter learned model CLL: -0.110727


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [1.49e-08, 0, 20], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.67e-08, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 20], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.553, 2, 17], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.145, 18, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.539, 2, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 18, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.092, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.018, 0, 20], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.083, 2, 17], 'true,false': [0.0, 0, 0], 'false': [0.096, 18, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.391, 2, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.13e-09, 18, 0]}]]
[{'': [0.08264462809917356, -3.0839528461809902e-18], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.05899888532770057, 0.0], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.03684300341868208, 1.5419764230904953e-17], 'true': [-2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.6645352591003756e-16, nan]}, {'': [0.022270669623612512, -4.625929269271485e-18], 'true': [0.022270669623612512, nan], 'true,true': [1.3322676295501878e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.01609604665216519, 0.02092679294633239], 'true': [0.01609604665216519, nan], 'true,true': [0.01609604665216519, nan]}, {'': [0.013182219533255329, 1.5419764230904951e-18], 'true': [0.013182219533255329, nan], 'true,true': [0.013182219533255329, nan], 'true,true,true': [0.013182219533255329, nan]}, {'': [0.011994814593001031, -5.396917480816733e-18], 'true': [0.0004277937065717774, 0.0], 'true,true': [0.0004277937065717774, nan], 'true,false': [0.0, nan]}, {'': [0.008750340466174072, -1.5419764230904951e-18], 'true': [0.00033370575385407444, 0.0], 'true,false': [0.0, nan]}, {'': [0.006936455946201581, 0.009153800864508718], 'true': [0.006936455946201581, nan]}, {'': [0.006949714775431268, 4.625929269271485e-18], 'true': [0.006949714775431268, nan], 'true,true': [0.006949714775431268, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.30215582557027737;  // std dev = 0.216, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0.4175135841583098;  // std dev = 4.21e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.23989465091318823;  // std dev = 0.199, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.3207118471601497;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.09269127618926094;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.19265038674685891;  // std dev = 0.190, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.2551722425694894;  // std dev = 2.11e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.08518475138839683;  // std dev = 1.18e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22588745932349058;  // std dev = 0.098, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1907859701616522;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07877675473109173;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18892954355570715;  // std dev = 0.086, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1630513975069679;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07324622576333704;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11237075419756766;  // std dev = 0.136, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.1491601371481297;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.06842697784420274;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.09648732621291382;  // std dev = 0.135, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.13120301778917787;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.0641918400820262;  // std dev = 6.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071474
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.861 seconds
Total inference time: 0.845 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107357
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.338 seconds
Refined model CLL: -0.107357


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071474
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.278 seconds
Total inference time: 0.845 seconds
AUC ROC: 1.0
Total revision time: 2.278
Best scored revision CLL: -0.107357


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:04:06
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.071474, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.278, 'Inference time': 0.845, 'parameter_20': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072406, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.679, 'Inference time': 0.946}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 2.36e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 1.05e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.2831297450374759;  // std dev = 0.557, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.01886928987686619;  // std dev = 0.158, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.24566606310518682;  // std dev = 0.551, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09111652605718529;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22882137486096915;  // std dev = 0.112, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.14774315660455076;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08384665008497728;  // std dev = 5.27e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19105175434400976;  // std dev = 0.020, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, B) )
%   | | then return -0.13009084646988425;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07762653567665213;  // std dev = 7.45e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.1299701512438073;  // std dev = 0.078, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.02394165057602082;  // std dev = 0.104, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.13026478605657607;  // std dev = 0.403, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07065907747874384;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073638
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.707 seconds
Total inference time: 0.958 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.110597
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.399 seconds
Parameter learned model CLL: -0.110597


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [2.36e-08, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-08, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.557, 2, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.158, 23, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.551, 2, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.112, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.27e-09, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.02, 0, 25], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 23, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.078, 2, 20], 'true,false': [0.0, 0, 0], 'false': [0.104, 23, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.403, 2, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}]]
[{'': [0.06858710562414343, 9.654113257610057e-18], 'true': [7.105427357601002e-16, 0.0], 'true,true': [7.105427357601002e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.04896340963409988, -2.413528314402514e-18], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.030576155100552255, 4.827056628805028e-18], 'true': [-2.842170943040401e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.842170943040401e-16, nan]}, {'': [0.01848251731452055, -2.413528314402514e-18], 'true': [0.01848251731452055, nan], 'true,true': [-3.552713678800501e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.014124143999590782, 0.02506855405029405], 'true': [0.014124143999590782, nan], 'true,true': [0.014124143999590782, nan]}, {'': [0.01124002621213062, -4.827056628805028e-18], 'true': [0.01124002621213062, nan], 'true,true': [0.01124002621213062, nan], 'true,true,true': [0.01124002621213062, nan]}, {'': [0.010186300584090527, 1.206764157201257e-18], 'true': [0.0004974382339402439, 0.0], 'true,true': [0.0004974382339402439, nan], 'true,false': [0.0, nan]}, {'': [0.007431748735870907, 2.413528314402514e-18], 'true': [0.00038683900085079604, 0.0], 'true,false': [0.0, nan]}, {'': [0.006053261642285244, 0.010733889162773588], 'true': [0.006053261642285244, nan]}, {'': [0.0060244663686253195, -1.206764157201257e-18], 'true': [0.0060244663686253195, nan], 'true,true': [0.0060244663686253195, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360638;  // std dev = 1.05e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.3309952652172855;  // std dev = 0.193, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return 0.4175135841583098;  // std dev = 4.71e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.26053178561396195;  // std dev = 0.177, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.09269127618926094;  // std dev = 1.18e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.20842329832206566;  // std dev = 0.169, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else return 0.2551722425694894;  // std dev = 2.36e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08518475138839682;  // std dev = 1.58e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2233022702698022;  // std dev = 0.083, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.201063332492829;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07877675473109175;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18701947873708494;  // std dev = 0.073, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.17069281965225447;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07324622576333704;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.12207337354105159;  // std dev = 0.121, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else return 0.14973153626781022;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06842697784420275;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.10521933351807267;  // std dev = 0.120, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else return 0.13165094084586637;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.0641918400820262;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071447
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.818 seconds
Total inference time: 0.812 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.105439
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.351 seconds
Refined model CLL: -0.105439


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071447
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.275 seconds
Total inference time: 0.812 seconds
AUC ROC: 1.0
Total revision time: 2.275
Best scored revision CLL: -0.105439


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:04:11
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.071447, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.275, 'Inference time': 0.812, 'parameter_25': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073638, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.707, 'Inference time': 0.958}}


Starting fold 3

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos	 examples: 178
Target test neg examples: 3543

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583099;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100103
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.572 seconds
Total inference time: 0.962 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.324 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [5.27e-09, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [-4.4408920985006264e-17, nan], 'true,true': [-4.4408920985006264e-17, nan]}, {'': [4.4408920985006264e-17, 0.0], 'true': [4.4408920985006264e-17, nan], 'true,true': [4.4408920985006264e-17, nan]}, {'': [-2.2204460492503132e-17, 0.0], 'true': [-2.2204460492503132e-17, nan], 'true,true': [-2.2204460492503132e-17, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}, {'': [-5.551115123125783e-18, -1.3877787807814458e-18], 'true': [-5.551115123125783e-18, nan], 'true,true': [-5.551115123125783e-18, nan]}, {'': [0.0, -6.938893903907229e-19], 'true': [0.0, nan]}, {'': [0.0, 6.938893903907229e-19], 'true': [0.0, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'true,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.9283
   AUC PR    = 0.265885
   CLL	      = -0.36127
   Precision = 0.229974 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.37395


Total learning time: 0.463 seconds
Total inference time: 0.732 seconds
AUC ROC: 0.9283


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.298 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100103
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.657 seconds
Total inference time: 0.962 seconds
AUC ROC: 1.0
Total revision time: 1.657
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:04:15
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.100103, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.657, 'Inference time': 0.962, 'parameter_5': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.100103, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.572, 'Inference time': 0.962}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.27937153482520866;  // std dev = 0.392, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0513509638543199;  // std dev = 0.124, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2346333786729666;  // std dev = 0.377, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08846206664884307;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22639481773844233;  // std dev = 0.059, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.14589044614257912;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08158368838152567;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1892711944813107;  // std dev = 0.016, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, B) )
%   | | then return -0.1286336624991289;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07567575240209222;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.12987617763753279;  // std dev = 0.082, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.042898419105794214;  // std dev = 0.083, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.12272551385084376;  // std dev = 0.273, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06778773250515939;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080383
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.651 seconds
Total inference time: 0.986 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108877
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.345 seconds
Parameter learned model CLL: -0.108877


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 10], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 10], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.392, 1, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.124, 9, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.377, 1, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.059, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.73e-09, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.016, 0, 10], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.082, 1, 9], 'true,false': [0.0, 0, 0], 'false': [0.083, 9, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.273, 1, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 9, 0]}]]
[{'': [0.0826446280991734, -9.25185853854297e-18], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.058998885327700486, 0.0], 'true': [8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.036843003418682206, -1.5419764230904951e-18], 'true': [-1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.7763568394002506e-16, nan]}, {'': [0.02227066962361243, 3.0839528461809902e-18], 'true': [0.02227066962361243, nan], 'true,true': [1.3322676295501878e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.015381192815554301, 0.015381192815554324], 'true': [0.015381192815554301, nan], 'true,true': [0.015381192815554301, nan]}, {'': [0.012894694021512847, 3.0839528461809902e-18], 'true': [0.012894694021512847, nan], 'true,true': [0.012894694021512847, nan], 'true,true,true': [0.012894694021512847, nan]}, {'': [0.011768329638778692, 1.5419764230904951e-18], 'true': [0.0003454973569327668, 0.0], 'true,true': [0.0003454973569327668, nan], 'true,false': [0.0, nan]}, {'': [0.00859849167551457, 0.0], 'true': [0.00027075010745204465, 0.0], 'true,false': [0.0, nan]}, {'': [0.006656770944763787, 0.006881177737923179], 'true': [0.006656770944763787, nan]}, {'': [0.006754402696816844, 1.5419764230904951e-18], 'true': [0.006754402696816844, nan], 'true,true': [0.006754402696816844, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.3136916014290807;  // std dev = 0.464, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.24818750282382282;  // std dev = 0.427, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1989814793512739;  // std dev = 0.408, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2262122736367876;  // std dev = 0.064, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.19485738393061242;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1891499637344493;  // std dev = 0.056, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.16608817048049013;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.14909095391629723;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1159764209070884;  // std dev = 0.291, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13114876281036358;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.09973986047687693;  // std dev = 0.290, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095072
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.744 seconds
Total inference time: 0.848 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107653
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.316 seconds
Refined model CLL: -0.107653


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095072
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.056 seconds
Total inference time: 0.848 seconds
AUC ROC: 1.0
Total revision time: 2.056
Best scored revision CLL: -0.107653


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:04:19
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.095072, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.056, 'Inference time': 0.848, 'parameter_10': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.080383, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.651, 'Inference time': 0.986}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 1.49e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583098;  // std dev = 1.18e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.26903645674147336;  // std dev = 0.547, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06316248166430306;  // std dev = 0.106, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.22414145637949118;  // std dev = 0.519, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08751424511883923;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22798941423894037;  // std dev = 0.061, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.14331435996095057;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08077338685970582;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19040419996343846;  // std dev = 0.014, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, B) )
%   | | then return -0.12660179939949243;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07497552118024851;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.12539183846167473;  // std dev = 0.090, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.050001483858377174;  // std dev = 0.072, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.11600044733204411;  // std dev = 0.372, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06675518873594569;  // std dev = 4.56e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079276
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.655 seconds
Total inference time: 0.996 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.110321
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.372 seconds
Parameter learned model CLL: -0.110321


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [1.49e-08, 0, 15], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 13, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-08, 13, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 15], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.547, 2, 14], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.106, 13, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.519, 2, 15], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.061, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 13, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.014, 0, 15], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.09, 2, 14], 'true,false': [0.0, 0, 0], 'false': [0.072, 13, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.372, 2, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [4.56e-09, 13, 0]}]]
[{'': [0.10380622837370206, -1.2810265668751807e-17], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.0741058663458661, 4.270088556250602e-18], 'true': [1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.04627685204491911, 8.540177112501205e-18], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.027973194025506288, -2.135044278125301e-18], 'true': [0.027973194025506288, nan], 'true,true': [1.4802973661668753e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.01869242182445835, 0.01133534617926339], 'true': [0.01869242182445835, nan], 'true,true': [0.01869242182445835, nan]}, {'': [0.015867045739752637, 0.0], 'true': [0.015867045739752637, nan], 'true,true': [0.015867045739752637, nan], 'true,true,true': [0.015867045739752637, nan]}, {'': [0.014528620650020488, 4.270088556250602e-18], 'true': [0.0002461826894251636, 0.0], 'true,true': [0.0002461826894251636, nan], 'true,false': [0.0, nan]}, {'': [0.010602286567285003, -1.0675221390626506e-18], 'true': [0.00019324199601039965, 0.0], 'true,false': [0.0, nan]}, {'': [0.008135831719730015, 0.005167312865018467], 'true': [0.008135831719730015, nan]}, {'': [0.008140970646980659, 1.6012832085939759e-18], 'true': [0.008140970646980659, nan], 'true,true': [0.008140970646980659, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3136916014290806;  // std dev = 0.208, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), female(A) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.25645214019394075;  // std dev = 0.175, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.09904868955089012;  // std dev = 0.054, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.2061396954376252;  // std dev = 0.165, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.08960408650155684;  // std dev = 0.042, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.23015711739427935;  // std dev = 0.074, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14693700049460676;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.082569089251617;  // std dev = 0.039, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19198890811811717;  // std dev = 0.065, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12945721417316797;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07653464495982312;  // std dev = 0.036, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.11803526307637147;  // std dev = 0.080, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.1476606183421434;  // std dev = 0.085, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.07472148249304839;  // std dev = 0.063, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13393936260541928;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.10414719382744489;  // std dev = 0.106, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.06928900218094179;  // std dev = 0.055, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.086296
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.848 seconds
Total inference time: 0.83 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108613
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.342 seconds
Refined model CLL: -0.108613


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.086296
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.217 seconds
Total inference time: 0.83 seconds
AUC ROC: 1.0
Total revision time: 2.217
Best scored revision CLL: -0.108613


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:04:24
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.086296, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.217, 'Inference time': 0.83, 'parameter_15': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079276, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.655, 'Inference time': 0.996}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.26433869397613907;  // std dev = 0.665, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0697244360031826;  // std dev = 0.095, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2190606669756804;  // std dev = 0.629, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08699165334186805;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22867848178174316;  // std dev = 0.062, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.14211797711489668;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08032610376436032;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19089109917344338;  // std dev = 0.012, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then return -0.12565587355258379;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07458860763801678;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.1233956705236671;  // std dev = 0.094, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05401639665124766;  // std dev = 0.064, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.11273660870249767;  // std dev = 0.448, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06618307704735059;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078691
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.703 seconds
Total inference time: 0.993 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.110934
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.39 seconds
Parameter learned model CLL: -0.110934


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 17, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [1.49e-08, 0, 20], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 17, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 17, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 20], 'true,true,false,true': [0.0, 3, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 17, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.665, 3, 19], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.095, 17, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.629, 3, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 17, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.062, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 17, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.012, 0, 20], 'true,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 17, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.094, 3, 19], 'true,false': [0.0, 0, 0], 'false': [0.064, 17, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.448, 3, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 17, 0]}]]
[{'': [0.11342155009451807, -3.2653618371328133e-18], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.08097011483536962, 0.0], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.05056336575040308, 1.3061447348531253e-17], 'true': [-2.6645352591003756e-16, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan], 'true,false,true': [2.3129646346357427e-18, nan], 'true,true': [-2.6645352591003756e-16, nan]}, {'': [0.030564283831271546, -8.163404592832034e-18], 'true': [0.030564283831271546, nan], 'true,true': [1.3322676295501878e-16, -1.1564823173178713e-18], 'true,true,false': [-1.1564823173178713e-18, nan]}, {'': [0.020126905199416834, 0.008967087718258694], 'true': [0.020126905199416834, nan], 'true,true': [0.020126905199416834, nan]}, {'': [0.017187918169080975, 3.2653618371328133e-18], 'true': [0.017187918169080975, nan], 'true,true': [0.017187918169080975, nan], 'true,true,true': [0.017187918169080975, nan]}, {'': [0.01576132301193077, -8.163404592832033e-19], 'true': [0.0001920413858568115, 0.0], 'true,true': [0.0001920413858568115, nan], 'true,false': [0.0, nan]}, {'': [0.011496274436615118, 3.2653618371328133e-18], 'true': [0.00015089134880146292, 0.0], 'true,false': [0.0, nan]}, {'': [0.008785382704315288, 0.0041287991040436095], 'true': [0.008785382704315288, nan]}, {'': [0.008741463429351616, 0.0], 'true': [0.008741463429351616, nan], 'true,true': [0.008741463429351616, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415830986;  // std dev = 5.16e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926094;  // std dev = 9.13e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601496;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948945;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08518475138839685;  // std dev = 1.18e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109173;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527744;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07324622576333704;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06419184008202619;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066922
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.727 seconds
Total inference time: 0.846 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.342 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066922
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.162 seconds
Total inference time: 0.846 seconds
AUC ROC: 1.0
Total revision time: 2.162
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:04:28
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066922, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.162, 'Inference time': 0.846, 'parameter_20': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.078691, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.703, 'Inference time': 0.993}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 2.36e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1.29e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.25946693999727394;  // std dev = 0.763, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05674317850670355;  // std dev = 0.116, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.21859700863661016;  // std dev = 0.728, 29.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0880282209719523;  // std dev = 9.13e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.23123929039184524;  // std dev = 0.082, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.14146872246137138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0812129386913864;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19275016110450768;  // std dev = 0.014, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, B) )
%   | | then return -0.12514192445705563;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07535547734986328;  // std dev = 1.34e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.1203437944852598;  // std dev = 0.097, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04606296076672348;  // std dev = 0.078, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.11283890428247585;  // std dev = 0.520, 29.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06731959851325596;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079532
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.732 seconds
Total inference time: 1.023 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.113025
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.402 seconds
Parameter learned model CLL: -0.113025


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [2.36e-08, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-08, 21, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 21, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.29e-08, 21, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false,true': [0.0, 4, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 21, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.763, 4, 23], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.116, 21, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.728, 4, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.13e-09, 21, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.082, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 21, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.014, 0, 25], 'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.34e-08, 21, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.097, 4, 23], 'true,false': [0.0, 0, 0], 'false': [0.078, 21, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.52, 4, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 21, 0]}]]
[{'': [0.11890606420927562, 5.28677630773884e-18], 'true': [7.105427357601002e-16, 0.0], 'true,true': [7.105427357601002e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.08488543548931946, -2.64338815386942e-18], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.053008364014988554, 7.93016446160826e-18], 'true': [-2.842170943040401e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.842170943040401e-16, nan]}, {'': [0.03204222383421043, -2.64338815386942e-18], 'true': [0.03204222383421043, nan], 'true,true': [-3.552713678800501e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.02156789725698827, 0.013568790133444284], 'true': [0.02156789725698827, nan], 'true,true': [0.02156789725698827, nan]}, {'': [0.018291665066390905, 3.96508223080413e-18], 'true': [0.018291665066390905, nan], 'true,true': [0.018291665066390905, nan], 'true,true,true': [0.018291665066390905, nan]}, {'': [0.016746456592107332, -1.32169407693471e-18], 'true': [0.00026571546132815984, 0.0], 'true,true': [0.00026571546132815984, nan], 'true,false': [0.0, nan]}, {'': [0.012195426671851209, 8.591011500075616e-18], 'true': [0.0002080221031156304, 0.0], 'true,false': [0.0, nan]}, {'': [0.009394230478969614, 0.006152832052555099], 'true': [0.009394230478969614, nan]}, {'': [0.009338145625203931, -1.32169407693471e-18], 'true': [0.009338145625203931, nan], 'true,true': [0.009338145625203931, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360636;  // std dev = 1.29e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926103;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014955;  // std dev = 2.11e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948956;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839683;  // std dev = 1.49e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253554;  // std dev = 1.49e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109179;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527747;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333704;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420275;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0641918400820262;  // std dev = 5.27e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066922
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.873 seconds
Total inference time: 0.828 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.34 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066922
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.3469999999999995 seconds
Total inference time: 0.828 seconds
AUC ROC: 1.0
Total revision time: 2.3469999999999995
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:04:33
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066922, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.3469999999999995, 'Inference time': 0.828, 'parameter_25': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079532, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.732, 'Inference time': 1.023}}


Starting fold 4

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos	 examples: 45
Target test neg examples: 1891

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583099;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.025423901910570628;  // std dev = 0.187, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2791827581499097;  // std dev = 0.066, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0948516716010991;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22678138129809106;  // std dev = 0.057, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08701521868559602;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18960872258639733;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08034628108886939;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.14594234242663495;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 5.705462164531542E-5;  // std dev = 0.118, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1518871944508891;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07461000675516917;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0892
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.539 seconds
Total inference time: 0.712 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107913
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.329 seconds
Parameter learned model CLL: -0.107913


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [5.27e-09, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.187, 5, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.066, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.057, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.023, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.0, 0, 0], 'false': [0.118, 5, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.064, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.86e-09, 5, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [-4.4408920985006264e-17, nan], 'true,true': [-4.4408920985006264e-17, nan]}, {'': [4.4408920985006264e-17, 0.0], 'true': [4.4408920985006264e-17, nan], 'true,true': [4.4408920985006264e-17, nan]}, {'': [0.0, 0.03487798824388735], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0008647572876563814, 1.3877787807814458e-18], 'true': [0.0008647572876563814, nan], 'true,true': [0.0008647572876563814, nan], 'true,true,true': [0.0008647572876563814, nan]}, {'': [0.0006599827116966384, 0.0], 'true': [0.0006599827116966384, nan], 'true,true': [0.0006599827116966384, nan]}, {'': [0.0005085719682749401, 0.0], 'true': [0.0005085719682749401, nan]}, {'': [0.0, 0.01393645455283018], 'true': [0.0, nan]}, {'': [0.000808241934361506, 6.938893903907229e-19], 'true': [0.000808241934361506, nan], 'true,true': [0.000808241934361506, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( actor(B) )
%   | then return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.18291080604367946;  // std dev = 0.338, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.26599645305822683;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0900002801333905;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2174135852819307;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.082903651341276;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.18271566596491448;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07682046933105842;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.14965112944901493;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( movie(D, A), movie(D, B) )
%   | then return 0.0894862474284176;  // std dev = 0.192, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.0725308331102605;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.14131439277799857;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06894401220204757;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.969593
   AUC PR    = 0.28125
   CLL	      = -0.189828
   Precision = 0.28125 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.439024


Total learning time: 0.563 seconds
Total inference time: 0.634 seconds
AUC ROC: 0.969593


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100257
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.308 seconds
Refined model CLL: -0.100257


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.969593
   AUC PR    = 0.28125
   CLL	      = -0.189828
   Precision = 0.28125 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.439024


Total learning time: 1.739 seconds
Total inference time: 0.634 seconds
AUC ROC: 0.969593
Total revision time: 1.739
Best scored revision CLL: -0.100257


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:04:37
{'AUC ROC': 0.969593, 'AUC PR': 0.28125, 'CLL': -0.189828, 'Precision': [0.28125, 0.5], 'Recall': 1.0, 'F1': 0.439024, 'Learning time': 1.739, 'Inference time': 0.634, 'parameter_5': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.0892, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.539, 'Inference time': 0.712}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04510976492720929;  // std dev = 0.195, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2830685751304407;  // std dev = 0.088, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09655533091090082;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22946341574852697;  // std dev = 0.077, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08845443855844078;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19153157351488453;  // std dev = 0.021, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0815771718461331;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.1448872125938625;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.010377882664801098;  // std dev = 0.122, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1543870106813216;  // std dev = 0.084, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07639920098142013;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.090805
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.641 seconds
Total inference time: 0.729 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.109842
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.34 seconds
Parameter learned model CLL: -0.109842


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [1.18e-08, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.195, 10, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.088, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.077, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.021, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.122, 10, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.084, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 10, 0]}]]
[{'': [-8.881784197001253e-17, -2.7755575615628915e-18], 'true': [-8.881784197001253e-17, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [8.881784197001253e-17, 0.0], 'true': [8.881784197001253e-17, nan]}, {'': [-1.7763568394002506e-16, 0.0], 'true': [-1.7763568394002506e-16, nan], 'true,true': [-1.7763568394002506e-16, nan]}, {'': [1.3322676295501878e-16, -4.163336342344337e-18], 'true': [1.3322676295501878e-16, nan], 'true,true': [1.3322676295501878e-16, nan]}, {'': [-2.2204460492503132e-17, 0.037978253865566226], 'true': [-2.2204460492503132e-17, nan], 'true,true': [-2.2204460492503132e-17, nan]}, {'': [0.0007782053703511594, -1.3877787807814458e-18], 'true': [0.0007782053703511594, nan], 'true,true': [0.0007782053703511594, nan], 'true,true,true': [0.0007782053703511594, nan]}, {'': [0.0005901180647250093, -1.3877787807814458e-18], 'true': [0.0005901180647250093, nan], 'true,true': [0.0005901180647250093, nan]}, {'': [0.00045224239541987176, 0.0], 'true': [0.00045224239541987176, nan]}, {'': [-2.7755575615628915e-18, 0.0148085191352327], 'true': [-2.7755575615628915e-18, nan]}, {'': [0.0007045755493774647, 6.938893903907229e-19], 'true': [0.0007045755493774647, nan], 'true,true': [0.0007045755493774647, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.14185106490048777;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783634;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( director(B), female(A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839687;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07877675473109173;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527736;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07324622576333704;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( director(B), female(A) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.0641918400820262;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.969593
   AUC PR    = 0.28125
   CLL	      = -0.186484
   Precision = 0.28125 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.439024


Total learning time: 0.597 seconds
Total inference time: 0.605 seconds
AUC ROC: 0.969593


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.324 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.969593
   AUC PR    = 0.28125
   CLL	      = -0.186484
   Precision = 0.28125 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.439024


Total learning time: 1.9020000000000001 seconds
Total inference time: 0.605 seconds
AUC ROC: 0.969593
Total revision time: 1.9020000000000001
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:04:40
{'AUC ROC': 0.969593, 'AUC PR': 0.28125, 'CLL': -0.186484, 'Precision': [0.28125, 0.5], 'Recall': 1.0, 'F1': 0.439024, 'Learning time': 1.9020000000000001, 'Inference time': 0.605, 'parameter_10': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.090805, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.641, 'Inference time': 0.729}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 1.49e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583098;  // std dev = 1.18e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.010659504648091723;  // std dev = 0.179, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2762461831153281;  // std dev = 0.115, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09359163688281423;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2247407240728296;  // std dev = 0.101, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08594835015102617;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18813662494210798;  // std dev = 0.023, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07943204881754462;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.14674804435825517;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.007871381869489819;  // std dev = 0.114, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.14992966879023312;  // std dev = 0.113, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07327805954639446;  // std dev = 6.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.088002
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.659 seconds
Total inference time: 0.739 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.10642
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.365 seconds
Parameter learned model CLL: -0.10642


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [1.49e-08, 0, 15], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.13e-09, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [1.18e-08, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.179, 15, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.115, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.101, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.023, 0, 15], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 15, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.114, 15, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.113, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.45e-09, 15, 0]}]]
[{'': [-2.3684757858670006e-16, -1.4802973661668754e-17], 'true': [-2.3684757858670006e-16, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [1.7763568394002506e-16, 1.8503717077085942e-18], 'true': [1.7763568394002506e-16, nan]}, {'': [-2.3684757858670006e-16, 5.551115123125783e-18], 'true': [-2.3684757858670006e-16, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [1.4802973661668753e-16, 0.0], 'true': [1.4802973661668753e-16, nan], 'true,true': [1.4802973661668753e-16, nan]}, {'': [-4.4408920985006264e-17, 0.032044151699071516], 'true': [-4.4408920985006264e-17, nan], 'true,true': [-4.4408920985006264e-17, nan]}, {'': [0.0008882219402591041, -1.8503717077085942e-18], 'true': [0.0008882219402591041, nan], 'true,true': [0.0008882219402591041, nan], 'true,true,true': [0.0008882219402591041, nan]}, {'': [0.0006811628558857234, 0.0], 'true': [0.0006811628558857234, nan], 'true,true': [0.0006811628558857234, nan]}, {'': [0.0005270721530404643, 9.251858538542971e-19], 'true': [0.0005270721530404643, nan]}, {'': [-2.7755575615628915e-18, 0.013045441395672897], 'true': [-2.7755575615628915e-18, nan]}, {'': [0.000850456758685055, 2.7755575615628915e-18], 'true': [0.000850456758685055, nan], 'true,true': [0.000850456758685055, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360636;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583098;  // std dev = 4.71e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1015963294878363;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( female(A), director(B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2551722425694894;  // std dev = 2.36e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08518475138839686;  // std dev = 6.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.20975771563253562;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07877675473109173;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527741;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.15274385809367078;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( director(B), female(A) )
%   | then return 0.15274385809367075;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.06842697784420272;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06419184008202619;  // std dev = 5.89e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.969593
   AUC PR    = 0.28125
   CLL	      = -0.186484
   Precision = 0.28125 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.439024


Total learning time: 0.607 seconds
Total inference time: 0.603 seconds
AUC ROC: 0.969593


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.333 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.969593
   AUC PR    = 0.28125
   CLL	      = -0.186484
   Precision = 0.28125 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.439024


Total learning time: 1.964 seconds
Total inference time: 0.603 seconds
AUC ROC: 0.969593
Total revision time: 1.964
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:04:44
{'AUC ROC': 0.969593, 'AUC PR': 0.28125, 'CLL': -0.186484, 'Precision': [0.28125, 0.5], 'Recall': 1.0, 'F1': 0.439024, 'Learning time': 1.964, 'Inference time': 0.603, 'parameter_15': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.088002, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.659, 'Inference time': 0.739}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1.58e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.01448731134577146;  // std dev = 0.181, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.25934618240376955;  // std dev = 0.386, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09391686385150001;  // std dev = 5.27e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22835763540331352;  // std dev = 0.118, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.11843077496293257;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08622391648516811;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1907532525079653;  // std dev = 0.023, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then return -0.10661382958415219;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07966833690220745;  // std dev = 6.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.14808866330970932;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.006153880298092774;  // std dev = 0.117, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1401011194466303;  // std dev = 0.276, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07359843069971482;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078724
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.646 seconds
Total inference time: 0.773 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.10938
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.393 seconds
Parameter learned model CLL: -0.10938


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [1.49e-08, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.58e-08, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 20], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 13], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.181, 20, 7]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.386, 1, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 19, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.118, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.023, 0, 20], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.45e-09, 19, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.0, 0, 13], 'true,false': [0.0, 0, 0], 'false': [0.117, 20, 7]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.276, 1, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}]]
[{'': [0.04535147392290242, -5.843279076974508e-18], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.03237580555397633, 2.921639538487254e-18], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.02021770255628346, 1.3147377923192643e-17], 'true': [-2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.6645352591003756e-16, nan]}, {'': [0.012221093081438202, -5.843279076974508e-18], 'true': [0.012221093081438202, nan], 'true,true': [1.3322676295501878e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [-5.124106267500723e-17, 0.03282071321715602], 'true': [-5.124106267500723e-17, nan], 'true,true': [-5.124106267500723e-17, nan]}, {'': [0.007083162355021842, 1.460819769243627e-18], 'true': [0.007083162355021842, nan], 'true,true': [0.007083162355021842, nan], 'true,true,true': [0.007083162355021842, nan]}, {'': [0.006112276329409424, -5.843279076974508e-18], 'true': [0.0006911186428157134, 0.0], 'true,true': [0.0006911186428157134, nan], 'true,false': [0.0, nan]}, {'': [0.004518534776337833, 2.1912296538654404e-18], 'true': [0.0005336433479175729, 0.0], 'true,false': [0.0, nan]}, {'': [-1.2810265668751807e-17, 0.013624440820482756], 'true': [-1.2810265668751807e-17, nan]}, {'': [0.0036174390054952103, -7.304098846218135e-19], 'true': [0.0036174390054952103, nan], 'true,true': [0.0036174390054952103, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360635;  // std dev = 1.58e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.37032177382684206;  // std dev = 0.149, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.32310418481338765;  // std dev = 0.016, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( female(A), director(B) )
%   | then return 0.27210332315880675;  // std dev = 0.156, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return -0.09269127618926096;  // std dev = 7.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.23009215970132352;  // std dev = 0.129, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.2547178227594808;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839685;  // std dev = 1.05e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2186287132683442;  // std dev = 0.043, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.21297339109398764;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109173;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1835928493090034;  // std dev = 0.038, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1794514744699227;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.152690453337241;  // std dev = 0.014, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( director(B), female(A) )
%   | then return 0.1267253010774452;  // std dev = 0.106, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11815581904852389;  // std dev = 0.092, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.13201757699317085;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06419184008202619;  // std dev = 8.33e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074349
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.742 seconds
Total inference time: 0.667 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101804
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.335 seconds
Refined model CLL: -0.101804


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074349
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.116 seconds
Total inference time: 0.667 seconds
AUC ROC: 1.0
Total revision time: 2.116
Best scored revision CLL: -0.101804


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:04:48
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.074349, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.116, 'Inference time': 0.667, 'parameter_20': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.078724, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.646, 'Inference time': 0.773}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 2.36e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1.29e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.32071184716014967;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0075276628045355095;  // std dev = 0.177, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2614305690054246;  // std dev = 0.391, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09332629366393429;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22677350627123716;  // std dev = 0.132, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.11792271971447052;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08572342160654055;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18960935977280538;  // std dev = 0.023, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, B) )
%   | | then return -0.10619857890701362;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0792391048145346;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.1481698817055182;  // std dev = 3.23e-09, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.009895295691150616;  // std dev = 0.114, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.14120831321459992;  // std dev = 0.283, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07297491564745152;  // std dev = 1.18e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078226
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.739 seconds
Total inference time: 0.766 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108144
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.397 seconds
Parameter learned model CLL: -0.108144


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [2.36e-08, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.29e-08, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [1.49e-08, 0, 17], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.177, 25, 8]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.391, 1, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.132, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.023, 0, 25], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [3.23e-09, 0, 17], 'true,false': [0.0, 0, 0], 'false': [0.114, 25, 8]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.283, 1, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.18e-08, 24, 0]}]]
[{'': [0.03698224852071082, 6.938893903907228e-18], 'true': [7.105427357601002e-16, 0.0], 'true,true': [7.105427357601002e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.026401128419570055, -2.3129646346357427e-18], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.016486699015016572, 9.25185853854297e-18], 'true': [-2.842170943040401e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.842170943040401e-16, nan]}, {'': [0.009965795208791005, -3.469446951953614e-18], 'true': [0.009965795208791005, nan], 'true,true': [-3.552713678800501e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [1.3061447348531253e-17, 0.031386986665757226], 'true': [1.3061447348531253e-17, nan], 'true,true': [1.3061447348531253e-17, nan]}, {'': [0.005888480650106233, -1.1564823173178713e-18], 'true': [0.005888480650106233, nan], 'true,true': [0.005888480650106233, nan], 'true,true,true': [0.005888480650106233, nan]}, {'': [0.005059860768983186, -4.625929269271485e-18], 'true': [0.0006924287301736775, 0.0], 'true,true': [0.0006924287301736775, nan], 'true,false': [0.0, nan]}, {'': [0.0037512430844064883, -8.0953762212251e-18], 'true': [0.000535818323705688, 0.0], 'true,false': [0.0, nan]}, {'': [9.79608551139844e-18, 0.013083523022779715], 'true': [9.79608551139844e-18, nan]}, {'': [0.0030829827183634405, 5.782411586589357e-18], 'true': [0.0030829827183634405, nan], 'true,true': [0.0030829827183634405, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048774;  // std dev = 1.29e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360636;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.3742544246877977;  // std dev = 0.143, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.4175135841583098;  // std dev = 4.21e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3223876875765284;  // std dev = 0.015, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( director(B), female(A) )
%   | then return 0.27782956422671023;  // std dev = 0.148, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return -0.09269127618926103;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.23218354364918292;  // std dev = 0.124, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.25485386409981803;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.08518475138839683;  // std dev = 1.39e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21691205562392035;  // std dev = 0.043, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.2149495643003142;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109173;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1823396862955109;  // std dev = 0.038, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.18089520965831682;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.1524981514628007;  // std dev = 0.014, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( director(B), female(A) )
%   | then return 0.12998629128533132;  // std dev = 0.101, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return -0.06842697784420275;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11958907236954658;  // std dev = 0.088, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.13244702601181269;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.0641918400820262;  // std dev = 5.27e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074323
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.827 seconds
Total inference time: 0.65 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100442
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.345 seconds
Refined model CLL: -0.100442


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074323
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.308 seconds
Total inference time: 0.65 seconds
AUC ROC: 1.0
Total revision time: 2.308
Best scored revision CLL: -0.100442


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:04:53
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.074323, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.308, 'Inference time': 0.65, 'parameter_25': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.078226, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.739, 'Inference time': 0.766}}


Starting fold 5

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos	 examples: 45
Target test neg examples: 2071

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583099;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.025423901910570628;  // std dev = 0.187, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2791827581499097;  // std dev = 0.066, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0948516716010991;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22678138129809106;  // std dev = 0.057, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08701521868559602;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18960872258639733;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08034628108886939;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.14594234242663495;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 5.705462164531542E-5;  // std dev = 0.118, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1518871944508891;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07461000675516917;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082411
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.568 seconds
Total inference time: 0.752 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107913
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.327 seconds
Parameter learned model CLL: -0.107913


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [5.27e-09, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.187, 5, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.066, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.057, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.023, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.0, 0, 0], 'false': [0.118, 5, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.064, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.86e-09, 5, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [-4.4408920985006264e-17, nan], 'true,true': [-4.4408920985006264e-17, nan]}, {'': [4.4408920985006264e-17, 0.0], 'true': [4.4408920985006264e-17, nan], 'true,true': [4.4408920985006264e-17, nan]}, {'': [0.0, 0.03487798824388735], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0008647572876563814, 1.3877787807814458e-18], 'true': [0.0008647572876563814, nan], 'true,true': [0.0008647572876563814, nan], 'true,true,true': [0.0008647572876563814, nan]}, {'': [0.0006599827116966272, 0.0], 'true': [0.0006599827116966272, nan], 'true,true': [0.0006599827116966272, nan]}, {'': [0.0005085719682749401, 0.0], 'true': [0.0005085719682749401, nan]}, {'': [0.0, 0.01393645455283018], 'true': [0.0, nan]}, {'': [0.000808241934361506, 6.938893903907229e-19], 'true': [0.000808241934361506, nan], 'true,true': [0.000808241934361506, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( female(A) )
%   | then return 0.18291080604367946;  // std dev = 0.338, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.26599645305822683;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0900002801333905;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2174135852819307;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.082903651341276;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.18271566596491448;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07682046933105842;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.14965112944901493;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( movie(D, A), movie(D, B) )
%   | then return 0.0894862474284176;  // std dev = 0.192, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.07253083311026051;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.14131439277799857;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0689440122020476;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.984307
   AUC PR    = 0.408495
   CLL	      = -0.149887
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 0.582 seconds
Total inference time: 0.654 seconds
AUC ROC: 0.984307


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100257
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.308 seconds
Refined model CLL: -0.100257


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.984307
   AUC PR    = 0.408495
   CLL	      = -0.149887
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 1.785 seconds
Total inference time: 0.654 seconds
AUC ROC: 0.984307
Total revision time: 1.785
Best scored revision CLL: -0.100257


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:04:56
{'AUC ROC': 0.984307, 'AUC PR': 0.408495, 'CLL': -0.149887, 'Precision': [0.348837, 0.5], 'Recall': 1.0, 'F1': 0.517241, 'Learning time': 1.785, 'Inference time': 0.654, 'parameter_5': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.082411, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.568, 'Inference time': 0.752}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.025423901910570652;  // std dev = 0.187, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.27918275814990967;  // std dev = 0.093, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0948516716010991;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22678138129809106;  // std dev = 0.081, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08701521868559602;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18960872258639733;  // std dev = 0.023, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0803462810888694;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.14594234242663495;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 5.705462164530352E-5;  // std dev = 0.118, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.15188719445088913;  // std dev = 0.090, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07461000675516917;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082411
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.64 seconds
Total inference time: 0.792 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107913
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.347 seconds
Parameter learned model CLL: -0.107913


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [1.18e-08, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 10, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.187, 10, 4]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.093, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 10, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.081, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.023, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.0, 0, 0], 'false': [0.118, 10, 4]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.09, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}]]
[{'': [-8.881784197001253e-17, -1.1102230246251566e-17], 'true': [-8.881784197001253e-17, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [8.881784197001253e-17, 2.7755575615628915e-18], 'true': [8.881784197001253e-17, nan]}, {'': [-1.7763568394002506e-16, 0.0], 'true': [-1.7763568394002506e-16, nan], 'true,true': [-1.7763568394002506e-16, nan]}, {'': [1.3322676295501878e-16, 1.3877787807814458e-18], 'true': [1.3322676295501878e-16, nan], 'true,true': [1.3322676295501878e-16, nan]}, {'': [-3.700743415417188e-17, 0.03487798824388733], 'true': [-3.700743415417188e-17, nan], 'true,true': [-3.700743415417188e-17, nan]}, {'': [0.0008647572876564147, 1.3877787807814458e-18], 'true': [0.0008647572876564147, nan], 'true,true': [0.0008647572876564147, nan], 'true,true,true': [0.0008647572876564147, nan]}, {'': [0.0006599827116966384, 1.3877787807814458e-18], 'true': [0.0006599827116966384, nan], 'true,true': [0.0006599827116966384, nan]}, {'': [0.000508571968274929, 0.0], 'true': [0.000508571968274929, nan]}, {'': [0.0, 0.01393645455283018], 'true': [0.0, nan]}, {'': [0.0008082419343615005, -6.938893903907229e-19], 'true': [0.0008082419343615005, nan], 'true,true': [0.0008082419343615005, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( director(B), female(A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527736;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.15274385809367097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( director(B), female(A) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06419184008202619;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.982263
   AUC PR    = 0.381562
   CLL	      = -0.141324
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 0.588 seconds
Total inference time: 0.65 seconds
AUC ROC: 0.982263


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.315 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.982263
   AUC PR    = 0.381562
   CLL	      = -0.141324
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 1.89 seconds
Total inference time: 0.65 seconds
AUC ROC: 0.982263
Total revision time: 1.89
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:05:00
{'AUC ROC': 0.982263, 'AUC PR': 0.381562, 'CLL': -0.141324, 'Precision': [0.348837, 0.5], 'Recall': 1.0, 'F1': 0.517241, 'Learning time': 1.89, 'Inference time': 0.65, 'parameter_10': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.082411, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.64, 'Inference time': 0.792}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 1.49e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583098;  // std dev = 1.18e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.01065950464809172;  // std dev = 0.179, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2762461831153281;  // std dev = 0.115, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09359163688281423;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2247407240728296;  // std dev = 0.101, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08594835015102617;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18813662494210798;  // std dev = 0.023, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07943204881754462;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.14674804435825517;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.007871381869489819;  // std dev = 0.114, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.14992966879023312;  // std dev = 0.113, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07327805954639446;  // std dev = 6.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081159
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.628 seconds
Total inference time: 0.737 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.10642
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.352 seconds
Parameter learned model CLL: -0.10642


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [1.49e-08, 0, 15], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.39e-08, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [1.18e-08, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.179, 15, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.115, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.101, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.023, 0, 15], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 15, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.114, 15, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.113, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.45e-09, 15, 0]}]]
[{'': [-2.3684757858670006e-16, -1.4802973661668754e-17], 'true': [-2.3684757858670006e-16, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [1.7763568394002506e-16, 3.7007434154171884e-18], 'true': [1.7763568394002506e-16, nan]}, {'': [-2.3684757858670006e-16, 1.295260195396016e-17], 'true': [-2.3684757858670006e-16, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [1.4802973661668753e-16, -5.551115123125783e-18], 'true': [1.4802973661668753e-16, nan], 'true,true': [1.4802973661668753e-16, nan]}, {'': [-4.4408920985006264e-17, 0.032044151699071516], 'true': [-4.4408920985006264e-17, nan], 'true,true': [-4.4408920985006264e-17, nan]}, {'': [0.0008882219402591041, -1.8503717077085942e-18], 'true': [0.0008882219402591041, nan], 'true,true': [0.0008882219402591041, nan], 'true,true,true': [0.0008882219402591041, nan]}, {'': [0.0006811628558857234, 9.251858538542971e-19], 'true': [0.0006811628558857234, nan], 'true,true': [0.0006811628558857234, nan]}, {'': [0.0005270721530404569, 9.251858538542971e-19], 'true': [0.0005270721530404569, nan]}, {'': [-2.7755575615628915e-18, 0.013045441395672897], 'true': [-2.7755575615628915e-18, nan]}, {'': [0.0008504567586850513, 2.7755575615628915e-18], 'true': [0.0008504567586850513, nan], 'true,true': [0.0008504567586850513, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583098;  // std dev = 4.71e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( female(A), director(B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2551722425694894;  // std dev = 2.36e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08518475138839685;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.20975771563253562;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07877675473109172;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527741;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.15274385809367078;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( director(B), female(A) )
%   | then return 0.15274385809367075;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.06842697784420272;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06419184008202619;  // std dev = 7.90e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.982263
   AUC PR    = 0.381562
   CLL	      = -0.141324
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 0.638 seconds
Total inference time: 0.616 seconds
AUC ROC: 0.982263


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.326 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.982263
   AUC PR    = 0.381562
   CLL	      = -0.141324
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 1.944 seconds
Total inference time: 0.616 seconds
AUC ROC: 0.982263
Total revision time: 1.944
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:05:04
{'AUC ROC': 0.982263, 'AUC PR': 0.381562, 'CLL': -0.141324, 'Precision': [0.348837, 0.5], 'Recall': 1.0, 'F1': 0.517241, 'Learning time': 1.944, 'Inference time': 0.616, 'parameter_15': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.081159, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.628, 'Inference time': 0.737}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0027094445836799855;  // std dev = 0.174, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2746571296024752;  // std dev = 0.133, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09291939100796998;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22363156205746998;  // std dev = 0.117, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08537831635817643;  // std dev = 5.27e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18733323818959238;  // std dev = 0.023, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07894294013259427;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.14718703323795257;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.012209666967526327;  // std dev = 0.112, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.14884523625976975;  // std dev = 0.131, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07256437534687589;  // std dev = 8.33e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080488
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.649 seconds
Total inference time: 0.75 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.105599
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.45 seconds
Parameter learned model CLL: -0.105599


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 20, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [1.49e-08, 0, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.49e-08, 20, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [1.18e-08, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 14], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.174, 20, 6]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.133, 0, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.117, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 20, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.023, 0, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.0, 0, 14], 'true,false': [0.0, 0, 0], 'false': [0.112, 20, 6]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.131, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.33e-09, 20, 0]}]]
[{'': [-8.881784197001253e-17, 2.7755575615628915e-18], 'true': [-8.881784197001253e-17, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [2.6645352591003756e-16, 0.0], 'true': [2.6645352591003756e-16, nan]}, {'': [-2.6645352591003756e-16, 1.1102230246251566e-17], 'true': [-2.6645352591003756e-16, nan], 'true,true': [-2.6645352591003756e-16, nan]}, {'': [1.3322676295501878e-16, -1.3877787807814458e-18], 'true': [1.3322676295501878e-16, nan], 'true,true': [1.3322676295501878e-16, nan]}, {'': [-3.172065784643304e-17, 0.03033765841332215], 'true': [-3.172065784643304e-17, nan], 'true,true': [-3.172065784643304e-17, nan]}, {'': [0.0008858752529392055, 0.0], 'true': [0.0008858752529392055, nan], 'true,true': [0.0008858752529392055, nan], 'true,true,true': [0.0008858752529392055, nan]}, {'': [0.0006811242993782329, 1.3877787807814458e-18], 'true': [0.0006811242993782329, nan], 'true,true': [0.0006811242993782329, nan]}, {'': [0.0005282228573291025, -2.7755575615628915e-18], 'true': [0.0005282228573291025, nan]}, {'': [0.0, 0.012476928734031417], 'true': [0.0, nan]}, {'': [0.0008593922148943167, 3.469446951953614e-18], 'true': [0.0008593922148943167, nan], 'true,true': [0.0008593922148943167, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.11231637819360636;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830986;  // std dev = 5.16e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3207118471601497;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( female(A), director(B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.09269127618926096;  // std dev = 5.27e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25517224256948945;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.08518475138839683;  // std dev = 1.39e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2097577156325356;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07877675473109173;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527744;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07324622576333704;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.1527438580936708;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( director(B), female(A) )
%   | then return 0.15274385809367075;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.06842697784420274;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.0641918400820262;  // std dev = 6.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.982263
   AUC PR    = 0.381562
   CLL	      = -0.141324
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 0.617 seconds
Total inference time: 0.627 seconds
AUC ROC: 0.982263


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.341 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.982263
   AUC PR    = 0.381562
   CLL	      = -0.141324
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 2.057 seconds
Total inference time: 0.627 seconds
AUC ROC: 0.982263
Total revision time: 2.057
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:05:08
{'AUC ROC': 0.982263, 'AUC PR': 0.381562, 'CLL': -0.141324, 'Precision': [0.348837, 0.5], 'Recall': 1.0, 'F1': 0.517241, 'Learning time': 2.057, 'Inference time': 0.627, 'parameter_20': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.080488, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.649, 'Inference time': 0.75}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 2.36e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.3207118471601496;  // std dev = 2.11e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.00225934295657736;  // std dev = 0.171, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2736612066900835;  // std dev = 0.148, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09250144111891986;  // std dev = 5.27e-09, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2229346577987795;  // std dev = 0.130, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08502361652318434;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18682729298614273;  // std dev = 0.023, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07863837351513142;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.14746324392642782;  // std dev = 2.63e-09, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.014946241788909109;  // std dev = 0.110, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.14815642205161259;  // std dev = 0.147, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.072119570967415;  // std dev = 1.29e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.08007
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.679 seconds
Total inference time: 0.725 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.10508
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.42 seconds
Parameter learned model CLL: -0.10508


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.36e-08, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.83e-08, 25, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 25], 'true,false': [0.0, 0, 0], 'false': [0.0, 25, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 25, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 25, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [2.11e-08, 0, 18], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.171, 25, 7]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.148, 0, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 25, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.13, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 25, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.023, 0, 25], 'true,false': [0.0, 0, 0], 'false': [0.0, 25, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [2.63e-09, 0, 18], 'true,false': [0.0, 0, 0], 'false': [0.11, 25, 7]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.147, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.29e-08, 25, 0]}]]
[{'': [7.105427357601002e-16, 1.3322676295501878e-17], 'true': [7.105427357601002e-16, nan], 'true,true': [7.105427357601002e-16, nan]}, {'': [-7.105427357601002e-17, -4.440892098500626e-18], 'true': [-7.105427357601002e-17, nan]}, {'': [-2.842170943040401e-16, 0.0], 'true': [-2.842170943040401e-16, nan], 'true,true': [-2.842170943040401e-16, nan]}, {'': [-3.552713678800501e-17, -2.220446049250313e-18], 'true': [-3.552713678800501e-17, nan], 'true,true': [-3.552713678800501e-17, nan]}, {'': [2.4671622769447922e-17, 0.029206909100716234], 'true': [2.4671622769447922e-17, nan], 'true,true': [2.4671622769447922e-17, nan]}, {'': [0.0008790217566495695, 1.1102230246251566e-18], 'true': [0.0008790217566495695, nan], 'true,true': [0.0008790217566495695, nan], 'true,true,true': [0.0008790217566495695, nan]}, {'': [0.0006769483139397003, -6.661338147750939e-18], 'true': [0.0006769483139397003, nan], 'true,true': [0.0006769483139397003, nan]}, {'': [0.0005257201413562739, -1.2212453270876722e-17], 'true': [0.0005257201413562739, nan]}, {'': [9.25185853854297e-18, 0.012088941895295472], 'true': [9.25185853854297e-18, nan]}, {'': [0.0008597826666029374, 6.661338147750939e-18], 'true': [0.0008597826666029374, nan], 'true,true': [0.0008597826666029374, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.12544463852839138;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.11231637819360639;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.10159632948783635;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3207118471601496;  // std dev = 2.11e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( director(B), female(A) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.09269127618926096;  // std dev = 9.13e-09, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25517224256948956;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.08518475138839682;  // std dev = 1.75e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.20975771563253554;  // std dev = 1.49e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07877675473109175;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527747;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07324622576333704;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.1527438580936708;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( director(B), female(A) )
%   | then return 0.15274385809367072;  // std dev = 7.45e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.06842697784420276;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06419184008202622;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.982263
   AUC PR    = 0.381562
   CLL	      = -0.141324
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 0.621 seconds
Total inference time: 0.615 seconds
AUC ROC: 0.982263


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.338 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.982263
   AUC PR    = 0.381562
   CLL	      = -0.141324
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 2.058 seconds
Total inference time: 0.615 seconds
AUC ROC: 0.982263
Total revision time: 2.058
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:05:12
{'AUC ROC': 0.982263, 'AUC PR': 0.381562, 'CLL': -0.141324, 'Precision': [0.348837, 0.5], 'Recall': 1.0, 'F1': 0.517241, 'Learning time': 2.058, 'Inference time': 0.615, 'parameter_25': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.08007, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.679, 'Inference time': 0.725}}


Starting fold 1

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos	 examples: 56
Target test neg examples: 3308

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583099;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.23803122249026756;  // std dev = 0.370, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.010010651519378832;  // std dev = 0.165, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.21549338253865144;  // std dev = 0.365, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09185281015069582;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2401442450121177;  // std dev = 0.042, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.13851442904126202;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08447269268551708;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19915309401669487;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(D, B) )
%   | | then return -0.12279782037546687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07816497883457847;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.10757639303770454;  // std dev = 0.109, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.018459044115957557;  // std dev = 0.109, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1120144323124498;  // std dev = 0.260, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07148037446199772;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072874
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.597 seconds
Total inference time: 0.914 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.120092
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.33 seconds
Parameter learned model CLL: -0.120092


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 5], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [5.27e-09, 0, 5], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.37, 1, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.165, 4, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.365, 1, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.042, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.017, 0, 5], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.109, 1, 4], 'true,false': [0.0, 0, 0], 'false': [0.109, 4, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.26, 1, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}]]
[{'': [0.1388888888888887, 0.0], 'true': [0.0, 0.0], 'true,true': [0.0, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.09915090450905224, 0.0], 'true': [0.0, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.061916714078618984, 0.0], 'true': [-4.4408920985006264e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-4.4408920985006264e-17, nan]}, {'': [0.03742709756190412, 0.0], 'true': [0.03742709756190412, nan], 'true,true': [4.4408920985006264e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.027344342783207666, 0.02734434278320768], 'true': [0.027344342783207666, nan], 'true,true': [0.027344342783207666, nan]}, {'': [0.02216760748919559, 0.0], 'true': [0.02216760748919559, nan], 'true,true': [0.02216760748919559, nan], 'true,true,true': [0.02216760748919559, nan]}, {'': [0.02020779195980701, 0.0], 'true': [0.00035228511245780634, 0.0], 'true,true': [0.00035228511245780634, nan], 'true,false': [0.0, nan]}, {'': [0.014623197317386663, 0.0], 'true': [0.00027243823453915184, 0.0], 'true,false': [0.0, nan]}, {'': [0.011853476987988085, 0.0117749440659], 'true': [0.011853476987988085, nan]}, {'': [0.011257632111943848, 0.0], 'true': [0.011257632111943848, nan], 'true,true': [0.011257632111943848, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.33099526521728556;  // std dev = 0.474, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.26775580298477797;  // std dev = 0.395, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10352730224548498;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.21475659929165258;  // std dev = 0.371, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09270750485854967;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.24112960219425816;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14964507222107035;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.08521590843893413;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19978701430094759;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.13158318183040554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07881736845555648;  // std dev = 0.025, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1258531761532825;  // std dev = 0.240, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07920277357254955;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.10906561925503029;  // std dev = 0.239, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0725383921488704;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075477
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.601 seconds
Total inference time: 0.804 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.115916
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.31 seconds
Refined model CLL: -0.115916


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075477
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.838 seconds
Total inference time: 0.804 seconds
AUC ROC: 1.0
Total revision time: 1.838
Best scored revision CLL: -0.115916


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:05:16
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075477, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.838, 'Inference time': 0.804, 'parameter_5': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072874, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.597, 'Inference time': 0.914}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.27937153482520866;  // std dev = 0.392, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0513509638543199;  // std dev = 0.124, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2346333786729666;  // std dev = 0.377, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08846206664884307;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22639481773844233;  // std dev = 0.059, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.14589044614257912;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08158368838152567;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18927119448131066;  // std dev = 0.016, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, B) )
%   | | then return -0.1286336624991289;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07567575240209222;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.12987617763753279;  // std dev = 0.082, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.042898419105794214;  // std dev = 0.083, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.12272551385084372;  // std dev = 0.273, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06778773250515939;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069775
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.623 seconds
Total inference time: 0.962 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108877
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.353 seconds
Parameter learned model CLL: -0.108877


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 10], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 10], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.392, 1, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.124, 9, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.377, 1, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.059, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.73e-09, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.016, 0, 10], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.082, 1, 9], 'true,false': [0.0, 0, 0], 'false': [0.083, 9, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.273, 1, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 9, 0]}]]
[{'': [0.0826446280991734, -9.25185853854297e-18], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.058998885327700486, 0.0], 'true': [8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.036843003418682206, -1.5419764230904951e-18], 'true': [-1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.7763568394002506e-16, nan]}, {'': [0.02227066962361243, 3.0839528461809902e-18], 'true': [0.02227066962361243, nan], 'true,true': [1.3322676295501878e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.015381192815554301, 0.015381192815554324], 'true': [0.015381192815554301, nan], 'true,true': [0.015381192815554301, nan]}, {'': [0.012894694021512847, 3.0839528461809902e-18], 'true': [0.012894694021512847, nan], 'true,true': [0.012894694021512847, nan], 'true,true,true': [0.012894694021512847, nan]}, {'': [0.011768329638778692, 1.5419764230904951e-18], 'true': [0.0003454973569327668, 0.0], 'true,true': [0.0003454973569327668, nan], 'true,false': [0.0, nan]}, {'': [0.00859849167551458, 0.0], 'true': [0.0002707501074520613, 0.0], 'true,false': [0.0, nan]}, {'': [0.006656770944763787, 0.006881177737923179], 'true': [0.006656770944763787, nan]}, {'': [0.00675440269681686, 1.5419764230904951e-18], 'true': [0.00675440269681686, nan], 'true,true': [0.00675440269681686, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.33099526521728556;  // std dev = 0.474, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.26053178561396195;  // std dev = 0.434, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.20842329832206566;  // std dev = 0.414, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22668840892911887;  // std dev = 0.054, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.201063332492829;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18947172428638065;  // std dev = 0.047, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.17069281965225447;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.12136892503008029;  // std dev = 0.295, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.14898975892121247;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.10466419656696747;  // std dev = 0.294, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.13106939500821468;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068975
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.665 seconds
Total inference time: 0.802 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108098
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.315 seconds
Refined model CLL: -0.108098


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068975
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.956 seconds
Total inference time: 0.802 seconds
AUC ROC: 1.0
Total revision time: 1.956
Best scored revision CLL: -0.108098


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:05:20
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068975, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.956, 'Inference time': 0.802, 'parameter_10': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069775, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.623, 'Inference time': 0.962}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 1.49e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583098;  // std dev = 1.18e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.2655914307135616;  // std dev = 0.544, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.03757085974267289;  // std dev = 0.141, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2281184478892745;  // std dev = 0.527, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08957956611501619;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2313015904563929;  // std dev = 0.075, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.14337968460485218;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0825375101979051;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19281587880845236;  // std dev = 0.017, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, B) )
%   | | then return -0.126653406633872;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07649884927201545;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.12238825678019091;  // std dev = 0.092, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.03464408255818367;  // std dev = 0.093, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.11909307236095718;  // std dev = 0.379, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0690072910773876;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070794
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.651 seconds
Total inference time: 0.912 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.112937
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.376 seconds
Parameter learned model CLL: -0.112937


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [1.49e-08, 0, 15], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 13, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-08, 13, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 15], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.544, 2, 13], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.141, 13, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.527, 2, 15], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.075, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.017, 0, 15], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.73e-09, 13, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.092, 2, 13], 'true,false': [0.0, 0, 0], 'false': [0.093, 13, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.379, 2, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 13, 0]}]]
[{'': [0.10380622837370206, -1.2810265668751807e-17], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.0741058663458661, 4.270088556250602e-18], 'true': [1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.04627685204491911, 8.540177112501205e-18], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.027973194025506288, -2.135044278125301e-18], 'true': [0.027973194025506288, nan], 'true,true': [1.4802973661668753e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.019748692010094392, 0.019748692010094427], 'true': [0.019748692010094392, nan], 'true,true': [0.019748692010094392, nan]}, {'': [0.016340445552453058, -2.135044278125301e-18], 'true': [0.016340445552453058, nan], 'true,true': [0.016340445552453058, nan], 'true,true,true': [0.016340445552453058, nan]}, {'': [0.014904039616904726, 0.0], 'true': [0.00037523808956804554, 0.0], 'true,true': [0.00037523808956804554, nan], 'true,false': [0.0, nan]}, {'': [0.010852746827527723, 1.0675221390626506e-18], 'true': [0.0002926474624495394, 0.0], 'true,false': [0.0, nan]}, {'': [0.008545526103997454, 0.008717817751902569], 'true': [0.008545526103997454, nan]}, {'': [0.00846666719024687, 4.270088556250602e-18], 'true': [0.00846666719024687, nan], 'true,true': [0.00846666719024687, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.3526248449525416;  // std dev = 0.172, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.3598347048642936;  // std dev = 0.163, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( female(A) )
%   | then return 0.2758086622505463;  // std dev = 0.157, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.2808646179312751;  // std dev = 0.149, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.22015481517812302;  // std dev = 0.149, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.22405273070816964;  // std dev = 0.142, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2332266699577285;  // std dev = 0.006, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.2103323979020742;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1941284134842171;  // std dev = 0.005, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.17751819819731346;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( female(A) )
%   | then return 0.12689277670497728;  // std dev = 0.105, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.12910162863879548;  // std dev = 0.100, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.10997535522377493;  // std dev = 0.105, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.11204953995912834;  // std dev = 0.100, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.06419184008202619;  // std dev = 6.97e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068525
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.781 seconds
Total inference time: 0.772 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.113358
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.321 seconds
Refined model CLL: -0.113358


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070794
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.1290000000000004 seconds
Total inference time: 0.912 seconds
AUC ROC: 1.0
Total revision time: 2.1290000000000004
Best scored revision CLL: -0.112937


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:05:25
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070794, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.1290000000000004, 'Inference time': 0.912, 'parameter_15': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070794, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.651, 'Inference time': 0.912}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.27207618558963076;  // std dev = 0.549, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0028210319828673265;  // std dev = 0.171, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2426372879676759;  // std dev = 0.546, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09245430096703938;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2327702777259398;  // std dev = 0.098, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.14597875943244845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08498359594502627;  // std dev = 5.27e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19389288881370564;  // std dev = 0.019, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then return -0.1287032001406416;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.078603998735578;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.12370820508581337;  // std dev = 0.087, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.014785139946694104;  // std dev = 0.111, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.12865972069341539;  // std dev = 0.397, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07210089952252237;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073615
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.679 seconds
Total inference time: 0.946 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.113775
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.389 seconds
Parameter learned model CLL: -0.113775


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [1.49e-08, 0, 20], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.67e-08, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 20], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.549, 2, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.171, 18, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.546, 2, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 18, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.098, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.27e-09, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.019, 0, 20], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.087, 2, 15], 'true,false': [0.0, 0, 0], 'false': [0.111, 18, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.397, 2, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 18, 0]}]]
[{'': [0.08264462809917356, -3.0839528461809902e-18], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.05899888532770057, 0.0], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.03684300341868208, 1.5419764230904953e-17], 'true': [-2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.6645352591003756e-16, nan]}, {'': [0.022270669623612512, -4.625929269271485e-18], 'true': [0.022270669623612512, nan], 'true,true': [1.3322676295501878e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.017740706823015356, 0.029075978857380586], 'true': [0.017740706823015356, nan], 'true,true': [0.017740706823015356, nan]}, {'': [0.01357373018308476, 3.0839528461809902e-18], 'true': [0.01357373018308476, nan], 'true,true': [0.01357373018308476, nan], 'true,true,true': [0.01357373018308476, nan]}, {'': [0.01229483480494417, 1.5419764230904951e-18], 'true': [0.0004833334537652889, 0.0], 'true,true': [0.0004833334537652889, nan], 'true,false': [0.0, nan]}, {'': [0.00894076518446863, -1.5419764230904951e-18], 'true': [0.00037409292031175266, 0.0], 'true,false': [0.0, nan]}, {'': [0.007594170891959057, 0.01224070571986689], 'true': [0.007594170891959057, nan]}, {'': [0.007158455515881984, 3.0839528461809902e-18], 'true': [0.007158455515881984, nan], 'true,true': [0.007158455515881984, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.3656025927936952;  // std dev = 0.156, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.3742544246877977;  // std dev = 0.143, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.2848967264457383;  // std dev = 0.142, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.2909242422166067;  // std dev = 0.130, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.09269127618926094;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.22716784100726567;  // std dev = 0.135, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.23183649445512625;  // std dev = 0.124, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.08518475138839683;  // std dev = 1.18e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2277126587403857;  // std dev = 0.008, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.21547318319861675;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07877675473109173;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19015839529814973;  // std dev = 0.007, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1812777843941213;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07324622576333704;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13216545622986162;  // std dev = 0.096, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.13484817342454922;  // std dev = 0.088, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.06842697784420274;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11476211550772082;  // std dev = 0.096, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.11731309438371997;  // std dev = 0.088, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.0641918400820262;  // std dev = 6.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068532
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.807 seconds
Total inference time: 0.801 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.109111
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.358 seconds
Refined model CLL: -0.109111


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068532
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.233 seconds
Total inference time: 0.801 seconds
AUC ROC: 1.0
Total revision time: 2.233
Best scored revision CLL: -0.109111


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:05:29
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068532, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.233, 'Inference time': 0.801, 'parameter_20': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073615, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.679, 'Inference time': 0.946}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 2.36e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 1.05e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.2813401211268724;  // std dev = 0.556, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.007159595496279425;  // std dev = 0.167, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2476674877999093;  // std dev = 0.554, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09209091037748988;  // std dev = 5.27e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.23037259120158815;  // std dev = 0.113, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.14776982751468246;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0846749905272399;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.192173074468945;  // std dev = 0.020, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, B) )
%   | | then return -0.13011179853748064;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0783388560431111;  // std dev = 9.13e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.12845626829467838;  // std dev = 0.079, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.01730621331525229;  // std dev = 0.109, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1317033722947608;  // std dev = 0.405, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07170567316854015;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073313
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.711 seconds
Total inference time: 0.927 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.111768
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.391 seconds
Parameter learned model CLL: -0.111768


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [2.36e-08, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-08, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.556, 2, 19], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.167, 23, 6]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.554, 2, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 23, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.113, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.02, 0, 25], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.13e-09, 23, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.079, 2, 19], 'true,false': [0.0, 0, 0], 'false': [0.109, 23, 6]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.405, 2, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}]]
[{'': [0.06858710562414343, 9.654113257610057e-18], 'true': [7.105427357601002e-16, 0.0], 'true,true': [7.105427357601002e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.04896340963409988, -2.413528314402514e-18], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.030576155100552255, 4.827056628805028e-18], 'true': [-2.842170943040401e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.842170943040401e-16, nan]}, {'': [0.01848251731452055, -2.413528314402514e-18], 'true': [0.01848251731452055, nan], 'true,true': [-3.552713678800501e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.014726261702974683, 0.028043395541636915], 'true': [0.014726261702974683, nan], 'true,true': [0.014726261702974683, nan]}, {'': [0.011367168389088553, 1.206764157201257e-18], 'true': [0.011367168389088553, nan], 'true,true': [0.011367168389088553, nan], 'true,true,true': [0.011367168389088553, nan]}, {'': [0.010283209039867926, -2.413528314402514e-18], 'true': [0.0005138888124950292, 0.0], 'true,true': [0.0005138888124950292, nan], 'true,false': [0.0, nan]}, {'': [0.007492885682294345, 3.620292471603771e-18], 'true': [0.00039842473178397064, 0.0], 'true,false': [0.0, nan]}, {'': [0.006294548792933087, 0.011833170192949702], 'true': [0.006294548792933087, nan]}, {'': [0.006088696811388266, 0.0], 'true': [0.006088696811388266, nan], 'true,true': [0.006088696811388266, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360638;  // std dev = 1.05e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.37032177382684206;  // std dev = 0.149, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.3850692145554257;  // std dev = 0.126, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.288187501476636;  // std dev = 0.136, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.2984246790471678;  // std dev = 0.114, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return -0.09269127618926094;  // std dev = 1.18e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2297148783164822;  // std dev = 0.129, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.2376682048880379;  // std dev = 0.109, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return -0.08518475138839682;  // std dev = 1.58e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22427868360346576;  // std dev = 0.014, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.21842940832346586;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07877675473109175;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1876773966496071;  // std dev = 0.012, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.18343254851365992;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07324622576333704;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.134419824757037;  // std dev = 0.092, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.13902740976705397;  // std dev = 0.077, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return -0.06842697784420275;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11678270657662261;  // std dev = 0.092, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.12119598133943607;  // std dev = 0.078, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return -0.0641918400820262;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068613
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.84 seconds
Total inference time: 0.863 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106419
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.346 seconds
Refined model CLL: -0.106419


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068613
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.288 seconds
Total inference time: 0.863 seconds
AUC ROC: 1.0
Total revision time: 2.288
Best scored revision CLL: -0.106419


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:05:34
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068613, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.288, 'Inference time': 0.863, 'parameter_25': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073313, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.711, 'Inference time': 0.927}}


Starting fold 2

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos	 examples: 58
Target test neg examples: 3423

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583099;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.23803122249026756;  // std dev = 0.370, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.010010651519378832;  // std dev = 0.165, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.21549338253865144;  // std dev = 0.365, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09185281015069582;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2401442450121177;  // std dev = 0.042, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.13851442904126202;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08447269268551708;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19915309401669487;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(D, B) )
%   | | then return -0.12279782037546687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07816497883457847;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.10757639303770454;  // std dev = 0.109, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.018459044115957557;  // std dev = 0.109, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1120144323124498;  // std dev = 0.260, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07148037446199772;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073924
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.68 seconds
Total inference time: 0.933 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.120092
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.334 seconds
Parameter learned model CLL: -0.120092


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 5], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [5.27e-09, 0, 5], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.37, 1, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.165, 4, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.365, 1, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.042, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.017, 0, 5], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.109, 1, 4], 'true,false': [0.0, 0, 0], 'false': [0.109, 4, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.26, 1, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}]]
[{'': [0.1388888888888887, 0.0], 'true': [0.0, 0.0], 'true,true': [0.0, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.09915090450905224, 0.0], 'true': [0.0, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.061916714078618984, 0.0], 'true': [-4.4408920985006264e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-4.4408920985006264e-17, nan]}, {'': [0.03742709756190412, 0.0], 'true': [0.03742709756190412, nan], 'true,true': [4.4408920985006264e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.027344342783207666, 0.02734434278320768], 'true': [0.027344342783207666, nan], 'true,true': [0.027344342783207666, nan]}, {'': [0.02216760748919559, 0.0], 'true': [0.02216760748919559, nan], 'true,true': [0.02216760748919559, nan], 'true,true,true': [0.02216760748919559, nan]}, {'': [0.02020779195980701, 0.0], 'true': [0.00035228511245780634, 0.0], 'true,true': [0.00035228511245780634, nan], 'true,false': [0.0, nan]}, {'': [0.014623197317386663, 0.0], 'true': [0.00027243823453915184, 0.0], 'true,false': [0.0, nan]}, {'': [0.011853476987988085, 0.0117749440659], 'true': [0.011853476987988085, nan]}, {'': [0.011257632111943848, 0.0], 'true': [0.011257632111943848, nan], 'true,true': [0.011257632111943848, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.33099526521728556;  // std dev = 0.474, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.26775580298477797;  // std dev = 0.395, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10352730224548498;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.21475659929165258;  // std dev = 0.371, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0927075048585497;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.24112960219425816;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14964507222107035;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.08521590843893415;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19978701430094759;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.13158318183040554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07881736845555648;  // std dev = 0.025, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1258531761532825;  // std dev = 0.240, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07920277357254955;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.10906561925503029;  // std dev = 0.239, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0725383921488704;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075545
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.607 seconds
Total inference time: 0.785 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.115916
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.308 seconds
Refined model CLL: -0.115916


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075545
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.929 seconds
Total inference time: 0.785 seconds
AUC ROC: 1.0
Total revision time: 1.929
Best scored revision CLL: -0.115916


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:05:38
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075545, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.929, 'Inference time': 0.785, 'parameter_5': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073924, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.68, 'Inference time': 0.933}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.27477816678799294;  // std dev = 0.390, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.01752707194391358;  // std dev = 0.159, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.24023232963747318;  // std dev = 0.384, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0912277419218708;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.23086939782169164;  // std dev = 0.069, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.1460157928587641;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08394125967433566;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19252271941128848;  // std dev = 0.019, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, B) )
%   | | then return -0.12873235782965373;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07770794118875995;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.12582097409504123;  // std dev = 0.085, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.02310469560887495;  // std dev = 0.104, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.12693170073731602;  // std dev = 0.279, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0707834154031785;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073663
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.627 seconds
Total inference time: 0.963 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.112346
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.347 seconds
Parameter learned model CLL: -0.112346


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 10], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 10], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.39, 1, 8], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.159, 9, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.384, 1, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.069, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.73e-09, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.019, 0, 10], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.085, 1, 8], 'true,false': [0.0, 0, 0], 'false': [0.104, 9, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.279, 1, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}]]
[{'': [0.0826446280991734, -9.25185853854297e-18], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.058998885327700486, 0.0], 'true': [8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.036843003418682206, -1.5419764230904951e-18], 'true': [-1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.7763568394002506e-16, nan]}, {'': [0.02227066962361243, 3.0839528461809902e-18], 'true': [0.02227066962361243, nan], 'true,true': [1.3322676295501878e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.01687922394025164, 0.02542345919926334], 'true': [0.01687922394025164, nan], 'true,true': [0.01687922394025164, nan]}, {'': [0.013404141278912741, 3.0839528461809902e-18], 'true': [0.013404141278912741, nan], 'true,true': [0.013404141278912741, nan], 'true,true,true': [0.013404141278912741, nan]}, {'': [0.012166579141076201, 1.5419764230904951e-18], 'true': [0.00047028733207077345, 0.0], 'true,true': [0.00047028733207077345, nan], 'true,false': [0.0, nan]}, {'': [0.00886145636397535, -7.709882115452476e-19], 'true': [0.00036534521372890707, 0.0], 'true,false': [0.0, nan]}, {'': [0.00724756269894138, 0.010898876427519407], 'true': [0.00724756269894138, nan]}, {'': [0.007078650648754456, -1.5419764230904951e-18], 'true': [0.007078650648754456, nan], 'true,true': [0.007078650648754456, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.2877361057467734;  // std dev = 0.450, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.22945477343598797;  // std dev = 0.416, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.18468706606260069;  // std dev = 0.397, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22547290364229172;  // std dev = 0.076, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.18576990857777798;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109175;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.188647146115805;  // std dev = 0.067, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.1592921812015265;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.10784349147090716;  // std dev = 0.285, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.14924861006765835;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.0924458583170353;  // std dev = 0.283, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.13127239327471807;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.06419184008202618;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071741
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.691 seconds
Total inference time: 0.789 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106988
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.319 seconds
Refined model CLL: -0.106988


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071741
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.984 seconds
Total inference time: 0.789 seconds
AUC ROC: 1.0
Total revision time: 1.984
Best scored revision CLL: -0.106988


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:05:42
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.071741, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.984, 'Inference time': 0.789, 'parameter_10': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073663, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.627, 'Inference time': 0.963}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 1.49e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583098;  // std dev = 1.18e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.2889116069025027;  // std dev = 0.397, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.01973778383348262;  // std dev = 0.158, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.22936348196543596;  // std dev = 0.514, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09104462787048782;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2309437934002501;  // std dev = 0.089, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.12915650478043525;  // std dev = 0.017, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08378547875605426;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19258713945453673;  // std dev = 0.020, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, B) )
%   | | then return -0.11534524951691258;  // std dev = 0.016, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07757389515754;  // std dev = 6.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.13440350557618366;  // std dev = 0.073, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.025126835790136703;  // std dev = 0.104, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.12094376692910945;  // std dev = 0.364, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07053651305387763;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073677
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.646 seconds
Total inference time: 0.96 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.112221
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.387 seconds
Parameter learned model CLL: -0.112221


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [1.49e-08, 0, 15], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 13, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-08, 13, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 15], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.397, 1, 12], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.158, 14, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.514, 2, 15], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.089, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.017, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.73e-09, 13, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.02, 0, 15], 'true,false,true': [0.016, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [6.45e-09, 13, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.073, 1, 12], 'true,false': [0.0, 0, 0], 'false': [0.104, 14, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.364, 2, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 13, 0]}]]
[{'': [0.10380622837370206, -1.2810265668751807e-17], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.0741058663458661, 4.270088556250602e-18], 'true': [1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.04627685204491911, 8.540177112501205e-18], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.027973194025506288, -2.135044278125301e-18], 'true': [0.027973194025506288, nan], 'true,true': [1.4802973661668753e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.012135063365328803, 0.024836989552221495], 'true': [0.012135063365328803, nan], 'true,true': [0.012135063365328803, nan]}, {'': [0.015552444843767872, -1.0675221390626506e-18], 'true': [0.015552444843767872, nan], 'true,true': [0.015552444843767872, nan], 'true,true,true': [0.015552444843767872, nan]}, {'': [0.013960775234444004, 1.0675221390626506e-18], 'true': [0.0005269035885410389, 0.00029814368181759615], 'true,true': [0.0005269035885410389, nan], 'true,false': [0.00029814368181759615, nan]}, {'': [0.010233471809209523, 3.2025664171879517e-18], 'true': [0.0004096606332816721, 0.0002452707660237346], 'true,false': [0.0002452707660237346, nan]}, {'': [0.005326833122250764, 0.010918116964957578], 'true': [0.005326833122250764, nan]}, {'': [0.007813705792327649, -3.2025664171879517e-18], 'true': [0.007813705792327649, nan], 'true,true': [0.007813705792327649, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.3433550250660033;  // std dev = 0.182, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.3656025927936952;  // std dev = 0.156, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( female(A) )
%   | then return 0.2692817601378457;  // std dev = 0.166, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.2848967264457383;  // std dev = 0.142, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.21513491704663337;  // std dev = 0.158, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.22716784100726567;  // std dev = 0.135, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.23316265716508894;  // std dev = 0.017, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.2097037635044537;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07877675473109173;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19408570273781436;  // std dev = 0.015, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.1770598854371631;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( female(A) )
%   | then return 0.12407071441559585;  // std dev = 0.112, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.13088080828779972;  // std dev = 0.096, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.10734355953320958;  // std dev = 0.112, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.1137282724093061;  // std dev = 0.096, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.06419184008202619;  // std dev = 6.97e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070724
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.889 seconds
Total inference time: 0.779 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.113301
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.34 seconds
Refined model CLL: -0.113301


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073677
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.262 seconds
Total inference time: 0.96 seconds
AUC ROC: 1.0
Total revision time: 2.262
Best scored revision CLL: -0.112221


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:05:47
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073677, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.262, 'Inference time': 0.96, 'parameter_15': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073677, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.646, 'Inference time': 0.96}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1.39e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.24775835480437133;  // std dev = 0.650, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.015153016858411417;  // std dev = 0.182, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.21805448943205394;  // std dev = 0.726, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09397352836782026;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2416567735090278;  // std dev = 0.089, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.13355409831804504;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08627191452538187;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20024241027918582;  // std dev = 0.018, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then return -0.11885573062943117;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07970948299933907;  // std dev = 3.73e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.1119546486787969;  // std dev = 0.104, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.00492445510570937;  // std dev = 0.118, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.11425798137143721;  // std dev = 0.514, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07371779145637623;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076022
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.772 seconds
Total inference time: 1.002 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.120986
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.388 seconds
Parameter learned model CLL: -0.120986


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 16, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [1.49e-08, 0, 20], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 16, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.39e-08, 16, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 20], 'true,true,false,true': [0.0, 4, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 16, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.65, 3, 14], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.182, 17, 6]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.726, 4, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 16, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.089, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.011, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 16, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.018, 0, 20], 'true,false,true': [0.01, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.73e-09, 16, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.104, 3, 14], 'true,false': [0.0, 0, 0], 'false': [0.118, 17, 6]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.514, 4, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 16, 0]}]]
[{'': [0.13888888888888906, -6.938893903907228e-18], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.09915090450905217, 3.469446951953614e-18], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.06191671407861865, 1.214306433183765e-17], 'true': [-2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.6645352591003756e-16, nan]}, {'': [0.03742709756190423, -6.938893903907228e-18], 'true': [0.03742709756190423, nan], 'true,true': [1.3322676295501878e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.024836989552221488, 0.03295277603836466], 'true': [0.024836989552221488, nan], 'true,true': [0.024836989552221488, nan]}, {'': [0.021982955872662274, -1.734723475976807e-18], 'true': [0.021982955872662274, nan], 'true,true': [0.021982955872662274, nan], 'true,true,true': [0.021982955872662274, nan]}, {'': [0.019906136423177925, 0.0], 'true': [0.0003986657743645816, 0.00012415771955135574], 'true,true': [0.0003986657743645816, nan], 'true,false': [0.00012415771955135574, nan]}, {'': [0.014414637710578479, 8.673617379884035e-19], 'true': [0.00030669232220254525, 0.00010134504301190055], 'true,false': [0.00010134504301190055, nan]}, {'': [0.01077315149902205, 0.013947740919577135], 'true': [0.01077315149902205, nan]}, {'': [0.011022941958420227, -3.469446951953614e-18], 'true': [0.011022941958420227, nan], 'true,true': [0.011022941958420227, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360635;  // std dev = 1.39e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415830986;  // std dev = 5.16e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601496;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926097;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948945;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839685;  // std dev = 1.05e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109172;  // std dev = 3.73e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527744;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333704;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06842697784420272;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202619;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.731 seconds
Total inference time: 0.847 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.336 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.227 seconds
Total inference time: 0.847 seconds
AUC ROC: 1.0
Total revision time: 2.227
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:05:51
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063422, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.227, 'Inference time': 0.847, 'parameter_20': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076022, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.772, 'Inference time': 1.002}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 2.36e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1.29e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.2616542581102338;  // std dev = 0.663, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.007095684619217425;  // std dev = 0.177, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.22715292976893137;  // std dev = 0.739, 29.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09328974760406288;  // std dev = 1.29e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.23782648580817486;  // std dev = 0.106, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.13567391844310364;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08569243472331116;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19751477396585088;  // std dev = 0.019, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, B) )
%   | | then return -0.12055305524057991;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07921251886869422;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.11894849515061405;  // std dev = 0.095, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.00946330922123476;  // std dev = 0.115, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.11965108292789296;  // std dev = 0.526, 29.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07298128356690878;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075515
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.724 seconds
Total inference time: 0.978 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.117871
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.447 seconds
Parameter learned model CLL: -0.117871


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [2.36e-08, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-08, 21, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 21, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.29e-08, 21, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false,true': [0.0, 4, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 21, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.663, 3, 18], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.177, 22, 7]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.739, 4, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.29e-08, 21, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.106, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.012, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 21, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.019, 0, 25], 'true,false,true': [0.011, 4, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 21, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.095, 3, 18], 'true,false': [0.0, 0, 0], 'false': [0.115, 22, 7]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.526, 4, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 21, 0]}]]
[{'': [0.11890606420927562, 5.28677630773884e-18], 'true': [7.105427357601002e-16, 0.0], 'true,true': [7.105427357601002e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.08488543548931946, -2.64338815386942e-18], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.053008364014988554, 7.93016446160826e-18], 'true': [-2.842170943040401e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.842170943040401e-16, nan]}, {'': [0.03204222383421043, -2.64338815386942e-18], 'true': [0.03204222383421043, nan], 'true,true': [-3.552713678800501e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.020926792946332425, 0.03129480372037742], 'true': [0.020926792946332425, nan], 'true,true': [0.020926792946332425, nan]}, {'': [0.01881259650620233, 7.93016446160826e-18], 'true': [0.01881259650620233, nan], 'true,true': [0.01881259650620233, nan], 'true,true,true': [0.01881259650620233, nan]}, {'': [0.016998957207063407, -3.96508223080413e-18], 'true': [0.0004528304781432624, 0.00015142859396218358], 'true,true': [0.0004528304781432624, nan], 'true,false': [0.00015142859396218358, nan]}, {'': [0.012347481770418096, -1.057355261547768e-17], 'true': [0.000349263244775182, 0.00012329240388362153], 'true,false': [0.00012329240388362153, nan]}, {'': [0.009059009298503264, 0.013265572222189633], 'true': [0.009059009298503264, nan]}, {'': [0.009539164910651661, -3.3042351923367752e-18], 'true': [0.009539164910651661, nan], 'true,true': [0.009539164910651661, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360636;  // std dev = 1.29e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014955;  // std dev = 2.11e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926103;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948956;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839683;  // std dev = 1.49e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253554;  // std dev = 1.49e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109177;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527747;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333704;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06842697784420275;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0641918400820262;  // std dev = 5.27e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.838 seconds
Total inference time: 0.836 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.347 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.356 seconds
Total inference time: 0.836 seconds
AUC ROC: 1.0
Total revision time: 2.356
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:05:56
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063422, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.356, 'Inference time': 0.836, 'parameter_25': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075515, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.724, 'Inference time': 0.978}}


Starting fold 3

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos	 examples: 178
Target test neg examples: 3543

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583099;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.2518113266019146;  // std dev = 0.377, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2043805033631121;  // std dev = 0.351, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.23028649709148005;  // std dev = 7.45e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.13883301112013177;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19201334068750064;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(D, B) )
%   | | then return -0.12305103690939956;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.11824408812945152;  // std dev = 0.102, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1032410315600457;  // std dev = 0.247, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076766
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.613 seconds
Total inference time: 1.046 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.112319
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.325 seconds
Parameter learned model CLL: -0.112319


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 5], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [5.27e-09, 0, 5], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.377, 1, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.351, 1, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [7.45e-09, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 5], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.102, 1, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.247, 1, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}]]
[{'': [0.1388888888888887, 0.0], 'true': [0.0, 0.0], 'true,true': [0.0, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.09915090450905224, 0.0], 'true': [0.0, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.061916714078618984, 0.0], 'true': [-4.4408920985006264e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-4.4408920985006264e-17, nan]}, {'': [0.03742709756190412, 0.0], 'true': [0.03742709756190412, nan], 'true,true': [4.4408920985006264e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.02373640866597888, 0.0], 'true': [0.02373640866597888, nan], 'true,true': [0.02373640866597888, nan]}, {'': [0.02054806366231014, 0.0], 'true': [0.02054806366231014, nan], 'true,true': [0.02054806366231014, nan], 'true,true,true': [0.02054806366231014, nan]}, {'': [0.018923501575330865, 0.0], 'true': [1.1102230246251566e-17, 0.0], 'true,true': [1.1102230246251566e-17, nan], 'true,false': [0.0, nan]}, {'': [0.013786883615350293, 0.0], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}, {'': [0.010453478807193455, 0.0], 'true': [0.010453478807193455, nan]}, {'': [0.010194806214885046, 0.0], 'true': [0.010194806214885046, nan], 'true,true': [0.010194806214885046, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.33099526521728556;  // std dev = 0.474, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.26053178561396195;  // std dev = 0.434, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20842329832206566;  // std dev = 0.414, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.24361910222570216;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.201063332492829;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20156233108362387;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.17069281965225447;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.11790677519082632;  // std dev = 0.291, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.10192903434099217;  // std dev = 0.291, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.084118
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.511 seconds
Total inference time: 0.803 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.121145
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.302 seconds
Refined model CLL: -0.121145


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076766
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.751 seconds
Total inference time: 1.046 seconds
AUC ROC: 1.0
Total revision time: 1.751
Best scored revision CLL: -0.112319


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:06:00
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076766, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.751, 'Inference time': 1.046, 'parameter_5': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076766, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.613, 'Inference time': 1.046}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.283129745037476;  // std dev = 0.394, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.22767279063561868;  // std dev = 0.364, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22074934207369767;  // std dev = 1.05e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.1454918616264412;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18511733806448838;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, B) )
%   | | then return -0.1283197206895984;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.13394349682930595;  // std dev = 0.079, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1171094302962307;  // std dev = 0.258, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077467
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.62 seconds
Total inference time: 0.968 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.10427
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.349 seconds
Parameter learned model CLL: -0.10427


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 10], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 10], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.394, 1, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.364, 1, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [1.05e-08, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [2.63e-09, 0, 10], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.63e-09, 9, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.079, 1, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.258, 1, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 9, 0]}]]
[{'': [0.0826446280991734, -9.25185853854297e-18], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.058998885327700486, 0.0], 'true': [8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.036843003418682206, -1.5419764230904951e-18], 'true': [-1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.7763568394002506e-16, nan]}, {'': [0.02227066962361243, 3.0839528461809902e-18], 'true': [0.02227066962361243, nan], 'true,true': [1.3322676295501878e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.014124143999590711, 0.0], 'true': [0.014124143999590711, nan], 'true,true': [0.014124143999590711, nan]}, {'': [0.012046285211492253, 1.5419764230904951e-18], 'true': [0.012046285211492253, nan], 'true,true': [0.012046285211492253, nan], 'true,true,true': [0.012046285211492253, nan]}, {'': [0.011085340437002211, 0.0], 'true': [1.1102230246251566e-17, 0.0], 'true,true': [1.1102230246251566e-17, nan], 'true,false': [0.0, nan]}, {'': [0.008119238826480413, 7.709882115452476e-19], 'true': [5.551115123125783e-18, 0.0], 'true,false': [0.0, nan]}, {'': [0.006179275076244359, 0.0], 'true': [0.006179275076244359, nan]}, {'': [0.006054528122512549, 7.709882115452476e-19], 'true': [0.006054528122512549, nan], 'true,true': [0.006054528122512549, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.37032177382684206;  // std dev = 0.149, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.288187501476636;  // std dev = 0.136, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2297148783164822;  // std dev = 0.129, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22772306651441815;  // std dev = 1.49e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.21561798225690687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19016537001653297;  // std dev = 1.05e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.18138294105261676;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.13362599263205435;  // std dev = 0.092, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.11614867207133117;  // std dev = 0.092, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.085523
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.675 seconds
Total inference time: 0.818 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.109121
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.313 seconds
Refined model CLL: -0.109121


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077467
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.957 seconds
Total inference time: 0.968 seconds
AUC ROC: 1.0
Total revision time: 1.957
Best scored revision CLL: -0.10427


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:06:04
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.077467, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.957, 'Inference time': 0.968, 'parameter_10': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.077467, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.62, 'Inference time': 0.968}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 1.49e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583098;  // std dev = 1.18e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.29315163893685564;  // std dev = 0.399, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06513106796596693;  // std dev = 0.103, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2413024294337214;  // std dev = 0.381, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08735717026912301;  // std dev = 5.27e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22116719761359205;  // std dev = 0.065, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.1484570380750929;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0806389859664046;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18547196012019168;  // std dev = 0.015, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, B) )
%   | | then return -0.13065141217565107;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07485928941064626;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.13742743623034628;  // std dev = 0.068, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05127379799432112;  // std dev = 0.069, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1264216338586902;  // std dev = 0.277, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06657890034423565;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079697
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.752 seconds
Total inference time: 1.007 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104481
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.356 seconds
Parameter learned model CLL: -0.104481


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [1.49e-08, 0, 15], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.18e-08, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 15], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.399, 1, 14], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.103, 14, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.381, 1, 15], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 14, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.065, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.015, 0, 15], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.73e-09, 14, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.068, 1, 14], 'true,false': [0.0, 0, 0], 'false': [0.069, 14, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.277, 1, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}]]
[{'': [0.05859374999999978, -1.1895246692412391e-17], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.041829287839756535, 3.96508223080413e-18], 'true': [1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.02612111375191717, 9.912705577010326e-18], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.015789556783928405, -3.96508223080413e-18], 'true': [0.015789556783928405, nan], 'true,true': [1.4802973661668753e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.010633911082358515, 0.010633911082358545], 'true': [0.010633911082358515, nan], 'true,true': [0.010633911082358515, nan]}, {'': [0.009049719805116437, 1.982541115402065e-18], 'true': [0.009049719805116437, nan], 'true,true': [0.009049719805116437, nan], 'true,true,true': [0.009049719805116437, nan]}, {'': [0.008266217053873787, -1.982541115402065e-18], 'true': [0.0002784184652709243, 0.0], 'true,true': [0.0002784184652709243, nan], 'true,false': [0.0, nan]}, {'': [0.0060611180025581905, 9.912705577010326e-19], 'true': [0.00021931837908106822, 0.0], 'true,false': [0.0, nan]}, {'': [0.004606165468711276, 0.004824326962044221], 'true': [0.004606165468711276, nan]}, {'': [0.00479492055976892, -4.956352788505163e-19], 'true': [0.00479492055976892, nan], 'true,true': [0.00479492055976892, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3742544246877977;  // std dev = 0.143, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2909242422166067;  // std dev = 0.130, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.23183649445512625;  // std dev = 0.124, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22180126330886457;  // std dev = 0.028, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.21710849455068426;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18589037105117653;  // std dev = 0.025, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.1824694642521657;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.1500666899983517;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.1361466557744301;  // std dev = 0.088, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13191352027083403;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.11833800852211097;  // std dev = 0.089, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.06419184008202619;  // std dev = 6.97e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096357
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.763 seconds
Total inference time: 0.796 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104414
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.336 seconds
Refined model CLL: -0.104414


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096357
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.207 seconds
Total inference time: 0.796 seconds
AUC ROC: 1.0
Total revision time: 2.207
Best scored revision CLL: -0.104414


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:06:09
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.096357, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.207, 'Inference time': 0.796, 'parameter_15': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079697, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.752, 'Inference time': 1.007}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.3000416909926791;  // std dev = 0.403, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07202112002179042;  // std dev = 0.090, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.24469990478951767;  // std dev = 0.382, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08680941421083867;  // std dev = 1.05e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2184337190370786;  // std dev = 0.068, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.1497622709174996;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08017004018702975;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18347587972199705;  // std dev = 0.013, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then return -0.1316750248029749;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07445354264791201;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.14122872809071751;  // std dev = 0.059, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0555099572368654;  // std dev = 0.061, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.12829379290788967;  // std dev = 0.279, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06597837924161486;  // std dev = 3.73e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079363
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.694 seconds
Total inference time: 1.013 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102154
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.378 seconds
Parameter learned model CLL: -0.102154


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [1.49e-08, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.67e-08, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 20], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.403, 1, 19], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.09, 19, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.382, 1, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.05e-08, 19, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.068, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.013, 0, 20], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.059, 1, 19], 'true,false': [0.0, 0, 0], 'false': [0.061, 19, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.279, 1, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 19, 0]}]]
[{'': [0.04535147392290242, 0.0], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.03237580555397633, 0.0], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.02021770255628346, 1.460819769243627e-17], 'true': [-2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.6645352591003756e-16, nan]}, {'': [0.012221093081438202, -5.843279076974508e-18], 'true': [0.012221093081438202, nan], 'true,true': [1.3322676295501878e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.008117851763764816, 0.008117851763764783], 'true': [0.008117851763764816, nan], 'true,true': [0.008117851763764816, nan]}, {'': [0.006965505597868783, 5.843279076974508e-18], 'true': [0.006965505597868783, nan], 'true,true': [0.006965505597868783, nan], 'true,true,true': [0.006965505597868783, nan]}, {'': [0.006365750704206287, -3.652049423109067e-18], 'true': [0.0002284055242436467, 0.0], 'true,true': [0.0002284055242436467, nan], 'true,false': [0.0, nan]}, {'': [0.0046761362218956815, -4.382459307730881e-18], 'true': [0.00018041481285199223, 0.0], 'true,false': [0.0, nan]}, {'': [0.003518718881453728, 0.00370952490951111], 'true': [0.003518718881453728, nan]}, {'': [0.00371256836269202, 7.304098846218135e-19], 'true': [0.00371256836269202, nan], 'true,true': [0.00371256836269202, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.3742544246877977;  // std dev = 0.143, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926093;  // std dev = 1.18e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2909242422166067;  // std dev = 0.130, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.23183649445512625;  // std dev = 0.124, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.08518475138839683;  // std dev = 1.29e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21879037638978233;  // std dev = 0.037, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.21710849455068426;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109179;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18370574355078007;  // std dev = 0.032, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1824694642521657;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420274;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.1507305660947832;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.13679684353669463;  // std dev = 0.089, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13243331494089794;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.11884773586984528;  // std dev = 0.089, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.0641918400820262;  // std dev = 6.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096425
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.95 seconds
Total inference time: 0.842 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.10199
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.351 seconds
Refined model CLL: -0.10199


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096425
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.373 seconds
Total inference time: 0.842 seconds
AUC ROC: 1.0
Total revision time: 2.373
Best scored revision CLL: -0.10199


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:06:14
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.096425, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.373, 'Inference time': 0.842, 'parameter_20': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079363, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.694, 'Inference time': 1.013}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 2.36e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 7.45e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.3041757222261731;  // std dev = 0.405, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07615515125528452;  // std dev = 0.081, 25.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.24675983051311973;  // std dev = 0.384, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08648225422316223;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.21675548719112633;  // std dev = 0.069, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.15055268149692463;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07988975911820126;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18224711591034917;  // std dev = 0.012, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, B) )
%   | | then return -0.13229407910583973;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07421088897757257;  // std dev = 1.18e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.14351813678131214;  // std dev = 0.053, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05806786935878834;  // std dev = 0.055, 25.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.12942482752931378;  // std dev = 0.281, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06561928545982926;  // std dev = 9.86e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079166
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.698 seconds
Total inference time: 0.982 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100716
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.401 seconds
Parameter learned model CLL: -0.100716


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [2.36e-08, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.405, 1, 24], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.081, 24, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.384, 1, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.069, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.012, 0, 25], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.18e-08, 24, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.053, 1, 24], 'true,false': [0.0, 0, 0], 'false': [0.055, 24, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.281, 1, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.86e-09, 24, 0]}]]
[{'': [0.03698224852071082, 9.25185853854297e-18], 'true': [7.105427357601002e-16, 0.0], 'true,true': [7.105427357601002e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.026401128419570055, -4.625929269271485e-18], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.016486699015016572, 2.3129646346357427e-18], 'true': [-2.842170943040401e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.842170943040401e-16, nan]}, {'': [0.009965795208791005, -2.3129646346357427e-18], 'true': [0.009965795208791005, nan], 'true,true': [-3.552713678800501e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.006562642267969867, 0.006562642267969844], 'true': [0.006562642267969867, nan], 'true,true': [0.006562642267969867, nan]}, {'': [0.005660188735954479, -4.625929269271485e-18], 'true': [0.005660188735954479, nan], 'true,true': [0.005660188735954479, nan], 'true,true,true': [0.005660188735954479, nan]}, {'': [0.005174601337167927, -5.782411586589357e-18], 'true': [0.00019253574507888338, 0.0], 'true,true': [0.00019253574507888338, nan], 'true,false': [0.0, nan]}, {'': [0.0038053611623425185, 5.782411586589357e-18], 'true': [0.0001523385564434365, 0.0], 'true,false': [0.0, nan]}, {'': [0.0028460024063070087, 0.003012081609553465], 'true': [0.0028460024063070087, nan]}, {'': [0.0030277967071002066, 4.04768811061255e-18], 'true': [0.0030277967071002066, nan], 'true,true': [0.0030277967071002066, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 7.45e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.3829062565819001;  // std dev = 0.129, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.29692755606319143;  // std dev = 0.117, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else return -0.09269127618926094;  // std dev = 1.05e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2551722425694894;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.23650206588525452;  // std dev = 0.112, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else return -0.08518475138839682;  // std dev = 1.67e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2170709511980816;  // std dev = 0.032, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.2204104276954186;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109175;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18244962719822286;  // std dev = 0.028, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.18487122115524127;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.15111186372260677;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.13993963770556403;  // std dev = 0.080, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else return -0.06842697784420275;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13273166422642202;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.12179391798818559;  // std dev = 0.080, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else return -0.0641918400820262;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.092451
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.836 seconds
Total inference time: 0.84 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100622
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.344 seconds
Refined model CLL: -0.100622


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.092451
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.279 seconds
Total inference time: 0.84 seconds
AUC ROC: 1.0
Total revision time: 2.279
Best scored revision CLL: -0.100622


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:06:18
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.092451, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.279, 'Inference time': 0.84, 'parameter_25': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079166, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.698, 'Inference time': 0.982}}


Starting fold 4

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos	 examples: 45
Target test neg examples: 1891

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583099;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079775
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.562 seconds
Total inference time: 0.718 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.33 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [5.27e-09, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [-4.4408920985006264e-17, nan], 'true,true': [-4.4408920985006264e-17, nan]}, {'': [4.4408920985006264e-17, 0.0], 'true': [4.4408920985006264e-17, nan], 'true,true': [4.4408920985006264e-17, nan]}, {'': [-2.2204460492503132e-17, 0.0], 'true': [-2.2204460492503132e-17, nan], 'true,true': [-2.2204460492503132e-17, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}, {'': [-5.551115123125783e-18, -1.3877787807814458e-18], 'true': [-5.551115123125783e-18, nan], 'true,true': [-5.551115123125783e-18, nan]}, {'': [0.0, -6.938893903907229e-19], 'true': [0.0, nan]}, {'': [0.0, 6.938893903907229e-19], 'true': [0.0, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'true,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.969593
   AUC PR    = 0.28125
   CLL	      = -0.186484
   Precision = 0.28125 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.439024


Total learning time: 0.474 seconds
Total inference time: 0.612 seconds
AUC ROC: 0.969593


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.35 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079775
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.7160000000000002 seconds
Total inference time: 0.718 seconds
AUC ROC: 1.0
Total revision time: 1.7160000000000002
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:06:22
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079775, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.7160000000000002, 'Inference time': 0.718, 'parameter_5': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079775, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.562, 'Inference time': 0.718}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109173;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527736;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.15274385809367094;  // std dev = 1.86e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06419184008202619;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079775
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.667 seconds
Total inference time: 0.759 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.34 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [1.18e-08, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 10, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [1.83e-08, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 10, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [2.63e-09, 0, 10], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 10, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [1.86e-09, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 10, 0]}]]
[{'': [-8.881784197001253e-17, -1.1102230246251566e-17], 'true': [-8.881784197001253e-17, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [8.881784197001253e-17, 2.7755575615628915e-18], 'true': [8.881784197001253e-17, nan]}, {'': [-1.7763568394002506e-16, 0.0], 'true': [-1.7763568394002506e-16, nan], 'true,true': [-1.7763568394002506e-16, nan]}, {'': [1.3322676295501878e-16, 1.3877787807814458e-18], 'true': [1.3322676295501878e-16, nan], 'true,true': [1.3322676295501878e-16, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [-4.4408920985006264e-17, nan], 'true,true': [-4.4408920985006264e-17, nan]}, {'': [3.3306690738754695e-17, 1.3877787807814458e-18], 'true': [3.3306690738754695e-17, nan], 'true,true': [3.3306690738754695e-17, nan], 'true,true,true': [3.3306690738754695e-17, nan]}, {'': [-2.7755575615628914e-17, -6.938893903907229e-19], 'true': [-2.7755575615628914e-17, nan], 'true,true': [-2.7755575615628914e-17, nan]}, {'': [5.551115123125783e-18, 6.938893903907229e-19], 'true': [5.551115123125783e-18, nan]}, {'': [0.0, 6.938893903907229e-19], 'true': [0.0, nan]}, {'': [0.0, 1.3877787807814458e-18], 'true': [0.0, nan], 'true,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09269127618926096;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07877675473109173;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527736;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.15274385809367094;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06419184008202619;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.969593
   AUC PR    = 0.28125
   CLL	      = -0.186484
   Precision = 0.28125 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.439024


Total learning time: 0.488 seconds
Total inference time: 0.612 seconds
AUC ROC: 0.969593


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.305 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079775
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.8 seconds
Total inference time: 0.759 seconds
AUC ROC: 1.0
Total revision time: 1.8
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:06:25
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079775, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.8, 'Inference time': 0.759, 'parameter_10': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079775, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.667, 'Inference time': 0.759}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 1.49e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583098;  // std dev = 1.18e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.044055614618742064;  // std dev = 0.133, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2652005372402781;  // std dev = 0.099, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08905210716139503;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2169605380750909;  // std dev = 0.087, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08208751399730621;  // std dev = 6.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18245380064358738;  // std dev = 0.020, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07611068262659135;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.14984349270535008;  // std dev = 4.17e-09, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.038766458691796415;  // std dev = 0.088, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.14201084034376069;  // std dev = 0.101, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0684159273100364;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083613
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.629 seconds
Total inference time: 0.749 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.1005
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.367 seconds
Parameter learned model CLL: -0.1005


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [1.49e-08, 0, 15], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.39e-08, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [1.18e-08, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 13], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.133, 15, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.099, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 15, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.087, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.45e-09, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.02, 0, 15], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [4.17e-09, 0, 13], 'true,false': [0.0, 0, 0], 'false': [0.088, 15, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.101, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}]]
[{'': [-2.3684757858670006e-16, -1.4802973661668754e-17], 'true': [-2.3684757858670006e-16, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [1.7763568394002506e-16, 3.7007434154171884e-18], 'true': [1.7763568394002506e-16, nan]}, {'': [-2.3684757858670006e-16, 1.295260195396016e-17], 'true': [-2.3684757858670006e-16, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [1.4802973661668753e-16, -5.551115123125783e-18], 'true': [1.4802973661668753e-16, nan], 'true,true': [1.4802973661668753e-16, nan]}, {'': [-5.124106267500723e-17, 0.017740706823015352], 'true': [-5.124106267500723e-17, nan], 'true,true': [-5.124106267500723e-17, nan]}, {'': [0.0006536835110271255, 3.7007434154171884e-18], 'true': [0.0006536835110271255, nan], 'true,true': [0.0006536835110271255, nan], 'true,true,true': [0.0006536835110271255, nan]}, {'': [0.000510278338158258, 2.7755575615628915e-18], 'true': [0.000510278338158258, nan], 'true,true': [0.000510278338158258, nan]}, {'': [0.0004010050768487742, -1.8503717077085942e-18], 'true': [0.0004010050768487742, nan]}, {'': [1.708035422500241e-17, 0.007757946348196123], 'true': [1.708035422500241e-17, nan]}, {'': [0.0006858641133976273, 0.0], 'true': [0.0006858641133976273, nan], 'true,true': [0.0006858641133976273, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583098;  // std dev = 4.71e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3207118471601497;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( actor(A), actor(B) )
%   | then return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.11401028548544435;  // std dev = 0.413, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.26066892836343086;  // std dev = 0.054, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08752478778989253;  // std dev = 0.023, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.21367515868247924;  // std dev = 0.048, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.0807852033857483;  // std dev = 0.022, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1799913022659111;  // std dev = 0.042, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07498799069063437;  // std dev = 0.020, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.1511577197252425;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06803977543921377;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.048627701997120056;  // std dev = 0.262, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13807540264086757;  // std dev = 0.052, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06682035704953604;  // std dev = 0.029, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.969593
   AUC PR    = 0.28125
   CLL	      = -0.188816
   Precision = 0.28125 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.439024


Total learning time: 0.597 seconds
Total inference time: 0.623 seconds
AUC ROC: 0.969593


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097803
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.329 seconds
Refined model CLL: -0.097803


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.969593
   AUC PR    = 0.28125
   CLL	      = -0.188816
   Precision = 0.28125 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.439024


Total learning time: 1.922 seconds
Total inference time: 0.623 seconds
AUC ROC: 0.969593
Total revision time: 1.922
Best scored revision CLL: -0.097803


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:06:29
{'AUC ROC': 0.969593, 'AUC PR': 0.28125, 'CLL': -0.188816, 'Precision': [0.28125, 0.5], 'Recall': 1.0, 'F1': 0.439024, 'Learning time': 1.922, 'Inference time': 0.623, 'parameter_15': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.083613, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.629, 'Inference time': 0.749}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.2989537880364964;  // std dev = 0.402, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05331955015598376;  // std dev = 0.121, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.24817749584104046;  // std dev = 0.391, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08830345523156219;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22108907061187452;  // std dev = 0.088, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.15006681309011577;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0814481736286097;  // std dev = 5.27e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18543445121690777;  // std dev = 0.017, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then return -0.13191361668798876;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07555870889111634;  // std dev = 8.33e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.13963623293864985;  // std dev = 0.061, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.044160664071421774;  // std dev = 0.081, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.13103783702146496;  // std dev = 0.289, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06760976788499143;  // std dev = 6.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072734
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.679 seconds
Total inference time: 0.756 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104297
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.377 seconds
Parameter learned model CLL: -0.104297


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [1.49e-08, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.67e-08, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 20], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.402, 1, 18], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.121, 19, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.391, 1, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.088, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.27e-09, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.017, 0, 20], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.33e-09, 19, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.061, 1, 18], 'true,false': [0.0, 0, 0], 'false': [0.081, 19, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.289, 1, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.45e-09, 19, 0]}]]
[{'': [0.04535147392290242, 0.0], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.03237580555397633, 0.0], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.02021770255628346, 1.460819769243627e-17], 'true': [-2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.6645352591003756e-16, nan]}, {'': [0.012221093081438202, -5.843279076974508e-18], 'true': [0.012221093081438202, nan], 'true,true': [1.3322676295501878e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.008521436462911007, 0.01472626170297465], 'true': [0.008521436462911007, nan], 'true,true': [0.008521436462911007, nan]}, {'': [0.007275625595043815, -2.921639538487254e-18], 'true': [0.007275625595043815, nan], 'true,true': [0.007275625595043815, nan], 'true,true,true': [0.007275625595043815, nan]}, {'': [0.006612462352097506, 1.460819769243627e-18], 'true': [0.00038324308843545873, 0.0], 'true,true': [0.00038324308843545873, nan], 'true,false': [0.0, nan]}, {'': [0.004854168167574367, 3.652049423109067e-18], 'true': [0.0003011719948592395, 0.0], 'true,false': [0.0, nan]}, {'': [0.003674059109670578, 0.006564388191843772], 'true': [0.003674059109670578, nan]}, {'': [0.003979074514517032, 2.1912296538654404e-18], 'true': [0.003979074514517032, nan], 'true,true': [0.003979074514517032, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.38043430461215655;  // std dev = 0.134, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.2952147552984745;  // std dev = 0.121, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.09269127618926096;  // std dev = 7.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.23516924660370822;  // std dev = 0.116, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.08518475138839683;  // std dev = 1.29e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21886830164013574;  // std dev = 0.030, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.21946380782085897;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109173;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1837584466396722;  // std dev = 0.026, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1841833987298778;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13875647247653294;  // std dev = 0.082, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.15071384501131901;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.06842697784420274;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.12072637141945848;  // std dev = 0.083, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.13242022814520693;  // std dev = 3.73e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.0641918400820262;  // std dev = 6.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074135
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.775 seconds
Total inference time: 0.681 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102072
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.353 seconds
Refined model CLL: -0.102072


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074135
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.184 seconds
Total inference time: 0.681 seconds
AUC ROC: 1.0
Total revision time: 2.184
Best scored revision CLL: -0.102072


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:06:33
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.074135, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.184, 'Inference time': 0.681, 'parameter_20': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072734, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.679, 'Inference time': 0.756}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 2.36e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1.29e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.30348671702059077;  // std dev = 0.405, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06089103593161402;  // std dev = 0.110, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.24966358048559262;  // std dev = 0.392, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08769580258834829;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.21895059384995708;  // std dev = 0.092, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.1508361368727423;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08092869508596001;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18387140589902626;  // std dev = 0.016, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, B) )
%   | | then return -0.13251593384507418;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07510980278669824;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.14230354178085905;  // std dev = 0.054, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04873101572758786;  // std dev = 0.074, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.13174229485346634;  // std dev = 0.291, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06694674891770618;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072215
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.706 seconds
Total inference time: 0.783 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102502
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.393 seconds
Parameter learned model CLL: -0.102502


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [2.36e-08, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.29e-08, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.405, 1, 23], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.11, 24, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.392, 1, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.092, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.016, 0, 25], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.054, 1, 23], 'true,false': [0.0, 0, 0], 'false': [0.074, 24, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.291, 1, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}]]
[{'': [0.03698224852071082, 6.938893903907228e-18], 'true': [7.105427357601002e-16, 0.0], 'true,true': [7.105427357601002e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.026401128419570055, -2.3129646346357427e-18], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.016486699015016572, 9.25185853854297e-18], 'true': [-2.842170943040401e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.842170943040401e-16, nan]}, {'': [0.009965795208791005, -3.469446951953614e-18], 'true': [0.009965795208791005, nan], 'true,true': [-3.552713678800501e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.006824217491468961, 0.01213506336532887], 'true': [0.006824217491468961, nan], 'true,true': [0.006824217491468961, nan]}, {'': [0.0059174456486680805, -4.625929269271485e-18], 'true': [0.0059174456486680805, nan], 'true,true': [0.0059174456486680805, nan], 'true,true,true': [0.0059174456486680805, nan]}, {'': [0.005379438216978035, 0.0], 'true': [0.0003352993526347703, 0.0], 'true,true': [0.0003352993526347703, nan], 'true,false': [0.0, nan]}, {'': [0.003955975305523662, -6.938893903907228e-18], 'true': [0.00026417782734657893, 0.0], 'true,false': [0.0, nan]}, {'': [0.002946226229522751, 0.005456916063033139], 'true': [0.002946226229522751, nan]}, {'': [0.0032618831700745735, -4.04768811061255e-18], 'true': [0.0032618831700745735, nan], 'true,true': [0.0032618831700745735, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048774;  // std dev = 1.29e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360636;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.3886741445113017;  // std dev = 0.119, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3009166405515249;  // std dev = 0.108, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.09269127618926103;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2396116937641565;  // std dev = 0.103, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0.2551722425694894;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.08518475138839683;  // std dev = 1.39e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21712836723336337;  // std dev = 0.025, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.2226292426742163;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109175;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1824885099464068;  // std dev = 0.022, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.18648116377679816;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.14177798798032348;  // std dev = 0.073, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0.15109951121199972;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.06842697784420275;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1235701245845309;  // std dev = 0.074, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0.13272200113565202;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.0641918400820262;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074125
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.854 seconds
Total inference time: 0.663 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100684
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.348 seconds
Refined model CLL: -0.100684


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074125
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.3009999999999997 seconds
Total inference time: 0.663 seconds
AUC ROC: 1.0
Total revision time: 2.3009999999999997
Best scored revision CLL: -0.100684


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:06:38
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.074125, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.3009999999999997, 'Inference time': 0.663, 'parameter_25': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072215, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.706, 'Inference time': 0.783}}


Starting fold 5

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos	 examples: 45
Target test neg examples: 2071

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583099;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.23803122249026756;  // std dev = 0.370, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.010010651519378832;  // std dev = 0.165, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.21549338253865144;  // std dev = 0.365, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09185281015069582;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2401442450121177;  // std dev = 0.042, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.13851442904126202;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08447269268551708;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19915309401669487;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(D, B) )
%   | | then return -0.12279782037546687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07816497883457847;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.10757639303770454;  // std dev = 0.109, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.018459044115957557;  // std dev = 0.109, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1120144323124498;  // std dev = 0.260, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07148037446199772;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073378
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.596 seconds
Total inference time: 0.82 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.120092
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.338 seconds
Parameter learned model CLL: -0.120092


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 5], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [5.27e-09, 0, 5], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.37, 1, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.165, 4, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.365, 1, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.042, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.017, 0, 5], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.109, 1, 4], 'true,false': [0.0, 0, 0], 'false': [0.109, 4, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.26, 1, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}]]
[{'': [0.1388888888888887, 0.0], 'true': [0.0, 0.0], 'true,true': [0.0, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.09915090450905224, 0.0], 'true': [0.0, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.061916714078618984, 0.0], 'true': [-4.4408920985006264e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-4.4408920985006264e-17, nan]}, {'': [0.03742709756190412, 0.0], 'true': [0.03742709756190412, nan], 'true,true': [4.4408920985006264e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.027344342783207666, 0.02734434278320768], 'true': [0.027344342783207666, nan], 'true,true': [0.027344342783207666, nan]}, {'': [0.02216760748919559, 0.0], 'true': [0.02216760748919559, nan], 'true,true': [0.02216760748919559, nan], 'true,true,true': [0.02216760748919559, nan]}, {'': [0.02020779195980701, 0.0], 'true': [0.00035228511245780634, 0.0], 'true,true': [0.00035228511245780634, nan], 'true,false': [0.0, nan]}, {'': [0.014623197317386663, 0.0], 'true': [0.00027243823453915184, 0.0], 'true,false': [0.0, nan]}, {'': [0.011853476987988085, 0.0117749440659], 'true': [0.011853476987988085, nan]}, {'': [0.011257632111943848, 0.0], 'true': [0.011257632111943848, nan], 'true,true': [0.011257632111943848, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.33099526521728556;  // std dev = 0.474, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.26053178561396195;  // std dev = 0.434, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20842329832206566;  // std dev = 0.414, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.24361910222570216;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.201063332492829;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20156233108362387;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.17069281965225447;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.11790677519082632;  // std dev = 0.291, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.10192903434099217;  // std dev = 0.291, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069754
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.582 seconds
Total inference time: 0.684 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.121145
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.307 seconds
Refined model CLL: -0.121145


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073378
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.823 seconds
Total inference time: 0.82 seconds
AUC ROC: 1.0
Total revision time: 1.823
Best scored revision CLL: -0.120092


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:06:42
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073378, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.823, 'Inference time': 0.82, 'parameter_5': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073378, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.596, 'Inference time': 0.82}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.26903645674147336;  // std dev = 0.387, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.010659504648091683;  // std dev = 0.179, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2448247297246521;  // std dev = 0.388, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09359163688281423;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2344863556411642;  // std dev = 0.069, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.14587253774258332;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08594835015102618;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19512408414935206;  // std dev = 0.019, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, B) )
%   | | then return -0.1286195605195918;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07943204881754462;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.12148724721159664;  // std dev = 0.089, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.00730376883921064;  // std dev = 0.115, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1301934183358396;  // std dev = 0.281, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07331661456837947;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075129
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.643 seconds
Total inference time: 0.804 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.115042
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.361 seconds
Parameter learned model CLL: -0.115042


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 10], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 10], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.387, 1, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.179, 9, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.388, 1, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.069, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.019, 0, 10], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.089, 1, 7], 'true,false': [0.0, 0, 0], 'false': [0.115, 9, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.281, 1, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 9, 0]}]]
[{'': [0.0826446280991734, -9.25185853854297e-18], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.058998885327700486, 0.0], 'true': [8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.036843003418682206, -1.5419764230904951e-18], 'true': [-1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.7763568394002506e-16, nan]}, {'': [0.02227066962361243, 3.0839528461809902e-18], 'true': [0.02227066962361243, nan], 'true,true': [1.3322676295501878e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.018692421824458363, 0.03204415169907149], 'true': [0.018692421824458363, nan], 'true,true': [0.018692421824458363, nan]}, {'': [0.013701041695844862, -3.0839528461809902e-18], 'true': [0.013701041695844862, nan], 'true,true': [0.013701041695844862, nan], 'true,true,true': [0.013701041695844862, nan]}, {'': [0.012387944387348021, -1.5419764230904951e-18], 'true': [0.00047465811916382885, 0.0], 'true,true': [0.00047465811916382885, nan], 'true,false': [0.0, nan]}, {'': [0.008994850075142275, 0.0], 'true': [0.00036615804051728376, 0.0], 'true,false': [0.0, nan]}, {'': [0.007981324815080078, 0.013270988617069953], 'true': [0.007981324815080078, nan]}, {'': [0.007201302137010573, 7.709882115452476e-19], 'true': [0.007201302137010573, nan], 'true,true': [0.007201302137010573, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.3136916014290807;  // std dev = 0.464, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.24818750282382282;  // std dev = 0.427, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1989814793512739;  // std dev = 0.408, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2262122736367876;  // std dev = 0.064, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.19485738393061242;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109175;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1891499637344493;  // std dev = 0.056, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.16608817048049013;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.14909095391629723;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1159764209070884;  // std dev = 0.291, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13114876281036358;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.09973986047687693;  // std dev = 0.290, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.06419184008202618;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070418
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.7 seconds
Total inference time: 0.665 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107653
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.319 seconds
Refined model CLL: -0.107653


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070418
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.023 seconds
Total inference time: 0.665 seconds
AUC ROC: 1.0
Total revision time: 2.023
Best scored revision CLL: -0.107653


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:06:46
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070418, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.023, 'Inference time': 0.665, 'parameter_10': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075129, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.643, 'Inference time': 0.804}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 1.49e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583098;  // std dev = 1.18e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.2889116069025027;  // std dev = 0.397, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.01973778383348262;  // std dev = 0.158, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.24938898883018118;  // std dev = 0.394, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09104462787048782;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22741665489401783;  // std dev = 0.088, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.14894396445556393;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08378547875605426;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19004135025453753;  // std dev = 0.020, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, B) )
%   | | then return -0.13103347482834285;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07757389515754;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.13284390724508918;  // std dev = 0.072, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.02448459776914611;  // std dev = 0.103, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1325619913287098;  // std dev = 0.290, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07057863050888402;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072744
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.666 seconds
Total inference time: 0.803 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.109388
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.373 seconds
Parameter learned model CLL: -0.109388


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [1.49e-08, 0, 15], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.18e-08, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 15], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.397, 1, 12], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.158, 14, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.394, 1, 15], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.088, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.02, 0, 15], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 14, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.072, 1, 12], 'true,false': [0.0, 0, 0], 'false': [0.103, 14, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.29, 1, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}]]
[{'': [0.05859374999999978, -1.1895246692412391e-17], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.041829287839756535, 3.96508223080413e-18], 'true': [1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.02612111375191717, 9.912705577010326e-18], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.015789556783928405, -3.96508223080413e-18], 'true': [0.015789556783928405, nan], 'true,true': [1.4802973661668753e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.012135063365328803, 0.024836989552221495], 'true': [0.012135063365328803, nan], 'true,true': [0.012135063365328803, nan]}, {'': [0.009707116918274063, 0.0], 'true': [0.009707116918274063, nan], 'true,true': [0.009707116918274063, nan], 'true,true,true': [0.009707116918274063, nan]}, {'': [0.008783682620798892, 0.0], 'true': [0.0005163042248604347, 0.0], 'true,true': [0.0005163042248604347, nan], 'true,false': [0.0, nan]}, {'': [0.006417061209773471, 3.96508223080413e-18], 'true': [0.0004018000840499007, 0.0], 'true,false': [0.0, nan]}, {'': [0.0051943796108817756, 0.010625652342250555], 'true': [0.0051943796108817756, nan]}, {'': [0.005272353679051458, 0.0], 'true': [0.005272353679051458, nan], 'true,true': [0.005272353679051458, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.3656025927936952;  // std dev = 0.156, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2848967264457383;  // std dev = 0.142, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.22716784100726567;  // std dev = 0.135, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2216540921000068;  // std dev = 0.038, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.21383787184654923;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1857911868999164;  // std dev = 0.033, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.18008336421304177;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.1500981145151622;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.13341961705690356;  // std dev = 0.096, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13193813445258917;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.11574034398009356;  // std dev = 0.096, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.06419184008202619;  // std dev = 6.97e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070554
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.736 seconds
Total inference time: 0.68 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104262
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.347 seconds
Refined model CLL: -0.104262


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070554
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.122 seconds
Total inference time: 0.68 seconds
AUC ROC: 1.0
Total revision time: 2.122
Best scored revision CLL: -0.104262


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:06:50
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070554, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.122, 'Inference time': 0.68, 'parameter_15': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072744, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.666, 'Inference time': 0.803}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.27477816678799294;  // std dev = 0.551, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.017527071943913567;  // std dev = 0.159, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.24023232963747312;  // std dev = 0.543, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09122774192187079;  // std dev = 5.27e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.23086939782169152;  // std dev = 0.097, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.1460157928587641;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08394125967433565;  // std dev = 9.13e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19252271941128846;  // std dev = 0.019, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then return -0.12873235782965373;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07770794118875998;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.12582097409504137;  // std dev = 0.085, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.02310469560887495;  // std dev = 0.104, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.12693170073731597;  // std dev = 0.395, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07078341540317853;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072875
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.675 seconds
Total inference time: 0.776 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.112346
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.389 seconds
Parameter learned model CLL: -0.112346


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [1.49e-08, 0, 20], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.67e-08, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 20], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.551, 2, 16], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.159, 18, 4]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.543, 2, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 18, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.097, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.13e-09, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.019, 0, 20], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.085, 2, 16], 'true,false': [0.0, 0, 0], 'false': [0.104, 18, 4]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.395, 2, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}]]
[{'': [0.08264462809917356, -3.0839528461809902e-18], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.05899888532770057, 0.0], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.03684300341868208, 1.5419764230904953e-17], 'true': [-2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.6645352591003756e-16, nan]}, {'': [0.022270669623612512, -4.625929269271485e-18], 'true': [0.022270669623612512, nan], 'true,true': [1.3322676295501878e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.016879223940251653, 0.025423459199263334], 'true': [0.016879223940251653, nan], 'true,true': [0.016879223940251653, nan]}, {'': [0.013404141278912773, 1.5419764230904951e-18], 'true': [0.013404141278912773, nan], 'true,true': [0.013404141278912773, nan], 'true,true,true': [0.013404141278912773, nan]}, {'': [0.012166579141076243, 4.625929269271485e-18], 'true': [0.00047028733207084007, 0.0], 'true,true': [0.00047028733207084007, nan], 'true,false': [0.0, nan]}, {'': [0.00886145636397535, -7.709882115452476e-18], 'true': [0.00036534521372890707, 0.0], 'true,false': [0.0, nan]}, {'': [0.007247562698941368, 0.010898876427519417], 'true': [0.007247562698941368, nan]}, {'': [0.007078650648754469, -4.625929269271485e-18], 'true': [0.007078650648754469, nan], 'true,true': [0.007078650648754469, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.3598347048642936;  // std dev = 0.163, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.37758205233937553;  // std dev = 0.138, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926093;  // std dev = 1.05e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( female(A) )
%   | then return 0.2808646179312751;  // std dev = 0.149, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.2932360378029859;  // std dev = 0.126, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.22405273070816964;  // std dev = 0.142, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.23363120351285593;  // std dev = 0.120, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.08518475138839683;  // std dev = 1.18e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2276802852001077;  // std dev = 0.015, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.21502473547522077;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07877675473109179;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19013669139256734;  // std dev = 0.013, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1809520648594563;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07324622576333704;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( female(A) )
%   | then return 0.13038801113482215;  // std dev = 0.100, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.13588672594294743;  // std dev = 0.085, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.06842697784420274;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11308247727021599;  // std dev = 0.100, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.11830516232831743;  // std dev = 0.085, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.0641918400820262;  // std dev = 6.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070193
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.901 seconds
Total inference time: 0.681 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.10908
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.338 seconds
Refined model CLL: -0.10908


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070193
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.303 seconds
Total inference time: 0.681 seconds
AUC ROC: 1.0
Total revision time: 2.303
Best scored revision CLL: -0.10908


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:06:54
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070193, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.303, 'Inference time': 0.681, 'parameter_20': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072875, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.675, 'Inference time': 0.776}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 2.36e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 1.05e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.28476374947759214;  // std dev = 0.559, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.03144636902638531;  // std dev = 0.147, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.24350382254338301;  // std dev = 0.547, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09008030647231612;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22713668595517744;  // std dev = 0.107, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.1476766560674843;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08296437010134561;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18982894278730028;  // std dev = 0.019, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, B) )
%   | | then return -0.13003860206254333;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07686680181907163;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.13145394439909652;  // std dev = 0.076, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.031190940683550612;  // std dev = 0.097, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.12867464599757725;  // std dev = 0.400, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06954127867722561;  // std dev = 5.27e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071799
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.715 seconds
Total inference time: 0.79 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.109305
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.404 seconds
Parameter learned model CLL: -0.109305


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [2.36e-08, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-08, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.559, 2, 21], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.147, 23, 4]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.547, 2, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.107, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.019, 0, 25], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.076, 2, 21], 'true,false': [0.0, 0, 0], 'false': [0.097, 23, 4]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.4, 2, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 23, 0]}]]
[{'': [0.06858710562414343, 9.654113257610057e-18], 'true': [7.105427357601002e-16, 0.0], 'true,true': [7.105427357601002e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.04896340963409988, -2.413528314402514e-18], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.030576155100552255, 4.827056628805028e-18], 'true': [-2.842170943040401e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.842170943040401e-16, nan]}, {'': [0.01848251731452055, -2.413528314402514e-18], 'true': [0.01848251731452055, nan], 'true,true': [-3.552713678800501e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.01356879013344431, 0.021567897256988225], 'true': [0.01356879013344431, nan], 'true,true': [0.01356879013344431, nan]}, {'': [0.01108069049023306, -6.033820786006285e-18], 'true': [0.01108069049023306, nan], 'true,true': [0.01108069049023306, nan], 'true,true,true': [0.01108069049023306, nan]}, {'': [0.010062891344700805, -1.206764157201257e-18], 'true': [0.0004616232924104313, 0.0], 'true,true': [0.0004616232924104313, nan], 'true,false': [0.0, nan]}, {'': [0.00735099554730503, -3.620292471603771e-18], 'true': [0.0003601680615881886, 0.0], 'true,false': [0.0, nan]}, {'': [0.005832776446966682, 0.00938299431006976], 'true': [0.005832776446966682, nan]}, {'': [0.005929402960174458, 1.206764157201257e-18], 'true': [0.005929402960174458, nan], 'true,true': [0.005929402960174458, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360638;  // std dev = 1.05e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.37032177382684206;  // std dev = 0.149, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.3850692145554257;  // std dev = 0.126, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926094;  // std dev = 1.18e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then return 0.288187501476636;  // std dev = 0.136, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.2984246790471678;  // std dev = 0.114, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2297148783164822;  // std dev = 0.129, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.2376682048880379;  // std dev = 0.109, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return -0.08518475138839682;  // std dev = 1.58e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22427868360346576;  // std dev = 0.014, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.21842940832346586;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07877675473109175;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1876773966496071;  // std dev = 0.012, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.18343254851365992;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07324622576333704;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420275;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then return 0.134419824757037;  // std dev = 0.092, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.13902740976705397;  // std dev = 0.077, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11678270657662261;  // std dev = 0.092, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.12119598133943607;  // std dev = 0.078, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return -0.0641918400820262;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070297
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.83 seconds
Total inference time: 0.673 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106419
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.352 seconds
Refined model CLL: -0.106419


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070297
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.3009999999999997 seconds
Total inference time: 0.673 seconds
AUC ROC: 1.0
Total revision time: 2.3009999999999997
Best scored revision CLL: -0.106419


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:06:58
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070297, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.3009999999999997, 'Inference time': 0.673, 'parameter_25': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.071799, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.715, 'Inference time': 0.79}}


Starting fold 1

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos	 examples: 56
Target test neg examples: 3308

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583099;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072109
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.57 seconds
Total inference time: 0.903 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.318 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [5.27e-09, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [-4.4408920985006264e-17, nan], 'true,true': [-4.4408920985006264e-17, nan]}, {'': [4.4408920985006264e-17, 0.0], 'true': [4.4408920985006264e-17, nan], 'true,true': [4.4408920985006264e-17, nan]}, {'': [-2.2204460492503132e-17, 0.0], 'true': [-2.2204460492503132e-17, nan], 'true,true': [-2.2204460492503132e-17, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}, {'': [-5.551115123125783e-18, -1.3877787807814458e-18], 'true': [-5.551115123125783e-18, nan], 'true,true': [-5.551115123125783e-18, nan]}, {'': [0.0, -6.938893903907229e-19], 'true': [0.0, nan]}, {'': [0.0, 6.938893903907229e-19], 'true': [0.0, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'true,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.983525
   AUC PR    = 0.339394
   CLL	      = -0.130317
   Precision = 0.339394 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.506787


Total learning time: 0.466 seconds
Total inference time: 0.718 seconds
AUC ROC: 0.983525


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.304 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072109
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.658 seconds
Total inference time: 0.903 seconds
AUC ROC: 1.0
Total revision time: 1.658
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:07:02
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072109, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.658, 'Inference time': 0.903, 'parameter_5': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072109, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.57, 'Inference time': 0.903}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.002709444583679941;  // std dev = 0.174, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2746571296024751;  // std dev = 0.094, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09291939100796998;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22363156205746995;  // std dev = 0.083, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08537831635817641;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1873332381895923;  // std dev = 0.023, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07894294013259427;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.14718703323795257;  // std dev = 1.86e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.012209666967526324;  // std dev = 0.112, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1488452362597697;  // std dev = 0.093, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07256437534687589;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079779
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.65 seconds
Total inference time: 0.934 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.105599
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.337 seconds
Parameter learned model CLL: -0.105599


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [1.18e-08, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 10, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.174, 10, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.094, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 10, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.083, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.023, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [1.86e-09, 0, 7], 'true,false': [0.0, 0, 0], 'false': [0.112, 10, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.093, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 10, 0]}]]
[{'': [-8.881784197001253e-17, -1.1102230246251566e-17], 'true': [-8.881784197001253e-17, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [8.881784197001253e-17, 2.7755575615628915e-18], 'true': [8.881784197001253e-17, nan]}, {'': [-1.7763568394002506e-16, 0.0], 'true': [-1.7763568394002506e-16, nan], 'true,true': [-1.7763568394002506e-16, nan]}, {'': [1.3322676295501878e-16, 1.3877787807814458e-18], 'true': [1.3322676295501878e-16, nan], 'true,true': [1.3322676295501878e-16, nan]}, {'': [-3.172065784643304e-17, 0.030337658413322113], 'true': [-3.172065784643304e-17, nan], 'true,true': [-3.172065784643304e-17, nan]}, {'': [0.0008858752529391945, 1.3877787807814458e-18], 'true': [0.0008858752529391945, nan], 'true,true': [0.0008858752529391945, nan], 'true,true,true': [0.0008858752529391945, nan]}, {'': [0.0006811242993782441, 5.551115123125783e-18], 'true': [0.0006811242993782441, nan], 'true,true': [0.0006811242993782441, nan]}, {'': [0.0005282228573291525, -2.7755575615628915e-18], 'true': [0.0005282228573291525, nan]}, {'': [3.96508223080413e-18, 0.012476928734031433], 'true': [3.96508223080413e-18, nan]}, {'': [0.0008593922148943334, 6.938893903907229e-19], 'true': [0.0008593922148943334, nan], 'true,true': [0.0008593922148943334, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( actor(B) )
%   | then return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527736;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.152743858093671;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06419184008202619;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.983525
   AUC PR    = 0.339394
   CLL	      = -0.130457
   Precision = 0.339394 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.506787


Total learning time: 0.59 seconds
Total inference time: 0.754 seconds
AUC ROC: 0.983525


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.309 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.983525
   AUC PR    = 0.339394
   CLL	      = -0.130457
   Precision = 0.339394 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.506787


Total learning time: 1.886 seconds
Total inference time: 0.754 seconds
AUC ROC: 0.983525
Total revision time: 1.886
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:07:06
{'AUC ROC': 0.983525, 'AUC PR': 0.339394, 'CLL': -0.130457, 'Precision': [0.339394, 0.5], 'Recall': 1.0, 'F1': 0.506787, 'Learning time': 1.886, 'Inference time': 0.754, 'parameter_10': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079779, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.65, 'Inference time': 0.934}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 1.49e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583098;  // std dev = 1.18e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05110111454096884;  // std dev = 0.197, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.28424444540676963;  // std dev = 0.105, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09707923551438859;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.23027088235115467;  // std dev = 0.092, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08889627309361774;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19210779721141383;  // std dev = 0.021, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08195449497947178;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.14457038421991486;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.013464163505006246;  // std dev = 0.122, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.15512364247328445;  // std dev = 0.100, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0769467616709348;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083768
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.612 seconds
Total inference time: 0.871 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.110416
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.355 seconds
Parameter learned model CLL: -0.110416


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [1.49e-08, 0, 15], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.39e-08, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [1.18e-08, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.197, 15, 8]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.105, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.092, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.021, 0, 15], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.0, 0, 0], 'false': [0.122, 15, 8]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.1, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}]]
[{'': [-2.3684757858670006e-16, -1.4802973661668754e-17], 'true': [-2.3684757858670006e-16, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [1.7763568394002506e-16, 3.7007434154171884e-18], 'true': [1.7763568394002506e-16, nan]}, {'': [-2.3684757858670006e-16, 1.295260195396016e-17], 'true': [-2.3684757858670006e-16, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [1.4802973661668753e-16, -5.551115123125783e-18], 'true': [1.4802973661668753e-16, nan], 'true,true': [1.4802973661668753e-16, nan]}, {'': [-3.172065784643304e-17, 0.038767971809840776], 'true': [-3.172065784643304e-17, nan], 'true,true': [-3.172065784643304e-17, nan]}, {'': [0.0007395438555854857, 0.0], 'true': [0.0007395438555854857, nan], 'true,true': [0.0007395438555854857, nan], 'true,true,true': [0.0007395438555854857, nan]}, {'': [0.0005597025658648761, -9.251858538542971e-19], 'true': [0.0005597025658648761, nan], 'true,true': [0.0005597025658648761, nan]}, {'': [0.0004282188636431113, -9.251858538542971e-19], 'true': [0.0004282188636431113, nan]}, {'': [0.0, 0.015005813749068939], 'true': [0.0, nan]}, {'': [0.0006631791006539915, 0.0], 'true': [0.0006631791006539915, nan], 'true,true': [0.0006631791006539915, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583098;  // std dev = 4.71e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( actor(B) )
%   | then return -0.09269127618926094;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2551722425694894;  // std dev = 2.36e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08518475138839685;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.20975771563253562;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07877675473109173;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527741;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.15274385809367072;  // std dev = 7.45e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0.15274385809367075;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06419184008202619;  // std dev = 7.90e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.983525
   AUC PR    = 0.339394
   CLL	      = -0.130457
   Precision = 0.339394 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.506787


Total learning time: 0.626 seconds
Total inference time: 0.723 seconds
AUC ROC: 0.983525


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.333 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.983525
   AUC PR    = 0.339394
   CLL	      = -0.130457
   Precision = 0.339394 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.506787


Total learning time: 1.926 seconds
Total inference time: 0.723 seconds
AUC ROC: 0.983525
Total revision time: 1.926
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:07:10
{'AUC ROC': 0.983525, 'AUC PR': 0.339394, 'CLL': -0.130457, 'Precision': [0.339394, 0.5], 'Recall': 1.0, 'F1': 0.506787, 'Learning time': 1.926, 'Inference time': 0.723, 'parameter_15': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.083768, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.612, 'Inference time': 0.871}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03560624485021131;  // std dev = 0.191, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.28119690950977405;  // std dev = 0.129, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09572948866990832;  // std dev = 5.27e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22817418066851175;  // std dev = 0.112, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08775724943612223;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19060897373787938;  // std dev = 0.022, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08098124806484315;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.14539387151446173;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.00543038029555459;  // std dev = 0.120, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.15319560893477518;  // std dev = 0.123, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07553355417114882;  // std dev = 6.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082484
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.654 seconds
Total inference time: 0.855 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.10892
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.38 seconds
Parameter learned model CLL: -0.10892


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 20, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [1.49e-08, 0, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.49e-08, 20, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [1.18e-08, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.191, 20, 9]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.129, 0, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 20, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.112, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.022, 0, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.0, 0, 11], 'true,false': [0.0, 0, 0], 'false': [0.12, 20, 9]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.123, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.45e-09, 20, 0]}]]
[{'': [-8.881784197001253e-17, 2.7755575615628915e-18], 'true': [-8.881784197001253e-17, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [2.6645352591003756e-16, 0.0], 'true': [2.6645352591003756e-16, nan]}, {'': [-2.6645352591003756e-16, 1.1102230246251566e-17], 'true': [-2.6645352591003756e-16, nan], 'true,true': [-2.6645352591003756e-16, nan]}, {'': [1.3322676295501878e-16, -1.3877787807814458e-18], 'true': [1.3322676295501878e-16, nan], 'true,true': [1.3322676295501878e-16, nan]}, {'': [-6.055761952500853e-17, 0.036578342010830704], 'true': [-6.055761952500853e-17, nan], 'true,true': [-6.055761952500853e-17, nan]}, {'': [0.0008277906869866625, 1.3877787807814458e-18], 'true': [0.0008277906869866625, nan], 'true,true': [0.0008277906869866625, nan], 'true,true,true': [0.0008277906869866625, nan]}, {'': [0.000629672310297813, -5.551115123125783e-18], 'true': [0.000629672310297813, nan], 'true,true': [0.000629672310297813, nan]}, {'': [0.0004838356241275321, -1.3877787807814458e-18], 'true': [0.0004838356241275321, nan]}, {'': [-2.523234146875356e-18, 0.014431202470349638], 'true': [-2.523234146875356e-18, nan]}, {'': [0.0007610250886248143, 2.0816681711721684e-18], 'true': [0.0007610250886248143, nan], 'true,true': [0.0007610250886248143, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.11231637819360636;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830986;  // std dev = 5.16e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( actor(B) )
%   | then return -0.09269127618926093;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25517224256948945;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.08518475138839683;  // std dev = 1.39e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2097577156325356;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07877675473109179;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527744;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07324622576333704;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.15274385809367078;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( actor(B) )
%   | then return -0.06842697784420274;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0.15274385809367075;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.0641918400820262;  // std dev = 6.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.983525
   AUC PR    = 0.339394
   CLL	      = -0.130457
   Precision = 0.339394 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.506787


Total learning time: 0.603 seconds
Total inference time: 0.721 seconds
AUC ROC: 0.983525


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.341 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.983525
   AUC PR    = 0.339394
   CLL	      = -0.130457
   Precision = 0.339394 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.506787


Total learning time: 1.978 seconds
Total inference time: 0.721 seconds
AUC ROC: 0.983525
Total revision time: 1.978
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:07:14
{'AUC ROC': 0.983525, 'AUC PR': 0.339394, 'CLL': -0.130457, 'Precision': [0.339394, 0.5], 'Recall': 1.0, 'F1': 0.506787, 'Learning time': 1.978, 'Inference time': 0.721, 'parameter_20': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.082484, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.654, 'Inference time': 0.855}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 2.36e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.02542390191057064;  // std dev = 0.187, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2791827581499098;  // std dev = 0.147, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09485167160109911;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.226781381298091;  // std dev = 0.128, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08701521868559597;  // std dev = 1.67e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18960872258639738;  // std dev = 0.023, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08034628108886936;  // std dev = 1.18e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.1459423424266349;  // std dev = 4.17e-09, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 5.705462164520915E-5;  // std dev = 0.118, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.15188719445088888;  // std dev = 0.142, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07461000675516917;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081643
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.672 seconds
Total inference time: 0.8 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107913
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.376 seconds
Parameter learned model CLL: -0.107913


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [2.36e-08, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.83e-08, 25, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 25], 'true,false': [0.0, 0, 0], 'false': [0.0, 25, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 25, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 25, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.187, 25, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.147, 0, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 25, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.128, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.67e-08, 25, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.023, 0, 25], 'true,false': [0.0, 0, 0], 'false': [1.18e-08, 25, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [4.17e-09, 0, 15], 'true,false': [0.0, 0, 0], 'false': [0.118, 25, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.142, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 25, 0]}]]
[{'': [7.105427357601002e-16, 1.3322676295501878e-17], 'true': [7.105427357601002e-16, nan], 'true,true': [7.105427357601002e-16, nan]}, {'': [-7.105427357601002e-17, -4.440892098500626e-18], 'true': [-7.105427357601002e-17, nan]}, {'': [-2.842170943040401e-16, 0.0], 'true': [-2.842170943040401e-16, nan], 'true,true': [-2.842170943040401e-16, nan]}, {'': [-3.552713678800501e-17, -2.220446049250313e-18], 'true': [-3.552713678800501e-17, nan], 'true,true': [-3.552713678800501e-17, nan]}, {'': [-1.4802973661668754e-17, 0.0348779882438873], 'true': [-1.4802973661668754e-17, nan], 'true,true': [-1.4802973661668754e-17, nan]}, {'': [0.0008647572876563814, -3.3306690738754695e-18], 'true': [0.0008647572876563814, nan], 'true,true': [0.0008647572876563814, nan], 'true,true,true': [0.0008647572876563814, nan]}, {'': [0.0006599827116966495, 1.1102230246251566e-17], 'true': [0.0006599827116966495, nan], 'true,true': [0.0006599827116966495, nan]}, {'': [0.0005085719682748912, 5.551115123125783e-18], 'true': [0.0005085719682748912, nan]}, {'': [1.850371707708594e-17, 0.013936454552830175], 'true': [1.850371707708594e-17, nan]}, {'': [0.000808241934361531, -1.1102230246251566e-18], 'true': [0.000808241934361531, nan], 'true,true': [0.000808241934361531, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.1418510649004877;  // std dev = 1.83e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.12544463852839138;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.11231637819360639;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.10159632948783635;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.32071184716014967;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( actor(B) )
%   | then return -0.09269127618926096;  // std dev = 9.13e-09, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25517224256948956;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.08518475138839682;  // std dev = 1.75e-08, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.20975771563253554;  // std dev = 1.49e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07877675473109175;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527747;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07324622576333704;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.1527438580936708;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( actor(B) )
%   | then return -0.06842697784420276;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0.15274385809367078;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06419184008202622;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.983525
   AUC PR    = 0.339394
   CLL	      = -0.130457
   Precision = 0.339394 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.506787


Total learning time: 0.631 seconds
Total inference time: 0.76 seconds
AUC ROC: 0.983525


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.332 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.983525
   AUC PR    = 0.339394
   CLL	      = -0.130457
   Precision = 0.339394 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.506787


Total learning time: 2.011 seconds
Total inference time: 0.76 seconds
AUC ROC: 0.983525
Total revision time: 2.011
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:07:18
{'AUC ROC': 0.983525, 'AUC PR': 0.339394, 'CLL': -0.130457, 'Precision': [0.339394, 0.5], 'Recall': 1.0, 'F1': 0.506787, 'Learning time': 2.011, 'Inference time': 0.76, 'parameter_25': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.081643, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.672, 'Inference time': 0.8}}


Starting fold 2

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos	 examples: 58
Target test neg examples: 3423

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583099;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075901
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.57 seconds
Total inference time: 0.914 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.323 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [5.27e-09, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [-4.4408920985006264e-17, nan], 'true,true': [-4.4408920985006264e-17, nan]}, {'': [4.4408920985006264e-17, 0.0], 'true': [4.4408920985006264e-17, nan], 'true,true': [4.4408920985006264e-17, nan]}, {'': [-2.2204460492503132e-17, 0.0], 'true': [-2.2204460492503132e-17, nan], 'true,true': [-2.2204460492503132e-17, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}, {'': [-5.551115123125783e-18, -1.3877787807814458e-18], 'true': [-5.551115123125783e-18, nan], 'true,true': [-5.551115123125783e-18, nan]}, {'': [0.0, -6.938893903907229e-19], 'true': [0.0, nan]}, {'': [0.0, 6.938893903907229e-19], 'true': [0.0, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'true,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.159504
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 0.469 seconds
Total inference time: 0.726 seconds
AUC ROC: 0.976337


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.303 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075901
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.665 seconds
Total inference time: 0.914 seconds
AUC ROC: 1.0
Total revision time: 1.665
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:22
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075901, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.665, 'Inference time': 0.914, 'parameter_5': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075901, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.57, 'Inference time': 0.914}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05510917406658727;  // std dev = 0.119, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2629384589303888;  // std dev = 0.074, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08815948596189063;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2153471994162996;  // std dev = 0.065, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08132513978810842;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18126172813236446;  // std dev = 0.018, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07545242316095276;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.1504901884429053;  // std dev = 1.86e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04531658671258642;  // std dev = 0.079, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.14027561787004128;  // std dev = 0.076, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06744779637291397;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078895
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.599 seconds
Total inference time: 0.872 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099221
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.342 seconds
Parameter learned model CLL: -0.099221


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [1.18e-08, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 10, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.119, 10, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.074, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 10, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.065, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.018, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [1.86e-09, 0, 9], 'true,false': [0.0, 0, 0], 'false': [0.079, 10, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.076, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}]]
[{'': [-8.881784197001253e-17, -1.1102230246251566e-17], 'true': [-8.881784197001253e-17, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [8.881784197001253e-17, 2.7755575615628915e-18], 'true': [8.881784197001253e-17, nan]}, {'': [-1.7763568394002506e-16, 0.0], 'true': [-1.7763568394002506e-16, nan], 'true,true': [-1.7763568394002506e-16, nan]}, {'': [1.3322676295501878e-16, 1.3877787807814458e-18], 'true': [1.3322676295501878e-16, nan], 'true,true': [1.3322676295501878e-16, nan]}, {'': [-3.700743415417188e-17, 0.014124143999590747], 'true': [-3.700743415417188e-17, nan], 'true,true': [-3.700743415417188e-17, nan]}, {'': [0.0005428270490787535, 2.7755575615628915e-18], 'true': [0.0005428270490787535, nan], 'true,true': [0.0005428270490787535, nan], 'true,true,true': [0.0005428270490787535, nan]}, {'': [0.0004252552067716464, 1.3877787807814458e-18], 'true': [0.0004252552067716464, nan], 'true,true': [0.0004252552067716464, nan]}, {'': [0.00033524304050218666, -2.0816681711721684e-18], 'true': [0.00033524304050218666, nan]}, {'': [3.0839528461809902e-18, 0.006269034858084544], 'true': [3.0839528461809902e-18, nan]}, {'': [0.0005803947907187995, -2.7755575615628915e-18], 'true': [0.0005803947907187995, nan], 'true,true': [0.0005803947907187995, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( female(A) )
%   | then return -0.010010651519378832;  // std dev = 0.370, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.26194468113434727;  // std dev = 0.064, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08785197489331645;  // std dev = 0.010, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2146198606905494;  // std dev = 0.057, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.0810630935657947;  // std dev = 0.010, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1807120755078418;  // std dev = 0.050, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07522665364270384;  // std dev = 0.009, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.1507807205945556;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( female(A) )
%   | then return -0.01909881381917302;  // std dev = 0.243, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.0679862930589014;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13934758671838138;  // std dev = 0.065, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06713271120732571;  // std dev = 0.013, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.161953
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 0.633 seconds
Total inference time: 0.729 seconds
AUC ROC: 0.976337


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098601
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.308 seconds
Refined model CLL: -0.098601


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.161953
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 1.8820000000000001 seconds
Total inference time: 0.729 seconds
AUC ROC: 0.976337
Total revision time: 1.8820000000000001
Best scored revision CLL: -0.098601


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:26
{'AUC ROC': 0.976337, 'AUC PR': 0.263636, 'CLL': -0.161953, 'Precision': [0.263636, 0.5], 'Recall': 1.0, 'F1': 0.417266, 'Learning time': 1.8820000000000001, 'Inference time': 0.729, 'parameter_10': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.078895, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.599, 'Inference time': 0.872}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 1.49e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583098;  // std dev = 1.18e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0668535809799228;  // std dev = 0.100, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.26052392094793925;  // std dev = 0.078, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08721993895288162;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.21361775200205219;  // std dev = 0.069, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08052153708884968;  // std dev = 6.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.17997876576236763;  // std dev = 0.016, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07475769751167859;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.15118530190346857;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05239676920313805;  // std dev = 0.067, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.13837897619872744;  // std dev = 0.081, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06642437218956464;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077955
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.628 seconds
Total inference time: 0.911 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097829
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.356 seconds
Parameter learned model CLL: -0.097829


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [1.49e-08, 0, 15], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.39e-08, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [1.18e-08, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 14], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.1, 15, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.078, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.069, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.45e-09, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.016, 0, 15], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.0, 0, 14], 'true,false': [0.0, 0, 0], 'false': [0.067, 15, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.081, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}]]
[{'': [-2.3684757858670006e-16, -1.4802973661668754e-17], 'true': [-2.3684757858670006e-16, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [1.7763568394002506e-16, 3.7007434154171884e-18], 'true': [1.7763568394002506e-16, nan]}, {'': [-2.3684757858670006e-16, 1.295260195396016e-17], 'true': [-2.3684757858670006e-16, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [1.4802973661668753e-16, -5.551115123125783e-18], 'true': [1.4802973661668753e-16, nan], 'true,true': [1.4802973661668753e-16, nan]}, {'': [-3.172065784643304e-17, 0.010013797405959847], 'true': [-3.172065784643304e-17, nan], 'true,true': [-3.172065784643304e-17, nan]}, {'': [0.00040096646052920624, -2.7755575615628915e-18], 'true': [0.00040096646052920624, nan], 'true,true': [0.00040096646052920624, nan], 'true,true,true': [0.00040096646052920624, nan]}, {'': [0.00031530994661096805, 2.7755575615628915e-18], 'true': [0.00031530994661096805, nan], 'true,true': [0.00031530994661096805, nan]}, {'': [0.0002494040001123447, -2.7755575615628915e-18], 'true': [0.0002494040001123447, nan]}, {'': [0.0, 0.004516167461693946], 'true': [0.0, nan]}, {'': [0.00043745242875676085, -2.7755575615628915e-18], 'true': [0.00043745242875676085, nan], 'true,true': [0.00043745242875676085, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583098;  // std dev = 4.71e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3207118471601497;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( actor(A), actor(B) )
%   | then return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.04510976492720925;  // std dev = 0.338, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25889175357761623;  // std dev = 0.054, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08670082865806407;  // std dev = 0.015, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.21242312604778119;  // std dev = 0.048, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08007819334204407;  // std dev = 0.014, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17907564158732736;  // std dev = 0.042, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07437497567734218;  // std dev = 0.013, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.1516645789068925;  // std dev = 1.29e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( movie(D, A), movie(D, B) )
%   | then return 0.018088606463585222;  // std dev = 0.211, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.06960546259269702;  // std dev = 0.012, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13680912093130432;  // std dev = 0.053, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06577834187193093;  // std dev = 0.013, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.161555
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 0.593 seconds
Total inference time: 0.779 seconds
AUC ROC: 0.976337


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096726
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.329 seconds
Refined model CLL: -0.096726


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.161555
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 1.906 seconds
Total inference time: 0.779 seconds
AUC ROC: 0.976337
Total revision time: 1.906
Best scored revision CLL: -0.096726


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:30
{'AUC ROC': 0.976337, 'AUC PR': 0.263636, 'CLL': -0.161555, 'Precision': [0.263636, 0.5], 'Recall': 1.0, 'F1': 0.417266, 'Learning time': 1.906, 'Inference time': 0.779, 'parameter_15': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.077955, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.628, 'Inference time': 0.911}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.3207118471601496;  // std dev = 2.11e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05510917406658728;  // std dev = 0.119, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.26293845893038886;  // std dev = 0.104, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0881594859618906;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2153471994162996;  // std dev = 0.092, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08132513978810843;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18126172813236446;  // std dev = 0.018, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07545242316095277;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.1504901884429053;  // std dev = 1.86e-09, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0453165867125864;  // std dev = 0.079, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.14027561787004134;  // std dev = 0.108, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06744779637291395;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078895
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.662 seconds
Total inference time: 0.903 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099221
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.387 seconds
Parameter learned model CLL: -0.099221


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 20, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [1.49e-08, 0, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.49e-08, 20, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [1.18e-08, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [2.11e-08, 0, 18], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.119, 20, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.104, 0, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.092, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.018, 0, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [1.86e-09, 0, 18], 'true,false': [0.0, 0, 0], 'false': [0.079, 20, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.108, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 20, 0]}]]
[{'': [-8.881784197001253e-17, 2.7755575615628915e-18], 'true': [-8.881784197001253e-17, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [2.6645352591003756e-16, 0.0], 'true': [2.6645352591003756e-16, nan]}, {'': [-2.6645352591003756e-16, 1.1102230246251566e-17], 'true': [-2.6645352591003756e-16, nan], 'true,true': [-2.6645352591003756e-16, nan]}, {'': [1.3322676295501878e-16, -1.3877787807814458e-18], 'true': [1.3322676295501878e-16, nan], 'true,true': [1.3322676295501878e-16, nan]}, {'': [2.4671622769447922e-17, 0.014124143999590732], 'true': [2.4671622769447922e-17, nan], 'true,true': [2.4671622769447922e-17, nan]}, {'': [0.0005428270490787535, 0.0], 'true': [0.0005428270490787535, nan], 'true,true': [0.0005428270490787535, nan], 'true,true,true': [0.0005428270490787535, nan]}, {'': [0.0004252552067716575, 0.0], 'true': [0.0004252552067716575, nan], 'true,true': [0.0004252552067716575, nan]}, {'': [0.0003352430405021978, -6.938893903907228e-18], 'true': [0.0003352430405021978, nan]}, {'': [3.0839528461809902e-18, 0.006269034858084543], 'true': [3.0839528461809902e-18, nan]}, {'': [0.0005803947907187968, 2.7755575615628915e-18], 'true': [0.0005803947907187968, nan], 'true,true': [0.0005803947907187968, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.11231637819360636;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830986;  // std dev = 5.16e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3207118471601496;  // std dev = 2.11e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( actor(A), actor(B) )
%   | then return -0.09269127618926094;  // std dev = 9.13e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0.0726699731505033;  // std dev = 0.453, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2601640858243227;  // std dev = 0.067, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.08725499128083139;  // std dev = 0.022, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.21332583730392218;  // std dev = 0.059, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.08055344146576102;  // std dev = 0.021, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17973995336234264;  // std dev = 0.052, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07478682802290826;  // std dev = 0.019, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.15129962175002293;  // std dev = 1.49e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( movie(D, A), movie(D, B) )
%   | then return 0.0335379740049108;  // std dev = 0.278, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.07007340783981343;  // std dev = 0.018, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13768543797282612;  // std dev = 0.064, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.06633363991688065;  // std dev = 0.018, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.161949
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 0.616 seconds
Total inference time: 0.768 seconds
AUC ROC: 0.976337


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097394
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.331 seconds
Refined model CLL: -0.097394


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.161949
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 1.996 seconds
Total inference time: 0.768 seconds
AUC ROC: 0.976337
Total revision time: 1.996
Best scored revision CLL: -0.097394


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:35
{'AUC ROC': 0.976337, 'AUC PR': 0.263636, 'CLL': -0.161949, 'Precision': [0.263636, 0.5], 'Recall': 1.0, 'F1': 0.417266, 'Learning time': 1.996, 'Inference time': 0.768, 'parameter_20': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.078895, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.662, 'Inference time': 0.903}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 2.36e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 7.45e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.30348671702059077;  // std dev = 0.405, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.060891035931613983;  // std dev = 0.110, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.24966358048559265;  // std dev = 0.392, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08769580258834829;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.21895059384995702;  // std dev = 0.092, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.1508361368727423;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08092869508596001;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18387140589902629;  // std dev = 0.016, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, B) )
%   | | then return -0.13251593384507418;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07510980278669825;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.14230354178085905;  // std dev = 0.054, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04873101572758786;  // std dev = 0.074, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1317422948534663;  // std dev = 0.291, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06694674891770618;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070542
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.701 seconds
Total inference time: 0.946 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102502
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.402 seconds
Parameter learned model CLL: -0.102502


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [2.36e-08, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.405, 1, 23], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.11, 24, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.392, 1, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.092, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.016, 0, 25], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.054, 1, 23], 'true,false': [0.0, 0, 0], 'false': [0.074, 24, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.291, 1, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}]]
[{'': [0.03698224852071082, 9.25185853854297e-18], 'true': [7.105427357601002e-16, 0.0], 'true,true': [7.105427357601002e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.026401128419570055, -4.625929269271485e-18], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.016486699015016572, 2.3129646346357427e-18], 'true': [-2.842170943040401e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.842170943040401e-16, nan]}, {'': [0.009965795208791005, -2.3129646346357427e-18], 'true': [0.009965795208791005, nan], 'true,true': [-3.552713678800501e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.006824217491468961, 0.012135063365328836], 'true': [0.006824217491468961, nan], 'true,true': [0.006824217491468961, nan]}, {'': [0.0059174456486680805, -5.782411586589357e-18], 'true': [0.0059174456486680805, nan], 'true,true': [0.0059174456486680805, nan], 'true,true,true': [0.0059174456486680805, nan]}, {'': [0.0053794382169780695, -1.1564823173178713e-18], 'true': [0.0003352993526347969, 0.0], 'true,true': [0.0003352993526347969, nan], 'true,false': [0.0, nan]}, {'': [0.003955975305523649, -8.0953762212251e-18], 'true': [0.00026417782734657004, 0.0], 'true,false': [0.0, nan]}, {'': [0.002946226229522751, 0.005456916063033139], 'true': [0.002946226229522751, nan]}, {'': [0.003261883170074582, -5.782411586589357e-18], 'true': [0.003261883170074582, nan], 'true,true': [0.003261883170074582, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 7.45e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.3598347048642936;  // std dev = 0.163, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.4175135841583098;  // std dev = 5.16e-08, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926094;  // std dev = 1.05e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.2808646179312751;  // std dev = 0.149, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.32071184716014967;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.22405273070816964;  // std dev = 0.142, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.2551722425694894;  // std dev = 2.11e-08, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else return -0.08518475138839682;  // std dev = 1.67e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21683599950078478;  // std dev = 0.052, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.21167472195190756;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109175;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18228998769157287;  // std dev = 0.045, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.17850125906261458;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420275;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.13261679139111218;  // std dev = 0.101, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.15116248769410534;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11481748400032148;  // std dev = 0.101, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.1327712646622045;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else return -0.0641918400820262;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071693
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.772 seconds
Total inference time: 0.783 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100376
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.353 seconds
Refined model CLL: -0.100376


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071693
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.2279999999999998 seconds
Total inference time: 0.783 seconds
AUC ROC: 1.0
Total revision time: 2.2279999999999998
Best scored revision CLL: -0.100376


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:39
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.071693, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.2279999999999998, 'Inference time': 0.783, 'parameter_25': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070542, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.701, 'Inference time': 0.946}}


Starting fold 3

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos	 examples: 178
Target test neg examples: 3543

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583099;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.2518113266019146;  // std dev = 0.377, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2043805033631121;  // std dev = 0.351, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.23028649709148005;  // std dev = 7.45e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.13883301112013177;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19201334068750064;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(D, B) )
%   | | then return -0.12305103690939956;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.11824408812945152;  // std dev = 0.102, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1032410315600457;  // std dev = 0.247, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076766
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.6 seconds
Total inference time: 0.962 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.112319
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.325 seconds
Parameter learned model CLL: -0.112319


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 5], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [5.27e-09, 0, 5], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.377, 1, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.351, 1, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [7.45e-09, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.0, 0, 5], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.102, 1, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.247, 1, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}]]
[{'': [0.1388888888888887, 0.0], 'true': [0.0, 0.0], 'true,true': [0.0, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.09915090450905224, 0.0], 'true': [0.0, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.061916714078618984, 0.0], 'true': [-4.4408920985006264e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-4.4408920985006264e-17, nan]}, {'': [0.03742709756190412, 0.0], 'true': [0.03742709756190412, nan], 'true,true': [4.4408920985006264e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.02373640866597888, 0.0], 'true': [0.02373640866597888, nan], 'true,true': [0.02373640866597888, nan]}, {'': [0.02054806366231014, 0.0], 'true': [0.02054806366231014, nan], 'true,true': [0.02054806366231014, nan], 'true,true,true': [0.02054806366231014, nan]}, {'': [0.018923501575330865, 0.0], 'true': [1.1102230246251566e-17, 0.0], 'true,true': [1.1102230246251566e-17, nan], 'true,false': [0.0, nan]}, {'': [0.013786883615350293, 0.0], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}, {'': [0.010453478807193455, 0.0], 'true': [0.010453478807193455, nan]}, {'': [0.010194806214885046, 0.0], 'true': [0.010194806214885046, nan], 'true,true': [0.010194806214885046, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.33099526521728556;  // std dev = 0.474, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.26053178561396195;  // std dev = 0.434, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20842329832206566;  // std dev = 0.414, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.24361910222570216;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.201063332492829;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20156233108362387;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.17069281965225447;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.11790677519082632;  // std dev = 0.291, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.10192903434099217;  // std dev = 0.291, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.084118
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.53 seconds
Total inference time: 0.814 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.121145
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.312 seconds
Refined model CLL: -0.121145


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076766
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.7670000000000001 seconds
Total inference time: 0.962 seconds
AUC ROC: 1.0
Total revision time: 1.7670000000000001
Best scored revision CLL: -0.112319


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:07:43
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076766, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.7670000000000001, 'Inference time': 0.962, 'parameter_5': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076766, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.6, 'Inference time': 0.962}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.2455476429148023;  // std dev = 0.529, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.046757595817104224;  // std dev = 0.130, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.21061937934857453;  // std dev = 0.509, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08883316074915137;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.23587256772043128;  // std dev = 0.053, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.1388300451774366;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08190061346778234;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19608140314046615;  // std dev = 0.015, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, B) )
%   | | then return -0.12304867999597051;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07594938047746903;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.11301117796955105;  // std dev = 0.105, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.03998112423511257;  // std dev = 0.087, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.10831096061466372;  // std dev = 0.362, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06820275480619285;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079968
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.691 seconds
Total inference time: 1.071 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.116834
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.339 seconds
Parameter learned model CLL: -0.116834


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 10], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 10], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 8, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.529, 2, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.13, 8, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.509, 2, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.053, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [2.63e-09, 8, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.015, 0, 10], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.105, 2, 9], 'true,false': [0.0, 0, 0], 'false': [0.087, 8, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.362, 2, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 8, 0]}]]
[{'': [0.1388888888888887, -6.938893903907228e-18], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.09915090450905217, 0.0], 'true': [8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.0619167140786188, -1.734723475976807e-18], 'true': [-1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-1.7763568394002506e-16, nan]}, {'': [0.037427097561904134, 1.734723475976807e-18], 'true': [0.037427097561904134, nan], 'true,true': [1.3322676295501878e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.025423459199263334, 0.01687922394025166], 'true': [0.025423459199263334, nan], 'true,true': [0.025423459199263334, nan]}, {'': [0.021553479020700383, 0.0], 'true': [0.021553479020700383, nan], 'true,true': [0.021553479020700383, nan], 'true,true,true': [0.021553479020700383, nan]}, {'': [0.01973394753792203, 8.673617379884035e-19], 'true': [0.00028039569342488415, 0.0], 'true,true': [0.00028039569342488415, nan], 'true,false': [0.0, nan]}, {'': [0.014327242491246185, 0.0], 'true': [0.00021868932905059202, 0.0], 'true,false': [0.0, nan]}, {'': [0.011089160025433297, 0.007592452299117952], 'true': [0.011089160025433297, nan]}, {'': [0.010925239845978844, 0.0], 'true': [0.010925239845978844, nan], 'true,true': [0.010925239845978844, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.15795862733523686;  // std dev = 0.519, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A), director(B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.1434895654825255;  // std dev = 0.472, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.09875548923790012;  // std dev = 0.030, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2551722425694894;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.11968810043096183;  // std dev = 0.454, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.08990613352492982;  // std dev = 0.025, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.23179079895887011;  // std dev = 0.139, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11912725889356804;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.08282244585295245;  // std dev = 0.024, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1934705880937022;  // std dev = 0.124, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.10718260542272698;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07674970721134007;  // std dev = 0.022, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), female(A) )
%   | then return 0.147839477136531;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.07550416292759861;  // std dev = 0.319, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.07478789255847007;  // std dev = 0.037, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13016651038121252;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.06544111938685601;  // std dev = 0.313, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.06958295057490484;  // std dev = 0.034, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083289
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.716 seconds
Total inference time: 0.886 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.110202
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.323 seconds
Refined model CLL: -0.110202


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083289
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.069 seconds
Total inference time: 0.886 seconds
AUC ROC: 1.0
Total revision time: 2.069
Best scored revision CLL: -0.110202


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:07:48
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.083289, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.069, 'Inference time': 0.886, 'parameter_10': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079968, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.691, 'Inference time': 1.071}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 1.49e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583098;  // std dev = 1.18e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.2655914307135616;  // std dev = 0.544, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.03757085974267289;  // std dev = 0.141, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2281184478892745;  // std dev = 0.527, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08957956611501619;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2313015904563929;  // std dev = 0.075, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.14337968460485218;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0825375101979051;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.19281587880845236;  // std dev = 0.017, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, B) )
%   | | then return -0.126653406633872;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07649884927201545;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.12238825678019091;  // std dev = 0.092, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.03464408255818367;  // std dev = 0.093, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.11909307236095718;  // std dev = 0.379, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0690072910773876;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081094
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.666 seconds
Total inference time: 1.021 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.112937
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.356 seconds
Parameter learned model CLL: -0.112937


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [1.49e-08, 0, 15], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 13, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-08, 13, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 15], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.544, 2, 13], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.141, 13, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.527, 2, 15], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.075, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.017, 0, 15], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.73e-09, 13, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.092, 2, 13], 'true,false': [0.0, 0, 0], 'false': [0.093, 13, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.379, 2, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 13, 0]}]]
[{'': [0.10380622837370206, -1.2810265668751807e-17], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.0741058663458661, 4.270088556250602e-18], 'true': [1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.04627685204491911, 8.540177112501205e-18], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.027973194025506288, -2.135044278125301e-18], 'true': [0.027973194025506288, nan], 'true,true': [1.4802973661668753e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.019748692010094392, 0.019748692010094434], 'true': [0.019748692010094392, nan], 'true,true': [0.019748692010094392, nan]}, {'': [0.016340445552453058, -2.135044278125301e-18], 'true': [0.016340445552453058, nan], 'true,true': [0.016340445552453058, nan], 'true,true,true': [0.016340445552453058, nan]}, {'': [0.014904039616904714, 0.0], 'true': [0.00037523808956803074, 0.0], 'true,true': [0.00037523808956803074, nan], 'true,false': [0.0, nan]}, {'': [0.010852746827527723, 1.0675221390626506e-18], 'true': [0.0002926474624495394, 0.0], 'true,false': [0.0, nan]}, {'': [0.008545526103997454, 0.008717817751902569], 'true': [0.008545526103997454, nan]}, {'': [0.008466667190246874, 4.270088556250602e-18], 'true': [0.008466667190246874, nan], 'true,true': [0.008466667190246874, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583098;  // std dev = 4.21e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.20986961869985143;  // std dev = 0.569, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A), director(B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.18343722701653603;  // std dev = 0.504, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.09726439547266495;  // std dev = 0.039, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2551722425694894;  // std dev = 2.11e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.1506668191875949;  // std dev = 0.480, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.08859591097722998;  // std dev = 0.032, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22656769836992863;  // std dev = 0.130, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.1282702556599306;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.08170421966370567;  // std dev = 0.030, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18954381166773962;  // std dev = 0.115, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11459811487627408;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07578481986852798;  // std dev = 0.028, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A), director(B) )
%   | then return 0.14899592404719;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.09417763545689614;  // std dev = 0.332, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07309752169733622;  // std dev = 0.047, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1310742306403463;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.08115345793209344;  // std dev = 0.325, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.0680757539273979;  // std dev = 0.042, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.084576
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.75 seconds
Total inference time: 0.88 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106409
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.349 seconds
Refined model CLL: -0.106409


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.084576
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.121 seconds
Total inference time: 0.88 seconds
AUC ROC: 1.0
Total revision time: 2.121
Best scored revision CLL: -0.106409


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:07:52
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.084576, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.121, 'Inference time': 0.88, 'parameter_15': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.081094, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.666, 'Inference time': 1.021}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.27937153482520855;  // std dev = 0.555, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0513509638543199;  // std dev = 0.124, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2346333786729665;  // std dev = 0.533, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0884620666488431;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22639481773844242;  // std dev = 0.083, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.1458904461425791;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08158368838152567;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18927119448131086;  // std dev = 0.016, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then return -0.1286336624991289;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07567575240209215;  // std dev = 1.05e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.12987617763753273;  // std dev = 0.082, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04289841910579421;  // std dev = 0.083, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1227255138508439;  // std dev = 0.385, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06778773250515939;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080383
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.693 seconds
Total inference time: 0.986 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108877
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.377 seconds
Parameter learned model CLL: -0.108877


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [1.49e-08, 0, 20], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.67e-08, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 20], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.555, 2, 18], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.124, 18, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.533, 2, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.083, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.016, 0, 20], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-08, 18, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.082, 2, 18], 'true,false': [0.0, 0, 0], 'false': [0.083, 18, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.385, 2, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}]]
[{'': [0.08264462809917356, -3.0839528461809902e-18], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.05899888532770057, 0.0], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.03684300341868208, 1.5419764230904953e-17], 'true': [-2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.6645352591003756e-16, nan]}, {'': [0.022270669623612512, -4.625929269271485e-18], 'true': [0.022270669623612512, nan], 'true,true': [1.3322676295501878e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.015381192815554334, 0.015381192815554312], 'true': [0.015381192815554334, nan], 'true,true': [0.015381192815554334, nan]}, {'': [0.012894694021512927, 0.0], 'true': [0.012894694021512927, nan], 'true,true': [0.012894694021512927, nan], 'true,true,true': [0.012894694021512927, nan]}, {'': [0.011768329638778689, 0.0], 'true': [0.00034549735693274465, 0.0], 'true,true': [0.00034549735693274465, nan], 'true,false': [0.0, nan]}, {'': [0.008598491675514564, 6.1679056923619804e-18], 'true': [0.000270750107452028, 0.0], 'true,false': [0.0, nan]}, {'': [0.006656770944763799, 0.0068811777379231805], 'true': [0.006656770944763799, nan]}, {'': [0.006754402696816834, 0.0], 'true': [0.006754402696816834, nan], 'true,true': [0.006754402696816834, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583098;  // std dev = 4.21e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.30215582557027737;  // std dev = 0.216, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926093;  // std dev = 1.05e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.23989465091318823;  // std dev = 0.199, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2551722425694894;  // std dev = 2.11e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.19265038674685891;  // std dev = 0.190, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.08518475138839683;  // std dev = 1.18e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22588745932349058;  // std dev = 0.098, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1907859701616522;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07877675473109177;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18892954355570718;  // std dev = 0.086, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1630513975069679;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07324622576333704;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.16172127523312227;  // std dev = 0.077, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07708303538951129;  // std dev = 0.098, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.12977780993787796;  // std dev = 1.39e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.09638859209065778;  // std dev = 0.123, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.06376015444548189;  // std dev = 0.000819, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.087467
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.765 seconds
Total inference time: 0.849 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.103954
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.342 seconds
Refined model CLL: -0.103954


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.087467
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.177 seconds
Total inference time: 0.849 seconds
AUC ROC: 1.0
Total revision time: 2.177
Best scored revision CLL: -0.103954


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:07:57
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.087467, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.177, 'Inference time': 0.849, 'parameter_20': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.080383, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.693, 'Inference time': 0.986}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 2.36e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 1.05e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.28763959729219674;  // std dev = 0.561, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05961902632130812;  // std dev = 0.112, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.23861528892876296;  // std dev = 0.536, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08779762342039815;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22329661427247668;  // std dev = 0.088, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.14742350240607116;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0810157755332434;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.187022401691101;  // std dev = 0.016, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, B) )
%   | | then return -0.12983967826088233;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07518507913814382;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.13439893565446626;  // std dev = 0.074, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04790849008306682;  // std dev = 0.075, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.12493549290605553;  // std dev = 0.389, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06706117265536206;  // std dev = 1.24e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079968
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.698 seconds
Total inference time: 0.977 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106281
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.4 seconds
Parameter learned model CLL: -0.106281


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [2.36e-08, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-08, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.561, 2, 23], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.112, 23, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.536, 2, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.088, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.016, 0, 25], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.074, 2, 23], 'true,false': [0.0, 0, 0], 'false': [0.075, 23, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.389, 2, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.24e-08, 23, 0]}]]
[{'': [0.06858710562414343, 9.654113257610057e-18], 'true': [7.105427357601002e-16, 0.0], 'true,true': [7.105427357601002e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.04896340963409988, -2.413528314402514e-18], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.030576155100552255, 4.827056628805028e-18], 'true': [-2.842170943040401e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.842170943040401e-16, nan]}, {'': [0.01848251731452055, -2.413528314402514e-18], 'true': [0.01848251731452055, nan], 'true,true': [-3.552713678800501e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.012578397680275568, 0.01257839768027552], 'true': [0.012578397680275568, nan], 'true,true': [0.012578397680275568, nan]}, {'': [0.010638004391577447, 0.0], 'true': [0.010638004391577447, nan], 'true,true': [0.010638004391577447, nan], 'true,true,true': [0.010638004391577447, nan]}, {'': [0.009713410053194527, 0.0], 'true': [0.0003102306418829759, 0.0], 'true,true': [0.0003102306418829759, nan], 'true,false': [0.0, nan]}, {'': [0.007112049888395504, -2.413528314402514e-18], 'true': [0.00024385997491180422, 0.0], 'true,false': [0.0, nan]}, {'': [0.00544611851387292, 0.005674257012941871], 'true': [0.00544611851387292, nan]}, {'': [0.005610341274242845, 6.637202864606914e-18], 'true': [0.005610341274242845, nan], 'true,true': [0.005610341274242845, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360638;  // std dev = 1.05e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583098;  // std dev = 5.16e-08, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.32312996349537415;  // std dev = 0.200, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926094;  // std dev = 1.18e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.2549346308498423;  // std dev = 0.184, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2551722425694894;  // std dev = 2.11e-08, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.20413891816237462;  // std dev = 0.175, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.08518475138839682;  // std dev = 1.58e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22313043262984014;  // std dev = 0.089, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.19822765443012627;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07877675473109175;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18690284264244958;  // std dev = 0.078, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.16859239677515434;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07324622576333704;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( female(A) )
%   | then return 0.14976826614791738;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.11961061743146403;  // std dev = 0.125, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.06842697784420275;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13167972261294197;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.10296339442911653;  // std dev = 0.125, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.0641918400820262;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095309
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.794 seconds
Total inference time: 0.83 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.105276
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.345 seconds
Refined model CLL: -0.105276


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095309
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.237 seconds
Total inference time: 0.83 seconds
AUC ROC: 1.0
Total revision time: 2.237
Best scored revision CLL: -0.105276


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:01
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.095309, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.237, 'Inference time': 0.83, 'parameter_25': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079968, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.698, 'Inference time': 0.977}}


Starting fold 4

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos	 examples: 45
Target test neg examples: 1891

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583099;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.023790755631025878;  // std dev = 0.154, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.26932114521402895;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09070977761578683;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.21988205462710556;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08350049674800492;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18460064037347698;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07732858878256614;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.14867666923878964;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.027034678977782712;  // std dev = 0.101, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.14507062977920795;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0702031650614777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.08523
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.577 seconds
Total inference time: 0.721 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102769
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.333 seconds
Parameter learned model CLL: -0.102769


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [5.27e-09, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.154, 5, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.063, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.056, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.022, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 0], 'false': [0.101, 5, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.064, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [-4.4408920985006264e-17, nan], 'true,true': [-4.4408920985006264e-17, nan]}, {'': [4.4408920985006264e-17, 0.0], 'true': [4.4408920985006264e-17, nan], 'true,true': [4.4408920985006264e-17, nan]}, {'': [0.0, 0.023736408665978894], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0008007657841786142, 2.7755575615628915e-18], 'true': [0.0008007657841786142, nan], 'true,true': [0.0008007657841786142, nan], 'true,true,true': [0.0008007657841786142, nan]}, {'': [0.0006210086063809017, 0.0], 'true': [0.0006210086063809017, nan], 'true,true': [0.0006210086063809017, nan]}, {'': [0.0004852223481672635, 0.0], 'true': [0.0004852223481672635, nan]}, {'': [0.0, 0.010104221444053017], 'true': [0.0, nan]}, {'': [0.0008118917192243946, 0.0], 'true': [0.0008118917192243946, nan], 'true,true': [0.0008118917192243946, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.023790755631025878;  // std dev = 0.377, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.26932114521402895;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09070977761578683;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.21988205462710556;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08350049674800492;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.18460064037347698;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07732858878256614;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.14867666923878964;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.027034678977782712;  // std dev = 0.246, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.14507062977920795;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0702031650614777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.969593
   AUC PR    = 0.28125
   CLL	      = -0.193616
   Precision = 0.28125 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.439024


Total learning time: 0.46 seconds
Total inference time: 0.588 seconds
AUC ROC: 0.969593


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102769
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.305 seconds
Refined model CLL: -0.102769


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.08523
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.6749999999999998 seconds
Total inference time: 0.721 seconds
AUC ROC: 1.0
Total revision time: 1.6749999999999998
Best scored revision CLL: -0.102769


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:08:05
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.08523, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 1.6749999999999998, 'Inference time': 0.721, 'parameter_5': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.08523, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.577, 'Inference time': 0.721}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05510917406658727;  // std dev = 0.119, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2629384589303888;  // std dev = 0.074, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08815948596189063;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2153471994162996;  // std dev = 0.065, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08132513978810842;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18126172813236446;  // std dev = 0.018, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07545242316095276;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.1504901884429053;  // std dev = 1.86e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04531658671258642;  // std dev = 0.079, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.14027561787004128;  // std dev = 0.076, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06744779637291397;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082735
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.615 seconds
Total inference time: 0.781 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099221
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.346 seconds
Parameter learned model CLL: -0.099221


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [1.18e-08, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 10, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.119, 10, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.074, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 10, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.065, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.018, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [1.86e-09, 0, 9], 'true,false': [0.0, 0, 0], 'false': [0.079, 10, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.076, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}]]
[{'': [-8.881784197001253e-17, -1.1102230246251566e-17], 'true': [-8.881784197001253e-17, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [8.881784197001253e-17, 2.7755575615628915e-18], 'true': [8.881784197001253e-17, nan]}, {'': [-1.7763568394002506e-16, 0.0], 'true': [-1.7763568394002506e-16, nan], 'true,true': [-1.7763568394002506e-16, nan]}, {'': [1.3322676295501878e-16, 1.3877787807814458e-18], 'true': [1.3322676295501878e-16, nan], 'true,true': [1.3322676295501878e-16, nan]}, {'': [-3.700743415417188e-17, 0.014124143999590747], 'true': [-3.700743415417188e-17, nan], 'true,true': [-3.700743415417188e-17, nan]}, {'': [0.0005428270490787646, 2.7755575615628915e-18], 'true': [0.0005428270490787646, nan], 'true,true': [0.0005428270490787646, nan], 'true,true,true': [0.0005428270490787646, nan]}, {'': [0.0004252552067716464, 1.3877787807814458e-18], 'true': [0.0004252552067716464, nan], 'true,true': [0.0004252552067716464, nan]}, {'': [0.00033524304050218666, -2.0816681711721684e-18], 'true': [0.00033524304050218666, nan]}, {'': [3.0839528461809902e-18, 0.006269034858084544], 'true': [3.0839528461809902e-18, nan]}, {'': [0.0005803947907187995, -2.7755575615628915e-18], 'true': [0.0005803947907187995, nan], 'true,true': [0.0005803947907187995, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( female(B) )
%   | then return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.010659504648091699;  // std dev = 0.358, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.261494424733241;  // std dev = 0.060, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08770681703672209;  // std dev = 0.012, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2142915405022098;  // std dev = 0.053, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08093928322981844;  // std dev = 0.011, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1804647324454268;  // std dev = 0.047, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07511989439010543;  // std dev = 0.011, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.15091213246399038;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( female(B) )
%   | then return -0.06801010457652322;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.007378661185767136;  // std dev = 0.234, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13894073141502253;  // std dev = 0.060, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06698212497832345;  // std dev = 0.015, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.969593
   AUC PR    = 0.28125
   CLL	      = -0.194424
   Precision = 0.28125 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.439024


Total learning time: 0.573 seconds
Total inference time: 0.626 seconds
AUC ROC: 0.969593


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098326
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.312 seconds
Refined model CLL: -0.098326


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.969593
   AUC PR    = 0.28125
   CLL	      = -0.194424
   Precision = 0.28125 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.439024


Total learning time: 1.8459999999999999 seconds
Total inference time: 0.626 seconds
AUC ROC: 0.969593
Total revision time: 1.8459999999999999
Best scored revision CLL: -0.098326


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:08:09
{'AUC ROC': 0.969593, 'AUC PR': 0.28125, 'CLL': -0.194424, 'Precision': [0.28125, 0.5], 'Recall': 1.0, 'F1': 0.439024, 'Learning time': 1.8459999999999999, 'Inference time': 0.626, 'parameter_10': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.082735, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.615, 'Inference time': 0.781}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 1.49e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583098;  // std dev = 1.18e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.29315163893685564;  // std dev = 0.399, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06513106796596693;  // std dev = 0.103, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2413024294337214;  // std dev = 0.381, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08735717026912301;  // std dev = 5.27e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22116719761359205;  // std dev = 0.065, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.1484570380750929;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0806389859664046;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18547196012019168;  // std dev = 0.015, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, B) )
%   | | then return -0.13065141217565107;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07485928941064626;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.13742743623034628;  // std dev = 0.068, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05127379799432112;  // std dev = 0.069, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.12642163385869026;  // std dev = 0.277, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06657890034423565;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071751
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.66 seconds
Total inference time: 0.787 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104481
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.373 seconds
Parameter learned model CLL: -0.104481


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [1.49e-08, 0, 15], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.18e-08, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 15], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.399, 1, 14], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.103, 14, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.381, 1, 15], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 14, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.065, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.015, 0, 15], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.73e-09, 14, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.068, 1, 14], 'true,false': [0.0, 0, 0], 'false': [0.069, 14, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.277, 1, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}]]
[{'': [0.05859374999999978, -1.1895246692412391e-17], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.041829287839756535, 3.96508223080413e-18], 'true': [1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.02612111375191717, 9.912705577010326e-18], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.015789556783928405, -3.96508223080413e-18], 'true': [0.015789556783928405, nan], 'true,true': [1.4802973661668753e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.010633911082358515, 0.010633911082358545], 'true': [0.010633911082358515, nan], 'true,true': [0.010633911082358515, nan]}, {'': [0.009049719805116437, 1.982541115402065e-18], 'true': [0.009049719805116437, nan], 'true,true': [0.009049719805116437, nan], 'true,true,true': [0.009049719805116437, nan]}, {'': [0.008266217053873787, -1.982541115402065e-18], 'true': [0.0002784184652709243, 0.0], 'true,true': [0.0002784184652709243, nan], 'true,false': [0.0, nan]}, {'': [0.0060611180025581975, 9.912705577010326e-19], 'true': [0.00021931837908107562, 0.0], 'true,false': [0.0, nan]}, {'': [0.004606165468711276, 0.004824326962044221], 'true': [0.004606165468711276, nan]}, {'': [0.004794920559768906, -4.956352788505163e-19], 'true': [0.004794920559768906, nan], 'true,true': [0.004794920559768906, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3598347048642936;  // std dev = 0.163, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.2808646179312751;  // std dev = 0.149, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.22405273070816964;  // std dev = 0.142, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22155485541295092;  // std dev = 0.043, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.21167472195190756;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18572418675915775;  // std dev = 0.037, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.17850125906261458;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.15011932235981917;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.13160453479993323;  // std dev = 0.101, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.06842697784420272;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13195474557586406;  // std dev = 3.73e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.1140233196522044;  // std dev = 0.101, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.06419184008202619;  // std dev = 6.97e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073308
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.794 seconds
Total inference time: 0.695 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.10416
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.336 seconds
Refined model CLL: -0.10416


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073308
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.163 seconds
Total inference time: 0.695 seconds
AUC ROC: 1.0
Total revision time: 2.163
Best scored revision CLL: -0.10416


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:08:13
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073308, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.163, 'Inference time': 0.695, 'parameter_15': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.071751, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.66, 'Inference time': 0.787}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.2989537880364964;  // std dev = 0.402, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05331955015598376;  // std dev = 0.121, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.24817749584104046;  // std dev = 0.391, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08830345523156219;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2210890706118745;  // std dev = 0.088, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.15006681309011577;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08144817362860969;  // std dev = 7.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1854344512169078;  // std dev = 0.017, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then return -0.13191361668798876;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07555870889111634;  // std dev = 8.33e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.13963623293864985;  // std dev = 0.061, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.044160664071421774;  // std dev = 0.081, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.13103783702146496;  // std dev = 0.289, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06760976788499143;  // std dev = 6.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072734
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.684 seconds
Total inference time: 0.781 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104297
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.394 seconds
Parameter learned model CLL: -0.104297


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [1.49e-08, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.67e-08, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 20], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.402, 1, 18], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.121, 19, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.391, 1, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.088, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.017, 0, 20], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.33e-09, 19, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.061, 1, 18], 'true,false': [0.0, 0, 0], 'false': [0.081, 19, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.289, 1, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.45e-09, 19, 0]}]]
[{'': [0.04535147392290242, 0.0], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.03237580555397633, 0.0], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.02021770255628346, 1.460819769243627e-17], 'true': [-2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.6645352591003756e-16, nan]}, {'': [0.012221093081438202, -5.843279076974508e-18], 'true': [0.012221093081438202, nan], 'true,true': [1.3322676295501878e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.008521436462911007, 0.014726261702974645], 'true': [0.008521436462911007, nan], 'true,true': [0.008521436462911007, nan]}, {'': [0.007275625595043815, -2.921639538487254e-18], 'true': [0.007275625595043815, nan], 'true,true': [0.007275625595043815, nan], 'true,true,true': [0.007275625595043815, nan]}, {'': [0.006612462352097533, 2.921639538487254e-18], 'true': [0.00038324308843548096, 0.0], 'true,true': [0.00038324308843548096, nan], 'true,false': [0.0, nan]}, {'': [0.004854168167574351, 3.652049423109067e-18], 'true': [0.00030117199485922287, 0.0], 'true,false': [0.0, nan]}, {'': [0.003674059109670578, 0.006564388191843772], 'true': [0.003674059109670578, nan]}, {'': [0.003979074514517032, 2.1912296538654404e-18], 'true': [0.003979074514517032, nan], 'true,true': [0.003979074514517032, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.37758205233937553;  // std dev = 0.138, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2932360378029859;  // std dev = 0.126, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.09269127618926093;  // std dev = 1.18e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2551722425694894;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.23363120351285593;  // std dev = 0.120, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.08518475138839683;  // std dev = 1.29e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21883243036479622;  // std dev = 0.033, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.218374748998534;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109179;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18373419539639646;  // std dev = 0.029, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.18339135606858262;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.15072154080612643;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.1378515775766051;  // std dev = 0.085, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.06842697784420274;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13242625131127905;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.11985746585531781;  // std dev = 0.086, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.0641918400820262;  // std dev = 6.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073529
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.783 seconds
Total inference time: 0.657 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102034
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.354 seconds
Refined model CLL: -0.102034


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073529
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.2150000000000003 seconds
Total inference time: 0.657 seconds
AUC ROC: 1.0
Total revision time: 2.2150000000000003
Best scored revision CLL: -0.102034


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:08:17
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073529, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.2150000000000003, 'Inference time': 0.657, 'parameter_20': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072734, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.684, 'Inference time': 0.781}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 2.36e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 7.45e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.30348671702059077;  // std dev = 0.405, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.060891035931613983;  // std dev = 0.110, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.24966358048559262;  // std dev = 0.392, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08769580258834829;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.21895059384995705;  // std dev = 0.092, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.1508361368727423;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08092869508596001;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18387140589902629;  // std dev = 0.016, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, B) )
%   | | then return -0.13251593384507418;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07510980278669825;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.14230354178085905;  // std dev = 0.054, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.04873101572758786;  // std dev = 0.074, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1317422948534663;  // std dev = 0.291, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06694674891770618;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072215
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.732 seconds
Total inference time: 0.819 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102502
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.396 seconds
Parameter learned model CLL: -0.102502


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [2.36e-08, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.405, 1, 23], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.11, 24, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.392, 1, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.092, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.016, 0, 25], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.054, 1, 23], 'true,false': [0.0, 0, 0], 'false': [0.074, 24, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.291, 1, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}]]
[{'': [0.03698224852071082, 9.25185853854297e-18], 'true': [7.105427357601002e-16, 0.0], 'true,true': [7.105427357601002e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.026401128419570055, -4.625929269271485e-18], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.016486699015016572, 2.3129646346357427e-18], 'true': [-2.842170943040401e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.842170943040401e-16, nan]}, {'': [0.009965795208791005, -2.3129646346357427e-18], 'true': [0.009965795208791005, nan], 'true,true': [-3.552713678800501e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.006824217491468961, 0.012135063365328836], 'true': [0.006824217491468961, nan], 'true,true': [0.006824217491468961, nan]}, {'': [0.005917445648668089, -5.782411586589357e-18], 'true': [0.005917445648668089, nan], 'true,true': [0.005917445648668089, nan], 'true,true,true': [0.005917445648668089, nan]}, {'': [0.005379438216978052, -1.1564823173178713e-18], 'true': [0.00033529935263478807, 0.0], 'true,true': [0.00033529935263478807, nan], 'true,false': [0.0, nan]}, {'': [0.003955975305523649, -8.0953762212251e-18], 'true': [0.00026417782734657004, 0.0], 'true,false': [0.0, nan]}, {'': [0.002946226229522751, 0.005456916063033139], 'true': [0.002946226229522751, nan]}, {'': [0.003261883170074582, -5.782411586589357e-18], 'true': [0.003261883170074582, nan], 'true,true': [0.003261883170074582, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 7.45e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.3850692145554257;  // std dev = 0.126, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.2984246790471678;  // std dev = 0.114, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return -0.09269127618926094;  // std dev = 1.05e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.2376682048880379;  // std dev = 0.109, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return -0.08518475138839682;  // std dev = 1.67e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21709254325071267;  // std dev = 0.030, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.22124083439002482;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109175;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1824642555175222;  // std dev = 0.026, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.18547412402163294;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.15110721753819423;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.14062857789764197;  // std dev = 0.077, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return -0.06842697784420275;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1327280296385096;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.12245838310132535;  // std dev = 0.078, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return -0.0641918400820262;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073632
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.747 seconds
Total inference time: 0.649 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100645
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.352 seconds
Refined model CLL: -0.100645


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073632
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.227 seconds
Total inference time: 0.649 seconds
AUC ROC: 1.0
Total revision time: 2.227
Best scored revision CLL: -0.100645


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:08:21
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.073632, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.227, 'Inference time': 0.649, 'parameter_25': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072215, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.732, 'Inference time': 0.819}}


Starting fold 5

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos	 examples: 45
Target test neg examples: 2071

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583099;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.025423901910570628;  // std dev = 0.187, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2791827581499097;  // std dev = 0.066, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0948516716010991;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22678138129809106;  // std dev = 0.057, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08701521868559602;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18960872258639733;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08034628108886939;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.14594234242663495;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 5.705462164531542E-5;  // std dev = 0.118, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.1518871944508891;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07461000675516917;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082411
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.578 seconds
Total inference time: 0.73 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107913
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.34 seconds
Parameter learned model CLL: -0.107913


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [5.27e-09, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.187, 5, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.066, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.057, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.023, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.0, 0, 0], 'false': [0.118, 5, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.064, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.86e-09, 5, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [-4.4408920985006264e-17, nan], 'true,true': [-4.4408920985006264e-17, nan]}, {'': [4.4408920985006264e-17, 0.0], 'true': [4.4408920985006264e-17, nan], 'true,true': [4.4408920985006264e-17, nan]}, {'': [0.0, 0.03487798824388735], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0008647572876563814, 1.3877787807814458e-18], 'true': [0.0008647572876563814, nan], 'true,true': [0.0008647572876563814, nan], 'true,true,true': [0.0008647572876563814, nan]}, {'': [0.0006599827116966384, 0.0], 'true': [0.0006599827116966384, nan], 'true,true': [0.0006599827116966384, nan]}, {'': [0.0005085719682749401, 0.0], 'true': [0.0005085719682749401, nan]}, {'': [0.0, 0.01393645455283018], 'true': [0.0, nan]}, {'': [0.000808241934361506, 6.938893903907229e-19], 'true': [0.000808241934361506, nan], 'true,true': [0.000808241934361506, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( actor(A), actor(B) )
%   | then return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.18291080604367946;  // std dev = 0.338, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.26599645305822683;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0900002801333905;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2174135852819307;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.082903651341276;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.18271566596491448;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0768204693310584;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.14965112944901493;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06763340334266633;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.08295634107162538;  // std dev = 0.208, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.14165889467649523;  // std dev = 0.028, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06960453145370973;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.98318
   AUC PR    = 0.399657
   CLL	      = -0.145014
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 0.583 seconds
Total inference time: 0.625 seconds
AUC ROC: 0.98318


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100755
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.31 seconds
Refined model CLL: -0.100755


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.98318
   AUC PR    = 0.399657
   CLL	      = -0.145014
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 1.811 seconds
Total inference time: 0.625 seconds
AUC ROC: 0.98318
Total revision time: 1.811
Best scored revision CLL: -0.100755


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:08:25
{'AUC ROC': 0.98318, 'AUC PR': 0.399657, 'CLL': -0.145014, 'Precision': [0.348837, 0.5], 'Recall': 1.0, 'F1': 0.517241, 'Learning time': 1.811, 'Inference time': 0.625, 'parameter_5': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.082411, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.578, 'Inference time': 0.73}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.023790755631025864;  // std dev = 0.154, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.2693211452140289;  // std dev = 0.089, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.09070977761578682;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.21988205462710556;  // std dev = 0.079, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08350049674800492;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18460064037347695;  // std dev = 0.022, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07732858878256613;  // std dev = 4.56e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.14867666923878964;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.02703467897778271;  // std dev = 0.101, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.14507062977920793;  // std dev = 0.090, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07020316506147771;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078269
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.601 seconds
Total inference time: 0.761 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102769
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.352 seconds
Parameter learned model CLL: -0.102769


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [1.18e-08, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 10, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 8], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.154, 10, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.089, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 10, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.079, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.022, 0, 10], 'true,false': [0.0, 0, 0], 'false': [4.56e-09, 10, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.0, 0, 0], 'false': [0.101, 10, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.09, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}]]
[{'': [-8.881784197001253e-17, -1.1102230246251566e-17], 'true': [-8.881784197001253e-17, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [8.881784197001253e-17, 2.7755575615628915e-18], 'true': [8.881784197001253e-17, nan]}, {'': [-1.7763568394002506e-16, 0.0], 'true': [-1.7763568394002506e-16, nan], 'true,true': [-1.7763568394002506e-16, nan]}, {'': [1.3322676295501878e-16, 1.3877787807814458e-18], 'true': [1.3322676295501878e-16, nan], 'true,true': [1.3322676295501878e-16, nan]}, {'': [-4.163336342344337e-17, 0.023736408665978887], 'true': [-4.163336342344337e-17, nan], 'true,true': [-4.163336342344337e-17, nan]}, {'': [0.0008007657841786475, 5.551115123125783e-18], 'true': [0.0008007657841786475, nan], 'true,true': [0.0008007657841786475, nan], 'true,true,true': [0.0008007657841786475, nan]}, {'': [0.0006210086063809017, 1.3877787807814458e-18], 'true': [0.0006210086063809017, nan], 'true,true': [0.0006210086063809017, nan]}, {'': [0.00048522234816725793, 2.0816681711721684e-18], 'true': [0.00048522234816725793, nan]}, {'': [-3.469446951953614e-18, 0.010104221444053011], 'true': [-3.469446951953614e-18, nan]}, {'': [0.0008118917192243946, -2.7755575615628915e-18], 'true': [0.0008118917192243946, nan], 'true,true': [0.0008118917192243946, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( actor(A), actor(B) )
%   | then return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.11401028548544435;  // std dev = 0.413, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2634172712604016;  // std dev = 0.052, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08869480599064038;  // std dev = 0.022, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.21562410160652634;  // std dev = 0.046, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08178639505352003;  // std dev = 0.021, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.18142472662330317;  // std dev = 0.040, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07585392844620216;  // std dev = 0.019, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.15037277522453263;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06784744127786026;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.0482915099391239;  // std dev = 0.261, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.14007272135229956;  // std dev = 0.050, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06811659015518493;  // std dev = 0.028, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.98318
   AUC PR    = 0.399657
   CLL	      = -0.143187
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 0.573 seconds
Total inference time: 0.611 seconds
AUC ROC: 0.98318


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099349
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.312 seconds
Refined model CLL: -0.099349


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.98318
   AUC PR    = 0.399657
   CLL	      = -0.143187
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 1.8379999999999999 seconds
Total inference time: 0.611 seconds
AUC ROC: 0.98318
Total revision time: 1.8379999999999999
Best scored revision CLL: -0.099349


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:08:29
{'AUC ROC': 0.98318, 'AUC PR': 0.399657, 'CLL': -0.143187, 'Precision': [0.348837, 0.5], 'Recall': 1.0, 'F1': 0.517241, 'Learning time': 1.8379999999999999, 'Inference time': 0.611, 'parameter_10': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.078269, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.601, 'Inference time': 0.761}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 1.49e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.4175135841583098;  // std dev = 1.18e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.044055614618742064;  // std dev = 0.133, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.26520053724027803;  // std dev = 0.099, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08905210716139503;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.21696053807509091;  // std dev = 0.087, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08208751399730621;  // std dev = 6.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18245380064358746;  // std dev = 0.020, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07611068262659135;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.14984349270535008;  // std dev = 4.17e-09, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.03876645869179644;  // std dev = 0.088, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.14201084034376066;  // std dev = 0.101, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0684159273100364;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07659
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.645 seconds
Total inference time: 0.759 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.1005
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.37 seconds
Parameter learned model CLL: -0.1005


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [1.49e-08, 0, 15], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.39e-08, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)'}, {'true,true,true': [1.18e-08, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.0, 0, 13], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.133, 15, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.099, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 15, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,true,true': [0.087, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.45e-09, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.02, 0, 15], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [4.17e-09, 0, 13], 'true,false': [0.0, 0, 0], 'false': [0.088, 15, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.101, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}]]
[{'': [-2.3684757858670006e-16, -1.4802973661668754e-17], 'true': [-2.3684757858670006e-16, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [1.7763568394002506e-16, 3.7007434154171884e-18], 'true': [1.7763568394002506e-16, nan]}, {'': [-2.3684757858670006e-16, 1.295260195396016e-17], 'true': [-2.3684757858670006e-16, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [1.4802973661668753e-16, -5.551115123125783e-18], 'true': [1.4802973661668753e-16, nan], 'true,true': [1.4802973661668753e-16, nan]}, {'': [-5.124106267500723e-17, 0.017740706823015352], 'true': [-5.124106267500723e-17, nan], 'true,true': [-5.124106267500723e-17, nan]}, {'': [0.0006536835110271404, 3.7007434154171884e-18], 'true': [0.0006536835110271404, nan], 'true,true': [0.0006536835110271404, nan], 'true,true,true': [0.0006536835110271404, nan]}, {'': [0.0005102783381582432, 2.7755575615628915e-18], 'true': [0.0005102783381582432, nan], 'true,true': [0.0005102783381582432, nan]}, {'': [0.000401005076848752, -1.8503717077085942e-18], 'true': [0.000401005076848752, nan]}, {'': [1.708035422500241e-17, 0.007757946348196108], 'true': [1.708035422500241e-17, nan]}, {'': [0.00068586411339762, 0.0], 'true': [0.00068586411339762, nan], 'true,true': [0.00068586411339762, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583098;  // std dev = 4.71e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3207118471601497;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( actor(A), actor(B) )
%   | then return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.11401028548544435;  // std dev = 0.413, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.26066892836343086;  // std dev = 0.054, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08752478778989253;  // std dev = 0.023, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.21367515868247924;  // std dev = 0.048, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.0807852033857483;  // std dev = 0.022, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1799913022659111;  // std dev = 0.042, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07498799069063437;  // std dev = 0.020, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.1511577197252425;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06803977543921377;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.048627701997120056;  // std dev = 0.262, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1380754026408676;  // std dev = 0.052, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06682035704953604;  // std dev = 0.029, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.98318
   AUC PR    = 0.399657
   CLL	      = -0.143189
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 0.611 seconds
Total inference time: 0.628 seconds
AUC ROC: 0.98318


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097803
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.331 seconds
Refined model CLL: -0.097803


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.98318
   AUC PR    = 0.399657
   CLL	      = -0.143189
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 1.957 seconds
Total inference time: 0.628 seconds
AUC ROC: 0.98318
Total revision time: 1.957
Best scored revision CLL: -0.097803


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:08:32
{'AUC ROC': 0.98318, 'AUC PR': 0.399657, 'CLL': -0.143189, 'Precision': [0.348837, 0.5], 'Recall': 1.0, 'F1': 0.517241, 'Learning time': 1.957, 'Inference time': 0.628, 'parameter_15': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.07659, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.645, 'Inference time': 0.759}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830986;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.2989537880364964;  // std dev = 0.402, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.05331955015598376;  // std dev = 0.121, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.24817749584104046;  // std dev = 0.391, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08830345523156219;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22108907061187444;  // std dev = 0.088, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.15006681309011577;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08144817362860969;  // std dev = 7.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1854344512169078;  // std dev = 0.017, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then return -0.13191361668798876;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07555870889111634;  // std dev = 8.33e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.13963623293864985;  // std dev = 0.061, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.044160664071421774;  // std dev = 0.081, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.131037837021465;  // std dev = 0.289, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06760976788499143;  // std dev = 6.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070127
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.682 seconds
Total inference time: 0.782 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104297
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.392 seconds
Parameter learned model CLL: -0.104297


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [1.49e-08, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.67e-08, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [1.18e-08, 0, 20], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.402, 1, 18], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.121, 19, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.391, 1, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.088, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.017, 0, 20], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [8.33e-09, 19, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.061, 1, 18], 'true,false': [0.0, 0, 0], 'false': [0.081, 19, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.289, 1, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.45e-09, 19, 0]}]]
[{'': [0.04535147392290242, 0.0], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.03237580555397633, 0.0], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.02021770255628346, 1.460819769243627e-17], 'true': [-2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.6645352591003756e-16, nan]}, {'': [0.012221093081438202, -5.843279076974508e-18], 'true': [0.012221093081438202, nan], 'true,true': [1.3322676295501878e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.008521436462911007, 0.014726261702974646], 'true': [0.008521436462911007, nan], 'true,true': [0.008521436462911007, nan]}, {'': [0.007275625595043826, -2.921639538487254e-18], 'true': [0.007275625595043826, nan], 'true,true': [0.007275625595043826, nan], 'true,true,true': [0.007275625595043826, nan]}, {'': [0.0066124623520975485, 2.921639538487254e-18], 'true': [0.0003832430884354976, 0.0], 'true,true': [0.0003832430884354976, nan], 'true,false': [0.0, nan]}, {'': [0.004854168167574361, 3.652049423109067e-18], 'true': [0.000301171994859234, 0.0], 'true,false': [0.0, nan]}, {'': [0.003674059109670578, 0.006564388191843772], 'true': [0.003674059109670578, nan]}, {'': [0.003979074514517027, 2.1912296538654404e-18], 'true': [0.003979074514517027, nan], 'true,true': [0.003979074514517027, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.37758205233937553;  // std dev = 0.138, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926093;  // std dev = 1.18e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2932360378029859;  // std dev = 0.126, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2551722425694894;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.23363120351285593;  // std dev = 0.120, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.08518475138839683;  // std dev = 1.29e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21883243036479622;  // std dev = 0.033, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.218374748998534;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109179;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18373419539639643;  // std dev = 0.029, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.18339135606858262;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420274;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.15072154080612643;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.1378515775766051;  // std dev = 0.085, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13242625131127905;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.11985746585531781;  // std dev = 0.086, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.0641918400820262;  // std dev = 6.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070605
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.827 seconds
Total inference time: 0.673 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102034
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.348 seconds
Refined model CLL: -0.102034


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070605
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.249 seconds
Total inference time: 0.673 seconds
AUC ROC: 1.0
Total revision time: 2.249
Best scored revision CLL: -0.102034


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:08:37
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070605, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.249, 'Inference time': 0.673, 'parameter_20': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070127, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.682, 'Inference time': 0.782}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;publication(C, D), ta(E, D, F).;true;false
0;true,true,true;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false;publication(J, A), publication(K, B).;true;true
0;true,false,true;publication(J, L), professor(L).;false;false
0;true,false,false;ta(M, A, N).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
1;true,true,false;tempadvisedby(G, B).;false;false
1;true,false;publication(H, A), publication(I, B).;true;true
1;true,false,true;publication(H, J), professor(J).;false;false
1;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A).;true;true
2;true,false,true;publication(E, F), professor(F).;false;false
2;true,false,false;projectmember(G, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), tempadvisedby(D, B).;true;true
3;true,true;publication(C, A).;true;true
3;true,true,true;ta(E, A, F).;false;false
3;true,true,false;publication(G, A), ta(H, D, I).;false;false
3;true,false;publication(J, A).;true;true
3;true,false,true;publication(J, K), professor(K).;false;false
3;true,false,false;tempadvisedby(L, B).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;publication(I, B), publication(I, D).;false;false
4;true,true,false;sameperson(B, D).;false;false
4;true,false;publication(J, A), publication(K, B).;false;true
4;true,false,false;ta(L, A, M).;false;false
4;false;ta(N, A, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(D, E).;true;true
5;true,true,true;ta(F, D, G), publication(C, E).;false;false
5;true,true,false;publication(H, A), ta(I, A, J).;false;false
5;true,false;publication(K, A).;true;true
5;true,false,true;ta(L, A, M).;false;false
5;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true;publication(C, A), publication(C, B).;true;true
6;true,true;ta(D, A, E).;true;true
6;true,true,true;tempadvisedby(F, B), publication(G, F).;false;false
6;true,true,false;tempadvisedby(H, B).;false;false
6;true,false;tempadvisedby(I, B), publication(J, A).;true;true
6;true,false,true;projectmember(K, B).;false;false
6;true,false,false;ta(L, A, M), publication(N, B).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
7;true,true,false;ta(G, A, H).;false;false
7;true,false;tempadvisedby(I, B), publication(J, B).;true;true
7;true,false,true;ta(K, A, L), ta(K, I, M).;false;false
7;true,false,false;ta(N, A, P).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true;ta(D, A, E), publication(F, B).;true;true
8;true,true;tempadvisedby(G, B).;true;true
8;true,true,true;ta(H, G, E).;false;false
8;true,true,false;ta(D, I, J), tempadvisedby(I, K).;false;false
8;true,false;publication(L, A), publication(L, B).;false;true
8;true,false,false;publication(M, A), publication(N, B).;false;false
8;false;ta(P, A, Q).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;ta(E, C, F), publication(D, B).;false;true
9;true,true,false;publication(G, A), publication(G, B).;false;false
9;true,false;publication(H, A).;true;true
9;true,false,true;publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 2.36e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(D, F), director(F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 7.45e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( movie(D, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, D) )
%   | | then return 0.3019207960988127;  // std dev = 0.404, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.033633687139345156;  // std dev = 0.145, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.254803769138174;  // std dev = 0.404, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.08990118177427148;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.22280661238509844;  // std dev = 0.113, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.15129451708634897;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.0828117120696383;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18670398385663836;  // std dev = 0.020, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, B) )
%   | | then return -0.13287453245068373;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.07673523952139187;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.13999235511657468;  // std dev = 0.056, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.03257353476447395;  // std dev = 0.095, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.13567201428775347;  // std dev = 0.304, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.06934053595462004;  // std dev = 9.13e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071688
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.667 seconds
Total inference time: 0.774 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.105549
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.406 seconds
Parameter learned model CLL: -0.105549


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,true': [2.36e-08, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A), movie(E, B)', 'true,false,true': 'movie(D, F), director(F)'}, {'true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false': [7.45e-09, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, A)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, D)'}, {'true,true,true': [0.404, 1, 21], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.145, 24, 4]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(C, E)'}, {'true,true,true,true': [0.404, 1, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false': 'movie(F, A)'}, {'true,true,true': [0.113, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,true': [0.02, 0, 25], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)'}, {'true,true': [0.056, 1, 21], 'true,false': [0.0, 0, 0], 'false': [0.095, 24, 4]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.304, 1, 25], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.13e-09, 24, 0]}]]
[{'': [0.03698224852071082, 9.25185853854297e-18], 'true': [7.105427357601002e-16, 0.0], 'true,true': [7.105427357601002e-16, nan], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.026401128419570055, -4.625929269271485e-18], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.016486699015016572, 2.3129646346357427e-18], 'true': [-2.842170943040401e-16, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan], 'true,true': [-2.842170943040401e-16, nan]}, {'': [0.009965795208791005, -2.3129646346357427e-18], 'true': [0.009965795208791005, nan], 'true,true': [-3.552713678800501e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.007415175599785167, 0.02092679294633241], 'true': [0.007415175599785167, nan], 'true,true': [0.007415175599785167, nan]}, {'': [0.006282053053518161, -1.1564823173178713e-18], 'true': [0.006282053053518161, nan], 'true,true': [0.006282053053518161, nan], 'true,true,true': [0.006282053053518161, nan]}, {'': [0.005666037503268184, -4.625929269271485e-18], 'true': [0.0005099230390984299, 0.0], 'true,true': [0.0005099230390984299, nan], 'true,false': [0.0, nan]}, {'': [0.004160438640194506, 0.0], 'true': [0.0003987627979103836, 0.0], 'true,false': [0.0, nan]}, {'': [0.0031768382959564663, 0.009078684232838885], 'true': [0.0031768382959564663, nan]}, {'': [0.0035540752198137573, 3.469446951953614e-18], 'true': [0.0035540752198137573, nan], 'true,true': [0.0035540752198137573, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 7.45e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.3850692145554257;  // std dev = 0.126, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.2984246790471678;  // std dev = 0.114, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return -0.09269127618926094;  // std dev = 1.05e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.2376682048880379;  // std dev = 0.109, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return -0.08518475138839682;  // std dev = 1.67e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21709254325071267;  // std dev = 0.030, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.22124083439002482;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109175;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1824642555175222;  // std dev = 0.026, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.18547412402163294;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.15110721753819423;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.14062857789764197;  // std dev = 0.077, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return -0.06842697784420275;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1327280296385096;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.12245838310132535;  // std dev = 0.078, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return -0.0641918400820262;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070433
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.797 seconds
Total inference time: 0.693 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100645
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.366 seconds
Refined model CLL: -0.100645


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070433
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.236 seconds
Total inference time: 0.693 seconds
AUC ROC: 1.0
Total revision time: 2.236
Best scored revision CLL: -0.100645


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:08:41
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070433, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 2.236, 'Inference time': 0.693, 'parameter_25': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.071688, 'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'Learning time': 0.667, 'Inference time': 0.774}}


