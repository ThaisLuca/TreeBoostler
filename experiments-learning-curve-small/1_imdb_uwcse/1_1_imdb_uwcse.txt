Starting experiment #1 for 1_imdb_uwcse

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1.43e-06, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048768;  // std dev = 5.37e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.14185106490048918;  // std dev = 0.000, 727.000 (wgt'ed) examples reached here.  /* #neg=727 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.12544463852839235;  // std dev = 0.000, 755.000 (wgt'ed) examples reached here.  /* #neg=755 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.1123163781936063;  // std dev = 3.65e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.1123163781936064;  // std dev = 0.000, 679.000 (wgt'ed) examples reached here.  /* #neg=679 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783615;  // std dev = 5.58e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else return -0.10159632948783516;  // std dev = 4.37e-07, 708.000 (wgt'ed) examples reached here.  /* #neg=708 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.09269127618926189;  // std dev = 0.000, 647.000 (wgt'ed) examples reached here.  /* #neg=647 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4.42e-07, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.0851847513883968;  // std dev = 1.83e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.08518475138839675;  // std dev = 1.40e-07, 688.000 (wgt'ed) examples reached here.  /* #neg=688 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2.53e-07, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.0787767547310917;  // std dev = 2.79e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.07877675473109269;  // std dev = 0.000, 674.000 (wgt'ed) examples reached here.  /* #neg=674 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2.60e-07, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 9.13e-09, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return -0.07324622576333654;  // std dev = 2.37e-07, 705.000 (wgt'ed) examples reached here.  /* #neg=705 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420268;  // std dev = 2.11e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.06842697784420247;  // std dev = 1.93e-07, 675.000 (wgt'ed) examples reached here.  /* #neg=675 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.0641918400820253;  // std dev = 2.53e-07, 738.000 (wgt'ed) examples reached here.  /* #neg=738 */


Starting fold 1

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos	 examples: 35
Target test neg examples: 1814

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.36236334632262296;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2807538536965855;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.21248070121827137;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.1594898822817116;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.11975529938157474;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.09028081829440963;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.06840311429118533;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.052078905701252655;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.937707
   AUC PR    = 0.29769
   CLL	      = -0.252748
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 0.553 seconds
Total inference time: 0.746 seconds
AUC ROC: 0.937707


Results scoring model
   AUC ROC   = 0.96
   AUC PR    = 0.961111
   CLL	      = -0.255004
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.333 seconds
Parameter learned model CLL: -0.255004


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.05e-08, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}]]
[{'': [0.1388888888888887, 0.0], 'true': [1.4802973661668753e-16, 0.22222222222222224]}, {'': [0.12949546172365034, 0.0], 'true': [0.0, 0.2222222222222222]}, {'': [0.12042365933938219, 0.0], 'true': [3.700743415417188e-17, 0.22222222222222224]}, {'': [0.11578691708010203, 0.0], 'true': [-3.700743415417188e-17, 0.2222222222222222]}, {'': [0.11403960634908421, 0.0], 'true': [0.0, 0.2222222222222222]}, {'': [0.11339988962867113, 0.0], 'true': [0.0, 0.2222222222222222]}, {'': [0.1131362198438639, 0.0], 'true': [0.0, 0.22222222222222224]}, {'': [0.11299535166074005, 0.0], 'true': [0.0, 0.22222222222222224]}, {'': [0.11288945137740025, 0.0], 'true': [-4.625929269271485e-18, 0.2222222222222222]}, {'': [0.11278916549921703, 0.0], 'true': [-2.3129646346357427e-18, 0.22222222222222224]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.36236334632262296;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2807538536965855;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.21248070121827137;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.1594898822817116;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.11975529938157474;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.09028081829440963;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.06840311429118533;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.052078905701252655;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.937707
   AUC PR    = 0.29769
   CLL	      = -0.252748
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 0.546 seconds
Total inference time: 0.724 seconds
AUC ROC: 0.937707


Results scoring model
   AUC ROC   = 0.96
   AUC PR    = 0.961111
   CLL	      = -0.255004
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.332 seconds
Refined model CLL: -0.255004


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.937707
   AUC PR    = 0.29769
   CLL	      = -0.252748
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 1.7640000000000002 seconds
Total inference time: 0.746 seconds
AUC ROC: 0.937707
Total revision time: 1.7640000000000002
Best scored revision CLL: -0.255004


Dataset: 1_imdb_uwcse, Fold: 1, Type: Transfer (trRDN-B), Time: 00:00:03
{'AUC ROC': 0.937707, 'AUC PR': 0.29769, 'CLL': -0.252748, 'Precision': [0.089744, 0.5], 'Recall': 1.0, 'F1': 0.164706, 'Learning time': 1.7640000000000002, 'Inference time': 0.746, 'parameter_5': {'AUC ROC': 0.937707, 'AUC PR': 0.29769, 'CLL': -0.252748, 'Precision': [0.089744, 0.5], 'Recall': 1.0, 'F1': 0.164706, 'Learning time': 0.553, 'Inference time': 0.746}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.5724346493852265;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.48767788391726297;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.39125696209925354;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3005711547884894;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.10159632948783628;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.22629823971521876;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.16984358676510136;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.12813320688246752;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.09743184803714998;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.07468131696953094;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.05765194052113708;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.937707
   AUC PR    = 0.29769
   CLL	      = -0.274458
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 0.545 seconds
Total inference time: 0.706 seconds
AUC ROC: 0.937707


Results scoring model
   AUC ROC   = 0.95
   AUC PR    = 0.947022
   CLL	      = -0.267691
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.364 seconds
Parameter learned model CLL: -0.267691


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.195, 2, 5], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.195, 2, 5], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.195, 2, 5], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.49e-08, 0, 5], 'true,false': [1.195, 2, 5], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.195, 2, 5], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.195, 2, 5], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.195, 2, 5], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.195, 2, 5], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.195, 2, 5], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.195, 2, 5], 'false': [0.0, 8, 0]}]]
[{'': [0.1388888888888887, -6.938893903907228e-18], 'true': [0.0, 0.20408163265306126]}, {'': [0.13210679156701688, 0.0], 'true': [0.0, 0.2040816326530612]}, {'': [0.1255935717449269, -1.734723475976807e-18], 'true': [-4.4408920985006264e-17, 0.20408163265306117]}, {'': [0.12237153302360555, 0.0], 'true': [4.4408920985006264e-17, 0.20408163265306126]}, {'': [0.12121419907870794, 0.0], 'true': [-2.2204460492503132e-17, 0.20408163265306123]}, {'': [0.12081730156531649, 0.0], 'true': [0.0, 0.20408163265306123]}, {'': [0.12066699137403673, 0.0], 'true': [-5.551115123125783e-18, 0.20408163265306123]}, {'': [0.12059016053691869, 0.0], 'true': [0.0, 0.20408163265306123]}, {'': [0.12052874134926163, 0.0], 'true': [0.0, 0.20408163265306123]}, {'': [0.12046465716684958, 0.0], 'true': [0.0, 0.20408163265306123]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.308741135785635;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2564123687585864;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.20613740734453975;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.10159632948783628;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.16162857548414666;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.12455597792081964;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.08518475138839687;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.09492800936730683;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.0718608885005586;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.07324622576333704;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.05418307375954945;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.04076025323305622;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.92739
   AUC PR    = 0.13948
   CLL	      = -0.252543
   Precision = 0.165138 at threshold = 0.5
   Recall    = 0.514286
   F1        = 0.25


Total learning time: 1.048 seconds
Total inference time: 0.764 seconds
AUC ROC: 0.92739


Results scoring model
   AUC ROC   = 0.98
   AUC PR    = 0.981667
   CLL	      = -0.214715
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.35 seconds
Refined model CLL: -0.214715


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.92739
   AUC PR    = 0.13948
   CLL	      = -0.252543
   Precision = 0.165138 at threshold = 0.5
   Recall    = 0.514286
   F1        = 0.25


Total learning time: 2.307 seconds
Total inference time: 0.764 seconds
AUC ROC: 0.92739
Total revision time: 2.307
Best scored revision CLL: -0.214715


Dataset: 1_imdb_uwcse, Fold: 1, Type: Transfer (trRDN-B), Time: 00:00:08
{'AUC ROC': 0.92739, 'AUC PR': 0.13948, 'CLL': -0.252543, 'Precision': [0.165138, 0.5], 'Recall': 0.514286, 'F1': 0.25, 'Learning time': 2.307, 'Inference time': 0.764, 'parameter_10': {'AUC ROC': 0.937707, 'AUC PR': 0.29769, 'CLL': -0.274458, 'Precision': [0.089744, 0.5], 'Recall': 1.0, 'F1': 0.164706, 'Learning time': 0.545, 'Inference time': 0.706}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6581489350995122;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5580193346218546;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.4419486100244409;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.33541139495094313;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.25176837314502193;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.092691276189261;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.19047961032437172;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.08518475138839686;  // std dev = 6.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.14620194507639933;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.11389369465607464;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.152743858093671;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.08989956180301868;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.07174810215160451;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.0641918400820262;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.937707
   AUC PR    = 0.29769
   CLL	      = -0.319241
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 0.575 seconds
Total inference time: 0.725 seconds
AUC ROC: 0.937707


Results scoring model
   AUC ROC   = 0.964444
   AUC PR    = 0.959749
   CLL	      = -0.226506
   Precision = 0.882353 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.9375


Total scoring time: 0.348 seconds
Parameter learned model CLL: -0.226506


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.265, 2, 8], 'false': [0.0, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 7], 'true,false': [1.265, 2, 8], 'false': [7.45e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.265, 2, 8], 'false': [1.05e-08, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.58e-08, 0, 7], 'true,false': [1.265, 2, 8], 'false': [5.27e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.265, 2, 8], 'false': [0.0, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.29e-08, 0, 7], 'true,false': [1.265, 2, 8], 'false': [6.45e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.265, 2, 8], 'false': [3.73e-09, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [5.27e-09, 0, 7], 'true,false': [1.265, 2, 8], 'false': [5.27e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.265, 2, 8], 'false': [2.63e-09, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.265, 2, 8], 'false': [0.0, 13, 0]}]]
[{'': [0.10380622837370206, -1.2810265668751807e-17], 'true': [-2.5376526277146434e-16, 0.15999999999999986]}, {'': [0.1004315548162985, 4.270088556250602e-18], 'true': [6.344131569286608e-17, 0.16]}, {'': [0.09723339875183884, 8.540177112501205e-18], 'true': [-6.344131569286608e-17, 0.16000000000000003]}, {'': [0.09575035938783728, 2.135044278125301e-18], 'true': [9.516197353929913e-17, 0.15999999999999998]}, {'': [0.0952689418084748, -1.0675221390626506e-18], 'true': [-3.172065784643304e-17, 0.16]}, {'': [0.0951313479815784, 3.2025664171879517e-18], 'true': [2.3790493384824782e-17, 0.16]}, {'': [0.09509603293414844, 1.0675221390626506e-18], 'true': [-1.586032892321652e-17, 0.16]}, {'': [0.09508519585565148, 2.135044278125301e-18], 'true': [3.96508223080413e-18, 0.16]}, {'': [0.09507425048560107, 5.337610695313253e-19], 'true': [-7.93016446160826e-18, 0.16]}, {'': [0.09505651275725965, 0.0], 'true': [0.0, 0.16]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.308741135785635;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.5955756231487449;  // std dev = 0.180, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.27599399595366564;  // std dev = 0.963, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.43404537862189013;  // std dev = 0.091, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.18435296567937504;  // std dev = 0.966, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.36426035223833503;  // std dev = 0.249, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.14945075878990552;  // std dev = 0.919, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.092691276189261;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, A) )
%   | | then return 0.08441795424658918;  // std dev = 0.527, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.28024276207244586;  // std dev = 0.777, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839686;  // std dev = 6.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.2564887001878728;  // std dev = 0.193, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.05998591047459323;  // std dev = 0.898, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.20699627897793627;  // std dev = 0.117, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.012817311340191095;  // std dev = 0.896, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.152743858093671;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.17546391903891811;  // std dev = 0.104, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.009711086885090717;  // std dev = 0.896, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, A) )
%   | | then return -0.004941443595002745;  // std dev = 0.470, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.15996897595561665;  // std dev = 0.759, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.933745
   AUC PR    = 0.177159
   CLL	      = -0.273678
   Precision = 0.097122 at threshold = 0.5
   Recall    = 0.771429
   F1        = 0.172524


Total learning time: 1.122 seconds
Total inference time: 0.749 seconds
AUC ROC: 0.933745


Results scoring model
   AUC ROC   = 0.997778
   AUC PR    = 0.997917
   CLL	      = -0.164172
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.933333
   F1        = 0.965517


Total scoring time: 0.379 seconds
Refined model CLL: -0.164172


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.933745
   AUC PR    = 0.177159
   CLL	      = -0.273678
   Precision = 0.097122 at threshold = 0.5
   Recall    = 0.771429
   F1        = 0.172524


Total learning time: 2.424 seconds
Total inference time: 0.749 seconds
AUC ROC: 0.933745
Total revision time: 2.424
Best scored revision CLL: -0.164172


Dataset: 1_imdb_uwcse, Fold: 1, Type: Transfer (trRDN-B), Time: 00:00:12
{'AUC ROC': 0.933745, 'AUC PR': 0.177159, 'CLL': -0.273678, 'Precision': [0.097122, 0.5], 'Recall': 0.771429, 'F1': 0.172524, 'Learning time': 2.424, 'Inference time': 0.749, 'parameter_15': {'AUC ROC': 0.937707, 'AUC PR': 0.29769, 'CLL': -0.319241, 'Precision': [0.089744, 0.5], 'Recall': 1.0, 'F1': 0.164706, 'Learning time': 0.575, 'Inference time': 0.725}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.5724346493852266;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4876778839172628;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.3912569620992536;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else return -0.11231637819360635;  // std dev = 1.39e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.3005711547884894;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else return -0.10159632948783628;  // std dev = 5.27e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.22629823971521876;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else return -0.09269127618926094;  // std dev = 9.13e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.16984358676510133;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.12813320688246752;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else return -0.07877675473109173;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.09743184803714998;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367094;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.07468131696953094;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else return -0.06842697784420272;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.057651940521137104;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else return -0.06419184008202619;  // std dev = 6.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */


Results
   AUC ROC   = 0.937707
   AUC PR    = 0.29769
   CLL	      = -0.274458
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 0.592 seconds
Total inference time: 0.705 seconds
AUC ROC: 0.937707


Results scoring model
   AUC ROC   = 0.95
   AUC PR    = 0.946614
   CLL	      = -0.267691
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.369 seconds
Parameter learned model CLL: -0.267691


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.69, 4, 10], 'false': [0.0, 16, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 10], 'true,false': [1.69, 4, 10], 'false': [7.45e-09, 16, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.69, 4, 10], 'false': [1.39e-08, 16, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [3.65e-08, 0, 10], 'true,false': [1.69, 4, 10], 'false': [5.27e-09, 16, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.69, 4, 10], 'false': [9.13e-09, 16, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.83e-08, 0, 10], 'true,false': [1.69, 4, 10], 'false': [5.27e-09, 16, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.69, 4, 10], 'false': [0.0, 16, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 10], 'true,false': [1.69, 4, 10], 'false': [3.73e-09, 16, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.69, 4, 10], 'false': [0.0, 16, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.69, 4, 10], 'false': [6.45e-09, 16, 0]}]]
[{'': [0.13888888888888906, -6.938893903907228e-18], 'true': [-8.881784197001253e-17, 0.2040816326530612]}, {'': [0.13210679156701688, 3.469446951953614e-18], 'true': [8.881784197001253e-17, 0.20408163265306128]}, {'': [0.1255935717449271, 1.214306433183765e-17], 'true': [-1.7763568394002506e-16, 0.20408163265306115]}, {'': [0.12237153302360532, 1.734723475976807e-18], 'true': [1.3322676295501878e-16, 0.2040816326530612]}, {'': [0.1212141990787079, 5.204170427930421e-18], 'true': [-4.4408920985006264e-17, 0.20408163265306128]}, {'': [0.12081730156531649, 1.734723475976807e-18], 'true': [3.3306690738754695e-17, 0.20408163265306117]}, {'': [0.12066699137403676, -1.734723475976807e-18], 'true': [-2.7755575615628914e-17, 0.20408163265306123]}, {'': [0.12059016053691869, 8.673617379884035e-19], 'true': [5.551115123125783e-18, 0.20408163265306123]}, {'': [0.12052874134926166, 0.0], 'true': [0.0, 0.20408163265306123]}, {'': [0.12046465716684958, 2.6020852139652106e-18], 'true': [0.0, 0.2040816326530612]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( ta(D, A, E) )
%   | | then if ( ta(D, F, G), tempadvisedby(F, H) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.528993122216108;  // std dev = 0.852, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.7670719622367216;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.30874113578563506;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.6017729615022358;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.44362494803454633;  // std dev = 0.914, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.6046262796882593;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0064123687585864245;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.11231637819360635;  // std dev = 1.39e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.45291120760388104;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.34465083241447;  // std dev = 0.923, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.4551590058271044;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0052289307534192295;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.10159632948783628;  // std dev = 5.27e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.34483383516668353;  // std dev = 7.45e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2616619347312553;  // std dev = 0.927, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.34637626930311444;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.004261030533986292;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.09269127618926094;  // std dev = 9.13e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.2715722825585931;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19797239812688475;  // std dev = 0.927, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.27261756107394786;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.003470387466852569;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then return 0.06483675982074988;  // std dev = 0.794, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.2220084854936336;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1589939351697148;  // std dev = 1.021, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.07877675473109173;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.21030812774367647;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12400991365674849;  // std dev = 0.909, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.1860310691285243;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.02793191197871718;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367094;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then return 0.02248104846376542;  // std dev = 0.794, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.15948839918281266;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11903915928479332;  // std dev = 0.995, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.06842697784420272;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.1742417603898202;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(F, A, G) )
%   | | | then return -0.002305363276154182;  // std dev = 0.775, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.09347674211644992;  // std dev = 0.993, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.06419184008202619;  // std dev = 6.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */


Results
   AUC ROC   = 0.924216
   AUC PR    = 0.142521
   CLL	      = -0.279241
   Precision = 0.097122 at threshold = 0.5
   Recall    = 0.771429
   F1        = 0.172524


Total learning time: 2.008 seconds
Total inference time: 0.824 seconds
AUC ROC: 0.924216


Results scoring model
   AUC ROC   = 0.98875
   AUC PR    = 0.989313
   CLL	      = -0.195887
   Precision = 0.95 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.95


Total scoring time: 0.382 seconds
Refined model CLL: -0.195887


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.924216
   AUC PR    = 0.142521
   CLL	      = -0.279241
   Precision = 0.097122 at threshold = 0.5
   Recall    = 0.771429
   F1        = 0.172524


Total learning time: 3.351 seconds
Total inference time: 0.824 seconds
AUC ROC: 0.924216
Total revision time: 3.351
Best scored revision CLL: -0.195887


Dataset: 1_imdb_uwcse, Fold: 1, Type: Transfer (trRDN-B), Time: 00:00:17
{'AUC ROC': 0.924216, 'AUC PR': 0.142521, 'CLL': -0.279241, 'Precision': [0.097122, 0.5], 'Recall': 0.771429, 'F1': 0.172524, 'Learning time': 3.351, 'Inference time': 0.824, 'parameter_20': {'AUC ROC': 0.937707, 'AUC PR': 0.29769, 'CLL': -0.274458, 'Precision': [0.089744, 0.5], 'Recall': 1.0, 'F1': 0.164706, 'Learning time': 0.592, 'Inference time': 0.705}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5581489350995122;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.47588605454691757;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.38264739880473897;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.29467302064371587;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   else return -0.10159632948783634;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.22214664751409413;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   else return -0.09269127618926093;  // std dev = 1.18e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.16667396808211915;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.12551445305350545;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   else return -0.07877675473109179;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.09515587384078099;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367094;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.07265434968592004;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   else return -0.06842697784420274;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.05583203461675028;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   else return -0.06419184008202619;  // std dev = 6.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 0.937707
   AUC PR    = 0.29769
   CLL	      = -0.267725
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 0.608 seconds
Total inference time: 0.706 seconds
AUC ROC: 0.937707


Results scoring model
   AUC ROC   = 0.9328
   AUC PR    = 0.927848
   CLL	      = -0.297649
   Precision = 0.806452 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.892857


Total scoring time: 0.378 seconds
Parameter learned model CLL: -0.297649


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 11], 'true,false': [2.049, 6, 14], 'false': [0.0, 19, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [4.21e-08, 0, 11], 'true,false': [2.049, 6, 14], 'false': [0.0, 19, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 11], 'true,false': [2.049, 6, 14], 'false': [1.67e-08, 19, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [4.21e-08, 0, 11], 'true,false': [2.049, 6, 14], 'false': [0.0, 19, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 11], 'true,false': [2.049, 6, 14], 'false': [1.18e-08, 19, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 11], 'true,false': [2.049, 6, 14], 'false': [7.45e-09, 19, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 11], 'true,false': [2.049, 6, 14], 'false': [0.0, 19, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 11], 'true,false': [2.049, 6, 14], 'false': [3.73e-09, 19, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 11], 'true,false': [2.049, 6, 14], 'false': [0.0, 19, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [5.27e-09, 0, 11], 'true,false': [2.049, 6, 14], 'false': [6.45e-09, 19, 0]}]]
[{'': [0.15608740894901246, 0.0], 'true': [-1.6148698540002277e-16, 0.20999999999999983]}, {'': [0.14906728010304343, 0.0], 'true': [1.6148698540002277e-16, 0.20999999999999988]}, {'': [0.14231322636299634, 1.460819769243627e-17], 'true': [-2.0185873175002846e-16, 0.2100000000000002]}, {'': [0.13893835264288043, -5.843279076974508e-18], 'true': [1.6148698540002277e-16, 0.21000000000000002]}, {'': [0.1377079309967521, 7.304098846218135e-18], 'true': [-6.055761952500853e-17, 0.21000000000000002]}, {'': [0.13727682394296897, 2.921639538487254e-18], 'true': [4.0371746350005693e-17, 0.20999999999999996]}, {'': [0.13710855775628625, -7.304098846218135e-19], 'true': [-2.5232341468753557e-17, 0.21000000000000002]}, {'': [0.1370209557607583, 7.304098846218135e-19], 'true': [5.046468293750712e-18, 0.20999999999999996]}, {'': [0.1369522918403111, -2.1912296538654404e-18], 'true': [5.046468293750712e-18, 0.20999999999999996]}, {'': [0.136882926721096, 2.1912296538654404e-18], 'true': [2.523234146875356e-18, 0.20999999999999996]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.7672398441904213;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, D, F), publication(G, B) )
%   | | | then return 0.570783992907831;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.8057124971417254;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(H, A, I), publication(J, B) )
%   | | | then return 0.7374506595744976;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.023926443294022996;  // std dev = 0.836, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.42394136514959213;  // std dev = 0.906, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.6324048309072879;  // std dev = 0.085, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(G, B), ta(H, A, I) )
%   | | | then return 0.5732954857711152;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.020299420113487582;  // std dev = 0.837, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( publication(D, B) )
%   | | then if ( tempadvisedby(E, B), publication(F, A) )
%   | | | then return 0.5280199134324336;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.30143398465612126;  // std dev = 1.239, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else return 0.02841487906256112;  // std dev = 0.617, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.10159632948783634;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.2123213805950858;  // std dev = 0.870, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.41855889947980307;  // std dev = 0.154, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( ta(G, A, H), publication(I, B) )
%   | | | then return 0.3590660685134873;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.0468229511003895;  // std dev = 0.809, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else return -0.09269127618926093;  // std dev = 1.18e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(D, E), ta(F, E, G) )
%   | | | then return 0.1281052375367978;  // std dev = 0.954, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.28516926770609213;  // std dev = 0.675, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.0023481397960537914;  // std dev = 0.519, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, D, F), publication(G, B) )
%   | | | then return 0.12312118190467675;  // std dev = 0.848, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.33584099265132183;  // std dev = 0.136, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(H, A, I), publication(J, B) )
%   | | | then return 0.23448333490295978;  // std dev = 0.025, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.06344382889399716;  // std dev = 0.776, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else return -0.07877675473109179;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.06972961481933677;  // std dev = 0.836, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.2621238484261702;  // std dev = 0.123, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.12614020649086416;  // std dev = 0.779, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.1399650006375024;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367094;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.2201149383587818;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(F, B) )
%   | | | then return 0.08560762944922023;  // std dev = 1.142, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return -0.01511086730062041;  // std dev = 0.377, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.06842697784420274;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( publication(D, A) )
%   | | then return -0.015314098645724217;  // std dev = 0.549, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.016989964283479937;  // std dev = 0.841, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.17245901394994667;  // std dev = 0.611, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.06419184008202619;  // std dev = 6.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 0.928154
   AUC PR    = 0.142372
   CLL	      = -0.297485
   Precision = 0.102273 at threshold = 0.5
   Recall    = 0.771429
   F1        = 0.180602


Total learning time: 2.391 seconds
Total inference time: 0.785 seconds
AUC ROC: 0.928154


Results scoring model
   AUC ROC   = 0.9976
   AUC PR    = 0.997631
   CLL	      = -0.169658
   Precision = 0.96 at threshold = 0.5
   Recall    = 0.96
   F1        = 0.96


Total scoring time: 0.409 seconds
Refined model CLL: -0.169658


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.928154
   AUC PR    = 0.142372
   CLL	      = -0.297485
   Precision = 0.102273 at threshold = 0.5
   Recall    = 0.771429
   F1        = 0.180602


Total learning time: 3.7859999999999996 seconds
Total inference time: 0.785 seconds
AUC ROC: 0.928154
Total revision time: 3.7859999999999996
Best scored revision CLL: -0.169658


Dataset: 1_imdb_uwcse, Fold: 1, Type: Transfer (trRDN-B), Time: 00:00:23
{'AUC ROC': 0.928154, 'AUC PR': 0.142372, 'CLL': -0.297485, 'Precision': [0.102273, 0.5], 'Recall': 0.771429, 'F1': 0.180602, 'Learning time': 3.7859999999999996, 'Inference time': 0.785, 'parameter_25': {'AUC ROC': 0.937707, 'AUC PR': 0.29769, 'CLL': -0.267725, 'Precision': [0.089744, 0.5], 'Recall': 1.0, 'F1': 0.164706, 'Learning time': 0.608, 'Inference time': 0.706}}


Starting fold 2

Target train facts examples: 1965
Target train pos examples: 93
Target train neg examples: 3738

Target test facts examples: 422
Target test pos	 examples: 20
Target test neg examples: 341

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333703;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.926686
   AUC PR    = 0.285714
   CLL	      = -0.351876
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 0.557 seconds
Total inference time: 0.456 seconds
AUC ROC: 0.926686


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.356 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.49e-08, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [2.63e-09, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [1.86e-09, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [nan, 0.0]}, {'': [0.0, 0.0], 'true': [nan, 0.0]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [nan, -4.4408920985006264e-17]}, {'': [4.4408920985006264e-17, 0.0], 'true': [nan, 4.4408920985006264e-17]}, {'': [-2.2204460492503132e-17, 0.0], 'true': [nan, -2.2204460492503132e-17]}, {'': [0.0, 0.0], 'true': [nan, 0.0]}, {'': [-5.551115123125783e-18, -1.3877787807814458e-18], 'true': [nan, -5.551115123125783e-18]}, {'': [0.0, 1.3877787807814458e-18], 'true': [nan, 0.0]}, {'': [0.0, 6.938893903907229e-19], 'true': [nan, 0.0]}, {'': [0.0, 0.0], 'true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333703;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.926686
   AUC PR    = 0.285714
   CLL	      = -0.351876
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 0.499 seconds
Total inference time: 0.435 seconds
AUC ROC: 0.926686


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.329 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.926686
   AUC PR    = 0.285714
   CLL	      = -0.351876
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 1.7409999999999999 seconds
Total inference time: 0.456 seconds
AUC ROC: 0.926686
Total revision time: 1.7409999999999999
Best scored revision CLL: -0.094637


Dataset: 1_imdb_uwcse, Fold: 2, Type: Transfer (trRDN-B), Time: 00:00:26
{'AUC ROC': 0.926686, 'AUC PR': 0.285714, 'CLL': -0.351876, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 1.7409999999999999, 'Inference time': 0.456, 'parameter_5': {'AUC ROC': 0.926686, 'AUC PR': 0.285714, 'CLL': -0.351876, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 0.557, 'Inference time': 0.456}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.7331489350995122;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.6189976143448208;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.48512875154616486;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.3656822536044497;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.10159632948783628;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.27560196347331434;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2115828790301978;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.08518475138839687;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.16608044254560705;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.13303193637503496;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.07324622576333704;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.10839224498101006;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.08956128580326395;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.956745
   AUC PR    = 0.591831
   CLL	      = -0.286093
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 0.595 seconds
Total inference time: 0.51 seconds
AUC ROC: 0.956745


Results scoring model
   AUC ROC   = 0.965
   AUC PR    = 0.955495
   CLL	      = -0.20564
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.367 seconds
Parameter learned model CLL: -0.20564


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [0.935, 1, 7], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.935, 1, 7], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.05e-08, 0, 3], 'true,false': [0.935, 1, 7], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.935, 1, 7], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.935, 1, 7], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.935, 1, 7], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.935, 1, 7], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.935, 1, 7], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.935, 1, 7], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.935, 1, 7], 'false': [2.63e-09, 9, 0]}]]
[{'': [0.0826446280991734, -9.25185853854297e-18], 'true': [1.4802973661668753e-16, 0.109375]}, {'': [0.08154784514846353, 0.0], 'true': [0.0, 0.109375]}, {'': [0.08052396676144215, -1.5419764230904951e-18], 'true': [3.700743415417188e-17, 0.10937500000000003]}, {'': [0.08007831143675705, 0.0], 'true': [-3.700743415417188e-17, 0.109375]}, {'': [0.07994907139297312, 0.0], 'true': [0.0, 0.109375]}, {'': [0.07992232051843184, 0.0], 'true': [0.0, 0.109375]}, {'': [0.07992384215225984, 0.0], 'true': [0.0, 0.10937499999999997]}, {'': [0.07993058226157058, 0.0], 'true': [0.0, 0.10937499999999997]}, {'': [0.07993561631451808, 0.0], 'true': [-4.625929269271485e-18, 0.10937500000000001]}, {'': [0.07993727421710688, 7.709882115452476e-19], 'true': [-2.3129646346357427e-18, 0.109375]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(D, A) )
%   | | then return 0.42757709712051506;  // std dev = 0.792, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7319045176838227;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(D, B) )
%   | | then return 0.5830534011069296;  // std dev = 0.084, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3174748832185852;  // std dev = 0.763, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(D, B) )
%   | | then return 0.43924827548635276;  // std dev = 0.086, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.24405725978715428;  // std dev = 0.761, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.10159632948783628;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(D, A) )
%   | | then return 0.17257532763516745;  // std dev = 0.750, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3435295377698465;  // std dev = 0.101, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.2774540956401236;  // std dev = 0.104, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.12063714088804726;  // std dev = 0.742, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.08518475138839687;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(D, B) )
%   | | then return 0.22705221832434336;  // std dev = 0.094, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.0902666855253083;  // std dev = 0.742, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(D, A) )
%   | | then return 0.061823745357513706;  // std dev = 0.738, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.19454158390657203;  // std dev = 0.096, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.17010830965298987;  // std dev = 0.095, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.0413393558567993;  // std dev = 0.734, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(D, B) )
%   | | then return 0.14835371819003848;  // std dev = 0.087, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.031180669382433246;  // std dev = 0.735, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.960191
   AUC PR    = 0.442084
   CLL	      = -0.284972
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 1.103 seconds
Total inference time: 0.48 seconds
AUC ROC: 0.960191


Results scoring model
   AUC ROC   = 0.995
   AUC PR    = 0.995455
   CLL	      = -0.162774
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.363 seconds
Refined model CLL: -0.162774


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.960191
   AUC PR    = 0.442084
   CLL	      = -0.284972
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 2.428 seconds
Total inference time: 0.48 seconds
AUC ROC: 0.960191
Total revision time: 2.428
Best scored revision CLL: -0.162774


Dataset: 1_imdb_uwcse, Fold: 2, Type: Transfer (trRDN-B), Time: 00:00:30
{'AUC ROC': 0.960191, 'AUC PR': 0.442084, 'CLL': -0.284972, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 2.428, 'Inference time': 0.48, 'parameter_10': {'AUC ROC': 0.956745, 'AUC PR': 0.591831, 'CLL': -0.286093, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 0.595, 'Inference time': 0.51}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7043027812533584;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5956068723141558;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.4686344088678042;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3540171821738477;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.10159632948783628;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.26620552619924265;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.20307171050188977;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.08518475138839686;  // std dev = 6.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.15792789436671023;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.12508565429655716;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.10063530397647748;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.08201840165050935;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.06419184008202619;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.956745
   AUC PR    = 0.591831
   CLL	      = -0.273309
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 0.604 seconds
Total inference time: 0.448 seconds
AUC ROC: 0.956745


Results scoring model
   AUC ROC   = 0.951111
   AUC PR    = 0.937644
   CLL	      = -0.236221
   Precision = 0.882353 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.9375


Total scoring time: 0.373 seconds
Parameter learned model CLL: -0.236221


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.301, 2, 11], 'false': [0.0, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.301, 2, 11], 'false': [7.45e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.301, 2, 11], 'false': [1.05e-08, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.301, 2, 11], 'false': [5.27e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.301, 2, 11], 'false': [5.27e-09, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.301, 2, 11], 'false': [6.45e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.301, 2, 11], 'false': [3.73e-09, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.301, 2, 11], 'false': [5.27e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.301, 2, 11], 'false': [2.63e-09, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.301, 2, 11], 'false': [3.73e-09, 13, 0]}]]
[{'': [0.10380622837370206, -1.2810265668751807e-17], 'true': [0.0, 0.13017751479289916]}, {'': [0.10230817506554668, 4.270088556250602e-18], 'true': [0.0, 0.1301775147928995]}, {'': [0.10090103076659579, 8.540177112501205e-18], 'true': [0.0, 0.13017751479289935]}, {'': [0.10027295504709122, 2.135044278125301e-18], 'true': [0.0, 0.13017751479289946]}, {'': [0.10008207473534536, 2.135044278125301e-18], 'true': [0.0, 0.13017751479289943]}, {'': [0.10003592723944835, 3.2025664171879517e-18], 'true': [0.0, 0.13017751479289943]}, {'': [0.10003086487404163, 1.0675221390626506e-18], 'true': [0.0, 0.13017751479289938]}, {'': [0.10003424711666306, 2.135044278125301e-18], 'true': [0.0, 0.13017751479289943]}, {'': [0.10003607765627805, 5.337610695313253e-19], 'true': [0.0, 0.1301775147928994]}, {'': [0.10003383141215391, 1.0675221390626506e-18], 'true': [0.0, 0.13017751479289943]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A) )
%   | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A) )
%   | | then return 0.3927941835770488;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A) )
%   | | then return 0.32092546969114216;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.45660559426764663;  // std dev = 0.214, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.15206564481433005;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.10159632948783628;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.3506759137023334;  // std dev = 0.210, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.1168184335310849;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.2777809287202552;  // std dev = 0.194, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.08885822246897802;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.08518475138839686;  // std dev = 6.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.22709174742265567;  // std dev = 0.176, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.06718842860896591;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.19069940252241083;  // std dev = 0.158, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.050626092185623875;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.16366523647988893;  // std dev = 0.143, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.03806982384014668;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.14295573546756885;  // std dev = 0.130, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.028594955185828427;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06419184008202619;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.958504
   AUC PR    = 0.417547
   CLL	      = -0.256119
   Precision = 0.387755 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.550725


Total learning time: 1.359 seconds
Total inference time: 0.469 seconds
AUC ROC: 0.958504


Results scoring model
   AUC ROC   = 0.991111
   AUC PR    = 0.991634
   CLL	      = -0.176592
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.866667
   F1        = 0.928571


Total scoring time: 0.42 seconds
Refined model CLL: -0.176592


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.958504
   AUC PR    = 0.417547
   CLL	      = -0.256119
   Precision = 0.387755 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.550725


Total learning time: 2.756 seconds
Total inference time: 0.469 seconds
AUC ROC: 0.958504
Total revision time: 2.756
Best scored revision CLL: -0.176592


Dataset: 1_imdb_uwcse, Fold: 2, Type: Transfer (trRDN-B), Time: 00:00:34
{'AUC ROC': 0.958504, 'AUC PR': 0.417547, 'CLL': -0.256119, 'Precision': [0.387755, 0.5], 'Recall': 0.95, 'F1': 0.550725, 'Learning time': 2.756, 'Inference time': 0.469, 'parameter_15': {'AUC ROC': 0.956745, 'AUC PR': 0.591831, 'CLL': -0.273309, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 0.604, 'Inference time': 0.448}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6816783468642181;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5772066794120976;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4556011626653658;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.34489484635491346;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.10159632948783628;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.25904528127845555;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.09269127618926094;  // std dev = 9.13e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1967496988368944;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1519855521716933;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.07877675473109173;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.11937467555536747;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.09512618887804336;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.06842697784420272;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.07672095753768493;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.06419184008202619;  // std dev = 6.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.956745
   AUC PR    = 0.591831
   CLL	      = -0.263857
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 0.619 seconds
Total inference time: 0.461 seconds
AUC ROC: 0.956745


Results scoring model
   AUC ROC   = 0.9475
   AUC PR    = 0.935194
   CLL	      = -0.24847
   Precision = 0.869565 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.930233


Total scoring time: 0.379 seconds
Parameter learned model CLL: -0.24847


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.572, 3, 14], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [1.572, 3, 14], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.572, 3, 14], 'false': [1.49e-08, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [1.572, 3, 14], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.572, 3, 14], 'false': [9.13e-09, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 6], 'true,false': [1.572, 3, 14], 'false': [7.45e-09, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.572, 3, 14], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [5.27e-09, 0, 6], 'true,false': [1.572, 3, 14], 'false': [5.27e-09, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.572, 3, 14], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.572, 3, 14], 'false': [6.45e-09, 17, 0]}]]
[{'': [0.11342155009451807, -3.2653618371328133e-18], 'true': [-1.4802973661668753e-16, 0.14532871972318323]}, {'': [0.11131945441287967, 0.0], 'true': [7.401486830834377e-17, 0.14532871972318334]}, {'': [0.10933600495809746, 1.3061447348531253e-17], 'true': [-7.401486830834377e-17, 0.14532871972318337]}, {'': [0.10843369467285614, 0.0], 'true': [7.401486830834377e-17, 0.14532871972318342]}, {'': [0.10815011621403425, 4.89804275569922e-18], 'true': [-3.700743415417188e-17, 0.14532871972318342]}, {'': [0.10807500030362151, 3.2653618371328133e-18], 'true': [9.25185853854297e-18, 0.14532871972318337]}, {'': [0.10806042900680764, -2.44902137784961e-18], 'true': [-9.25185853854297e-18, 0.14532871972318337]}, {'': [0.10805930794890531, 1.6326809185664067e-18], 'true': [4.625929269271485e-18, 0.1453287197231834]}, {'': [0.1080569916520993, -8.163404592832033e-19], 'true': [-4.625929269271485e-18, 0.1453287197231834]}, {'': [0.10804964500920682, 2.44902137784961e-18], 'true': [0.0, 0.1453287197231834]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, A) )
%   | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.14207446911896834;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.47540780245230163;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.11913071541083436;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(F, B) )
%   | | | then return 0.5722707927925049;  // std dev = 0.160, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.3898882169773865;  // std dev = 0.781, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.09839724823310976;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(F, B) )
%   | | | then return 0.43179617427317263;  // std dev = 0.174, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.2992471729014692;  // std dev = 0.775, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.10159632948783628;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, A) )
%   | | then return 0.14485420057559711;  // std dev = 1.145, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.3269428263661458;  // std dev = 0.091, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.09269127618926094;  // std dev = 9.13e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.05190637773241088;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.28182965708974744;  // std dev = 0.194, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.1869804641315392;  // std dev = 0.758, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, A) )
%   | | then return 0.08043039522035693;  // std dev = 1.132, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.21525697740206165;  // std dev = 0.080, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07877675473109173;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, A) )
%   | | then return 0.0621459514042411;  // std dev = 1.132, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.1812228368210097;  // std dev = 0.071, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( ta(D, A, E) )
%   | | then if ( ta(D, F, G), tempadvisedby(F, H) )
%   | | | then return 0.14344810024737265;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.20657595974554827;  // std dev = 0.172, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(I, A) )
%   | | | then return -0.013067406437010941;  // std dev = 1.082, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.16699199062848408;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06842697784420272;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( ta(D, A, E) )
%   | | then if ( ta(D, F, G), tempadvisedby(F, H) )
%   | | | then return 0.12670745114046744;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1760517352306457;  // std dev = 0.154, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(I, A) )
%   | | | then return -0.010063733788152862;  // std dev = 1.082, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.14509045182788285;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06419184008202619;  // std dev = 6.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.959751
   AUC PR    = 0.438975
   CLL	      = -0.23078
   Precision = 0.367347 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.521739


Total learning time: 1.663 seconds
Total inference time: 0.485 seconds
AUC ROC: 0.959751


Results scoring model
   AUC ROC   = 0.99375
   AUC PR    = 0.994239
   CLL	      = -0.170858
   Precision = 0.95 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.95


Total scoring time: 0.4 seconds
Refined model CLL: -0.170858


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.959751
   AUC PR    = 0.438975
   CLL	      = -0.23078
   Precision = 0.367347 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.521739


Total learning time: 3.061 seconds
Total inference time: 0.485 seconds
AUC ROC: 0.959751
Total revision time: 3.061
Best scored revision CLL: -0.170858


Dataset: 1_imdb_uwcse, Fold: 2, Type: Transfer (trRDN-B), Time: 00:00:39
{'AUC ROC': 0.959751, 'AUC PR': 0.438975, 'CLL': -0.23078, 'Precision': [0.367347, 0.5], 'Recall': 0.9, 'F1': 0.521739, 'Learning time': 3.061, 'Inference time': 0.485, 'parameter_20': {'AUC ROC': 0.956745, 'AUC PR': 0.591831, 'CLL': -0.263857, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 0.619, 'Inference time': 0.461}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.630876207826785;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.535713873255035;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   else return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.4259895211023176;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   else return -0.11231637819360636;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3243972541258009;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   else return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2435163602225835;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   else return -0.09269127618926093;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.18356745009976053;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   else return -0.08518475138839686;  // std dev = 9.13e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.13997074706774168;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   else return -0.07877675473109179;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.10808940031647625;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   else return -0.07324622576333704;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.0844407437511706;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   else return -0.06842697784420274;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.06661808771328531;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   else return -0.06419184008202619;  // std dev = 5.27e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.956745
   AUC PR    = 0.591831
   CLL	      = -0.244361
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 0.618 seconds
Total inference time: 0.492 seconds
AUC ROC: 0.956745


Results scoring model
   AUC ROC   = 0.932
   AUC PR    = 0.919849
   CLL	      = -0.284265
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.376 seconds
Parameter learned model CLL: -0.284265


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.966, 5, 17], 'false': [7.45e-09, 20, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [1.966, 5, 17], 'false': [0.0, 20, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.966, 5, 17], 'false': [1.49e-08, 20, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [1.966, 5, 17], 'false': [0.0, 20, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.966, 5, 17], 'false': [1.18e-08, 20, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.49e-08, 0, 8], 'true,false': [1.966, 5, 17], 'false': [9.13e-09, 20, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.966, 5, 17], 'false': [0.0, 20, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 8], 'true,false': [1.966, 5, 17], 'false': [0.0, 20, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.966, 5, 17], 'false': [0.0, 20, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.966, 5, 17], 'false': [5.27e-09, 20, 0]}]]
[{'': [0.13888888888888987, 2.7755575615628915e-18], 'true': [-2.220446049250313e-16, 0.17561983471074363]}, {'': [0.13539131433863863, 0.0], 'true': [1.1102230246251565e-16, 0.17561983471074386]}, {'': [0.13206116322018122, 1.1102230246251566e-17], 'true': [-1.1102230246251565e-16, 0.17561983471074386]}, {'': [0.1304834727453178, -4.163336342344337e-18], 'true': [1.1102230246251565e-16, 0.17561983471074383]}, {'': [0.1299532223476799, 6.938893903907228e-18], 'true': [-4.163336342344337e-17, 0.17561983471074386]}, {'': [0.12979054028745143, 4.163336342344337e-18], 'true': [2.7755575615628914e-17, 0.1756198347107438]}, {'': [0.1297402775575872, 0.0], 'true': [-2.0816681711721685e-17, 0.1756198347107438]}, {'': [0.12971911033367486, 0.0], 'true': [6.938893903907228e-18, 0.17561983471074388]}, {'': [0.12970020713841623, -2.7755575615628915e-18], 'true': [-3.469446951953614e-18, 0.1756198347107438]}, {'': [0.12967594927640538, 1.3877787807814458e-18], 'true': [0.0, 0.1756198347107438]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.09446743783575562;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.4145391802679114;  // std dev = 0.800, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.672686116517491;  // std dev = 0.946, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.08165239320886175;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.5737732277896297;  // std dev = 0.058, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.4112429409378251;  // std dev = 1.223, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.11231637819360636;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), ta(F, E, G) )
%   | | | then return 0.3760682662388382;  // std dev = 0.720, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.04815780508599235;  // std dev = 0.755, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(H, B), publication(I, B) )
%   | | | then return 0.3055616729041984;  // std dev = 0.867, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.4669175617633841;  // std dev = 0.143, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.042264225371335236;  // std dev = 0.828, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( projectmember(F, B) )
%   | | | then return 0.4001325957706629;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2648534832799176;  // std dev = 1.169, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else return -0.09269127618926093;  // std dev = 1.18e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), ta(F, E, G) )
%   | | | then return 0.27805341732241495;  // std dev = 0.710, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.07443045491916955;  // std dev = 0.738, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(H, B), publication(I, B) )
%   | | | then return 0.16058676440371836;  // std dev = 0.860, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.2944387284772496;  // std dev = 0.112, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.08518475138839686;  // std dev = 9.13e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.231289057011836;  // std dev = 0.080, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return -0.076827825901822;  // std dev = 0.847, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.17189025051587511;  // std dev = 1.037, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else return -0.07877675473109179;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), ta(F, E, G) )
%   | | | then return 0.19955247404614482;  // std dev = 0.670, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.09398792014926095;  // std dev = 0.735, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(H, B), publication(I, B) )
%   | | | then return 0.11456903080916465;  // std dev = 0.839, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.20311501485722724;  // std dev = 0.102, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.07324622576333704;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.16784250119229155;  // std dev = 0.075, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return -0.08973278726996389;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1256236824416791;  // std dev = 0.983, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else return -0.06842697784420274;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), tempadvisedby(F, E) )
%   | | | then return 0.15739229320301082;  // std dev = 0.493, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1084879843012484;  // std dev = 0.824, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( projectmember(G, B) )
%   | | | then return 0.21709684889481706;  // std dev = 0.132, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10526410000906872;  // std dev = 0.812, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.06419184008202619;  // std dev = 5.27e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.96195
   AUC PR    = 0.478717
   CLL	      = -0.221054
   Precision = 0.361702 at threshold = 0.5
   Recall    = 0.85
   F1        = 0.507463


Total learning time: 1.798 seconds
Total inference time: 0.474 seconds
AUC ROC: 0.96195


Results scoring model
   AUC ROC   = 0.9944
   AUC PR    = 0.994513
   CLL	      = -0.181613
   Precision = 0.96 at threshold = 0.5
   Recall    = 0.96
   F1        = 0.96


Total scoring time: 0.418 seconds
Refined model CLL: -0.181613


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.96195
   AUC PR    = 0.478717
   CLL	      = -0.221054
   Precision = 0.361702 at threshold = 0.5
   Recall    = 0.85
   F1        = 0.507463


Total learning time: 3.21 seconds
Total inference time: 0.474 seconds
AUC ROC: 0.96195
Total revision time: 3.21
Best scored revision CLL: -0.181613


Dataset: 1_imdb_uwcse, Fold: 2, Type: Transfer (trRDN-B), Time: 00:00:44
{'AUC ROC': 0.96195, 'AUC PR': 0.478717, 'CLL': -0.221054, 'Precision': [0.361702, 0.5], 'Recall': 0.85, 'F1': 0.507463, 'Learning time': 3.21, 'Inference time': 0.474, 'parameter_25': {'AUC ROC': 0.956745, 'AUC PR': 0.591831, 'CLL': -0.244361, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 0.618, 'Inference time': 0.492}}


Starting fold 3

Target train facts examples: 2225
Target train pos examples: 104
Target train neg examples: 3988

Target test facts examples: 162
Target test pos	 examples: 9
Target test neg examples: 91

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.46125983910675533;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3488463256948422;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.26212705508354184;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19945264276423433;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15451336627983223;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12179491558002796;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09745354768081688;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07895233872555124;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.961538
   AUC PR    = 0.5625
   CLL	      = -0.178531
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 0.55 seconds
Total inference time: 0.364 seconds
AUC ROC: 0.961538


Results scoring model
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.302866
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.367 seconds
Parameter learned model CLL: -0.302866


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}]]
[{'': [0.1388888888888887, 0.0], 'true': [nan, 0.1388888888888887]}, {'': [0.13888888888888884, 0.0], 'true': [nan, 0.13888888888888884]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}, {'': [0.13888888888888898, 0.0], 'true': [nan, 0.13888888888888898]}, {'': [0.13888888888888884, 0.0], 'true': [nan, 0.13888888888888884]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}, {'': [0.1388888888888889, 0.0], 'true': [nan, 0.1388888888888889]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}, {'': [0.13888888888888892, 0.0], 'true': [nan, 0.13888888888888892]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.46125983910675533;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.3488463256948422;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.26212705508354184;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.19945264276423433;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.15451336627983223;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.12179491558002796;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.09745354768081688;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.07895233872555124;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.961538
   AUC PR    = 0.5625
   CLL	      = -0.178531
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 0.505 seconds
Total inference time: 0.331 seconds
AUC ROC: 0.961538


Results scoring model
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.302866
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.339 seconds
Refined model CLL: -0.302866


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.961538
   AUC PR    = 0.5625
   CLL	      = -0.178531
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 1.7610000000000001 seconds
Total inference time: 0.364 seconds
AUC ROC: 0.961538
Total revision time: 1.7610000000000001
Best scored revision CLL: -0.302866


Dataset: 1_imdb_uwcse, Fold: 3, Type: Transfer (trRDN-B), Time: 00:00:47
{'AUC ROC': 0.961538, 'AUC PR': 0.5625, 'CLL': -0.178531, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 1.7610000000000001, 'Inference time': 0.364, 'parameter_5': {'AUC ROC': 0.961538, 'AUC PR': 0.5625, 'CLL': -0.178531, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 0.55, 'Inference time': 0.364}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5248156017661789;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.448295606241962;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.36236334632262296;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.28075385369658534;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else return -0.10159632948783628;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.21248070121827137;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.1594898822817116;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else return -0.08518475138839687;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.11975529938157475;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.09028081829440963;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else return -0.07324622576333704;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.0684031142911853;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.052078905701252655;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else return -0.0641918400820262;  // std dev = 1.86e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.965812
   AUC PR    = 0.668512
   CLL	      = -0.160008
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 0.597 seconds
Total inference time: 0.362 seconds
AUC ROC: 0.965812


Results scoring model
   AUC ROC   = 0.91
   AUC PR    = 0.905699
   CLL	      = -0.335188
   Precision = 0.769231 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.869565


Total scoring time: 0.366 seconds
Parameter learned model CLL: -0.335188


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.414, 3, 6], 'false': [0.0, 7, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.414, 3, 6], 'false': [0.0, 7, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.414, 3, 6], 'false': [0.0, 7, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.414, 3, 6], 'false': [0.0, 7, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.414, 3, 6], 'false': [0.0, 7, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.414, 3, 6], 'false': [0.0, 7, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.414, 3, 6], 'false': [0.0, 7, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.414, 3, 6], 'false': [0.0, 7, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.414, 3, 6], 'false': [2.63e-09, 7, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.414, 3, 6], 'false': [1.86e-09, 7, 0]}]]
[{'': [0.1775147928994082, -7.93016446160826e-18], 'true': [0.0, 0.2222222222222222]}, {'': [0.16951092596571385, -1.982541115402065e-18], 'true': [0.0, 0.2222222222222222]}, {'': [0.16178110618266858, -1.982541115402065e-18], 'true': [0.0, 0.2222222222222222]}, {'': [0.15783027254162546, -1.982541115402065e-18], 'true': [0.0, 0.2222222222222222]}, {'': [0.1563414397293972, 0.0], 'true': [0.0, 0.2222222222222222]}, {'': [0.15579635565993286, -9.912705577010326e-19], 'true': [0.0, 0.2222222222222222]}, {'': [0.15557169028116216, -9.912705577010326e-19], 'true': [0.0, 0.22222222222222227]}, {'': [0.15545166058666607, 0.0], 'true': [0.0, 0.2222222222222222]}, {'': [0.15536142602571384, 9.912705577010326e-19], 'true': [0.0, 0.2222222222222222]}, {'': [0.15527597533661094, 4.956352788505163e-19], 'true': [0.0, 0.2222222222222222]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A) )
%   | | then return 0.09446743783575562;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A) )
%   | | then return 0.08165239320886175;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A) )
%   | | then return 0.06990902274840138;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783628;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A) )
%   | | then return 0.059354635365447495;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A) )
%   | | then return 0.05002771289938789;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A) )
%   | | then return 0.04190386852605735;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A) )
%   | | then return 0.03491396367325339;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A) )
%   | | then return 0.028961035597951046;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A) )
%   | | then return 0.023934242922604827;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 1.86e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.968254
   AUC PR    = 0.612447
   CLL	      = -0.18879
   Precision = 0.615385 at threshold = 0.5
   Recall    = 0.888889
   F1        = 0.727273


Total learning time: 1.013 seconds
Total inference time: 0.384 seconds
AUC ROC: 0.968254


Results scoring model
   AUC ROC   = 0.985
   AUC PR    = 0.988462
   CLL	      = -0.191621
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.947368


Total scoring time: 0.379 seconds
Refined model CLL: -0.191621


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.968254
   AUC PR    = 0.612447
   CLL	      = -0.18879
   Precision = 0.615385 at threshold = 0.5
   Recall    = 0.888889
   F1        = 0.727273


Total learning time: 2.355 seconds
Total inference time: 0.384 seconds
AUC ROC: 0.968254
Total revision time: 2.355
Best scored revision CLL: -0.191621


Dataset: 1_imdb_uwcse, Fold: 3, Type: Transfer (trRDN-B), Time: 00:00:50
{'AUC ROC': 0.968254, 'AUC PR': 0.612447, 'CLL': -0.18879, 'Precision': [0.615385, 0.5], 'Recall': 0.888889, 'F1': 0.727273, 'Learning time': 2.355, 'Inference time': 0.384, 'parameter_10': {'AUC ROC': 0.965812, 'AUC PR': 0.668512, 'CLL': -0.160008, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 0.597, 'Inference time': 0.362}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.5248156017661789;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.448295606241962;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.36236334632262296;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2807538536965853;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   else return -0.10159632948783628;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2124807012182713;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   else return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.15948988228171163;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   else return -0.08518475138839687;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.11975529938157475;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   else return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.09028081829440963;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   else return -0.07324622576333704;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.06840311429118523;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.052078905701252655;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   else return -0.0641918400820262;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.965812
   AUC PR    = 0.668512
   CLL	      = -0.160008
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 0.577 seconds
Total inference time: 0.362 seconds
AUC ROC: 0.965812


Results scoring model
   AUC ROC   = 0.888889
   AUC PR    = 0.880982
   CLL	      = -0.361915
   Precision = 0.75 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.857143


Total scoring time: 0.379 seconds
Parameter learned model CLL: -0.361915


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.826, 5, 10], 'false': [0.0, 10, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.826, 5, 10], 'false': [5.27e-09, 10, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.826, 5, 10], 'false': [0.0, 10, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.49e-08, 0, 5], 'true,false': [1.826, 5, 10], 'false': [0.0, 10, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.826, 5, 10], 'false': [0.0, 10, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.826, 5, 10], 'false': [0.0, 10, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.826, 5, 10], 'false': [0.0, 10, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.826, 5, 10], 'false': [0.0, 10, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.826, 5, 10], 'false': [2.63e-09, 10, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.826, 5, 10], 'false': [0.0, 10, 0]}]]
[{'': [0.18749999999999964, -1.1102230246251566e-17], 'true': [0.0, 0.22222222222222207]}, {'': [0.18045492962607126, 2.7755575615628915e-18], 'true': [0.0, 0.22222222222222224]}, {'': [0.17365107783786973, 0.0], 'true': [-4.4408920985006264e-17, 0.2222222222222222]}, {'': [0.17017352114340983, 0.0], 'true': [4.4408920985006264e-17, 0.22222222222222227]}, {'': [0.16886303809514658, 0.0], 'true': [-2.2204460492503132e-17, 0.22222222222222232]}, {'': [0.16838325055483663, 0.0], 'true': [0.0, 0.2222222222222222]}, {'': [0.1681854982162313, 0.0], 'true': [-5.551115123125783e-18, 0.2222222222222222]}, {'': [0.16807984707888837, -6.938893903907229e-19], 'true': [0.0, 0.2222222222222222]}, {'': [0.16800042186638353, 6.938893903907229e-19], 'true': [0.0, 0.22222222222222224]}, {'': [0.16792520745774606, 0.0], 'true': [0.0, 0.2222222222222222]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, A) )
%   | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, A) )
%   | | then return 0.050922032513554226;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.7385128322212614;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5385128322212613;  // std dev = 0.863, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, A) )
%   | | then return 0.04434629760466851;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then return 0.38459748295294727;  // std dev = 0.840, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5750747842620998;  // std dev = 0.060, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, A) )
%   | | then return 0.038428662236904595;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | | then return 0.533713527288968;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3089516268217075;  // std dev = 0.804, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.10159632948783628;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, A) )
%   | | then return 0.03315494592188569;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then return 0.17392598383200733;  // std dev = 0.791, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.35909868035616355;  // std dev = 0.056, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.3609981467372359;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.02849510592572117;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.1621402585523417;  // std dev = 0.774, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.08518475138839687;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.28265698451435056;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.024408230135271946;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.1294444174905016;  // std dev = 0.782, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return -0.023140288525556142;  // std dev = 0.760, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(E, B) )
%   | | | then return 0.25206660322860547;  // std dev = 0.718, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.03237748347386854;  // std dev = 0.423, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.07324622576333704;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return -0.018912273294102167;  // std dev = 0.759, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(E, B) )
%   | | | then return 0.21214670037987074;  // std dev = 0.717, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.027011362403089108;  // std dev = 0.422, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.23658358039261165;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(G, B), publication(H, A) )
%   | | | then return 0.1038397215634705;  // std dev = 0.784, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.008002460380350225;  // std dev = 0.803, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else return -0.0641918400820262;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.972527
   AUC PR    = 0.695721
   CLL	      = -0.173613
   Precision = 0.615385 at threshold = 0.5
   Recall    = 0.888889
   F1        = 0.727273


Total learning time: 1.494 seconds
Total inference time: 0.38 seconds
AUC ROC: 0.972527


Results scoring model
   AUC ROC   = 0.993333
   AUC PR    = 0.993856
   CLL	      = -0.209128
   Precision = 0.933333 at threshold = 0.5
   Recall    = 0.933333
   F1        = 0.933333


Total scoring time: 0.39 seconds
Refined model CLL: -0.209128


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.972527
   AUC PR    = 0.695721
   CLL	      = -0.173613
   Precision = 0.615385 at threshold = 0.5
   Recall    = 0.888889
   F1        = 0.727273


Total learning time: 2.8400000000000003 seconds
Total inference time: 0.38 seconds
AUC ROC: 0.972527
Total revision time: 2.8400000000000003
Best scored revision CLL: -0.209128


Dataset: 1_imdb_uwcse, Fold: 3, Type: Transfer (trRDN-B), Time: 00:00:54
{'AUC ROC': 0.972527, 'AUC PR': 0.695721, 'CLL': -0.173613, 'Precision': [0.615385, 0.5], 'Recall': 0.888889, 'F1': 0.727273, 'Learning time': 2.8400000000000003, 'Inference time': 0.38, 'parameter_15': {'AUC ROC': 0.965812, 'AUC PR': 0.668512, 'CLL': -0.160008, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 0.577, 'Inference time': 0.362}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.48972788246793325;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.41913763479307387;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3407031818531312;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2658145976910086;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.20225665230385217;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   else return -0.092691276189261;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.15215732917048747;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   else return -0.08518475138839686;  // std dev = 6.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.11413670827862854;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   else return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.08572465532423158;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.06456984724172966;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.048791071089684786;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   else return -0.0641918400820262;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.965812
   AUC PR    = 0.668512
   CLL	      = -0.158431
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 0.668 seconds
Total inference time: 0.364 seconds
AUC ROC: 0.965812


Results scoring model
   AUC ROC   = 0.895
   AUC PR    = 0.892439
   CLL	      = -0.359612
   Precision = 0.740741 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.851064


Total scoring time: 0.391 seconds
Parameter learned model CLL: -0.359612


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.103, 7, 12], 'false': [0.0, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [2.103, 7, 12], 'false': [7.45e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.103, 7, 12], 'false': [1.05e-08, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [2.103, 7, 12], 'false': [5.27e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.103, 7, 12], 'false': [0.0, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.49e-08, 0, 8], 'true,false': [2.103, 7, 12], 'false': [6.45e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.103, 7, 12], 'false': [3.73e-09, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 8], 'true,false': [2.103, 7, 12], 'false': [5.27e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.103, 7, 12], 'false': [2.63e-09, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.103, 7, 12], 'false': [0.0, 13, 0]}]]
[{'': [0.19204389574759964, -1.2810265668751807e-17], 'true': [-2.220446049250313e-16, 0.23268698060941825]}, {'': [0.18255015238766303, 4.270088556250602e-18], 'true': [1.1102230246251565e-16, 0.23268698060941817]}, {'': [0.17335065655532628, 8.540177112501205e-18], 'true': [-1.1102230246251565e-16, 0.23268698060941836]}, {'': [0.16854092399437995, 2.135044278125301e-18], 'true': [1.1102230246251565e-16, 0.23268698060941836]}, {'': [0.16666835294550775, -1.0675221390626506e-18], 'true': [-4.163336342344337e-17, 0.2326869806094184]}, {'': [0.16595535809984535, 3.2025664171879517e-18], 'true': [2.7755575615628914e-17, 0.23268698060941825]}, {'': [0.16564912807110108, 1.0675221390626506e-18], 'true': [-2.0816681711721685e-17, 0.23268698060941825]}, {'': [0.16548345777492293, 2.135044278125301e-18], 'true': [6.938893903907228e-18, 0.2326869806094183]}, {'': [0.16536374320091732, 5.337610695313253e-19], 'true': [-3.469446951953614e-18, 0.2326869806094183]}, {'': [0.16525680181083102, 0.0], 'true': [0.0, 0.23268698060941825]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, A) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.17404678896768655;  // std dev = 0.821, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.08883646453365202;  // std dev = 0.860, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.3927941835770488;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), ta(F, E, G) )
%   | | | then return 0.07011653078393573;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.15780745899984425;  // std dev = 0.812, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( ta(H, A, I) )
%   | | | then return 0.6215900499242275;  // std dev = 0.181, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.34060602229408066;  // std dev = 1.047, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.6425689834205924;  // std dev = 0.240, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(E, A) )
%   | | | then return -0.02834556505936545;  // std dev = 0.903, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.30733970827317936;  // std dev = 1.062, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.5003376137517735;  // std dev = 0.264, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then return -0.037585485380503145;  // std dev = 0.968, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.24180218625155173;  // std dev = 0.978, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else return -0.092691276189261;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.10846305734542165;  // std dev = 0.798, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.010394661094988461;  // std dev = 0.677, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.373299204062431;  // std dev = 0.258, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1107517719064318;  // std dev = 0.889, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.08518475138839686;  // std dev = 6.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.374844541223581;  // std dev = 0.268, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then return -0.0720669384443967;  // std dev = 0.891, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.1620237321224995;  // std dev = 0.936, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.29952148553607433;  // std dev = 0.242, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.20577811376398236;  // std dev = 0.524, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.025497398461931397;  // std dev = 1.152, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.24549214218210744;  // std dev = 0.214, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then return -0.0763660374953013;  // std dev = 0.838, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.12676419147372953;  // std dev = 0.929, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.0499056932882772;  // std dev = 0.781, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.08266012628039662;  // std dev = 0.511, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.24706599131341198;  // std dev = 0.294, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.03509125022050947;  // std dev = 0.745, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.970696
   AUC PR    = 0.586693
   CLL	      = -0.164227
   Precision = 0.7 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.736842


Total learning time: 1.847 seconds
Total inference time: 0.384 seconds
AUC ROC: 0.970696


Results scoring model
   AUC ROC   = 0.99375
   AUC PR    = 0.994358
   CLL	      = -0.205618
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.974359


Total scoring time: 0.415 seconds
Refined model CLL: -0.205618


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.970696
   AUC PR    = 0.586693
   CLL	      = -0.164227
   Precision = 0.7 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.736842


Total learning time: 3.321 seconds
Total inference time: 0.384 seconds
AUC ROC: 0.970696
Total revision time: 3.321
Best scored revision CLL: -0.205618


Dataset: 1_imdb_uwcse, Fold: 3, Type: Transfer (trRDN-B), Time: 00:00:59
{'AUC ROC': 0.970696, 'AUC PR': 0.586693, 'CLL': -0.164227, 'Precision': [0.7, 0.5], 'Recall': 0.777778, 'F1': 0.736842, 'Learning time': 3.321, 'Inference time': 0.384, 'parameter_20': {'AUC ROC': 0.965812, 'AUC PR': 0.668512, 'CLL': -0.158431, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 0.668, 'Inference time': 0.364}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5538011090125557;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   else return -0.1418510649004878;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.47229335143132645;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.38001730810381656;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2928705343129343;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   else return -0.10159632948783628;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.220885144201335;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   else return -0.09269127618926094;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.16572114150216558;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.12473636890516958;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   else return -0.07877675473109173;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.09448637891966662;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.07206282877535872;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   else return -0.06842697784420272;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.055304338844376265;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   else return -0.0641918400820262;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 0.965812
   AUC PR    = 0.668512
   CLL	      = -0.161823
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 0.732 seconds
Total inference time: 0.361 seconds
AUC ROC: 0.965812


Results scoring model
   AUC ROC   = 0.9104
   AUC PR    = 0.902051
   CLL	      = -0.32985
   Precision = 0.78125 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.877193


Total scoring time: 0.399 seconds
Parameter learned model CLL: -0.32985


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [2.207, 7, 16], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 9], 'true,false': [2.207, 7, 16], 'false': [7.45e-09, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [2.207, 7, 16], 'false': [1.18e-08, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [3.33e-08, 0, 9], 'true,false': [2.207, 7, 16], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [2.207, 7, 16], 'false': [7.45e-09, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.83e-08, 0, 9], 'true,false': [2.207, 7, 16], 'false': [5.27e-09, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [2.207, 7, 16], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 9], 'true,false': [2.207, 7, 16], 'false': [3.73e-09, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [2.207, 7, 16], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [2.207, 7, 16], 'false': [3.73e-09, 18, 0]}]]
[{'': [0.1708984375000011, -9.25185853854297e-18], 'true': [-2.9605947323337506e-16, 0.21172022684310005]}, {'': [0.16452477472954624, 3.0839528461809902e-18], 'true': [9.868649107779169e-17, 0.21172022684310024]}, {'': [0.15838943511529838, 7.709882115452476e-18], 'true': [-1.4802973661668753e-16, 0.21172022684310016]}, {'': [0.1553144689068322, 0.0], 'true': [1.2335811384723962e-16, 0.21172022684310013]}, {'': [0.154188397144153, 3.0839528461809902e-18], 'true': [-3.700743415417188e-17, 0.21172022684310027]}, {'': [0.15379140366145327, 1.5419764230904951e-18], 'true': [3.700743415417188e-17, 0.21172022684310013]}, {'': [0.15363516918182044, -7.709882115452476e-19], 'true': [-2.4671622769447922e-17, 0.2117202268431002]}, {'': [0.15355346125500458, 7.709882115452476e-19], 'true': [6.1679056923619804e-18, 0.21172022684310016]}, {'': [0.15348978384212625, 0.0], 'true': [-3.0839528461809902e-18, 0.21172022684310016]}, {'': [0.15342604342868776, 7.709882115452476e-19], 'true': [0.0, 0.21172022684310024]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.1418510649004878;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.308741135785635;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.09446743783575562;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.448295606241962;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.2564123687585864;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08165239320886175;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.6155079694218581;  // std dev = 0.184, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.35799027783741144;  // std dev = 1.089, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.20613740734453975;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.06990902274840138;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.467114830086745;  // std dev = 0.196, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2720140730922489;  // std dev = 1.081, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.10159632948783628;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.5859662305895186;  // std dev = 0.293, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.31351640942758263;  // std dev = 0.770, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.04067016647650148;  // std dev = 1.299, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   else return -0.09269127618926094;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.45892397190710793;  // std dev = 0.313, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then return -0.06378530138534624;  // std dev = 0.998, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.2310015425907575;  // std dev = 1.052, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.3627924803866634;  // std dev = 0.300, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.22801862343901083;  // std dev = 0.743, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -6.58574271301807E-4;  // std dev = 1.231, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( ta(F, A, G) )
%   | | | then return 0.13033649002338177;  // std dev = 0.672, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.2201855248565329;  // std dev = 0.551, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.2220682328896778;  // std dev = 0.796, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.09481194241079906;  // std dev = 0.768, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return -0.06679964336905493;  // std dev = 0.706, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 2.368852719059511E-4;  // std dev = 0.899, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.0723291152945643;  // std dev = 0.790, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.21881170652681103;  // std dev = 0.238, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.06842697784420272;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.2934457719599403;  // std dev = 0.273, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(E, A) )
%   | | | then return -0.09401531695158237;  // std dev = 1.001, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.11593081712009451;  // std dev = 0.846, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.0641918400820262;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 0.969475
   AUC PR    = 0.580716
   CLL	      = -0.167011
   Precision = 0.636364 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.7


Total learning time: 2.25 seconds
Total inference time: 0.378 seconds
AUC ROC: 0.969475


Results scoring model
   AUC ROC   = 0.9944
   AUC PR    = 0.995019
   CLL	      = -0.20035
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.96
   F1        = 0.979592


Total scoring time: 0.416 seconds
Refined model CLL: -0.20035


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.969475
   AUC PR    = 0.580716
   CLL	      = -0.167011
   Precision = 0.636364 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.7


Total learning time: 3.797 seconds
Total inference time: 0.378 seconds
AUC ROC: 0.969475
Total revision time: 3.797
Best scored revision CLL: -0.20035


Dataset: 1_imdb_uwcse, Fold: 3, Type: Transfer (trRDN-B), Time: 00:01:04
{'AUC ROC': 0.969475, 'AUC PR': 0.580716, 'CLL': -0.167011, 'Precision': [0.636364, 0.5], 'Recall': 0.777778, 'F1': 0.7, 'Learning time': 3.797, 'Inference time': 0.378, 'parameter_25': {'AUC ROC': 0.965812, 'AUC PR': 0.668512, 'CLL': -0.161823, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 0.732, 'Inference time': 0.361}}


Starting fold 4

Target train facts examples: 1706
Target train pos examples: 80
Target train neg examples: 2591

Target test facts examples: 681
Target test pos	 examples: 33
Target test neg examples: 1488

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.46125983910675533;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3488463256948422;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.26212705508354184;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19945264276423433;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15451336627983223;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12179491558002796;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09745354768081688;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07895233872555124;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.902218
   AUC PR    = 0.101852
   CLL	      = -0.334886
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 0.556 seconds
Total inference time: 0.662 seconds
AUC ROC: 0.902218


Results scoring model
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.302866
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.349 seconds
Parameter learned model CLL: -0.302866


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}]]
[{'': [0.1388888888888887, 0.0], 'true': [nan, 0.1388888888888887]}, {'': [0.13888888888888884, 0.0], 'true': [nan, 0.13888888888888884]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}, {'': [0.13888888888888898, 0.0], 'true': [nan, 0.13888888888888898]}, {'': [0.13888888888888884, 0.0], 'true': [nan, 0.13888888888888884]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}, {'': [0.1388888888888889, 0.0], 'true': [nan, 0.1388888888888889]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}, {'': [0.13888888888888892, 0.0], 'true': [nan, 0.13888888888888892]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.46125983910675533;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.3488463256948422;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.26212705508354184;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.19945264276423433;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.15451336627983223;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.12179491558002796;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.09745354768081688;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.07895233872555124;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.902218
   AUC PR    = 0.101852
   CLL	      = -0.334886
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 0.51 seconds
Total inference time: 0.64 seconds
AUC ROC: 0.902218


Results scoring model
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.302866
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.33 seconds
Refined model CLL: -0.302866


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.902218
   AUC PR    = 0.101852
   CLL	      = -0.334886
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 1.745 seconds
Total inference time: 0.662 seconds
AUC ROC: 0.902218
Total revision time: 1.745
Best scored revision CLL: -0.302866


Dataset: 1_imdb_uwcse, Fold: 4, Type: Transfer (trRDN-B), Time: 00:01:08
{'AUC ROC': 0.902218, 'AUC PR': 0.101852, 'CLL': -0.334886, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 1.745, 'Inference time': 0.662, 'parameter_5': {'AUC ROC': 0.902218, 'AUC PR': 0.101852, 'CLL': -0.334886, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 0.556, 'Inference time': 0.662}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.5581489350995122;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.4758860545469174;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.38264739880473925;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.29467302064371587;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.22214664751409413;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.1666739680821191;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.12551445305350536;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.09515587384078099;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.07265434968592004;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.05583203461675028;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.935362
   AUC PR    = 0.272865
   CLL	      = -0.271439
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 0.556 seconds
Total inference time: 0.659 seconds
AUC ROC: 0.935362


Results scoring model
   AUC ROC   = 0.895
   AUC PR    = 0.883482
   CLL	      = -0.348402
   Precision = 0.769231 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.869565


Total scoring time: 0.369 seconds
Parameter learned model CLL: -0.348402


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [1.449, 3, 7], 'false': [0.0, 7, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [1.449, 3, 7], 'false': [0.0, 7, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.05e-08, 0, 3], 'true,false': [1.449, 3, 7], 'false': [0.0, 7, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [1.449, 3, 7], 'false': [0.0, 7, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [1.449, 3, 7], 'false': [0.0, 7, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [1.449, 3, 7], 'false': [2.63e-09, 7, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [1.449, 3, 7], 'false': [0.0, 7, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [1.449, 3, 7], 'false': [2.63e-09, 7, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [1.449, 3, 7], 'false': [2.63e-09, 7, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [1.449, 3, 7], 'false': [0.0, 7, 0]}]]
[{'': [0.1775147928994082, -7.93016446160826e-18], 'true': [1.4802973661668753e-16, 0.21000000000000002]}, {'': [0.17207126641664156, -1.982541115402065e-18], 'true': [0.0, 0.21000000000000013]}, {'': [0.16683405906522852, -1.982541115402065e-18], 'true': [3.700743415417188e-17, 0.20999999999999996]}, {'': [0.16421712497832844, 0.0], 'true': [-3.700743415417188e-17, 0.21000000000000002]}, {'': [0.16326303525111244, 0.0], 'true': [0.0, 0.21000000000000005]}, {'': [0.16292874755986542, 9.912705577010326e-19], 'true': [0.0, 0.21000000000000002]}, {'': [0.1627982711165609, -9.912705577010326e-19], 'true': [0.0, 0.21000000000000002]}, {'': [0.16273034304956058, 9.912705577010326e-19], 'true': [0.0, 0.20999999999999996]}, {'': [0.16267709988585716, 9.912705577010326e-19], 'true': [-4.625929269271485e-18, 0.20999999999999996]}, {'': [0.16262331300078528, -4.956352788505163e-19], 'true': [-2.3129646346357427e-18, 0.20999999999999996]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.22373365448410584;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.1888683221574974;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then return 0.15278826824368347;  // std dev = 0.725, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.42042561028637027;  // std dev = 0.817, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.356564444537391;  // std dev = 0.067, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.09264684420978689;  // std dev = 1.055, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then return 0.06366989886444414;  // std dev = 0.650, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.288759024444467;  // std dev = 0.820, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.2518966211306103;  // std dev = 0.098, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.02638531455527716;  // std dev = 1.017, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.2407830421230166;  // std dev = 0.816, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.02956955740632039;  // std dev = 0.596, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.19591631070983395;  // std dev = 0.077, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.01806031940582764;  // std dev = 0.983, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.16706717737812574;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.013793669195822322;  // std dev = 0.983, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.933417
   AUC PR    = 0.143404
   CLL	      = -0.297943
   Precision = 0.148352 at threshold = 0.5
   Recall    = 0.818182
   F1        = 0.251163


Total learning time: 1.149 seconds
Total inference time: 0.767 seconds
AUC ROC: 0.933417


Results scoring model
   AUC ROC   = 0.99
   AUC PR    = 0.990191
   CLL	      = -0.223879
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.369 seconds
Refined model CLL: -0.223879


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.933417
   AUC PR    = 0.143404
   CLL	      = -0.297943
   Precision = 0.148352 at threshold = 0.5
   Recall    = 0.818182
   F1        = 0.251163


Total learning time: 2.4429999999999996 seconds
Total inference time: 0.767 seconds
AUC ROC: 0.933417
Total revision time: 2.4429999999999996
Best scored revision CLL: -0.223879


Dataset: 1_imdb_uwcse, Fold: 4, Type: Transfer (trRDN-B), Time: 00:01:12
{'AUC ROC': 0.933417, 'AUC PR': 0.143404, 'CLL': -0.297943, 'Precision': [0.148352, 0.5], 'Recall': 0.818182, 'F1': 0.251163, 'Learning time': 2.4429999999999996, 'Inference time': 0.767, 'parameter_10': {'AUC ROC': 0.935362, 'AUC PR': 0.272865, 'CLL': -0.271439, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 0.556, 'Inference time': 0.659}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.6273797043302815;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.5328490890947368;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.12544463852839138;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.4239325089396987;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.11231637819360639;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3229819329672577;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.10159632948783627;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.24247055537624243;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.09269127618926097;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.18270684819255756;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.13920656791416977;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.07877675473109173;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.10738572726383884;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.0837849901638279;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.06842697784420272;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.06600674956054423;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.0641918400820262;  // std dev = 2.63e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.935362
   AUC PR    = 0.272865
   CLL	      = -0.30501
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 0.589 seconds
Total inference time: 0.658 seconds
AUC ROC: 0.935362


Results scoring model
   AUC ROC   = 0.933333
   AUC PR    = 0.922254
   CLL	      = -0.283238
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.373 seconds
Parameter learned model CLL: -0.283238


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.519, 3, 10], 'false': [0.0, 12, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.519, 3, 10], 'false': [0.0, 12, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.519, 3, 10], 'false': [0.0, 12, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.49e-08, 0, 5], 'true,false': [1.519, 3, 10], 'false': [3.73e-09, 12, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.519, 3, 10], 'false': [3.73e-09, 12, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.519, 3, 10], 'false': [3.73e-09, 12, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.519, 3, 10], 'false': [0.0, 12, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.519, 3, 10], 'false': [3.73e-09, 12, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.519, 3, 10], 'false': [0.0, 12, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.519, 3, 10], 'false': [2.63e-09, 12, 0]}]]
[{'': [0.1388888888888886, -6.938893903907228e-18], 'true': [0.0, 0.1775147928994082]}, {'': [0.13519235496009172, 0.0], 'true': [0.0, 0.17751479289940833]}, {'': [0.13167076718541595, 0.0], 'true': [-4.4408920985006264e-17, 0.17751479289940816]}, {'': [0.12999789101376696, 1.1564823173178713e-18], 'true': [4.4408920985006264e-17, 0.1775147928994083]}, {'': [0.1294332469801311, 1.1564823173178713e-18], 'true': [-2.2204460492503132e-17, 0.17751479289940827]}, {'': [0.12925861638365682, 1.1564823173178713e-18], 'true': [0.0, 0.17751479289940827]}, {'': [0.12920369360292025, 0.0], 'true': [-5.551115123125783e-18, 0.1775147928994083]}, {'': [0.1291800462572039, 1.1564823173178713e-18], 'true': [0.0, 0.1775147928994083]}, {'': [0.12915912868445154, -5.782411586589357e-19], 'true': [0.0, 0.17751479289940827]}, {'': [0.12913279017784648, 5.782411586589357e-19], 'true': [0.0, 0.17751479289940827]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.30874113578563506;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.12544463852839138;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.2564123687585864;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.11231637819360639;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.13296311343280184;  // std dev = 0.779, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.38398145154798224;  // std dev = 0.817, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4896695399548674;  // std dev = 0.250, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.10159632948783627;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.1024696676058205;  // std dev = 0.775, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.29757467840436547;  // std dev = 0.817, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3777915101413462;  // std dev = 0.251, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09269127618926097;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.3616011201833757;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.24006923894866988;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.07638018773411794;  // std dev = 1.123, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.024784861500827794;  // std dev = 0.707, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.19907434222822717;  // std dev = 0.026, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2680466934420691;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.07877675473109173;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.27791901401904107;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16924893366459756;  // std dev = 0.023, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.01148214762582303;  // std dev = 1.078, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return -0.012913006982894127;  // std dev = 0.653, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.13612087376190773;  // std dev = 0.817, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2091309620450257;  // std dev = 0.237, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06842697784420272;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.22796926330276213;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12472361812682334;  // std dev = 0.026, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.015364883150491346;  // std dev = 1.046, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.0641918400820262;  // std dev = 2.63e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.937408
   AUC PR    = 0.15524
   CLL	      = -0.317418
   Precision = 0.118577 at threshold = 0.5
   Recall    = 0.909091
   F1        = 0.20979


Total learning time: 1.57 seconds
Total inference time: 0.73 seconds
AUC ROC: 0.937408


Results scoring model
   AUC ROC   = 0.995556
   AUC PR    = 0.995618
   CLL	      = -0.194128
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 0.389 seconds
Refined model CLL: -0.194128


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.937408
   AUC PR    = 0.15524
   CLL	      = -0.317418
   Precision = 0.118577 at threshold = 0.5
   Recall    = 0.909091
   F1        = 0.20979


Total learning time: 2.9210000000000003 seconds
Total inference time: 0.73 seconds
AUC ROC: 0.937408
Total revision time: 2.9210000000000003
Best scored revision CLL: -0.194128


Dataset: 1_imdb_uwcse, Fold: 4, Type: Transfer (trRDN-B), Time: 00:01:17
{'AUC ROC': 0.937408, 'AUC PR': 0.15524, 'CLL': -0.317418, 'Precision': [0.118577, 0.5], 'Recall': 0.909091, 'F1': 0.20979, 'Learning time': 2.9210000000000003, 'Inference time': 0.73, 'parameter_15': {'AUC ROC': 0.935362, 'AUC PR': 0.272865, 'CLL': -0.30501, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 0.589, 'Inference time': 0.658}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.6476226193100386;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.5494185715067316;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.4358066272446905;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3311647047887031;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   else return -0.10159632948783628;  // std dev = 5.27e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.24856222263410208;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   else return -0.09269127618926096;  // std dev = 5.27e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.18776859068219603;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.14373883200944895;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   else return -0.07877675473109172;  // std dev = 3.73e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.11158581592814863;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.08771890601691949;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   else return -0.06842697784420272;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.069690398723165;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   else return -0.06419184008202619;  // std dev = 6.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */


Results
   AUC ROC   = 0.935362
   AUC PR    = 0.272865
   CLL	      = -0.315769
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 0.652 seconds
Total inference time: 0.645 seconds
AUC ROC: 0.935362


Results scoring model
   AUC ROC   = 0.925
   AUC PR    = 0.907494
   CLL	      = -0.289249
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.376 seconds
Parameter learned model CLL: -0.289249


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.777, 4, 15], 'false': [0.0, 16, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.777, 4, 15], 'false': [7.45e-09, 16, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.777, 4, 15], 'false': [1.18e-08, 16, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.49e-08, 0, 5], 'true,false': [1.777, 4, 15], 'false': [5.27e-09, 16, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.777, 4, 15], 'false': [5.27e-09, 16, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.777, 4, 15], 'false': [5.27e-09, 16, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.777, 4, 15], 'false': [3.73e-09, 16, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.777, 4, 15], 'false': [3.73e-09, 16, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.777, 4, 15], 'false': [0.0, 16, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.777, 4, 15], 'false': [6.45e-09, 16, 0]}]]
[{'': [0.13888888888888906, -6.938893903907228e-18], 'true': [0.0, 0.1662049861495842]}, {'': [0.13634851618866262, 3.469446951953614e-18], 'true': [0.0, 0.16620498614958432]}, {'': [0.13393655511940294, 8.673617379884035e-18], 'true': [-4.4408920985006264e-17, 0.16620498614958454]}, {'': [0.13280869086147082, 1.734723475976807e-18], 'true': [4.4408920985006264e-17, 0.16620498614958454]}, {'': [0.13243750464329737, 1.734723475976807e-18], 'true': [-2.2204460492503132e-17, 0.16620498614958448]}, {'': [0.13232826849226756, 1.734723475976807e-18], 'true': [0.0, 0.1662049861495845]}, {'': [0.13229779603944483, 8.673617379884035e-19], 'true': [-5.551115123125783e-18, 0.16620498614958445]}, {'': [0.13228677149351445, 8.673617379884035e-19], 'true': [0.0, 0.16620498614958448]}, {'': [0.13227631406511456, 0.0], 'true': [0.0, 0.16620498614958445]}, {'': [0.13226120389738624, 2.6020852139652106e-18], 'true': [0.0, 0.16620498614958448]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, A), projectmember(E, B) )
%   | | then return 0.11231856126074147;  // std dev = 0.744, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(F, B), tempadvisedby(G, B) )
%   | | | then return 0.4307739406649614;  // std dev = 1.080, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.7462537292833586;  // std dev = 0.129, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, A), projectmember(E, B) )
%   | | then return 0.0925942202967535;  // std dev = 0.739, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(F, B), tempadvisedby(G, B) )
%   | | | then return 0.3458115840868175;  // std dev = 1.065, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.5842840961857775;  // std dev = 0.172, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.5408054529869798;  // std dev = 0.193, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4040334762936497;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(G, A) )
%   | | | then return -0.015301755522627025;  // std dev = 0.514, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.29659905772540374;  // std dev = 1.061, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.10159632948783628;  // std dev = 5.27e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.41070271281727405;  // std dev = 0.188, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3115848804584789;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | then return -0.07552995235020048;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.24933688917345748;  // std dev = 0.781, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.09269127618926096;  // std dev = 5.27e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( projectmember(D, B), publication(E, A) )
%   | | then return -0.030059875166701278;  // std dev = 0.584, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(F, B), tempadvisedby(G, B) )
%   | | | then return 0.12778392717178058;  // std dev = 0.934, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.30464876601507596;  // std dev = 0.213, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.2948679473679359;  // std dev = 0.208, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.196399108860275;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | then return -0.0882169618428849;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.14713179882813837;  // std dev = 0.678, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.07877675473109172;  // std dev = 3.73e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, A), projectmember(E, B) )
%   | | then return -0.06718090208715588;  // std dev = 0.551, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(F, B), tempadvisedby(G, B) )
%   | | | then return 0.08151473907962418;  // std dev = 0.894, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.21574547108223477;  // std dev = 0.186, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.22991169114257698;  // std dev = 0.212, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.13930211827836925;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(G, A) )
%   | | | then return -0.113582691872955;  // std dev = 0.403, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.10295312145574093;  // std dev = 0.920, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.06842697784420272;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(D, A, E) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.21586932610162343;  // std dev = 0.163, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.13799423193044275;  // std dev = 0.082, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | then return -0.1118475146358983;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.0903570936034459;  // std dev = 0.573, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.06419184008202619;  // std dev = 6.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */


Results
   AUC ROC   = 0.935178
   AUC PR    = 0.143208
   CLL	      = -0.353586
   Precision = 0.118577 at threshold = 0.5
   Recall    = 0.909091
   F1        = 0.20979


Total learning time: 2.314 seconds
Total inference time: 0.759 seconds
AUC ROC: 0.935178


Results scoring model
   AUC ROC   = 0.9975
   AUC PR    = 0.997727
   CLL	      = -0.169699
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.974359


Total scoring time: 0.403 seconds
Refined model CLL: -0.169699


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.935178
   AUC PR    = 0.143208
   CLL	      = -0.353586
   Precision = 0.118577 at threshold = 0.5
   Recall    = 0.909091
   F1        = 0.20979


Total learning time: 3.745 seconds
Total inference time: 0.759 seconds
AUC ROC: 0.935178
Total revision time: 3.745
Best scored revision CLL: -0.169699


Dataset: 1_imdb_uwcse, Fold: 4, Type: Transfer (trRDN-B), Time: 00:01:22
{'AUC ROC': 0.935178, 'AUC PR': 0.143208, 'CLL': -0.353586, 'Precision': [0.118577, 0.5], 'Recall': 0.909091, 'F1': 0.20979, 'Learning time': 3.745, 'Inference time': 0.759, 'parameter_20': {'AUC ROC': 0.935362, 'AUC PR': 0.272865, 'CLL': -0.315769, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 0.652, 'Inference time': 0.645}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6763307532813304;  // std dev = 1.809, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   else return -0.14185106490048777;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5728505077589574;  // std dev = 1.809, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   else return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.45250734201965825;  // std dev = 1.809, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.34273989085368045;  // std dev = 1.809, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   else return -0.10159632948783634;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.2573771265051455;  // std dev = 1.809, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   else return -0.09269127618926094;  // std dev = 1.18e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.19529825339842236;  // std dev = 1.809, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.1506364669407769;  // std dev = 1.809, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   else return -0.07877675473109173;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.11808890552787812;  // std dev = 1.809, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.152743858093671;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.09389442014327219;  // std dev = 1.809, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   else return -0.06842697784420274;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.075544084124919;  // std dev = 1.809, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   else return -0.06419184008202619;  // std dev = 7.45e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */


Results
   AUC ROC   = 0.935362
   AUC PR    = 0.272865
   CLL	      = -0.331826
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 0.646 seconds
Total inference time: 0.657 seconds
AUC ROC: 0.935362


Results scoring model
   AUC ROC   = 0.9424
   AUC PR    = 0.928395
   CLL	      = -0.25738
   Precision = 0.862069 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.925926


Total scoring time: 0.376 seconds
Parameter learned model CLL: -0.25738


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.809, 4, 18], 'false': [0.0, 21, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 7], 'true,false': [1.809, 4, 18], 'false': [0.0, 21, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.809, 4, 18], 'false': [1.67e-08, 21, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.58e-08, 0, 7], 'true,false': [1.809, 4, 18], 'false': [0.0, 21, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.809, 4, 18], 'false': [1.18e-08, 21, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.29e-08, 0, 7], 'true,false': [1.809, 4, 18], 'false': [7.45e-09, 21, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.809, 4, 18], 'false': [0.0, 21, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [5.27e-09, 0, 7], 'true,false': [1.809, 4, 18], 'false': [3.73e-09, 21, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.809, 4, 18], 'false': [0.0, 21, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.809, 4, 18], 'false': [7.45e-09, 21, 0]}]]
[{'': [0.11890606420927562, -2.64338815386942e-18], 'true': [-2.5376526277146434e-16, 0.14876033057851218]}, {'': [0.11678932869205842, 0.0], 'true': [6.344131569286608e-17, 0.14876033057851254]}, {'': [0.11479002364775298, 1.3216940769347101e-17], 'true': [-6.344131569286608e-17, 0.14876033057851243]}, {'': [0.11387648170213414, -7.93016446160826e-18], 'true': [9.516197353929913e-17, 0.1487603305785124]}, {'': [0.11358719272594492, 6.6084703846735505e-18], 'true': [-3.172065784643304e-17, 0.14876033057851235]}, {'': [0.11350911376254039, 2.64338815386942e-18], 'true': [2.3790493384824782e-17, 0.14876033057851237]}, {'': [0.11349271165791833, -2.64338815386942e-18], 'true': [-1.586032892321652e-17, 0.14876033057851237]}, {'': [0.11349025313167929, 6.60847038467355e-19], 'true': [3.96508223080413e-18, 0.1487603305785124]}, {'': [0.11348683993643385, -1.982541115402065e-18], 'true': [-7.93016446160826e-18, 0.14876033057851237]}, {'': [0.1134785374309817, 2.64338815386942e-18], 'true': [0.0, 0.14876033057851237]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, A), projectmember(E, B) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.14185106490048777;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( projectmember(D, B), publication(E, A) )
%   | | then return 0.16653882456488175;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.5170719622367218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.7194734122109544;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.6690695262931926;  // std dev = 0.181, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.21487899341488403;  // std dev = 1.299, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.5133345109631685;  // std dev = 0.212, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(G, A) )
%   | | | then return -0.0119550797575436;  // std dev = 0.526, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3210126636614451;  // std dev = 1.140, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.10159632948783634;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( ta(D, A, E) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.42033136359780304;  // std dev = 0.181, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.34092466499958424;  // std dev = 0.093, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.1062483671322183;  // std dev = 1.241, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.36167225241379086;  // std dev = 0.068, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09269127618926094;  // std dev = 1.18e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, A), projectmember(E, B) )
%   | | then return -0.00912994567383509;  // std dev = 0.574, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(F, B), tempadvisedby(G, B) )
%   | | | then return 0.15189841301981005;  // std dev = 1.080, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.2978545452812627;  // std dev = 0.221, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.28173466442619094;  // std dev = 0.216, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.19539567276650496;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(G, A) )
%   | | | then return -0.07038312702185932;  // std dev = 0.420, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.15003268438486078;  // std dev = 1.112, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.07877675473109173;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( ta(D, A, E) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.25217354552388743;  // std dev = 0.176, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.18735529104902293;  // std dev = 0.079, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | then return -0.06691908840059368;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.14215361285903025;  // std dev = 0.612, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.152743858093671;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( projectmember(D, B), publication(E, A) )
%   | | then return -0.058571959135155484;  // std dev = 0.482, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(F, B), tempadvisedby(G, B) )
%   | | | then return 0.06567753998664426;  // std dev = 1.053, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.19022742922643135;  // std dev = 0.195, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.06842697784420274;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.1886193046734442;  // std dev = 0.189, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.11830448884881979;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return -0.006759530932001456;  // std dev = 1.139, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.16275706576776516;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06419184008202619;  // std dev = 7.45e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */


Results
   AUC ROC   = 0.935239
   AUC PR    = 0.143265
   CLL	      = -0.36982
   Precision = 0.118081 at threshold = 0.5
   Recall    = 0.969697
   F1        = 0.210526


Total learning time: 2.491 seconds
Total inference time: 0.808 seconds
AUC ROC: 0.935239


Results scoring model
   AUC ROC   = 0.9968
   AUC PR    = 0.996919
   CLL	      = -0.167892
   Precision = 0.925926 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.961538


Total scoring time: 0.399 seconds
Refined model CLL: -0.167892


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.935239
   AUC PR    = 0.143265
   CLL	      = -0.36982
   Precision = 0.118081 at threshold = 0.5
   Recall    = 0.969697
   F1        = 0.210526


Total learning time: 3.912 seconds
Total inference time: 0.808 seconds
AUC ROC: 0.935239
Total revision time: 3.912
Best scored revision CLL: -0.167892


Dataset: 1_imdb_uwcse, Fold: 4, Type: Transfer (trRDN-B), Time: 00:01:28
{'AUC ROC': 0.935239, 'AUC PR': 0.143265, 'CLL': -0.36982, 'Precision': [0.118081, 0.5], 'Recall': 0.969697, 'F1': 0.210526, 'Learning time': 3.912, 'Inference time': 0.808, 'parameter_25': {'AUC ROC': 0.935362, 'AUC PR': 0.272865, 'CLL': -0.331826, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 0.646, 'Inference time': 0.657}}


Starting fold 5

Target train facts examples: 1973
Target train pos examples: 97
Target train neg examples: 3734

Target test facts examples: 414
Target test pos	 examples: 16
Target test neg examples: 345

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.46125983910675533;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3488463256948422;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.26212705508354184;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19945264276423433;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15451336627983223;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12179491558002796;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09745354768081688;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07895233872555124;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.901449
   AUC PR    = 0.190476
   CLL	      = -0.335284
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 0.558 seconds
Total inference time: 0.465 seconds
AUC ROC: 0.901449


Results scoring model
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.302866
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.356 seconds
Parameter learned model CLL: -0.302866


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}]]
[{'': [0.1388888888888887, 0.0], 'true': [nan, 0.1388888888888887]}, {'': [0.13888888888888884, 0.0], 'true': [nan, 0.13888888888888884]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}, {'': [0.13888888888888898, 0.0], 'true': [nan, 0.13888888888888898]}, {'': [0.13888888888888884, 0.0], 'true': [nan, 0.13888888888888884]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}, {'': [0.1388888888888889, 0.0], 'true': [nan, 0.1388888888888889]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}, {'': [0.13888888888888892, 0.0], 'true': [nan, 0.13888888888888892]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.46125983910675533;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.3488463256948422;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.26212705508354184;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.19945264276423433;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.15451336627983223;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.12179491558002796;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.09745354768081688;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.07895233872555124;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.901449
   AUC PR    = 0.190476
   CLL	      = -0.335284
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 0.489 seconds
Total inference time: 0.411 seconds
AUC ROC: 0.901449


Results scoring model
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.302866
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.341 seconds
Refined model CLL: -0.302866


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.901449
   AUC PR    = 0.190476
   CLL	      = -0.335284
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 1.744 seconds
Total inference time: 0.465 seconds
AUC ROC: 0.901449
Total revision time: 1.744
Best scored revision CLL: -0.302866


Dataset: 1_imdb_uwcse, Fold: 5, Type: Transfer (trRDN-B), Time: 00:01:31
{'AUC ROC': 0.901449, 'AUC PR': 0.190476, 'CLL': -0.335284, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 1.744, 'Inference time': 0.465, 'parameter_5': {'AUC ROC': 0.901449, 'AUC PR': 0.190476, 'CLL': -0.335284, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 0.558, 'Inference time': 0.465}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7152917922423693;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6045267906174348;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.4749335700127619;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3584548159137827;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.10159632948783628;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.26974781327936154;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.20625258815983655;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.08518475138839687;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.16095555079641394;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.12802275604229368;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.07324622576333704;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.10349083403071084;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.08478440748267761;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.926087
   AUC PR    = 0.46579
   CLL	      = -0.348441
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 0.584 seconds
Total inference time: 0.466 seconds
AUC ROC: 0.926087


Results scoring model
   AUC ROC   = 0.97
   AUC PR    = 0.964132
   CLL	      = -0.202634
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.351 seconds
Parameter learned model CLL: -0.202634


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.926, 1, 6], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.926, 1, 6], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.926, 1, 6], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.926, 1, 6], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.926, 1, 6], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.926, 1, 6], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.926, 1, 6], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.926, 1, 6], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.926, 1, 6], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.926, 1, 6], 'false': [2.63e-09, 9, 0]}]]
[{'': [0.0826446280991734, -9.25185853854297e-18], 'true': [0.0, 0.1224489795918368]}, {'': [0.08097956819349433, 0.0], 'true': [0.0, 0.12244897959183668]}, {'': [0.07941913981817074, -1.5419764230904951e-18], 'true': [0.0, 0.12244897959183668]}, {'': [0.07872920409549695, 0.0], 'true': [0.0, 0.12244897959183672]}, {'': [0.0785231135996255, 0.0], 'true': [0.0, 0.12244897959183673]}, {'': [0.07847586066961247, 0.0], 'true': [0.0, 0.12244897959183673]}, {'': [0.07847320384104797, 0.0], 'true': [0.0, 0.12244897959183675]}, {'': [0.07847935477738761, 0.0], 'true': [0.0, 0.12244897959183673]}, {'': [0.07848343404291845, 0.0], 'true': [0.0, 0.12244897959183673]}, {'': [0.07848274126019032, 7.709882115452476e-19], 'true': [0.0, 0.12244897959183673]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.36236334632262296;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.2807538536965855;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.10159632948783628;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.21248070121827137;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.1594898822817116;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.08518475138839687;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.11975529938157474;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.09028081829440963;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.17709649774527736;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07324622576333704;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.06840311429118533;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.15274385809367097;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.052078905701252655;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.13400703000801117;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.913406
   AUC PR    = 0.219795
   CLL	      = -0.340577
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 1.061 seconds
Total inference time: 0.498 seconds
AUC ROC: 0.913406


Results scoring model
   AUC ROC   = 0.99
   AUC PR    = 0.990191
   CLL	      = -0.174821
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.358 seconds
Refined model CLL: -0.174821


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.913406
   AUC PR    = 0.219795
   CLL	      = -0.340577
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 2.354 seconds
Total inference time: 0.498 seconds
AUC ROC: 0.913406
Total revision time: 2.354
Best scored revision CLL: -0.174821


Dataset: 1_imdb_uwcse, Fold: 5, Type: Transfer (trRDN-B), Time: 00:01:35
{'AUC ROC': 0.913406, 'AUC PR': 0.219795, 'CLL': -0.340577, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 2.354, 'Inference time': 0.498, 'parameter_10': {'AUC ROC': 0.926087, 'AUC PR': 0.46579, 'CLL': -0.348441, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 0.584, 'Inference time': 0.466}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.6273797043302815;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.532849089094737;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.4239325089396987;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.32298193296725763;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.10159632948783627;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.24247055537624235;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.09269127618926098;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.18270684819255742;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.13920656791416963;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.07877675473109179;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.10738572726383877;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.08378499016382775;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.06600674956054416;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.0641918400820262;  // std dev = 2.63e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.926087
   AUC PR    = 0.46579
   CLL	      = -0.297963
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 0.582 seconds
Total inference time: 0.459 seconds
AUC ROC: 0.926087


Results scoring model
   AUC ROC   = 0.933333
   AUC PR    = 0.922254
   CLL	      = -0.283238
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.362 seconds
Parameter learned model CLL: -0.283238


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.519, 3, 10], 'false': [0.0, 12, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.519, 3, 10], 'false': [5.27e-09, 12, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.519, 3, 10], 'false': [9.13e-09, 12, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.49e-08, 0, 5], 'true,false': [1.519, 3, 10], 'false': [3.73e-09, 12, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.519, 3, 10], 'false': [0.0, 12, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.519, 3, 10], 'false': [3.73e-09, 12, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.519, 3, 10], 'false': [0.0, 12, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.519, 3, 10], 'false': [3.73e-09, 12, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.519, 3, 10], 'false': [2.63e-09, 12, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.519, 3, 10], 'false': [2.63e-09, 12, 0]}]]
[{'': [0.1388888888888886, -1.1564823173178714e-17], 'true': [0.0, 0.1775147928994082]}, {'': [0.13519235496009183, 2.3129646346357427e-18], 'true': [0.0, 0.17751479289940816]}, {'': [0.13167076718541595, 6.938893903907228e-18], 'true': [-4.4408920985006264e-17, 0.1775147928994083]}, {'': [0.12999789101376685, 1.1564823173178713e-18], 'true': [4.4408920985006264e-17, 0.1775147928994082]}, {'': [0.12943324698013103, 0.0], 'true': [-2.2204460492503132e-17, 0.17751479289940827]}, {'': [0.1292586163836568, 1.1564823173178713e-18], 'true': [0.0, 0.17751479289940827]}, {'': [0.1292036936029202, -1.1564823173178713e-18], 'true': [-5.551115123125783e-18, 0.17751479289940827]}, {'': [0.1291800462572039, 1.1564823173178713e-18], 'true': [0.0, 0.17751479289940825]}, {'': [0.12915912868445156, 5.782411586589357e-19], 'true': [0.0, 0.1775147928994083]}, {'': [0.12913279017784646, 5.782411586589357e-19], 'true': [0.0, 0.1775147928994083]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 4.21e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.3927941835770488;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.32092546969114216;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.36236334632262296;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.4072149579289901;  // std dev = 0.866, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.3149437863120166;  // std dev = 0.825, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.16236427104365;  // std dev = 0.625, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.10159632948783627;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.16688075113001735;  // std dev = 1.064, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.20399251131519783;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.34932828801097754;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.2595725632072445;  // std dev = 0.866, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.1821705589811893;  // std dev = 0.823, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.058423258308040904;  // std dev = 0.593, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.07100229106709889;  // std dev = 1.038, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.10779564612419328;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2448027757849725;  // std dev = 0.083, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109179;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.1771465908510724;  // std dev = 0.866, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.10955963664048254;  // std dev = 0.822, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.008002383438453053;  // std dev = 0.570, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.018843275536647587;  // std dev = 1.018, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.05509185721769697;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.18941689819964974;  // std dev = 0.095, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.014332964598313402;  // std dev = 1.018, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.042087950135843245;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.16231223478946216;  // std dev = 0.084, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 2.63e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.920199
   AUC PR    = 0.205918
   CLL	      = -0.339098
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 1.438 seconds
Total inference time: 0.503 seconds
AUC ROC: 0.920199


Results scoring model
   AUC ROC   = 0.975556
   AUC PR    = 0.974758
   CLL	      = -0.236692
   Precision = 0.882353 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.9375


Total scoring time: 0.377 seconds
Refined model CLL: -0.236692


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.920199
   AUC PR    = 0.205918
   CLL	      = -0.339098
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 2.7589999999999995 seconds
Total inference time: 0.503 seconds
AUC ROC: 0.920199
Total revision time: 2.7589999999999995
Best scored revision CLL: -0.236692


Dataset: 1_imdb_uwcse, Fold: 5, Type: Transfer (trRDN-B), Time: 00:01:40
{'AUC ROC': 0.920199, 'AUC PR': 0.205918, 'CLL': -0.339098, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 2.7589999999999995, 'Inference time': 0.503, 'parameter_15': {'AUC ROC': 0.926087, 'AUC PR': 0.46579, 'CLL': -0.297963, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 0.582, 'Inference time': 0.459}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6816783468642181;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5772066794120976;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4556011626653659;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.3448948463549135;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.10159632948783628;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.25904528127845544;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.09269127618926094;  // std dev = 9.13e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.19674969883689405;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1519855521716933;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.07877675473109173;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.11937467555536747;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.09512618887804336;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.06842697784420272;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.07672095753768493;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.06419184008202619;  // std dev = 6.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.926087
   AUC PR    = 0.46579
   CLL	      = -0.327959
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 0.699 seconds
Total inference time: 0.463 seconds
AUC ROC: 0.926087


Results scoring model
   AUC ROC   = 0.9475
   AUC PR    = 0.935194
   CLL	      = -0.24847
   Precision = 0.869565 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.930233


Total scoring time: 0.376 seconds
Parameter learned model CLL: -0.24847


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.572, 3, 14], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [1.572, 3, 14], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.572, 3, 14], 'false': [1.49e-08, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [1.572, 3, 14], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.572, 3, 14], 'false': [9.13e-09, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 6], 'true,false': [1.572, 3, 14], 'false': [7.45e-09, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.572, 3, 14], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [5.27e-09, 0, 6], 'true,false': [1.572, 3, 14], 'false': [5.27e-09, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.572, 3, 14], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.572, 3, 14], 'false': [6.45e-09, 17, 0]}]]
[{'': [0.11342155009451807, -3.2653618371328133e-18], 'true': [-1.4802973661668753e-16, 0.14532871972318323]}, {'': [0.1113194544128796, 0.0], 'true': [7.401486830834377e-17, 0.1453287197231834]}, {'': [0.10933600495809746, 1.3061447348531253e-17], 'true': [-7.401486830834377e-17, 0.14532871972318337]}, {'': [0.1084336946728562, 0.0], 'true': [7.401486830834377e-17, 0.14532871972318337]}, {'': [0.10815011621403423, 4.89804275569922e-18], 'true': [-3.700743415417188e-17, 0.14532871972318334]}, {'': [0.10807500030362155, 3.2653618371328133e-18], 'true': [9.25185853854297e-18, 0.14532871972318342]}, {'': [0.10806042900680761, -2.44902137784961e-18], 'true': [-9.25185853854297e-18, 0.14532871972318337]}, {'': [0.10805930794890531, 1.6326809185664067e-18], 'true': [4.625929269271485e-18, 0.1453287197231834]}, {'': [0.10805699165209932, -8.163404592832033e-19], 'true': [-4.625929269271485e-18, 0.1453287197231834]}, {'': [0.10804964500920679, 2.44902137784961e-18], 'true': [0.0, 0.1453287197231834]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.8581489350995122;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, B), publication(E, A) )
%   | | then return 0.3927941835770488;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.5580193346218546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.32092546969114216;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.4419486100244409;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.5553664367462843;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B), publication(G, A) )
%   | | | then return 0.34342762965032503;  // std dev = 0.821, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5349968746411944;  // std dev = 0.166, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.2326769132763889;  // std dev = 1.080, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.10159632948783628;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.16659180067234844;  // std dev = 1.064, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.2624472960479586;  // std dev = 0.880, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.3313351193166473;  // std dev = 0.060, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.09269127618926094;  // std dev = 9.13e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.1182290297217168;  // std dev = 0.721, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.3968975018221214;  // std dev = 0.299, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.09012129900709373;  // std dev = 1.003, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.056127185714189363;  // std dev = 0.985, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.16183402098996164;  // std dev = 0.869, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.23115076282011845;  // std dev = 0.092, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.07877675473109173;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.04240275766474196;  // std dev = 0.985, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.12575546268053642;  // std dev = 0.870, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.19286283826382183;  // std dev = 0.080, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.032090605624837086;  // std dev = 0.986, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.09903497263060497;  // std dev = 0.871, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.16474835753760206;  // std dev = 0.070, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.06842697784420272;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B), publication(G, A) )
%   | | | then return 0.09634190620327354;  // std dev = 0.761, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.21563845980695942;  // std dev = 0.181, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.006794210643466454;  // std dev = 1.030, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.14670009453945243;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06419184008202619;  // std dev = 6.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.924457
   AUC PR    = 0.220288
   CLL	      = -0.372296
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 1.763 seconds
Total inference time: 0.483 seconds
AUC ROC: 0.924457


Results scoring model
   AUC ROC   = 0.99125
   AUC PR    = 0.9909
   CLL	      = -0.201586
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.409 seconds
Refined model CLL: -0.201586


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.924457
   AUC PR    = 0.220288
   CLL	      = -0.372296
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 3.247 seconds
Total inference time: 0.483 seconds
AUC ROC: 0.924457
Total revision time: 3.247
Best scored revision CLL: -0.201586


Dataset: 1_imdb_uwcse, Fold: 5, Type: Transfer (trRDN-B), Time: 00:01:44
{'AUC ROC': 0.924457, 'AUC PR': 0.220288, 'CLL': -0.372296, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 3.247, 'Inference time': 0.483, 'parameter_20': {'AUC ROC': 0.926087, 'AUC PR': 0.46579, 'CLL': -0.327959, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 0.699, 'Inference time': 0.463}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7081489350995123;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else return -0.14185106490048777;  // std dev = 7.45e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5987301289105087;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.4708413690230273;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.35556966135501783;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.26744030851537454;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else return -0.09269127618926093;  // std dev = 1.18e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2041766068841465;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else return -0.08518475138839686;  // std dev = 9.13e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.15897684158606568;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else return -0.07877675473109179;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.12610125737419722;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else return -0.07324622576333704;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.10162108252318376;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else return -0.06842697784420274;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.08297179282455366;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else return -0.06419184008202619;  // std dev = 7.45e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 0.926087
   AUC PR    = 0.46579
   CLL	      = -0.343959
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 0.617 seconds
Total inference time: 0.45 seconds
AUC ROC: 0.926087


Results scoring model
   AUC ROC   = 0.9592
   AUC PR    = 0.94918
   CLL	      = -0.222818
   Precision = 0.892857 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.943396


Total scoring time: 0.382 seconds
Parameter learned model CLL: -0.222818


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.597, 3, 17], 'false': [7.45e-09, 22, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [1.597, 3, 17], 'false': [0.0, 22, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.597, 3, 17], 'false': [1.67e-08, 22, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [1.597, 3, 17], 'false': [0.0, 22, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.597, 3, 17], 'false': [1.18e-08, 22, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.49e-08, 0, 8], 'true,false': [1.597, 3, 17], 'false': [9.13e-09, 22, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.597, 3, 17], 'false': [0.0, 22, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 8], 'true,false': [1.597, 3, 17], 'false': [0.0, 22, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.597, 3, 17], 'false': [0.0, 22, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.597, 3, 17], 'false': [7.45e-09, 22, 0]}]]
[{'': [0.09566326530612335, 2.523234146875356e-18], 'true': [-2.220446049250313e-16, 0.12749999999999986]}, {'': [0.09404672254330018, 0.0], 'true': [1.1102230246251565e-16, 0.1274999999999998]}, {'': [0.0925294871578816, 1.2616170734376778e-17], 'true': [-1.1102230246251565e-16, 0.1274999999999998]}, {'': [0.0918544999127059, -6.308085367188389e-18], 'true': [1.1102230246251565e-16, 0.12749999999999995]}, {'': [0.09165058302644534, 6.308085367188389e-18], 'true': [-4.163336342344337e-17, 0.12749999999999997]}, {'': [0.09160215405284744, 3.784851220313033e-18], 'true': [2.7755575615628914e-17, 0.12750000000000006]}, {'': [0.09159769329978028, 0.0], 'true': [-2.0816681711721685e-17, 0.12750000000000003]}, {'': [0.09160214582459268, 0.0], 'true': [6.938893903907228e-18, 0.1275]}, {'': [0.09160480371061842, -1.8924256101565167e-18], 'true': [-3.469446951953614e-18, 0.1275]}, {'': [0.09160297866007587, 2.523234146875356e-18], 'true': [0.0, 0.1275]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, B), publication(E, A) )
%   | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.14185106490048777;  // std dev = 7.45e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.3927941835770488;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.7194734122109545;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, B), publication(E, A) )
%   | | then return 0.32092546969114216;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.627926505773422;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4901731206697357;  // std dev = 0.905, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, B), publication(E, A) )
%   | | then return 0.25206564481433;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.32441533947375417;  // std dev = 0.895, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.4334483842734619;  // std dev = 1.49e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B), publication(G, A) )
%   | | | then return 0.27757702515900295;  // std dev = 0.819, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4507188662148501;  // std dev = 0.187, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | | then return 0.3943627318329826;  // std dev = 1.29e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17690718703633354;  // std dev = 1.064, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.09269127618926093;  // std dev = 1.18e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.12095560324832255;  // std dev = 1.067, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.16796976888422788;  // std dev = 0.860, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.2853537894813551;  // std dev = 0.052, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.08518475138839686;  // std dev = 9.13e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B), publication(G, A) )
%   | | | then return 0.17585166157074478;  // std dev = 0.818, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3100751406284578;  // std dev = 0.186, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | | then return 0.270646967580935;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08780000413043625;  // std dev = 1.048, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.07877675473109179;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.02811924778087349;  // std dev = 0.667, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( ta(G, A, H), publication(I, A) )
%   | | | then return 0.36722790259374594;  // std dev = 0.212, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.09035710169311766;  // std dev = 1.065, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.07324622576333704;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, B), publication(E, A) )
%   | | then return -0.012431511405846663;  // std dev = 0.966, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.07898010881649507;  // std dev = 0.850, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.192105141550145;  // std dev = 0.085, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.06842697784420274;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, B), publication(E, A) )
%   | | then return -0.009528385203429468;  // std dev = 0.966, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.06478035653398724;  // std dev = 0.852, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.16416404640882598;  // std dev = 0.075, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.06419184008202619;  // std dev = 7.45e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 0.921286
   AUC PR    = 0.208883
   CLL	      = -0.391107
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 1.854 seconds
Total inference time: 0.505 seconds
AUC ROC: 0.921286


Results scoring model
   AUC ROC   = 0.9944
   AUC PR    = 0.994225
   CLL	      = -0.180837
   Precision = 0.892857 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.943396


Total scoring time: 0.411 seconds
Refined model CLL: -0.180837


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.921286
   AUC PR    = 0.208883
   CLL	      = -0.391107
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 3.2640000000000002 seconds
Total inference time: 0.505 seconds
AUC ROC: 0.921286
Total revision time: 3.2640000000000002
Best scored revision CLL: -0.180837


Dataset: 1_imdb_uwcse, Fold: 5, Type: Transfer (trRDN-B), Time: 00:01:49
{'AUC ROC': 0.921286, 'AUC PR': 0.208883, 'CLL': -0.391107, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 3.2640000000000002, 'Inference time': 0.505, 'parameter_25': {'AUC ROC': 0.926087, 'AUC PR': 0.46579, 'CLL': -0.343959, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 0.617, 'Inference time': 0.45}}


Starting fold 1

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos	 examples: 35
Target test neg examples: 1814

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.46125983910675533;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3488463256948422;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.26212705508354184;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19945264276423433;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15451336627983223;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12179491558002796;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09745354768081688;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07895233872555124;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.90215
   AUC PR    = 0.089744
   CLL	      = -0.335276
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 0.546 seconds
Total inference time: 0.735 seconds
AUC ROC: 0.90215


Results scoring model
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.302866
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.347 seconds
Parameter learned model CLL: -0.302866


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}]]
[{'': [0.1388888888888887, 0.0], 'true': [nan, 0.1388888888888887]}, {'': [0.13888888888888884, 0.0], 'true': [nan, 0.13888888888888884]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}, {'': [0.13888888888888898, 0.0], 'true': [nan, 0.13888888888888898]}, {'': [0.13888888888888884, 0.0], 'true': [nan, 0.13888888888888884]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}, {'': [0.1388888888888889, 0.0], 'true': [nan, 0.1388888888888889]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}, {'': [0.13888888888888892, 0.0], 'true': [nan, 0.13888888888888892]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.46125983910675533;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.3488463256948422;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.26212705508354184;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.19945264276423433;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.15451336627983223;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.12179491558002796;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.09745354768081688;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.07895233872555124;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.90215
   AUC PR    = 0.089744
   CLL	      = -0.335276
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 0.501 seconds
Total inference time: 0.604 seconds
AUC ROC: 0.90215


Results scoring model
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.302866
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.341 seconds
Refined model CLL: -0.302866


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.90215
   AUC PR    = 0.089744
   CLL	      = -0.335276
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 1.735 seconds
Total inference time: 0.735 seconds
AUC ROC: 0.90215
Total revision time: 1.735
Best scored revision CLL: -0.302866


Dataset: 1_imdb_uwcse, Fold: 1, Type: Transfer (trRDN-B), Time: 00:01:53
{'AUC ROC': 0.90215, 'AUC PR': 0.089744, 'CLL': -0.335276, 'Precision': [0.089744, 0.5], 'Recall': 1.0, 'F1': 0.164706, 'Learning time': 1.735, 'Inference time': 0.735, 'parameter_5': {'AUC ROC': 0.90215, 'AUC PR': 0.089744, 'CLL': -0.335276, 'Precision': [0.089744, 0.5], 'Recall': 1.0, 'F1': 0.164706, 'Learning time': 0.546, 'Inference time': 0.735}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.6914822684328455;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5851860008555358;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.46125983910675544;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.34884632569484214;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.26212705508354195;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19945264276423424;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15451336627983223;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12179491558002802;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09745354768081678;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0789523387255512;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.90215
   AUC PR    = 0.089744
   CLL	      = -0.335276
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 0.561 seconds
Total inference time: 0.678 seconds
AUC ROC: 0.90215


Results scoring model
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.302866
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.355 seconds
Parameter learned model CLL: -0.302866


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.291, 2, 10], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.291, 2, 10], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.291, 2, 10], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.291, 2, 10], 'false': [3.73e-09, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.291, 2, 10], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.291, 2, 10], 'false': [3.73e-09, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.291, 2, 10], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.291, 2, 10], 'false': [2.63e-09, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.291, 2, 10], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.291, 2, 10], 'false': [0.0, 8, 0]}]]
[{'': [0.1388888888888887, -6.938893903907228e-18], 'true': [nan, 0.1388888888888887]}, {'': [0.13888888888888914, 0.0], 'true': [nan, 0.13888888888888914]}, {'': [0.1388888888888891, -1.734723475976807e-18], 'true': [nan, 0.1388888888888891]}, {'': [0.138888888888889, 1.734723475976807e-18], 'true': [nan, 0.138888888888889]}, {'': [0.1388888888888888, 0.0], 'true': [nan, 0.1388888888888888]}, {'': [0.13888888888888892, 1.734723475976807e-18], 'true': [nan, 0.13888888888888892]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}, {'': [0.13888888888888887, 8.673617379884035e-19], 'true': [nan, 0.13888888888888887]}, {'': [0.1388888888888889, 0.0], 'true': [nan, 0.1388888888888889]}, {'': [0.1388888888888889, 0.0], 'true': [nan, 0.1388888888888889]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), ta(D, A, E) )
%   | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), ta(D, A, E) )
%   | then return 0.16653882456488175;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), tempadvisedby(D, B) )
%   | then return 0.18206367311425797;  // std dev = 0.747, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.6187150549302712;  // std dev = 0.219, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( ta(C, A, D), publication(E, A) )
%   | then return 0.08431725219819823;  // std dev = 0.748, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.4329762781757971;  // std dev = 0.125, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), tempadvisedby(E, B) )
%   | then return 0.12843272819612003;  // std dev = 0.631, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.40356899904590465;  // std dev = 0.315, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, A) )
%   | then return 0.025531218051582344;  // std dev = 0.571, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | then return 0.26357116375176454;  // std dev = 0.053, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3408509489741123;  // std dev = 0.283, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), tempadvisedby(E, B) )
%   | then return 0.06290949139366216;  // std dev = 0.568, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.27772106521528034;  // std dev = 0.276, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), tempadvisedby(D, B) )
%   | then return -0.013648483386795668;  // std dev = 0.527, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | then return 0.1904192351270934;  // std dev = 0.075, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.24334100135415124;  // std dev = 0.222, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, A) )
%   | then return -0.059163403716309126;  // std dev = 0.527, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( ta(F, A, G) )
%   | | then return 0.16725458033626206;  // std dev = 0.071, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.19118546906327677;  // std dev = 0.122, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), tempadvisedby(D, B) )
%   | then return -0.022364263770966925;  // std dev = 0.481, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | then return 0.14041764146580543;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.19252891569899083;  // std dev = 0.226, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.894424
   AUC PR    = 0.082238
   CLL	      = -0.432161
   Precision = 0.085714 at threshold = 0.5
   Recall    = 0.857143
   F1        = 0.155844


Total learning time: 1.348 seconds
Total inference time: 0.712 seconds
AUC ROC: 0.894424


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.144681
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.354 seconds
Refined model CLL: -0.144681


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.894424
   AUC PR    = 0.082238
   CLL	      = -0.432161
   Precision = 0.085714 at threshold = 0.5
   Recall    = 0.857143
   F1        = 0.155844


Total learning time: 2.6180000000000003 seconds
Total inference time: 0.712 seconds
AUC ROC: 0.894424
Total revision time: 2.6180000000000003
Best scored revision CLL: -0.144681


Dataset: 1_imdb_uwcse, Fold: 1, Type: Transfer (trRDN-B), Time: 00:01:57
{'AUC ROC': 0.894424, 'AUC PR': 0.082238, 'CLL': -0.432161, 'Precision': [0.085714, 0.5], 'Recall': 0.857143, 'F1': 0.155844, 'Learning time': 2.6180000000000003, 'Inference time': 0.712, 'parameter_10': {'AUC ROC': 0.90215, 'AUC PR': 0.089744, 'CLL': -0.335276, 'Precision': [0.089744, 0.5], 'Recall': 1.0, 'F1': 0.164706, 'Learning time': 0.561, 'Inference time': 0.678}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.6081489350995122;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.5170719622367218;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.4125724528826601;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.3151786576185066;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.23676009386434202;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.178069454272075;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.13513671764223462;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.10367175113685506;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.08034833303035915;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.06282214181758178;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.06419184008202619;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.937707
   AUC PR    = 0.29769
   CLL	      = -0.292167
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 0.576 seconds
Total inference time: 0.68 seconds
AUC ROC: 0.937707


Results scoring model
   AUC ROC   = 0.893333
   AUC PR    = 0.869809
   CLL	      = -0.338687
   Precision = 0.789474 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.882353


Total scoring time: 0.371 seconds
Parameter learned model CLL: -0.338687


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [1.732, 4, 12], 'false': [0.0, 11, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [1.732, 4, 12], 'false': [5.27e-09, 11, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.05e-08, 0, 3], 'true,false': [1.732, 4, 12], 'false': [7.45e-09, 11, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [1.732, 4, 12], 'false': [0.0, 11, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [1.732, 4, 12], 'false': [0.0, 11, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [1.732, 4, 12], 'false': [5.27e-09, 11, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [1.732, 4, 12], 'false': [0.0, 11, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [1.732, 4, 12], 'false': [2.63e-09, 11, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [1.732, 4, 12], 'false': [2.63e-09, 11, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [1.732, 4, 12], 'false': [5.27e-09, 11, 0]}]]
[{'': [0.16620498614958412, -1.0092936587501423e-17], 'true': [1.4802973661668753e-16, 0.18749999999999994]}, {'': [0.1633417857442666, 2.523234146875356e-18], 'true': [0.0, 0.1875]}, {'': [0.16060588877486678, 5.046468293750712e-18], 'true': [3.700743415417188e-17, 0.1874999999999999]}, {'': [0.15928719386458587, 0.0], 'true': [-3.700743415417188e-17, 0.1874999999999999]}, {'': [0.1588318533249559, 0.0], 'true': [0.0, 0.18749999999999992]}, {'': [0.15868518647710622, 2.523234146875356e-18], 'true': [0.0, 0.18750000000000006]}, {'': [0.15863511933620858, 0.0], 'true': [0.0, 0.1875]}, {'': [0.15861157142353602, 6.30808536718839e-19], 'true': [0.0, 0.18749999999999997]}, {'': [0.15859161600654084, 6.30808536718839e-19], 'true': [-4.625929269271485e-18, 0.18749999999999997]}, {'': [0.15856850370836795, 2.523234146875356e-18], 'true': [-2.3129646346357427e-18, 0.18750000000000003]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(D, A), ta(E, A, F) )
%   | | then return 0.14934664067946404;  // std dev = 0.774, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.7336899220885286;  // std dev = 0.106, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.3816289395752953;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( ta(D, A, E) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.1259605598007535;  // std dev = 0.770, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.43777657170357115;  // std dev = 0.810, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.5903272049404396;  // std dev = 0.133, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3762900157855366;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.0511305522644061;  // std dev = 0.636, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.42688597807242223;  // std dev = 0.049, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3057639070761325;  // std dev = 1.193, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then return 0.15528518179817316;  // std dev = 0.645, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.3705891931652865;  // std dev = 0.216, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.23329765493733998;  // std dev = 1.197, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return -0.007919082815479908;  // std dev = 0.580, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( ta(F, A, G), tempadvisedby(H, B) )
%   | | | then return 0.30750991518698245;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.19562156119238197;  // std dev = 1.201, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return -0.006288165098417638;  // std dev = 0.581, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.22712569612391015;  // std dev = 0.058, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.1274889352413923;  // std dev = 1.199, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( ta(D, A, E) )
%   | | then if ( ta(D, F, G), tempadvisedby(F, H) )
%   | | | then return 0.14263817033970425;  // std dev = 0.472, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.02098493357119948;  // std dev = 0.887, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.24305747814129747;  // std dev = 0.261, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.08128476268394728;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return -0.03526006463224222;  // std dev = 0.545, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.16906131658080753;  // std dev = 0.077, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.07918286919023164;  // std dev = 1.192, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return -0.027954972575478604;  // std dev = 0.546, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.1467416460791167;  // std dev = 0.069, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.060355744093961695;  // std dev = 1.192, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.06419184008202619;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.929343
   AUC PR    = 0.116091
   CLL	      = -0.302173
   Precision = 0.095506 at threshold = 0.5
   Recall    = 0.971429
   F1        = 0.173913


Total learning time: 1.736 seconds
Total inference time: 0.853 seconds
AUC ROC: 0.929343


Results scoring model
   AUC ROC   = 0.968889
   AUC PR    = 0.968671
   CLL	      = -0.239216
   Precision = 0.882353 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.9375


Total scoring time: 0.393 seconds
Refined model CLL: -0.239216


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.929343
   AUC PR    = 0.116091
   CLL	      = -0.302173
   Precision = 0.095506 at threshold = 0.5
   Recall    = 0.971429
   F1        = 0.173913


Total learning time: 3.0759999999999996 seconds
Total inference time: 0.853 seconds
AUC ROC: 0.929343
Total revision time: 3.0759999999999996
Best scored revision CLL: -0.239216


Dataset: 1_imdb_uwcse, Fold: 1, Type: Transfer (trRDN-B), Time: 00:02:02
{'AUC ROC': 0.929343, 'AUC PR': 0.116091, 'CLL': -0.302173, 'Precision': [0.095506, 0.5], 'Recall': 0.971429, 'F1': 0.173913, 'Learning time': 3.0759999999999996, 'Inference time': 0.853, 'parameter_15': {'AUC ROC': 0.937707, 'AUC PR': 0.29769, 'CLL': -0.292167, 'Precision': [0.089744, 0.5], 'Recall': 1.0, 'F1': 0.164706, 'Learning time': 0.576, 'Inference time': 0.68}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5949910403626701;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5062567560764838;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4047531668618017;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   else return -0.11231637819360636;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.3098169854894562;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   else return -0.1015963294878363;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.23288770051702268;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   else return -0.09269127618926096;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.17498421379444493;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   else return -0.08518475138839686;  // std dev = 6.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.13247624158403282;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   else return -0.07877675473109172;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.10127711761073174;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.07815629510841404;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   else return -0.06842697784420272;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.06080926191424567;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   else return -0.06419184008202619;  // std dev = 5.89e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.937707
   AUC PR    = 0.29769
   CLL	      = -0.285492
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 0.586 seconds
Total inference time: 0.682 seconds
AUC ROC: 0.937707


Results scoring model
   AUC ROC   = 0.9125
   AUC PR    = 0.89904
   CLL	      = -0.318772
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total scoring time: 0.38 seconds
Parameter learned model CLL: -0.318772


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.919, 5, 14], 'false': [0.0, 15, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [1.919, 5, 14], 'false': [5.27e-09, 15, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.919, 5, 14], 'false': [9.13e-09, 15, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [1.919, 5, 14], 'false': [0.0, 15, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.919, 5, 14], 'false': [5.27e-09, 15, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 6], 'true,false': [1.919, 5, 14], 'false': [6.45e-09, 15, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.919, 5, 14], 'false': [5.27e-09, 15, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [5.27e-09, 0, 6], 'true,false': [1.919, 5, 14], 'false': [5.27e-09, 15, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.919, 5, 14], 'false': [3.73e-09, 15, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.919, 5, 14], 'false': [5.89e-09, 15, 0]}]]
[{'': [0.16000000000000014, -1.4802973661668754e-17], 'true': [-1.4802973661668753e-16, 0.19390581717451508]}, {'': [0.15566056991608884, 1.8503717077085942e-18], 'true': [7.401486830834377e-17, 0.19390581717451513]}, {'': [0.1515060477813414, 5.551115123125783e-18], 'true': [-7.401486830834377e-17, 0.19390581717451535]}, {'': [0.14948399791597844, 0.0], 'true': [7.401486830834377e-17, 0.19390581717451513]}, {'': [0.148775286978439, 1.8503717077085942e-18], 'true': [-3.700743415417188e-17, 0.19390581717451524]}, {'': [0.1485412749331217, 2.7755575615628915e-18], 'true': [9.25185853854297e-18, 0.1939058171745152]}, {'': [0.14845779159718595, 1.8503717077085942e-18], 'true': [-9.25185853854297e-18, 0.19390581717451524]}, {'': [0.14841696175351873, 1.8503717077085942e-18], 'true': [4.625929269271485e-18, 0.19390581717451524]}, {'': [0.14838316780293093, 9.251858538542971e-19], 'true': [-4.625929269271485e-18, 0.19390581717451527]}, {'': [0.1483457044301445, 2.3129646346357427e-18], 'true': [0.0, 0.19390581717451524]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.09446743783575562;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.448295606241962;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.08165239320886175;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.36236334632262296;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.11231637819360636;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( ta(D, A, E), publication(F, A) )
%   | | then return 0.08463507750890716;  // std dev = 0.648, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.3997673002655992;  // std dev = 0.718, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.21408718702991872;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.1015963294878363;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.030155676259452473;  // std dev = 0.836, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.3245902153074987;  // std dev = 1.49e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.234211417076679;  // std dev = 1.164, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.09269127618926096;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.024962326874657326;  // std dev = 0.836, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.2578169068013559;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.1761064286122215;  // std dev = 1.164, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.08518475138839686;  // std dev = 6.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.020598233883657682;  // std dev = 0.835, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.21162413545370962;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.13216147539564305;  // std dev = 1.164, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.07877675473109172;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.016952791967282832;  // std dev = 0.835, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.1784642223706817;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.09949389043896262;  // std dev = 1.164, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.0139225369819998;  // std dev = 0.835, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.15378062453194363;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.0752651669775883;  // std dev = 1.164, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.06842697784420272;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.011413739663860889;  // std dev = 0.834, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.13481589811323091;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.05722054626686309;  // std dev = 1.164, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.06419184008202619;  // std dev = 5.89e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.947637
   AUC PR    = 0.311092
   CLL	      = -0.276873
   Precision = 0.113074 at threshold = 0.5
   Recall    = 0.914286
   F1        = 0.201258


Total learning time: 1.65 seconds
Total inference time: 0.775 seconds
AUC ROC: 0.947637


Results scoring model
   AUC ROC   = 0.98125
   AUC PR    = 0.981341
   CLL	      = -0.220909
   Precision = 0.904762 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.926829


Total scoring time: 0.408 seconds
Refined model CLL: -0.220909


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.947637
   AUC PR    = 0.311092
   CLL	      = -0.276873
   Precision = 0.113074 at threshold = 0.5
   Recall    = 0.914286
   F1        = 0.201258


Total learning time: 3.0239999999999996 seconds
Total inference time: 0.775 seconds
AUC ROC: 0.947637
Total revision time: 3.0239999999999996
Best scored revision CLL: -0.220909


Dataset: 1_imdb_uwcse, Fold: 1, Type: Transfer (trRDN-B), Time: 00:02:07
{'AUC ROC': 0.947637, 'AUC PR': 0.311092, 'CLL': -0.276873, 'Precision': [0.113074, 0.5], 'Recall': 0.914286, 'F1': 0.201258, 'Learning time': 3.0239999999999996, 'Inference time': 0.775, 'parameter_20': {'AUC ROC': 0.937707, 'AUC PR': 0.29769, 'CLL': -0.285492, 'Precision': [0.089744, 0.5], 'Recall': 1.0, 'F1': 0.164706, 'Learning time': 0.586, 'Inference time': 0.682}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.6200536970042743;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   else return -0.14185106490048777;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5268429106668969;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.4196142257872248;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   else return -0.11231637819360633;  // std dev = 1.83e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.3200133002419622;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   else return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.24028721331151187;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   else return -0.09269127618926094;  // std dev = 1.05e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.1809214351143775;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   else return -0.08518475138839685;  // std dev = 1.05e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.13762992643840294;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   else return -0.07877675473109173;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.1059400618073129;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   else return -0.07324622576333704;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.08244226187470091;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   else return -0.06842697784420274;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.06475854750582631;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   else return -0.06419184008202619;  // std dev = 6.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.937707
   AUC PR    = 0.29769
   CLL	      = -0.298363
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 0.652 seconds
Total inference time: 0.691 seconds
AUC ROC: 0.937707


Results scoring model
   AUC ROC   = 0.936
   AUC PR    = 0.926351
   CLL	      = -0.281102
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.383 seconds
Parameter learned model CLL: -0.281102


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.952, 5, 16], 'false': [0.0, 20, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 9], 'true,false': [1.952, 5, 16], 'false': [7.45e-09, 20, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.952, 5, 16], 'false': [1.83e-08, 20, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [3.33e-08, 0, 9], 'true,false': [1.952, 5, 16], 'false': [0.0, 20, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.952, 5, 16], 'false': [1.05e-08, 20, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.83e-08, 0, 9], 'true,false': [1.952, 5, 16], 'false': [1.05e-08, 20, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.952, 5, 16], 'false': [0.0, 20, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 9], 'true,false': [1.952, 5, 16], 'false': [0.0, 20, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.952, 5, 16], 'false': [0.0, 20, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.952, 5, 16], 'false': [6.45e-09, 20, 0]}]]
[{'': [0.13888888888888987, -2.7755575615628915e-18], 'true': [-2.9605947323337506e-16, 0.18140589569160967]}, {'': [0.1347764941104012, 2.7755575615628915e-18], 'true': [9.868649107779169e-17, 0.18140589569161]}, {'': [0.1308541461679839, 1.6653345369377347e-17], 'true': [-1.4802973661668753e-16, 0.18140589569160992]}, {'': [0.1289804511105183, -4.163336342344337e-18], 'true': [1.2335811384723962e-16, 0.18140589569160995]}, {'': [0.12834243254736136, 5.551115123125783e-18], 'true': [-3.700743415417188e-17, 0.18140589569160998]}, {'': [0.1281418952897517, 5.551115123125783e-18], 'true': [3.700743415417188e-17, 0.18140589569161]}, {'': [0.12807663475867395, -2.7755575615628915e-18], 'true': [-2.4671622769447922e-17, 0.18140589569160998]}, {'': [0.1280474070429596, -6.938893903907229e-19], 'true': [6.1679056923619804e-18, 0.18140589569160995]}, {'': [0.12802201301462332, -1.3877787807814458e-18], 'true': [-3.0839528461809902e-18, 0.18140589569160998]}, {'': [0.1279911509731866, 2.0816681711721684e-18], 'true': [0.0, 0.18140589569160998]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.09446743783575562;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.48767788391726297;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.08165239320886175;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.3912569620992536;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.11231637819360633;  // std dev = 1.83e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.06990902274840138;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.3005711547884894;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.059354635365447495;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.22629823971521876;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.09269127618926094;  // std dev = 1.05e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.05002771289938789;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.16984358676510128;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.08518475138839685;  // std dev = 1.05e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.04190386852605735;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.12813320688246752;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.03491396367325339;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.17709649774527736;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.09743184803714998;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.028961035597951046;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.15274385809367094;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.07468131696953094;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.06842697784420274;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.023934242922604827;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.13400703000801117;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.057651940521137104;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.06419184008202619;  // std dev = 6.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.936431
   AUC PR    = 0.145359
   CLL	      = -0.284805
   Precision = 0.113074 at threshold = 0.5
   Recall    = 0.914286
   F1        = 0.201258


Total learning time: 1.725 seconds
Total inference time: 0.765 seconds
AUC ROC: 0.936431


Results scoring model
   AUC ROC   = 0.9864
   AUC PR    = 0.986667
   CLL	      = -0.202652
   Precision = 0.923077 at threshold = 0.5
   Recall    = 0.96
   F1        = 0.941176


Total scoring time: 0.424 seconds
Refined model CLL: -0.202652


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.936431
   AUC PR    = 0.145359
   CLL	      = -0.284805
   Precision = 0.113074 at threshold = 0.5
   Recall    = 0.914286
   F1        = 0.201258


Total learning time: 3.184 seconds
Total inference time: 0.765 seconds
AUC ROC: 0.936431
Total revision time: 3.184
Best scored revision CLL: -0.202652


Dataset: 1_imdb_uwcse, Fold: 1, Type: Transfer (trRDN-B), Time: 00:02:12
{'AUC ROC': 0.936431, 'AUC PR': 0.145359, 'CLL': -0.284805, 'Precision': [0.113074, 0.5], 'Recall': 0.914286, 'F1': 0.201258, 'Learning time': 3.184, 'Inference time': 0.765, 'parameter_25': {'AUC ROC': 0.937707, 'AUC PR': 0.29769, 'CLL': -0.298363, 'Precision': [0.089744, 0.5], 'Recall': 1.0, 'F1': 0.164706, 'Learning time': 0.652, 'Inference time': 0.691}}


Starting fold 2

Target train facts examples: 1965
Target train pos examples: 93
Target train neg examples: 3738

Target test facts examples: 422
Target test pos	 examples: 20
Target test neg examples: 341

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.46125983910675533;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3488463256948422;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.26212705508354184;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19945264276423433;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15451336627983223;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12179491558002796;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09745354768081688;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07895233872555124;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.926686
   AUC PR    = 0.285714
   CLL	      = -0.267614
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 0.564 seconds
Total inference time: 0.496 seconds
AUC ROC: 0.926686


Results scoring model
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.302866
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.342 seconds
Parameter learned model CLL: -0.302866


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}]]
[{'': [0.1388888888888887, 0.0], 'true': [nan, 0.1388888888888887]}, {'': [0.13888888888888884, 0.0], 'true': [nan, 0.13888888888888884]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}, {'': [0.13888888888888898, 0.0], 'true': [nan, 0.13888888888888898]}, {'': [0.13888888888888884, 0.0], 'true': [nan, 0.13888888888888884]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}, {'': [0.1388888888888889, 0.0], 'true': [nan, 0.1388888888888889]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}, {'': [0.13888888888888892, 0.0], 'true': [nan, 0.13888888888888892]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.46125983910675533;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.3488463256948422;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.26212705508354184;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.19945264276423433;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.15451336627983223;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.12179491558002796;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.09745354768081688;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.07895233872555124;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.926686
   AUC PR    = 0.285714
   CLL	      = -0.267614
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 0.481 seconds
Total inference time: 0.417 seconds
AUC ROC: 0.926686


Results scoring model
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.302866
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.344 seconds
Refined model CLL: -0.302866


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.926686
   AUC PR    = 0.285714
   CLL	      = -0.267614
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 1.7309999999999999 seconds
Total inference time: 0.496 seconds
AUC ROC: 0.926686
Total revision time: 1.7309999999999999
Best scored revision CLL: -0.302866


Dataset: 1_imdb_uwcse, Fold: 2, Type: Transfer (trRDN-B), Time: 00:02:16
{'AUC ROC': 0.926686, 'AUC PR': 0.285714, 'CLL': -0.267614, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 1.7309999999999999, 'Inference time': 0.496, 'parameter_5': {'AUC ROC': 0.926686, 'AUC PR': 0.285714, 'CLL': -0.267614, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 0.564, 'Inference time': 0.496}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.6273797043302815;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.14185106490048777;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5328490890947368;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.4239325089396988;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3229819329672577;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.24247055537624246;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.09269127618926098;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18270684819255756;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.08518475138839687;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13920656791416966;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.07877675473109177;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1073857272638388;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.07324622576333704;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0837849901638278;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.06842697784420272;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06600674956054416;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.926686
   AUC PR    = 0.285714
   CLL	      = -0.243445
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 0.583 seconds
Total inference time: 0.463 seconds
AUC ROC: 0.926686


Results scoring model
   AUC ROC   = 0.85
   AUC PR    = 0.769231
   CLL	      = -0.377538
   Precision = 0.769231 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.869565


Total scoring time: 0.358 seconds
Parameter learned model CLL: -0.377538


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.519, 3, 10], 'false': [0.0, 7, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.519, 3, 10], 'false': [0.0, 7, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.519, 3, 10], 'false': [0.0, 7, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.519, 3, 10], 'false': [0.0, 7, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.519, 3, 10], 'false': [2.63e-09, 7, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.519, 3, 10], 'false': [0.0, 7, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.519, 3, 10], 'false': [2.63e-09, 7, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.519, 3, 10], 'false': [0.0, 7, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.519, 3, 10], 'false': [0.0, 7, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.519, 3, 10], 'false': [0.0, 7, 0]}]]
[{'': [0.1775147928994082, 0.0], 'true': [nan, 0.1775147928994082]}, {'': [0.1775147928994084, 0.0], 'true': [nan, 0.1775147928994084]}, {'': [0.177514792899408, 0.0], 'true': [nan, 0.177514792899408]}, {'': [0.17751479289940836, 0.0], 'true': [nan, 0.17751479289940836]}, {'': [0.1775147928994082, 9.912705577010326e-19], 'true': [nan, 0.1775147928994082]}, {'': [0.17751479289940816, 0.0], 'true': [nan, 0.17751479289940816]}, {'': [0.17751479289940827, 9.912705577010326e-19], 'true': [nan, 0.17751479289940827]}, {'': [0.17751479289940827, 0.0], 'true': [nan, 0.17751479289940827]}, {'': [0.17751479289940827, 0.0], 'true': [nan, 0.17751479289940827]}, {'': [0.1775147928994083, -4.956352788505163e-19], 'true': [nan, 0.1775147928994083]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, D), ta(E, D, F) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.14185106490048777;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, D), ta(E, D, F) )
%   | | then return 0.5170719622367217;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.16653882456488175;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, D), ta(E, D, F) )
%   | | then return 0.41257245288266;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.1420942428155648;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.37893660025558945;  // std dev = 0.743, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.12033788610741263;  // std dev = 0.903, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.35824653629970393;  // std dev = 0.130, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(F, A) )
%   | | then return 0.13359337610589156;  // std dev = 1.153, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.09269127618926098;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.2526550505900207;  // std dev = 0.725, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.06155089744207777;  // std dev = 0.897, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.25163822378376405;  // std dev = 0.009, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.08518475138839687;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.23456171456471087;  // std dev = 0.105, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(F, A) )
%   | | then return 0.07486513822357173;  // std dev = 1.145, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.21034411339447423;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07877675473109177;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.19562639720665376;  // std dev = 0.093, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(F, A) )
%   | | then return 0.05714685251697793;  // std dev = 1.144, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.17752647330563387;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07324622576333704;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.16701758188262145;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(F, A) )
%   | | then return 0.04352756739090957;  // std dev = 1.144, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.15306995950656455;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06842697784420272;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.14529950425237512;  // std dev = 0.075, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(F, A) )
%   | | then return 0.03311248199354224;  // std dev = 1.143, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.13426156087803431;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.929472
   AUC PR    = 0.331057
   CLL	      = -0.254016
   Precision = 0.3 at threshold = 0.5
   Recall    = 0.75
   F1        = 0.428571


Total learning time: 1.754 seconds
Total inference time: 0.487 seconds
AUC ROC: 0.929472


Results scoring model
   AUC ROC   = 0.975
   AUC PR    = 0.975784
   CLL	      = -0.2568
   Precision = 0.9 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.9


Total scoring time: 0.362 seconds
Refined model CLL: -0.2568


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.929472
   AUC PR    = 0.331057
   CLL	      = -0.254016
   Precision = 0.3 at threshold = 0.5
   Recall    = 0.75
   F1        = 0.428571


Total learning time: 3.057 seconds
Total inference time: 0.487 seconds
AUC ROC: 0.929472
Total revision time: 3.057
Best scored revision CLL: -0.2568


Dataset: 1_imdb_uwcse, Fold: 2, Type: Transfer (trRDN-B), Time: 00:02:20
{'AUC ROC': 0.929472, 'AUC PR': 0.331057, 'CLL': -0.254016, 'Precision': [0.3, 0.5], 'Recall': 0.75, 'F1': 0.428571, 'Learning time': 3.057, 'Inference time': 0.487, 'parameter_10': {'AUC ROC': 0.926686, 'AUC PR': 0.285714, 'CLL': -0.243445, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 0.583, 'Inference time': 0.463}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.6476226193100386;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5494185715067316;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   else return -0.12544463852839138;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.43580662724469027;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   else return -0.11231637819360639;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.331164704788703;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   else return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.24856222263410194;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18776859068219615;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14373883200944887;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   else return -0.07877675473109173;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11158581592814869;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   else return -0.07324622576333704;  // std dev = 4.56e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08771890601691956;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.069690398723165;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   else return -0.06419184008202622;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.926686
   AUC PR    = 0.285714
   CLL	      = -0.250636
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 0.591 seconds
Total inference time: 0.508 seconds
AUC ROC: 0.926686


Results scoring model
   AUC ROC   = 0.866667
   AUC PR    = 0.789474
   CLL	      = -0.354119
   Precision = 0.789474 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.882353


Total scoring time: 0.368 seconds
Parameter learned model CLL: -0.354119


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.777, 4, 15], 'false': [0.0, 11, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.777, 4, 15], 'false': [0.0, 11, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.777, 4, 15], 'false': [0.0, 11, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.777, 4, 15], 'false': [0.0, 11, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.777, 4, 15], 'false': [0.0, 11, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.777, 4, 15], 'false': [3.73e-09, 11, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.777, 4, 15], 'false': [0.0, 11, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.777, 4, 15], 'false': [4.56e-09, 11, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.777, 4, 15], 'false': [2.63e-09, 11, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.777, 4, 15], 'false': [0.0, 11, 0]}]]
[{'': [0.16620498614958412, -5.046468293750712e-18], 'true': [nan, 0.16620498614958412]}, {'': [0.16620498614958432, 0.0], 'true': [nan, 0.16620498614958432]}, {'': [0.16620498614958465, -2.523234146875356e-18], 'true': [nan, 0.16620498614958465]}, {'': [0.16620498614958448, -2.523234146875356e-18], 'true': [nan, 0.16620498614958448]}, {'': [0.16620498614958454, -1.261617073437678e-18], 'true': [nan, 0.16620498614958454]}, {'': [0.16620498614958443, 1.261617073437678e-18], 'true': [nan, 0.16620498614958443]}, {'': [0.16620498614958445, 0.0], 'true': [nan, 0.16620498614958445]}, {'': [0.16620498614958445, 1.8924256101565167e-18], 'true': [nan, 0.16620498614958445]}, {'': [0.16620498614958445, 6.30808536718839e-19], 'true': [nan, 0.16620498614958445]}, {'': [0.1662049861495845, -1.261617073437678e-18], 'true': [nan, 0.1662049861495845]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, D), tempadvisedby(D, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.476365416181169;  // std dev = 0.800, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.20689176852058164;  // std dev = 1.089, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.12544463852839138;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, D), ta(E, D, F) )
%   | | then return 0.3523171038581868;  // std dev = 1.070, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.09304490145622575;  // std dev = 0.798, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.11231637819360639;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.353672883051106;  // std dev = 0.774, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.11492035570735501;  // std dev = 1.071, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, D), ta(E, D, F) )
%   | | then return 0.24470576520276274;  // std dev = 1.049, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.018386755506504555;  // std dev = 0.777, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( projectmember(C, B) )
%   | then return 0.3661669755723485;  // std dev = 0.272, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(D, A) )
%   | | then if ( tempadvisedby(E, B), publication(F, E) )
%   | | | then return 0.2511968701647945;  // std dev = 0.753, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.08954144797404985;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.2551722425694894;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( projectmember(C, B) )
%   | then return 0.2938160181943819;  // std dev = 0.250, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.0025149800545504752;  // std dev = 0.915, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.18991663060636127;  // std dev = 0.755, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.07877675473109173;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.1905298861055119;  // std dev = 0.752, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.010847732311170949;  // std dev = 0.963, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.17357161586376205;  // std dev = 0.036, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07324622576333704;  // std dev = 4.56e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, D), ta(E, D, F) )
%   | | then return 0.12629321291894868;  // std dev = 0.958, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.05209376170550728;  // std dev = 0.741, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.15008211829217907;  // std dev = 0.032, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.14353470050123834;  // std dev = 0.742, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.0138236734302706;  // std dev = 0.953, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.1319377006641149;  // std dev = 0.029, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.06419184008202622;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.925587
   AUC PR    = 0.312864
   CLL	      = -0.241952
   Precision = 0.266667 at threshold = 0.5
   Recall    = 0.4
   F1        = 0.32


Total learning time: 2.041 seconds
Total inference time: 0.479 seconds
AUC ROC: 0.925587


Results scoring model
   AUC ROC   = 0.988889
   AUC PR    = 0.98969
   CLL	      = -0.217941
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.866667
   F1        = 0.928571


Total scoring time: 0.39 seconds
Refined model CLL: -0.217941


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.925587
   AUC PR    = 0.312864
   CLL	      = -0.241952
   Precision = 0.266667 at threshold = 0.5
   Recall    = 0.4
   F1        = 0.32


Total learning time: 3.39 seconds
Total inference time: 0.479 seconds
AUC ROC: 0.925587
Total revision time: 3.39
Best scored revision CLL: -0.217941


Dataset: 1_imdb_uwcse, Fold: 2, Type: Transfer (trRDN-B), Time: 00:02:25
{'AUC ROC': 0.925587, 'AUC PR': 0.312864, 'CLL': -0.241952, 'Precision': [0.266667, 0.5], 'Recall': 0.4, 'F1': 0.32, 'Learning time': 3.39, 'Inference time': 0.479, 'parameter_15': {'AUC ROC': 0.926686, 'AUC PR': 0.285714, 'CLL': -0.250636, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 0.591, 'Inference time': 0.508}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.5724346493852265;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.4876778839172631;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.39125696209925354;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else return -0.11231637819360638;  // std dev = 9.13e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3005711547884893;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else return -0.10159632948783627;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.22629823971521887;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else return -0.09269127618926097;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.16984358676510136;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.12813320688246752;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.09743184803714998;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.07468131696953091;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else return -0.06842697784420272;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.057651940521137125;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else return -0.0641918400820262;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.956745
   AUC PR    = 0.591831
   CLL	      = -0.224645
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 0.623 seconds
Total inference time: 0.447 seconds
AUC ROC: 0.956745


Results scoring model
   AUC ROC   = 0.8875
   AUC PR    = 0.870148
   CLL	      = -0.354217
   Precision = 0.769231 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.869565


Total scoring time: 0.383 seconds
Parameter learned model CLL: -0.354217


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [2.07, 6, 15], 'false': [0.0, 14, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [2.07, 6, 15], 'false': [5.27e-09, 14, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [2.07, 6, 15], 'false': [9.13e-09, 14, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.49e-08, 0, 5], 'true,false': [2.07, 6, 15], 'false': [0.0, 14, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [2.07, 6, 15], 'false': [0.0, 14, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [2.07, 6, 15], 'false': [3.73e-09, 14, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [2.07, 6, 15], 'false': [0.0, 14, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [2.07, 6, 15], 'false': [3.73e-09, 14, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [2.07, 6, 15], 'false': [0.0, 14, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [2.07, 6, 15], 'false': [0.0, 14, 0]}]]
[{'': [0.17751479289940847, -7.93016446160826e-18], 'true': [0.0, 0.20408163265306115]}, {'': [0.1731806715339515, 1.982541115402065e-18], 'true': [0.0, 0.204081632653061]}, {'': [0.16901837720977608, 5.9476233462061954e-18], 'true': [-4.4408920985006264e-17, 0.20408163265306117]}, {'': [0.16695932287899026, 0.0], 'true': [4.4408920985006264e-17, 0.20408163265306126]}, {'': [0.16621972485503228, 0.0], 'true': [-2.2204460492503132e-17, 0.20408163265306123]}, {'': [0.16596608620742123, 9.912705577010326e-19], 'true': [0.0, 0.20408163265306126]}, {'': [0.1658700299905087, 0.0], 'true': [-5.551115123125783e-18, 0.20408163265306123]}, {'': [0.16582093099400727, 9.912705577010326e-19], 'true': [0.0, 0.20408163265306123]}, {'': [0.16578168086225004, 0.0], 'true': [0.0, 0.20408163265306126]}, {'': [0.16574072765692166, -4.956352788505163e-19], 'true': [0.0, 0.20408163265306123]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), tempadvisedby(E, F) )
%   | | | then return 0.1724443383255503;  // std dev = 0.809, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.04737872425715306;  // std dev = 0.899, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.7194734122109542;  // std dev = 4.21e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), tempadvisedby(E, F) )
%   | | | then return 0.14779691020918875;  // std dev = 0.809, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.04115247537842408;  // std dev = 0.899, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.5553664367462846;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.11231637819360638;  // std dev = 9.13e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.03258952019171235;  // std dev = 0.902, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.12941571457114337;  // std dev = 0.802, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.4175135841583098;  // std dev = 4.21e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.10159632948783627;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.02800382154604858;  // std dev = 0.903, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.1076448843581429;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.3207118471601497;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.09269127618926097;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), tempadvisedby(E, F) )
%   | | | then return 0.0926471598979859;  // std dev = 0.795, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.02138897274721862;  // std dev = 0.906, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.2551722425694894;  // std dev = 2.11e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.38078352654519954;  // std dev = 0.419, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(E, A), tempadvisedby(F, B) )
%   | | | then return -0.18825367343715016;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.1644387933500689;  // std dev = 0.958, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.3158733018760918;  // std dev = 0.398, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(E, A) )
%   | | | then return -0.06249299220390595;  // std dev = 0.946, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.1837978940261391;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.26623852334846326;  // std dev = 0.366, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(E, A) )
%   | | | then return -0.05265516717521685;  // std dev = 0.945, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.15780876649162243;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.06842697784420272;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.22764913867472703;  // std dev = 0.332, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(E, A), tempadvisedby(F, B) )
%   | | | then return -0.14630922685260397;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.10959134607019634;  // std dev = 0.932, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else return -0.0641918400820262;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.967302
   AUC PR    = 0.635651
   CLL	      = -0.206742
   Precision = 0.444444 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.571429


Total learning time: 1.819 seconds
Total inference time: 0.509 seconds
AUC ROC: 0.967302


Results scoring model
   AUC ROC   = 0.99375
   AUC PR    = 0.994358
   CLL	      = -0.166007
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.974359


Total scoring time: 0.396 seconds
Refined model CLL: -0.166007


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.967302
   AUC PR    = 0.635651
   CLL	      = -0.206742
   Precision = 0.444444 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.571429


Total learning time: 3.221 seconds
Total inference time: 0.509 seconds
AUC ROC: 0.967302
Total revision time: 3.221
Best scored revision CLL: -0.166007


Dataset: 1_imdb_uwcse, Fold: 2, Type: Transfer (trRDN-B), Time: 00:02:30
{'AUC ROC': 0.967302, 'AUC PR': 0.635651, 'CLL': -0.206742, 'Precision': [0.444444, 0.5], 'Recall': 0.8, 'F1': 0.571429, 'Learning time': 3.221, 'Inference time': 0.509, 'parameter_20': {'AUC ROC': 0.956745, 'AUC PR': 0.591831, 'CLL': -0.224645, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 0.623, 'Inference time': 0.447}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5781489350995123;  // std dev = 2.245, 25.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.1418510649004878;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.49238913840392556;  // std dev = 2.245, 25.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3946871849514701;  // std dev = 2.245, 25.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.30292068945189327;  // std dev = 2.245, 25.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.10159632948783627;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.22796283972308054;  // std dev = 2.245, 25.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.092691276189261;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.1711293278244227;  // std dev = 2.245, 25.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.1292085584393369;  // std dev = 2.245, 25.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.07877675473109173;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.09837607626228792;  // std dev = 2.245, 25.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.152743858093671;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.07552905818195488;  // std dev = 2.245, 25.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.06842697784420272;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.05841806950104651;  // std dev = 2.245, 25.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else return -0.0641918400820262;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 0.956745
   AUC PR    = 0.591831
   CLL	      = -0.226454
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 0.629 seconds
Total inference time: 0.461 seconds
AUC ROC: 0.956745


Results scoring model
   AUC ROC   = 0.8992
   AUC PR    = 0.884367
   CLL	      = -0.339108
   Precision = 0.78125 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.877193


Total scoring time: 0.448 seconds
Parameter learned model CLL: -0.339108


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [2.245, 7, 18], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 7], 'true,false': [2.245, 7, 18], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [2.245, 7, 18], 'false': [1.05e-08, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.58e-08, 0, 7], 'true,false': [2.245, 7, 18], 'false': [7.45e-09, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [2.245, 7, 18], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.29e-08, 0, 7], 'true,false': [2.245, 7, 18], 'false': [5.27e-09, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [2.245, 7, 18], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [5.27e-09, 0, 7], 'true,false': [2.245, 7, 18], 'false': [3.73e-09, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [2.245, 7, 18], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [2.245, 7, 18], 'false': [3.73e-09, 18, 0]}]]
[{'': [0.1708984375000011, -9.25185853854297e-18], 'true': [-2.5376526277146434e-16, 0.20159999999999983]}, {'': [0.1663127654265928, 0.0], 'true': [6.344131569286608e-17, 0.2016000000000001]}, {'': [0.16191222543216321, 6.1679056923619804e-18], 'true': [-6.344131569286608e-17, 0.20160000000000017]}, {'': [0.15974415821827076, 3.0839528461809902e-18], 'true': [9.516197353929913e-17, 0.2015999999999999]}, {'': [0.15897013302402163, -1.5419764230904951e-18], 'true': [-3.172065784643304e-17, 0.2016]}, {'': [0.1587070918123028, 1.5419764230904951e-18], 'true': [2.3790493384824782e-17, 0.20160000000000008]}, {'': [0.15860881755546244, -7.709882115452476e-19], 'true': [-1.586032892321652e-17, 0.20159999999999997]}, {'': [0.158559041340557, 7.709882115452476e-19], 'true': [3.96508223080413e-18, 0.2016]}, {'': [0.15851891790229103, 0.0], 'true': [-7.93016446160826e-18, 0.2015999999999999]}, {'': [0.1584764608558023, 7.709882115452476e-19], 'true': [0.0, 0.20159999999999997]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, A) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, A) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.045484356907664544;  // std dev = 0.901, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.22917133008999552;  // std dev = 1.086, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, A) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.03945407974965601;  // std dev = 0.901, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.19426058237236982;  // std dev = 1.084, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, A) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.16516829720584766;  // std dev = 1.076, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.029642214615808543;  // std dev = 0.907, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.4175135841583098;  // std dev = 4.71e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10159632948783627;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, A) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.13430324266635693;  // std dev = 1.074, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.02542431594387353;  // std dev = 0.907, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.092691276189261;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, A) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.017994482971378827;  // std dev = 0.912, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.11113086205805042;  // std dev = 1.066, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.2551722425694894;  // std dev = 2.36e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), tempadvisedby(F, E) )
%   | | | then return 0.08613837658184363;  // std dev = 1.161, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -1.6606438790849054E-4;  // std dev = 0.785, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.20975771563253562;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07877675473109173;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), professor(E) )
%   | | | then return 0.012983284734776097;  // std dev = 1.219, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.10983360548204286;  // std dev = 0.686, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.17709649774527741;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.152743858093671;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.31771026434594896;  // std dev = 0.404, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(E, A) )
%   | | | then return -0.03353406771396181;  // std dev = 1.243, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.1527438580936708;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.06842697784420272;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.2680733257522576;  // std dev = 0.373, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(E, B) )
%   | | | then return 0.10208177288481937;  // std dev = 1.183, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return -0.1479207294226768;  // std dev = 0.349, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.0641918400820262;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 0.966862
   AUC PR    = 0.647505
   CLL	      = -0.21442
   Precision = 0.444444 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.571429


Total learning time: 1.995 seconds
Total inference time: 0.489 seconds
AUC ROC: 0.966862


Results scoring model
   AUC ROC   = 0.9896
   AUC PR    = 0.991625
   CLL	      = -0.186129
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.88
   F1        = 0.93617


Total scoring time: 0.438 seconds
Refined model CLL: -0.186129


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.966862
   AUC PR    = 0.647505
   CLL	      = -0.21442
   Precision = 0.444444 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.571429


Total learning time: 3.5100000000000002 seconds
Total inference time: 0.489 seconds
AUC ROC: 0.966862
Total revision time: 3.5100000000000002
Best scored revision CLL: -0.186129


Dataset: 1_imdb_uwcse, Fold: 2, Type: Transfer (trRDN-B), Time: 00:02:35
{'AUC ROC': 0.966862, 'AUC PR': 0.647505, 'CLL': -0.21442, 'Precision': [0.444444, 0.5], 'Recall': 0.8, 'F1': 0.571429, 'Learning time': 3.5100000000000002, 'Inference time': 0.489, 'parameter_25': {'AUC ROC': 0.956745, 'AUC PR': 0.591831, 'CLL': -0.226454, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 0.629, 'Inference time': 0.461}}


Starting fold 3

Target train facts examples: 2225
Target train pos examples: 104
Target train neg examples: 3988

Target test facts examples: 162
Target test pos	 examples: 9
Target test neg examples: 91

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.36236334632262296;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2807538536965855;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.21248070121827137;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.1594898822817116;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.11975529938157474;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.09028081829440963;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.06840311429118533;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.052078905701252655;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.965812
   AUC PR    = 0.668512
   CLL	      = -0.160008
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 0.556 seconds
Total inference time: 0.362 seconds
AUC ROC: 0.965812


Results scoring model
   AUC ROC   = 0.96
   AUC PR    = 0.961111
   CLL	      = -0.255004
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.353 seconds
Parameter learned model CLL: -0.255004


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.05e-08, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}]]
[{'': [0.1388888888888887, 0.0], 'true': [1.4802973661668753e-16, 0.22222222222222224]}, {'': [0.12949546172365034, 0.0], 'true': [0.0, 0.2222222222222222]}, {'': [0.12042365933938219, 0.0], 'true': [3.700743415417188e-17, 0.22222222222222224]}, {'': [0.11578691708010203, 0.0], 'true': [-3.700743415417188e-17, 0.2222222222222222]}, {'': [0.11403960634908421, 0.0], 'true': [0.0, 0.2222222222222222]}, {'': [0.11339988962867113, 0.0], 'true': [0.0, 0.2222222222222222]}, {'': [0.1131362198438639, 0.0], 'true': [0.0, 0.22222222222222224]}, {'': [0.11299535166074005, 0.0], 'true': [0.0, 0.22222222222222224]}, {'': [0.11288945137740025, 0.0], 'true': [-4.625929269271485e-18, 0.2222222222222222]}, {'': [0.11278916549921703, 0.0], 'true': [-2.3129646346357427e-18, 0.22222222222222224]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.36236334632262296;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2807538536965855;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.21248070121827137;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.1594898822817116;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.11975529938157474;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.09028081829440963;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.06840311429118533;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.052078905701252655;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.965812
   AUC PR    = 0.668512
   CLL	      = -0.160008
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 0.602 seconds
Total inference time: 0.356 seconds
AUC ROC: 0.965812


Results scoring model
   AUC ROC   = 0.96
   AUC PR    = 0.961111
   CLL	      = -0.255004
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.345 seconds
Refined model CLL: -0.255004


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.965812
   AUC PR    = 0.668512
   CLL	      = -0.160008
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 1.856 seconds
Total inference time: 0.362 seconds
AUC ROC: 0.965812
Total revision time: 1.856
Best scored revision CLL: -0.255004


Dataset: 1_imdb_uwcse, Fold: 3, Type: Transfer (trRDN-B), Time: 00:02:38
{'AUC ROC': 0.965812, 'AUC PR': 0.668512, 'CLL': -0.160008, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 1.856, 'Inference time': 0.362, 'parameter_5': {'AUC ROC': 0.965812, 'AUC PR': 0.668512, 'CLL': -0.160008, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 0.556, 'Inference time': 0.362}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.48314893509951223;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.41365732870831257;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.33660537396486656;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.26297558544868993;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.20032545170291102;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.15079889954054404;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.11312434025950245;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.0849271539161982;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.06391587871034278;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.04824192700154652;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.965812
   AUC PR    = 0.668512
   CLL	      = -0.15821
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 0.618 seconds
Total inference time: 0.362 seconds
AUC ROC: 0.965812


Results scoring model
   AUC ROC   = 0.925
   AUC PR    = 0.925317
   CLL	      = -0.31929
   Precision = 0.769231 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.869565


Total scoring time: 0.363 seconds
Parameter learned model CLL: -0.31929


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.369, 3, 5], 'false': [0.0, 7, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.369, 3, 5], 'false': [0.0, 7, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.369, 3, 5], 'false': [0.0, 7, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.49e-08, 0, 5], 'true,false': [1.369, 3, 5], 'false': [0.0, 7, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.369, 3, 5], 'false': [0.0, 7, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.369, 3, 5], 'false': [0.0, 7, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.369, 3, 5], 'false': [0.0, 7, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.369, 3, 5], 'false': [0.0, 7, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.369, 3, 5], 'false': [2.63e-09, 7, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.369, 3, 5], 'false': [0.0, 7, 0]}]]
[{'': [0.1775147928994082, -7.93016446160826e-18], 'true': [0.0, 0.23437499999999992]}, {'': [0.16636650341512293, -1.982541115402065e-18], 'true': [0.0, 0.23437499999999986]}, {'': [0.15555772842349233, -1.982541115402065e-18], 'true': [-4.4408920985006264e-17, 0.23437500000000003]}, {'': [0.14988331196335508, 0.0], 'true': [4.4408920985006264e-17, 0.234375]}, {'': [0.14766103768312114, 0.0], 'true': [-2.2204460492503132e-17, 0.23437500000000003]}, {'': [0.14680918218580782, 0.0], 'true': [0.0, 0.234375]}, {'': [0.1464409489315942, -9.912705577010326e-19], 'true': [-5.551115123125783e-18, 0.23437500000000003]}, {'': [0.1462414646016291, 0.0], 'true': [0.0, 0.234375]}, {'': [0.14609832187486982, 9.912705577010326e-19], 'true': [0.0, 0.23437499999999997]}, {'': [0.1459717521641916, -4.956352788505163e-19], 'true': [0.0, 0.23437499999999997]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.308741135785635;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.5170719622367217;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.2564123687585864;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.41257245288266;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.20613740734453975;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.3151786576185065;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.16162857548414666;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.23676009386434205;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.18525867319107073;  // std dev = 1.036, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.09473612093874177;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.08518475138839687;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then return 0.08021910535928756;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.14964617139757544;  // std dev = 0.860, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.11819720317801971;  // std dev = 1.033, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.03622444992201871;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07324622576333704;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.03127327188077468;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.10146515765225914;  // std dev = 0.855, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.07890885600832095;  // std dev = 1.030, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.004759679088252737;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.972527
   AUC PR    = 0.722197
   CLL	      = -0.155265
   Precision = 0.666667 at threshold = 0.5
   Recall    = 0.666667
   F1        = 0.666667


Total learning time: 1.038 seconds
Total inference time: 0.368 seconds
AUC ROC: 0.972527


Results scoring model
   AUC ROC   = 0.95
   AUC PR    = 0.952502
   CLL	      = -0.304395
   Precision = 0.888889 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.842105


Total scoring time: 0.373 seconds
Refined model CLL: -0.304395


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.972527
   AUC PR    = 0.722197
   CLL	      = -0.155265
   Precision = 0.666667 at threshold = 0.5
   Recall    = 0.666667
   F1        = 0.666667


Total learning time: 2.3920000000000003 seconds
Total inference time: 0.368 seconds
AUC ROC: 0.972527
Total revision time: 2.3920000000000003
Best scored revision CLL: -0.304395


Dataset: 1_imdb_uwcse, Fold: 3, Type: Transfer (trRDN-B), Time: 00:02:41
{'AUC ROC': 0.972527, 'AUC PR': 0.722197, 'CLL': -0.155265, 'Precision': [0.666667, 0.5], 'Recall': 0.666667, 'F1': 0.666667, 'Learning time': 2.3920000000000003, 'Inference time': 0.368, 'parameter_10': {'AUC ROC': 0.965812, 'AUC PR': 0.668512, 'CLL': -0.15821, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 0.618, 'Inference time': 0.362}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.4945125714631486;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.4231206960529885;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else return -0.12544463852839138;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.34367606239514203;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else return -0.11231637819360639;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.267871418059721;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.20365765544213874;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.1531477270126841;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.11488033872832905;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else return -0.07877675473109173;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.08631518284931707;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else return -0.07324622576333704;  // std dev = 4.56e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.06505762125972493;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.049203145043623005;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else return -0.06419184008202622;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.965812
   AUC PR    = 0.668512
   CLL	      = -0.158606
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 0.575 seconds
Total inference time: 0.353 seconds
AUC ROC: 0.965812


Results scoring model
   AUC ROC   = 0.937778
   AUC PR    = 0.937383
   CLL	      = -0.298127
   Precision = 0.789474 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.882353


Total scoring time: 0.367 seconds
Parameter learned model CLL: -0.298127


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.595, 4, 7], 'false': [0.0, 11, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [1.595, 4, 7], 'false': [0.0, 11, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.595, 4, 7], 'false': [0.0, 11, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [1.595, 4, 7], 'false': [0.0, 11, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.595, 4, 7], 'false': [0.0, 11, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.49e-08, 0, 8], 'true,false': [1.595, 4, 7], 'false': [3.73e-09, 11, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.595, 4, 7], 'false': [0.0, 11, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 8], 'true,false': [1.595, 4, 7], 'false': [4.56e-09, 11, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.595, 4, 7], 'false': [2.63e-09, 11, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.595, 4, 7], 'false': [0.0, 11, 0]}]]
[{'': [0.16620498614958412, -1.0092936587501423e-17], 'true': [-2.220446049250313e-16, 0.23140495867768587]}, {'': [0.15538013964699846, 0.0], 'true': [1.1102230246251565e-16, 0.23140495867768596]}, {'': [0.14489519126818248, -2.523234146875356e-18], 'true': [-1.1102230246251565e-16, 0.23140495867768598]}, {'': [0.13942991915957886, -2.523234146875356e-18], 'true': [1.1102230246251565e-16, 0.2314049586776859]}, {'': [0.1373113145094929, -1.261617073437678e-18], 'true': [-4.163336342344337e-17, 0.23140495867768596]}, {'': [0.13650866625983724, 1.261617073437678e-18], 'true': [2.7755575615628914e-17, 0.23140495867768596]}, {'': [0.13616561614592795, 0.0], 'true': [-2.0816681711721685e-17, 0.23140495867768596]}, {'': [0.135980238535871, 1.8924256101565167e-18], 'true': [6.938893903907228e-18, 0.23140495867768596]}, {'': [0.13584558854040182, 6.30808536718839e-19], 'true': [-3.469446951953614e-18, 0.23140495867768596]}, {'': [0.135724392984158, -1.261617073437678e-18], 'true': [0.0, 0.23140495867768596]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(F, B) )
%   | | | then return 0.20087644510794878;  // std dev = 1.081, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.48640172201338183;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.12544463852839138;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.4066124860874213;  // std dev = 0.767, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4058086955055528;  // std dev = 0.795, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.21688052244731765;  // std dev = 0.888, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.11231637819360639;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.46983884626038214;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.021182590430097292;  // std dev = 0.802, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.28826616899713564;  // std dev = 1.039, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.3567002056148696;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(F, B) )
%   | | | then return 0.05469445946362439;  // std dev = 1.073, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.2991488752439044;  // std dev = 0.729, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.2128742144829049;  // std dev = 0.715, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.21974590463109278;  // std dev = 0.769, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.05665900644692157;  // std dev = 0.796, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.16844513176312514;  // std dev = 0.717, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1658588568641984;  // std dev = 0.768, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.04393155097699633;  // std dev = 0.795, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.07877675473109173;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.22759099049058262;  // std dev = 0.070, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(F, B) )
%   | | | then return -0.03608538158422584;  // std dev = 1.052, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.18164108230292944;  // std dev = 0.701, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07324622576333704;  // std dev = 4.56e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.19037593232276884;  // std dev = 0.062, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(F, A) )
%   | | | then return -0.08984902691327507;  // std dev = 0.818, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.10946518303820355;  // std dev = 0.952, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.16294588529565668;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.09448456461485617;  // std dev = 1.034, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.08640366368007707;  // std dev = 0.697, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.06419184008202622;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.955433
   AUC PR    = 0.640192
   CLL	      = -0.20677
   Precision = 0.454545 at threshold = 0.5
   Recall    = 0.555556
   F1        = 0.5


Total learning time: 1.472 seconds
Total inference time: 0.386 seconds
AUC ROC: 0.955433


Results scoring model
   AUC ROC   = 0.986667
   AUC PR    = 0.986872
   CLL	      = -0.228968
   Precision = 0.928571 at threshold = 0.5
   Recall    = 0.866667
   F1        = 0.896552


Total scoring time: 0.395 seconds
Refined model CLL: -0.228968


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.955433
   AUC PR    = 0.640192
   CLL	      = -0.20677
   Precision = 0.454545 at threshold = 0.5
   Recall    = 0.555556
   F1        = 0.5


Total learning time: 2.8089999999999997 seconds
Total inference time: 0.386 seconds
AUC ROC: 0.955433
Total revision time: 2.8089999999999997
Best scored revision CLL: -0.228968


Dataset: 1_imdb_uwcse, Fold: 3, Type: Transfer (trRDN-B), Time: 00:02:45
{'AUC ROC': 0.955433, 'AUC PR': 0.640192, 'CLL': -0.20677, 'Precision': [0.454545, 0.5], 'Recall': 0.555556, 'F1': 0.5, 'Learning time': 2.8089999999999997, 'Inference time': 0.386, 'parameter_15': {'AUC ROC': 0.965812, 'AUC PR': 0.668512, 'CLL': -0.158606, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 0.575, 'Inference time': 0.353}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.5724346493852266;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4876778839172629;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.3912569620992536;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.30057115478848934;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else return -0.10159632948783628;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.22629823971521887;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else return -0.09269127618926096;  // std dev = 5.27e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.16984358676510133;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.12813320688246752;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else return -0.07877675473109172;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.09743184803714998;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367094;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.07468131696953094;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else return -0.06842697784420272;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.057651940521137104;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else return -0.0641918400820262;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */


Results
   AUC ROC   = 0.965812
   AUC PR    = 0.668512
   CLL	      = -0.163239
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 0.61 seconds
Total inference time: 0.362 seconds
AUC ROC: 0.965812


Results scoring model
   AUC ROC   = 0.95
   AUC PR    = 0.946614
   CLL	      = -0.267691
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.383 seconds
Parameter learned model CLL: -0.267691


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.69, 4, 10], 'false': [0.0, 16, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 10], 'true,false': [1.69, 4, 10], 'false': [7.45e-09, 16, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.69, 4, 10], 'false': [1.18e-08, 16, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [3.65e-08, 0, 10], 'true,false': [1.69, 4, 10], 'false': [0.0, 16, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.69, 4, 10], 'false': [5.27e-09, 16, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.83e-08, 0, 10], 'true,false': [1.69, 4, 10], 'false': [5.27e-09, 16, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.69, 4, 10], 'false': [0.0, 16, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 10], 'true,false': [1.69, 4, 10], 'false': [3.73e-09, 16, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.69, 4, 10], 'false': [0.0, 16, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.69, 4, 10], 'false': [0.0, 16, 0]}]]
[{'': [0.13888888888888906, -6.938893903907228e-18], 'true': [-8.881784197001253e-17, 0.20408163265306115]}, {'': [0.13210679156701688, 3.469446951953614e-18], 'true': [8.881784197001253e-17, 0.2040816326530612]}, {'': [0.1255935717449271, 8.673617379884035e-18], 'true': [-1.7763568394002506e-16, 0.20408163265306115]}, {'': [0.12237153302360536, 0.0], 'true': [1.3322676295501878e-16, 0.2040816326530612]}, {'': [0.1212141990787079, 1.734723475976807e-18], 'true': [-4.4408920985006264e-17, 0.20408163265306126]}, {'': [0.12081730156531652, 1.734723475976807e-18], 'true': [3.3306690738754695e-17, 0.20408163265306117]}, {'': [0.12066699137403682, 0.0], 'true': [-2.7755575615628914e-17, 0.20408163265306123]}, {'': [0.12059016053691869, 8.673617379884035e-19], 'true': [5.551115123125783e-18, 0.20408163265306123]}, {'': [0.12052874134926166, 0.0], 'true': [0.0, 0.20408163265306123]}, {'': [0.12046465716684958, 0.0], 'true': [0.0, 0.2040816326530612]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.16653882456488175;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.448295606241962;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.1420942428155648;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.36236334632262296;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(F, B) )
%   | | | then return 0.1713299818779895;  // std dev = 1.241, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.33799664854465616;  // std dev = 0.676, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.10159632948783628;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.07821460081952987;  // std dev = 0.830, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.22571552495884362;  // std dev = 1.132, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.09269127618926096;  // std dev = 5.27e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, D, F) )
%   | | | then return 0.09629980492728722;  // std dev = 0.733, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.28707012542681404;  // std dev = 0.737, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.09434118123028196;  // std dev = 0.912, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.21770435747446742;  // std dev = 0.036, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.15086725713033705;  // std dev = 1.057, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.03150664504903561;  // std dev = 0.893, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.07877675473109172;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.18295023676987462;  // std dev = 0.032, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(F, B) )
%   | | | then return 0.029699854104370694;  // std dev = 1.242, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.16457195985341472;  // std dev = 0.595, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367094;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.1572009654724545;  // std dev = 0.028, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(F, A) )
%   | | | then return -0.024170160856570328;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.09782170622479687;  // std dev = 1.105, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.06842697784420272;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.13749821222665384;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.09043508660475462;  // std dev = 1.054, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.015636500240100396;  // std dev = 0.878, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.0641918400820262;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */


Results
   AUC ROC   = 0.959096
   AUC PR    = 0.65296
   CLL	      = -0.196595
   Precision = 0.571429 at threshold = 0.5
   Recall    = 0.888889
   F1        = 0.695652


Total learning time: 1.534 seconds
Total inference time: 0.382 seconds
AUC ROC: 0.959096


Results scoring model
   AUC ROC   = 0.98875
   AUC PR    = 0.989346
   CLL	      = -0.211096
   Precision = 0.904762 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.926829


Total scoring time: 0.41 seconds
Refined model CLL: -0.211096


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.959096
   AUC PR    = 0.65296
   CLL	      = -0.196595
   Precision = 0.571429 at threshold = 0.5
   Recall    = 0.888889
   F1        = 0.695652


Total learning time: 2.9370000000000003 seconds
Total inference time: 0.382 seconds
AUC ROC: 0.959096
Total revision time: 2.9370000000000003
Best scored revision CLL: -0.211096


Dataset: 1_imdb_uwcse, Fold: 3, Type: Transfer (trRDN-B), Time: 00:02:50
{'AUC ROC': 0.959096, 'AUC PR': 0.65296, 'CLL': -0.196595, 'Precision': [0.571429, 0.5], 'Recall': 0.888889, 'F1': 0.695652, 'Learning time': 2.9370000000000003, 'Inference time': 0.382, 'parameter_20': {'AUC ROC': 0.965812, 'AUC PR': 0.668512, 'CLL': -0.163239, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 0.61, 'Inference time': 0.362}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.63592671287729;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   else return -0.14185106490048777;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5398498420741676;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   else return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.42895627253508517;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.32644004768013724;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   else return -0.10159632948783634;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.24503149911444552;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   else return -0.09269127618926094;  // std dev = 1.18e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.1848204588152216;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.14108814406879136;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   else return -0.07877675473109173;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.10912169797108993;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367094;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.08540523411308514;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   else return -0.06842697784420274;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.0675192639640355;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   else return -0.06419184008202619;  // std dev = 7.45e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */


Results
   AUC ROC   = 0.965812
   AUC PR    = 0.668512
   CLL	      = -0.169585
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 0.636 seconds
Total inference time: 0.364 seconds
AUC ROC: 0.965812


Results scoring model
   AUC ROC   = 0.9552
   AUC PR    = 0.949352
   CLL	      = -0.247532
   Precision = 0.862069 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.925926


Total scoring time: 0.392 seconds
Parameter learned model CLL: -0.247532


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 11], 'true,false': [1.764, 4, 14], 'false': [0.0, 21, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [4.21e-08, 0, 11], 'true,false': [1.764, 4, 14], 'false': [0.0, 21, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 11], 'true,false': [1.764, 4, 14], 'false': [1.67e-08, 21, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [4.21e-08, 0, 11], 'true,false': [1.764, 4, 14], 'false': [0.0, 21, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 11], 'true,false': [1.764, 4, 14], 'false': [1.18e-08, 21, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 11], 'true,false': [1.764, 4, 14], 'false': [7.45e-09, 21, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 11], 'true,false': [1.764, 4, 14], 'false': [0.0, 21, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 11], 'true,false': [1.764, 4, 14], 'false': [3.73e-09, 21, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 11], 'true,false': [1.764, 4, 14], 'false': [0.0, 21, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [5.27e-09, 0, 11], 'true,false': [1.764, 4, 14], 'false': [7.45e-09, 21, 0]}]]
[{'': [0.11890606420927562, -2.64338815386942e-18], 'true': [-1.6148698540002277e-16, 0.17283950617283939]}, {'': [0.11487588389781409, 0.0], 'true': [1.6148698540002277e-16, 0.17283950617283944]}, {'': [0.11104181817618432, 1.3216940769347101e-17], 'true': [-2.0185873175002846e-16, 0.1728395061728396]}, {'': [0.10923247473657195, -7.93016446160826e-18], 'true': [1.6148698540002277e-16, 0.17283950617283955]}, {'': [0.10862814531287189, 6.6084703846735505e-18], 'true': [-6.055761952500853e-17, 0.1728395061728395]}, {'': [0.10844494431718053, 2.64338815386942e-18], 'true': [4.0371746350005693e-17, 0.1728395061728395]}, {'': [0.10838988491540358, -2.64338815386942e-18], 'true': [-2.5232341468753557e-17, 0.1728395061728395]}, {'': [0.10836753359843243, 6.60847038467355e-19], 'true': [5.046468293750712e-18, 0.1728395061728395]}, {'': [0.10834726670342781, -1.982541115402065e-18], 'true': [5.046468293750712e-18, 0.1728395061728395]}, {'': [0.10832045848140175, 2.64338815386942e-18], 'true': [2.523234146875356e-18, 0.1728395061728395]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.14185106490048777;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.16653882456488175;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.7398727907934262;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.4992225059770591;  // std dev = 1.197, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.1420942428155648;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.5763746954056008;  // std dev = 0.080, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3949265741004675;  // std dev = 1.192, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( publication(D, A) )
%   | | then return 0.19258643915920556;  // std dev = 0.905, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( publication(E, B) )
%   | | | then return 0.3315728660874864;  // std dev = 1.104, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.5532281798096784;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.10159632948783634;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.3688775609922455;  // std dev = 0.081, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( publication(F, A) )
%   | | | then return -0.08609269824765424;  // std dev = 0.692, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.26391342593503714;  // std dev = 1.118, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.09269127618926094;  // std dev = 1.18e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.2881236521654938;  // std dev = 0.071, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( publication(F, A) )
%   | | | then return -0.06656325839928612;  // std dev = 0.694, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.20243355008232145;  // std dev = 1.119, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.2329585978477737;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.18701402278049936;  // std dev = 0.894, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.005394278498969496;  // std dev = 0.966, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07877675473109173;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return -0.03288596128364666;  // std dev = 0.758, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.2415159704988477;  // std dev = 0.252, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.07782296419031087;  // std dev = 1.012, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367094;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return -0.025488015205021215;  // std dev = 0.758, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.20191509474926117;  // std dev = 0.227, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.06185448928571975;  // std dev = 1.015, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.06842697784420274;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.15228340041705762;  // std dev = 0.094, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( publication(F, A) )
%   | | | then return -0.12130404097421031;  // std dev = 0.598, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.10529399576864146;  // std dev = 1.105, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.06419184008202619;  // std dev = 7.45e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */


Results
   AUC ROC   = 0.958486
   AUC PR    = 0.586558
   CLL	      = -0.199349
   Precision = 0.533333 at threshold = 0.5
   Recall    = 0.888889
   F1        = 0.666667


Total learning time: 1.609 seconds
Total inference time: 0.379 seconds
AUC ROC: 0.958486


Results scoring model
   AUC ROC   = 0.9936
   AUC PR    = 0.993852
   CLL	      = -0.179228
   Precision = 0.96 at threshold = 0.5
   Recall    = 0.96
   F1        = 0.96


Total scoring time: 0.409 seconds
Refined model CLL: -0.179228


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.958486
   AUC PR    = 0.586558
   CLL	      = -0.199349
   Precision = 0.533333 at threshold = 0.5
   Recall    = 0.888889
   F1        = 0.666667


Total learning time: 3.046 seconds
Total inference time: 0.379 seconds
AUC ROC: 0.958486
Total revision time: 3.046
Best scored revision CLL: -0.179228


Dataset: 1_imdb_uwcse, Fold: 3, Type: Transfer (trRDN-B), Time: 00:02:54
{'AUC ROC': 0.958486, 'AUC PR': 0.586558, 'CLL': -0.199349, 'Precision': [0.533333, 0.5], 'Recall': 0.888889, 'F1': 0.666667, 'Learning time': 3.046, 'Inference time': 0.379, 'parameter_25': {'AUC ROC': 0.965812, 'AUC PR': 0.668512, 'CLL': -0.169585, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 0.636, 'Inference time': 0.364}}


Starting fold 4

Target train facts examples: 1706
Target train pos examples: 80
Target train neg examples: 2591

Target test facts examples: 681
Target test pos	 examples: 33
Target test neg examples: 1488

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333703;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.902218
   AUC PR    = 0.101852
   CLL	      = -0.458744
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 0.545 seconds
Total inference time: 0.661 seconds
AUC ROC: 0.902218


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.337 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.49e-08, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [2.63e-09, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [1.86e-09, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [nan, 0.0]}, {'': [0.0, 0.0], 'true': [nan, 0.0]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [nan, -4.4408920985006264e-17]}, {'': [4.4408920985006264e-17, 0.0], 'true': [nan, 4.4408920985006264e-17]}, {'': [-2.2204460492503132e-17, 0.0], 'true': [nan, -2.2204460492503132e-17]}, {'': [0.0, 0.0], 'true': [nan, 0.0]}, {'': [-5.551115123125783e-18, -1.3877787807814458e-18], 'true': [nan, -5.551115123125783e-18]}, {'': [0.0, 1.3877787807814458e-18], 'true': [nan, 0.0]}, {'': [0.0, 6.938893903907229e-19], 'true': [nan, 0.0]}, {'': [0.0, 0.0], 'true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333703;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.902218
   AUC PR    = 0.101852
   CLL	      = -0.458744
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 0.502 seconds
Total inference time: 0.557 seconds
AUC ROC: 0.902218


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.322 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.902218
   AUC PR    = 0.101852
   CLL	      = -0.458744
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 1.7060000000000002 seconds
Total inference time: 0.661 seconds
AUC ROC: 0.902218
Total revision time: 1.7060000000000002
Best scored revision CLL: -0.094637


Dataset: 1_imdb_uwcse, Fold: 4, Type: Transfer (trRDN-B), Time: 00:02:57
{'AUC ROC': 0.902218, 'AUC PR': 0.101852, 'CLL': -0.458744, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 1.7060000000000002, 'Inference time': 0.661, 'parameter_5': {'AUC ROC': 0.902218, 'AUC PR': 0.101852, 'CLL': -0.458744, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 0.545, 'Inference time': 0.661}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.7331489350995123;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.6189976143448207;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.4851287515461648;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.36568225360444984;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.10159632948783628;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.27560196347331406;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.21158287903019785;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.08518475138839687;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.16608044254560703;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.13303193637503513;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.07324622576333704;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.10839224498101034;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.08956128580326395;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.935362
   AUC PR    = 0.272865
   CLL	      = -0.366577
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 0.58 seconds
Total inference time: 0.633 seconds
AUC ROC: 0.935362


Results scoring model
   AUC ROC   = 0.965
   AUC PR    = 0.955495
   CLL	      = -0.20564
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.369 seconds
Parameter learned model CLL: -0.20564


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [0.935, 1, 7], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.935, 1, 7], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.05e-08, 0, 3], 'true,false': [0.935, 1, 7], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.935, 1, 7], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.935, 1, 7], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.935, 1, 7], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.935, 1, 7], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.935, 1, 7], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.935, 1, 7], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.935, 1, 7], 'false': [2.63e-09, 9, 0]}]]
[{'': [0.0826446280991734, -9.25185853854297e-18], 'true': [1.4802973661668753e-16, 0.10937499999999978]}, {'': [0.08154784514846353, 0.0], 'true': [0.0, 0.10937500000000017]}, {'': [0.08052396676144219, -1.5419764230904951e-18], 'true': [3.700743415417188e-17, 0.10937500000000008]}, {'': [0.08007831143675702, 0.0], 'true': [-3.700743415417188e-17, 0.10937499999999994]}, {'': [0.0799490713929732, 0.0], 'true': [0.0, 0.10937500000000004]}, {'': [0.07992232051843183, 0.0], 'true': [0.0, 0.10937499999999997]}, {'': [0.07992384215225984, 0.0], 'true': [0.0, 0.10937499999999997]}, {'': [0.07993058226157061, 0.0], 'true': [0.0, 0.10937499999999999]}, {'': [0.07993561631451804, 0.0], 'true': [-4.625929269271485e-18, 0.109375]}, {'': [0.07993727421710688, 7.709882115452476e-19], 'true': [-2.3129646346357427e-18, 0.109375]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(D, B) )
%   | | then return 0.7443356231566909;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.4068585879990681;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.5817900805941925;  // std dev = 0.089, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3212531071950044;  // std dev = 0.755, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(D, B) )
%   | | then return 0.4639409650514713;  // std dev = 0.161, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.20335387899323884;  // std dev = 0.698, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.10159632948783628;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.3549988713115394;  // std dev = 0.151, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.1528673712889037;  // std dev = 0.695, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(D, B) )
%   | | then return 0.2983745872944862;  // std dev = 0.185, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.0846336943002483;  // std dev = 0.658, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.08518475138839687;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.2429456300184487;  // std dev = 0.166, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.06255958556541373;  // std dev = 0.657, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(D, B) )
%   | | then return 0.21599476307809082;  // std dev = 0.184, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.025218436810055384;  // std dev = 0.630, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07324622576333704;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.18496153762295411;  // std dev = 0.169, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.016250449286872897;  // std dev = 0.627, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(D, B) )
%   | | then return 0.17039773342760794;  // std dev = 0.180, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.00529319560110277;  // std dev = 0.605, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.897972
   AUC PR    = 0.089664
   CLL	      = -0.422531
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 1.049 seconds
Total inference time: 0.69 seconds
AUC ROC: 0.897972


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.150501
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.357 seconds
Refined model CLL: -0.150501


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.897972
   AUC PR    = 0.089664
   CLL	      = -0.422531
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 2.3549999999999995 seconds
Total inference time: 0.69 seconds
AUC ROC: 0.897972
Total revision time: 2.3549999999999995
Best scored revision CLL: -0.150501


Dataset: 1_imdb_uwcse, Fold: 4, Type: Transfer (trRDN-B), Time: 00:03:01
{'AUC ROC': 0.897972, 'AUC PR': 0.089664, 'CLL': -0.422531, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 2.3549999999999995, 'Inference time': 0.69, 'parameter_10': {'AUC ROC': 0.935362, 'AUC PR': 0.272865, 'CLL': -0.366577, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 0.58, 'Inference time': 0.633}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.6914822684328455;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.5851860008555358;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.46125983910675544;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.34884632569484214;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.26212705508354195;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.092691276189261;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.19945264276423424;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.08518475138839686;  // std dev = 6.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.15451336627983223;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.12179491558002802;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.09745354768081678;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.0789523387255512;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.0641918400820262;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.935362
   AUC PR    = 0.272865
   CLL	      = -0.340695
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 0.691 seconds
Total inference time: 0.663 seconds
AUC ROC: 0.935362


Results scoring model
   AUC ROC   = 0.955556
   AUC PR    = 0.945747
   CLL	      = -0.233457
   Precision = 0.882353 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.9375


Total scoring time: 0.383 seconds
Parameter learned model CLL: -0.233457


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.291, 2, 10], 'false': [0.0, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.291, 2, 10], 'false': [7.45e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.291, 2, 10], 'false': [1.05e-08, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.49e-08, 0, 5], 'true,false': [1.291, 2, 10], 'false': [5.27e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.291, 2, 10], 'false': [0.0, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.291, 2, 10], 'false': [6.45e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.291, 2, 10], 'false': [3.73e-09, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.291, 2, 10], 'false': [5.27e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.291, 2, 10], 'false': [2.63e-09, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.291, 2, 10], 'false': [0.0, 13, 0]}]]
[{'': [0.10380622837370206, -1.2810265668751807e-17], 'true': [0.0, 0.1388888888888887]}, {'': [0.10178311371711318, 4.270088556250602e-18], 'true': [0.0, 0.13888888888888914]}, {'': [0.09987784234079816, 8.540177112501205e-18], 'true': [-4.4408920985006264e-17, 0.1388888888888891]}, {'': [0.09901814836133808, 2.135044278125301e-18], 'true': [4.4408920985006264e-17, 0.138888888888889]}, {'': [0.09875177856433519, -1.0675221390626506e-18], 'true': [-2.2204460492503132e-17, 0.1388888888888888]}, {'': [0.09868378464180214, 3.2025664171879517e-18], 'true': [0.0, 0.13888888888888892]}, {'': [0.09867283606040671, 1.0675221390626506e-18], 'true': [-5.551115123125783e-18, 0.13888888888888887]}, {'': [0.09867414959422878, 2.135044278125301e-18], 'true': [0.0, 0.13888888888888887]}, {'': [0.09867389079192498, 5.337610695313253e-19], 'true': [0.0, 0.1388888888888889]}, {'': [0.09866849299399914, 0.0], 'true': [0.0, 0.1388888888888889]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(D, E), ta(F, E, G) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, B) )
%   | | then if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | | then return 0.5348917811753146;  // std dev = 0.869, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.7483828540191295;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, D, F), publication(G, B) )
%   | | | then return 0.4191138738884243;  // std dev = 0.864, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.6465367032985979;  // std dev = 0.120, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3717621606034486;  // std dev = 0.781, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(D, E), inphase(E, F) )
%   | | | then return 0.32196094505145906;  // std dev = 0.855, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.5192254491895547;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2339299502967502;  // std dev = 0.762, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(D, A, E) )
%   | | then if ( ta(D, F, G), publication(H, F) )
%   | | | then return 0.10308534813821572;  // std dev = 0.780, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4234233173567736;  // std dev = 0.078, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.18379986811589313;  // std dev = 0.736, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.092691276189261;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(D, E), ta(F, E, G) )
%   | | | then return 0.3269706214126234;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.15639893660147985;  // std dev = 0.804, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.1110804284713261;  // std dev = 0.738, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.08518475138839686;  // std dev = 6.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, B) )
%   | | then if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | | then return 0.10253066896189778;  // std dev = 0.784, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.284049340945818;  // std dev = 0.110, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.08413964437350159;  // std dev = 0.739, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( inphase(A, E), inphase(D, E) )
%   | | | then return 0.3077452890133676;  // std dev = 0.114, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0777453269086702;  // std dev = 0.791, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.052765312311911866;  // std dev = 0.687, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(D, A, E) )
%   | | then if ( ta(D, F, G), publication(H, F) )
%   | | | then return -0.03794859725020686;  // std dev = 0.738, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2342207328863742;  // std dev = 0.110, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.04198665613631389;  // std dev = 0.696, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, B) )
%   | | then if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | | then return 0.031051900294794897;  // std dev = 0.743, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.21083492537538992;  // std dev = 0.115, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.007689819667347904;  // std dev = 0.699, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.0641918400820262;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.935484
   AUC PR    = 0.189709
   CLL	      = -0.377344
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 2.053 seconds
Total inference time: 0.784 seconds
AUC ROC: 0.935484


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.187727
   Precision = 0.882353 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.9375


Total scoring time: 0.409 seconds
Refined model CLL: -0.187727


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.935484
   AUC PR    = 0.189709
   CLL	      = -0.377344
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 3.5359999999999996 seconds
Total inference time: 0.784 seconds
AUC ROC: 0.935484
Total revision time: 3.5359999999999996
Best scored revision CLL: -0.187727


Dataset: 1_imdb_uwcse, Fold: 4, Type: Transfer (trRDN-B), Time: 00:03:07
{'AUC ROC': 0.935484, 'AUC PR': 0.189709, 'CLL': -0.377344, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 3.5359999999999996, 'Inference time': 0.784, 'parameter_15': {'AUC ROC': 0.935362, 'AUC PR': 0.272865, 'CLL': -0.340695, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 0.691, 'Inference time': 0.663}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6816783468642181;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.14185106490048782;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5772066794120977;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4556011626653657;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.3448948463549135;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.10159632948783628;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.25904528127845544;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.09269127618926096;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.19674969883689405;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1519855521716933;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.07877675473109172;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.11937467555536753;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.09512618887804329;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.06842697784420271;  // std dev = 3.73e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.07672095753768486;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.06419184008202619;  // std dev = 5.27e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.935362
   AUC PR    = 0.272865
   CLL	      = -0.334924
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 0.582 seconds
Total inference time: 0.655 seconds
AUC ROC: 0.935362


Results scoring model
   AUC ROC   = 0.9475
   AUC PR    = 0.935194
   CLL	      = -0.24847
   Precision = 0.869565 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.930233


Total scoring time: 0.378 seconds
Parameter learned model CLL: -0.24847


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.572, 3, 14], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [1.572, 3, 14], 'false': [7.45e-09, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.572, 3, 14], 'false': [1.18e-08, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [1.572, 3, 14], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.572, 3, 14], 'false': [7.45e-09, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 6], 'true,false': [1.572, 3, 14], 'false': [7.45e-09, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.572, 3, 14], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [5.27e-09, 0, 6], 'true,false': [1.572, 3, 14], 'false': [5.27e-09, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.572, 3, 14], 'false': [3.73e-09, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.572, 3, 14], 'false': [5.27e-09, 17, 0]}]]
[{'': [0.11342155009451807, -1.3061447348531253e-17], 'true': [-1.4802973661668753e-16, 0.14532871972318315]}, {'': [0.1113194544128796, 3.2653618371328133e-18], 'true': [7.401486830834377e-17, 0.14532871972318323]}, {'': [0.10933600495809742, 8.163404592832034e-18], 'true': [-7.401486830834377e-17, 0.14532871972318354]}, {'': [0.10843369467285616, 0.0], 'true': [7.401486830834377e-17, 0.14532871972318331]}, {'': [0.10815011621403423, 3.2653618371328133e-18], 'true': [-3.700743415417188e-17, 0.14532871972318334]}, {'': [0.10807500030362155, 3.2653618371328133e-18], 'true': [9.25185853854297e-18, 0.14532871972318342]}, {'': [0.10806042900680761, 0.0], 'true': [-9.25185853854297e-18, 0.14532871972318334]}, {'': [0.10805930794890531, 1.6326809185664067e-18], 'true': [4.625929269271485e-18, 0.1453287197231834]}, {'': [0.10805699165209928, 8.163404592832033e-19], 'true': [-4.625929269271485e-18, 0.14532871972318337]}, {'': [0.10804964500920682, 1.6326809185664067e-18], 'true': [0.0, 0.1453287197231834]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( ta(D, A, E) )
%   | | then if ( ta(D, F, G), publication(H, F) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.14185106490048782;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( ta(D, A, E) )
%   | | then if ( ta(D, F, G), tempadvisedby(F, H) )
%   | | | then return 0.5385128322212613;  // std dev = 0.863, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.7385128322212614;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.308741135785635;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(D, E), inphase(E, F) )
%   | | | then return 0.44650786844052875;  // std dev = 1.173, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.6355206457609287;  // std dev = 0.152, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2874796441763283;  // std dev = 0.650, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, B) )
%   | | then if ( tempadvisedby(E, B), ta(F, A, G) )
%   | | | then return 0.2751103198859943;  // std dev = 0.814, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.4250411325298093;  // std dev = 0.837, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.22078566307963507;  // std dev = 0.638, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.10159632948783628;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.20816257866535093;  // std dev = 0.815, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.39867291674366157;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.371787842278452;  // std dev = 0.070, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07487214828470148;  // std dev = 0.936, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.09269127618926096;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(D, E), inphase(E, F) )
%   | | | then return 0.1897560209557036;  // std dev = 1.126, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.3477994125904242;  // std dev = 0.187, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.10213524132564994;  // std dev = 0.573, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( ta(D, A, E) )
%   | | then if ( ta(D, F, G), tempadvisedby(F, H) )
%   | | | then return 0.09550729227773946;  // std dev = 0.800, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.2843867603632533;  // std dev = 0.089, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.25927880412530174;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.005485942276197336;  // std dev = 0.907, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.07877675473109172;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(D, E), inphase(E, F) )
%   | | | then return 0.11771040268386831;  // std dev = 1.112, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.25666480090275934;  // std dev = 0.190, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.041873081615408723;  // std dev = 0.530, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, B) )
%   | | then if ( tempadvisedby(E, B), ta(F, A, G) )
%   | | | then return 0.04551834821355585;  // std dev = 0.800, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.16177617661882585;  // std dev = 0.791, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.03324039776218304;  // std dev = 0.532, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.06842697784420271;  // std dev = 3.73e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( ta(D, A, E) )
%   | | then if ( ta(D, F, G), publication(H, F) )
%   | | | then return -0.004907585648713325;  // std dev = 0.774, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1953497817964934;  // std dev = 0.127, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.1823510309610392;  // std dev = 0.084, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.05915934379149157;  // std dev = 0.874, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.06419184008202619;  // std dev = 5.27e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.926065
   AUC PR    = 0.136151
   CLL	      = -0.365763
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 2.324 seconds
Total inference time: 0.741 seconds
AUC ROC: 0.926065


Results scoring model
   AUC ROC   = 0.99375
   AUC PR    = 0.993911
   CLL	      = -0.190078
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.411 seconds
Refined model CLL: -0.190078


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.926065
   AUC PR    = 0.136151
   CLL	      = -0.365763
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 3.695 seconds
Total inference time: 0.741 seconds
AUC ROC: 0.926065
Total revision time: 3.695
Best scored revision CLL: -0.190078


Dataset: 1_imdb_uwcse, Fold: 4, Type: Transfer (trRDN-B), Time: 00:03:13
{'AUC ROC': 0.926065, 'AUC PR': 0.136151, 'CLL': -0.365763, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 3.695, 'Inference time': 0.741, 'parameter_20': {'AUC ROC': 0.935362, 'AUC PR': 0.272865, 'CLL': -0.334924, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 0.582, 'Inference time': 0.655}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6181489350995123;  // std dev = 2.135, 25.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   else return -0.1418510649004878;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5252804669142431;  // std dev = 2.135, 25.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.41848960063522406;  // std dev = 2.135, 25.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   else return -0.11231637819360635;  // std dev = 1.58e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.319240687179008;  // std dev = 2.135, 25.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   else return -0.10159632948783628;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.23972120751135986;  // std dev = 2.135, 25.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   else return -0.09269127618926094;  // std dev = 9.13e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.18046108143334108;  // std dev = 2.135, 25.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   else return -0.08518475138839687;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.13722535067088384;  // std dev = 2.135, 25.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   else return -0.07877675473109173;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.10557046829371096;  // std dev = 2.135, 25.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.08209998479453746;  // std dev = 2.135, 25.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   else return -0.06842697784420272;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.06444115843154939;  // std dev = 2.135, 25.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   else return -0.0641918400820262;  // std dev = 3.73e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 0.935362
   AUC PR    = 0.272865
   CLL	      = -0.300252
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 0.608 seconds
Total inference time: 0.665 seconds
AUC ROC: 0.935362


Results scoring model
   AUC ROC   = 0.9088
   AUC PR    = 0.889658
   CLL	      = -0.317733
   Precision = 0.806452 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.892857


Total scoring time: 0.385 seconds
Parameter learned model CLL: -0.317733


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [2.135, 6, 19], 'false': [0.0, 19, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [2.135, 6, 19], 'false': [7.45e-09, 19, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [2.135, 6, 19], 'false': [1.58e-08, 19, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [2.135, 6, 19], 'false': [0.0, 19, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [2.135, 6, 19], 'false': [9.13e-09, 19, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 6], 'true,false': [2.135, 6, 19], 'false': [0.0, 19, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [2.135, 6, 19], 'false': [0.0, 19, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [5.27e-09, 0, 6], 'true,false': [2.135, 6, 19], 'false': [3.73e-09, 19, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [2.135, 6, 19], 'false': [0.0, 19, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [2.135, 6, 19], 'false': [3.73e-09, 19, 0]}]]
[{'': [0.15608740894901246, -5.843279076974508e-18], 'true': [-1.4802973661668753e-16, 0.18239999999999967]}, {'': [0.1529829708641529, 2.921639538487254e-18], 'true': [7.401486830834377e-17, 0.18239999999999992]}, {'': [0.15002111367280535, 1.3147377923192643e-17], 'true': [-7.401486830834377e-17, 0.18239999999999995]}, {'': [0.14860419806670733, 0.0], 'true': [7.401486830834377e-17, 0.1824000000000001]}, {'': [0.14812062700999792, 4.382459307730881e-18], 'true': [-3.700743415417188e-17, 0.1824]}, {'': [0.14796801627445025, 0.0], 'true': [9.25185853854297e-18, 0.1824]}, {'': [0.14791794130597252, -7.304098846218135e-19], 'true': [-9.25185853854297e-18, 0.18240000000000006]}, {'': [0.1478953131460624, 7.304098846218135e-19], 'true': [4.625929269271485e-18, 0.1824]}, {'': [0.14787573727909015, -7.304098846218135e-19], 'true': [-4.625929269271485e-18, 0.18240000000000006]}, {'': [0.1478521452374911, 7.304098846218135e-19], 'true': [0.0, 0.1824]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, A) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(E, B) )
%   | | | then return 0.7002541982574071;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.1418510649004878;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, A) )
%   | | then return 0.16653882456488175;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then return 0.5266931964161082;  // std dev = 1.513, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.639101362357241;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, A) )
%   | | then return 0.1420942428155648;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( projectmember(E, B) )
%   | | | then return 0.3192614496630953;  // std dev = 0.833, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.47326005736040766;  // std dev = 1.568, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else return -0.11231637819360635;  // std dev = 1.58e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, B) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.2828594568814017;  // std dev = 1.352, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.4257430807591217;  // std dev = 1.016, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.13206466913649004;  // std dev = 0.923, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.10159632948783628;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( ta(D, A, E) )
%   | | then if ( ta(D, F, G), tempadvisedby(F, H) )
%   | | | then return 0.1474588297679431;  // std dev = 1.130, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.5285584231522139;  // std dev = 0.209, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(I, B), ta(J, I, K) )
%   | | | then return 0.4941568925028297;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0840027524667821;  // std dev = 1.271, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   else return -0.09269127618926094;  // std dev = 9.13e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(D, E), student(E) )
%   | | | then return 0.17503593935131945;  // std dev = 1.605, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return 0.3686239305270301;  // std dev = 0.013, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.029435018883108163;  // std dev = 0.814, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.08518475138839687;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, A) )
%   | | then return -0.011644765914992528;  // std dev = 0.680, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(E, B), ta(F, A, G) )
%   | | | then return 0.10595895606121666;  // std dev = 1.167, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.19464468284653075;  // std dev = 1.201, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else return -0.07877675473109173;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( ta(D, A, E) )
%   | | then if ( ta(D, F, G), tempadvisedby(F, H) )
%   | | | then return 0.034132565877075534;  // std dev = 1.117, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.35214115051473344;  // std dev = 0.232, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(I, B), ta(J, I, K) )
%   | | | then return 0.30530011136215396;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.0138480580983528;  // std dev = 1.200, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, B) )
%   | | then if ( tempadvisedby(E, B), ta(F, A, G) )
%   | | | then return 0.00828456158269911;  // std dev = 1.091, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.16617712605928583;  // std dev = 1.094, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else return -0.042646980927564734;  // std dev = 0.734, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.06842697784420272;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, A) )
%   | | then return -0.059729429564603774;  // std dev = 0.588, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( projectmember(E, B) )
%   | | | then return -0.018456596334931203;  // std dev = 0.743, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.10660277976831915;  // std dev = 1.435, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else return -0.0641918400820262;  // std dev = 3.73e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 0.95648
   AUC PR    = 0.298839
   CLL	      = -0.250428
   Precision = 0.143564 at threshold = 0.5
   Recall    = 0.878788
   F1        = 0.246809


Total learning time: 2.518 seconds
Total inference time: 0.768 seconds
AUC ROC: 0.95648


Results scoring model
   AUC ROC   = 0.9824
   AUC PR    = 0.981539
   CLL	      = -0.247606
   Precision = 0.862069 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.925926


Total scoring time: 0.418 seconds
Refined model CLL: -0.247606


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.95648
   AUC PR    = 0.298839
   CLL	      = -0.250428
   Precision = 0.143564 at threshold = 0.5
   Recall    = 0.878788
   F1        = 0.246809


Total learning time: 3.929 seconds
Total inference time: 0.768 seconds
AUC ROC: 0.95648
Total revision time: 3.929
Best scored revision CLL: -0.247606


Dataset: 1_imdb_uwcse, Fold: 4, Type: Transfer (trRDN-B), Time: 00:03:19
{'AUC ROC': 0.95648, 'AUC PR': 0.298839, 'CLL': -0.250428, 'Precision': [0.143564, 0.5], 'Recall': 0.878788, 'F1': 0.246809, 'Learning time': 3.929, 'Inference time': 0.768, 'parameter_25': {'AUC ROC': 0.935362, 'AUC PR': 0.272865, 'CLL': -0.300252, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 0.608, 'Inference time': 0.665}}


Starting fold 5

Target train facts examples: 1973
Target train pos examples: 97
Target train neg examples: 3734

Target test facts examples: 414
Target test pos	 examples: 16
Target test neg examples: 345

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.901449
   AUC PR    = 0.190476
   CLL	      = -0.454103
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 0.551 seconds
Total inference time: 0.457 seconds
AUC ROC: 0.901449


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.336 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.49e-08, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [1.86e-09, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [nan, 0.0]}, {'': [0.0, 0.0], 'true': [nan, 0.0]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [nan, -4.4408920985006264e-17]}, {'': [4.4408920985006264e-17, 0.0], 'true': [nan, 4.4408920985006264e-17]}, {'': [-2.2204460492503132e-17, 0.0], 'true': [nan, -2.2204460492503132e-17]}, {'': [0.0, 0.0], 'true': [nan, 0.0]}, {'': [-5.551115123125783e-18, -1.3877787807814458e-18], 'true': [nan, -5.551115123125783e-18]}, {'': [0.0, -6.938893903907229e-19], 'true': [nan, 0.0]}, {'': [0.0, 6.938893903907229e-19], 'true': [nan, 0.0]}, {'': [0.0, 0.0], 'true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.901449
   AUC PR    = 0.190476
   CLL	      = -0.454103
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 0.488 seconds
Total inference time: 0.412 seconds
AUC ROC: 0.901449


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.332 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.901449
   AUC PR    = 0.190476
   CLL	      = -0.454103
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 1.707 seconds
Total inference time: 0.457 seconds
AUC ROC: 0.901449
Total revision time: 1.707
Best scored revision CLL: -0.094637


Dataset: 1_imdb_uwcse, Fold: 5, Type: Transfer (trRDN-B), Time: 00:03:22
{'AUC ROC': 0.901449, 'AUC PR': 0.190476, 'CLL': -0.454103, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 1.707, 'Inference time': 0.457, 'parameter_5': {'AUC ROC': 0.901449, 'AUC PR': 0.190476, 'CLL': -0.454103, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 0.551, 'Inference time': 0.457}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7152917922423693;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6045267906174346;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.4749335700127619;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.35845481591378264;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.10159632948783627;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.26974781327936176;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.20625258815983655;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.08518475138839687;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.16095555079641394;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.12802275604229368;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.07324622576333704;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.10349083403071084;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.08478440748267761;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.06419184008202622;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.926087
   AUC PR    = 0.46579
   CLL	      = -0.348441
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 0.562 seconds
Total inference time: 0.459 seconds
AUC ROC: 0.926087


Results scoring model
   AUC ROC   = 0.97
   AUC PR    = 0.964132
   CLL	      = -0.202634
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.347 seconds
Parameter learned model CLL: -0.202634


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.926, 1, 6], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.926, 1, 6], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.926, 1, 6], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.926, 1, 6], 'false': [3.73e-09, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.926, 1, 6], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.926, 1, 6], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.926, 1, 6], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.926, 1, 6], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.926, 1, 6], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.926, 1, 6], 'false': [0.0, 9, 0]}]]
[{'': [0.0826446280991734, -9.25185853854297e-18], 'true': [0.0, 0.1224489795918368]}, {'': [0.08097956819349417, 0.0], 'true': [0.0, 0.12244897959183668]}, {'': [0.07941913981817082, -1.5419764230904951e-18], 'true': [0.0, 0.12244897959183668]}, {'': [0.0787292040954969, 1.5419764230904951e-18], 'true': [0.0, 0.12244897959183673]}, {'': [0.07852311359962551, 0.0], 'true': [0.0, 0.12244897959183673]}, {'': [0.07847586066961244, 0.0], 'true': [0.0, 0.12244897959183673]}, {'': [0.07847320384104797, 0.0], 'true': [0.0, 0.12244897959183675]}, {'': [0.07847935477738761, 0.0], 'true': [0.0, 0.12244897959183673]}, {'': [0.07848343404291844, 0.0], 'true': [0.0, 0.12244897959183673]}, {'': [0.07848274126019032, -7.709882115452476e-19], 'true': [0.0, 0.12244897959183673]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.7609104304538484;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4850122940520397;  // std dev = 0.812, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.3131613322356553;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5954760196346137;  // std dev = 0.058, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.49934795886337513;  // std dev = 0.124, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.25330751212542585;  // std dev = 0.735, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.10159632948783627;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.13589053671953247;  // std dev = 0.711, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3739883808470832;  // std dev = 0.101, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.33416545100858475;  // std dev = 0.144, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.11850440012432018;  // std dev = 0.689, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.08518475138839687;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.042008458232980606;  // std dev = 0.673, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2604253195042099;  // std dev = 0.110, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.24925317430814817;  // std dev = 0.143, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.05152973143882961;  // std dev = 0.658, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.07324622576333704;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return -0.005409263840672973;  // std dev = 0.644, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.200601238637874;  // std dev = 0.109, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.20178066994274904;  // std dev = 0.139, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.0163026210135874;  // std dev = 0.630, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.06419184008202622;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.910507
   AUC PR    = 0.196002
   CLL	      = -0.453707
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 1.219 seconds
Total inference time: 0.489 seconds
AUC ROC: 0.910507


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.153139
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.364 seconds
Refined model CLL: -0.153139


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.910507
   AUC PR    = 0.196002
   CLL	      = -0.453707
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 2.492 seconds
Total inference time: 0.489 seconds
AUC ROC: 0.910507
Total revision time: 2.492
Best scored revision CLL: -0.153139


Dataset: 1_imdb_uwcse, Fold: 5, Type: Transfer (trRDN-B), Time: 00:03:26
{'AUC ROC': 0.910507, 'AUC PR': 0.196002, 'CLL': -0.453707, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 2.492, 'Inference time': 0.489, 'parameter_10': {'AUC ROC': 0.926087, 'AUC PR': 0.46579, 'CLL': -0.348441, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 0.562, 'Inference time': 0.459}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5854216623722395;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.4983807577440189;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.12544463852839138;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3990418766037681;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.11231637819360639;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.30590364655137603;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.10159632948783627;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.23008571177589437;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.09269127618926097;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.1727815968518197;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.13060124951249316;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.07877675473109173;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.09960681503512822;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.152743858093671;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.07663960750354247;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.059425832707691854;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.0641918400820262;  // std dev = 2.63e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.926087
   AUC PR    = 0.46579
   CLL	      = -0.277179
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 0.579 seconds
Total inference time: 0.457 seconds
AUC ROC: 0.926087


Results scoring model
   AUC ROC   = 0.946667
   AUC PR    = 0.942218
   CLL	      = -0.271271
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.364 seconds
Parameter learned model CLL: -0.271271


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.477, 3, 8], 'false': [0.0, 12, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 7], 'true,false': [1.477, 3, 8], 'false': [0.0, 12, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.477, 3, 8], 'false': [0.0, 12, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.58e-08, 0, 7], 'true,false': [1.477, 3, 8], 'false': [3.73e-09, 12, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.477, 3, 8], 'false': [3.73e-09, 12, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.29e-08, 0, 7], 'true,false': [1.477, 3, 8], 'false': [3.73e-09, 12, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.477, 3, 8], 'false': [0.0, 12, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [5.27e-09, 0, 7], 'true,false': [1.477, 3, 8], 'false': [3.73e-09, 12, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.477, 3, 8], 'false': [2.63e-09, 12, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.477, 3, 8], 'false': [2.63e-09, 12, 0]}]]
[{'': [0.1388888888888886, -6.938893903907228e-18], 'true': [-2.5376526277146434e-16, 0.19834710743801648]}, {'': [0.13282913066632254, 0.0], 'true': [6.344131569286608e-17, 0.19834710743801648]}, {'': [0.1270197673355433, 0.0], 'true': [-6.344131569286608e-17, 0.1983471074380165]}, {'': [0.12417252837043, 1.1564823173178713e-18], 'true': [9.516197353929913e-17, 0.1983471074380165]}, {'': [0.12316399906375938, 1.1564823173178713e-18], 'true': [-3.172065784643304e-17, 0.19834710743801656]}, {'': [0.12282537067087625, 1.1564823173178713e-18], 'true': [2.3790493384824782e-17, 0.1983471074380165]}, {'': [0.12270120285379786, -1.1564823173178713e-18], 'true': [-1.586032892321652e-17, 0.1983471074380165]}, {'': [0.12263915245083108, 1.1564823173178713e-18], 'true': [3.96508223080413e-18, 0.1983471074380165]}, {'': [0.122588581044705, 5.782411586589357e-19], 'true': [-7.93016446160826e-18, 0.1983471074380165]}, {'': [0.12253403891053997, 5.782411586589357e-19], 'true': [0.0, 0.1983471074380165]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, B) )
%   | | then if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | | then return 0.4068585879990681;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7443356231566909;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.16653882456488175;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.3212531071950044;  // std dev = 0.755, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5817900805941925;  // std dev = 0.089, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.1420942428155648;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.11231637819360639;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then return 0.4786521259981985;  // std dev = 0.147, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.06836243753246331;  // std dev = 0.885, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2918793400923205;  // std dev = 0.588, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.10159632948783627;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, B), ta(E, A, F) )
%   | | then return 0.36493348567801764;  // std dev = 0.136, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.055204351165912297;  // std dev = 0.887, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.22550290975968773;  // std dev = 0.573, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.09269127618926097;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, B), ta(E, A, F) )
%   | | then return 0.2865812664097979;  // std dev = 0.120, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.04429736122842834;  // std dev = 0.889, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.17502276649112136;  // std dev = 0.568, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then return 0.23256150685604698;  // std dev = 0.105, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.03536845717599261;  // std dev = 0.890, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.13696440088823864;  // std dev = 0.568, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.07877675473109173;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, B), publication(E, A) )
%   | | then return 0.021652571683481336;  // std dev = 0.535, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.015494494279939264;  // std dev = 0.326, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2364280562280539;  // std dev = 0.810, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.152743858093671;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then return 0.1912344647279231;  // std dev = 0.090, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.0661556372820928;  // std dev = 0.563, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.002558817074572728;  // std dev = 0.868, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then return 0.16370533483323235;  // std dev = 0.079, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.05355801448164574;  // std dev = 0.567, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.0020087456649795867;  // std dev = 0.868, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.0641918400820262;  // std dev = 2.63e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.95
   AUC PR    = 0.385611
   CLL	      = -0.306355
   Precision = 0.22807 at threshold = 0.5
   Recall    = 0.8125
   F1        = 0.356164


Total learning time: 1.86 seconds
Total inference time: 0.482 seconds
AUC ROC: 0.95


Results scoring model
   AUC ROC   = 0.991111
   AUC PR    = 0.991912
   CLL	      = -0.188064
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.933333
   F1        = 0.965517


Total scoring time: 0.395 seconds
Refined model CLL: -0.188064


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.95
   AUC PR    = 0.385611
   CLL	      = -0.306355
   Precision = 0.22807 at threshold = 0.5
   Recall    = 0.8125
   F1        = 0.356164


Total learning time: 3.198 seconds
Total inference time: 0.482 seconds
AUC ROC: 0.95
Total revision time: 3.198
Best scored revision CLL: -0.188064


Dataset: 1_imdb_uwcse, Fold: 5, Type: Transfer (trRDN-B), Time: 00:03:30
{'AUC ROC': 0.95, 'AUC PR': 0.385611, 'CLL': -0.306355, 'Precision': [0.22807, 0.5], 'Recall': 0.8125, 'F1': 0.356164, 'Learning time': 3.198, 'Inference time': 0.482, 'parameter_15': {'AUC ROC': 0.926087, 'AUC PR': 0.46579, 'CLL': -0.277179, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 0.579, 'Inference time': 0.457}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5640312880406888;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.48074388375574334;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.386198448632422;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.11231637819360636;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2971060494206917;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.10159632948783628;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2238546892699972;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.09269127618926096;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.1679716628061755;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.08518475138839689;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.12658100414000711;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.07877675473109172;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.09607868392276996;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.07347328777965566;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.06842697784420272;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.05656520765532164;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.0641918400820262;  // std dev = 4.56e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.926087
   AUC PR    = 0.46579
   CLL	      = -0.267322
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 0.603 seconds
Total inference time: 0.449 seconds
AUC ROC: 0.926087


Results scoring model
   AUC ROC   = 0.925
   AUC PR    = 0.918348
   CLL	      = -0.308094
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total scoring time: 0.385 seconds
Parameter learned model CLL: -0.308094


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.879, 5, 12], 'false': [0.0, 15, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [1.879, 5, 12], 'false': [5.27e-09, 15, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.879, 5, 12], 'false': [9.13e-09, 15, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [1.879, 5, 12], 'false': [0.0, 15, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.879, 5, 12], 'false': [5.27e-09, 15, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.49e-08, 0, 8], 'true,false': [1.879, 5, 12], 'false': [0.0, 15, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.879, 5, 12], 'false': [5.27e-09, 15, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 8], 'true,false': [1.879, 5, 12], 'false': [5.27e-09, 15, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.879, 5, 12], 'false': [3.73e-09, 15, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.879, 5, 12], 'false': [4.56e-09, 15, 0]}]]
[{'': [0.16000000000000014, -1.4802973661668754e-17], 'true': [-2.220446049250313e-16, 0.20761245674740472]}, {'': [0.15357788360403823, 1.8503717077085942e-18], 'true': [1.1102230246251565e-16, 0.20761245674740464]}, {'': [0.1474037056530976, 5.551115123125783e-18], 'true': [-1.1102230246251565e-16, 0.20761245674740486]}, {'': [0.14433122982237345, 0.0], 'true': [1.1102230246251565e-16, 0.20761245674740486]}, {'': [0.14321784343415508, 1.8503717077085942e-18], 'true': [-4.163336342344337e-17, 0.20761245674740478]}, {'': [0.14283108817400153, 0.0], 'true': [2.7755575615628914e-17, 0.20761245674740483]}, {'': [0.14268190688506846, 1.8503717077085942e-18], 'true': [-2.0816681711721685e-17, 0.20761245674740486]}, {'': [0.14260477221590676, 1.8503717077085942e-18], 'true': [6.938893903907228e-18, 0.2076124567474048]}, {'': [0.14254383054221237, 9.251858538542971e-19], 'true': [-3.469446951953614e-18, 0.2076124567474048]}, {'': [0.1424814691090442, 1.3877787807814458e-18], 'true': [0.0, 0.20761245674740486]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, A) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then return 0.7401919213324014;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.031899738183663554;  // std dev = 0.910, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, B), ta(E, A, F) )
%   | | then return 0.5770453436263576;  // std dev = 0.093, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(G, A), publication(H, B) )
%   | | | then return -0.1597685308609891;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.42299071789047116;  // std dev = 1.198, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.11231637819360636;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.11211483821681463;  // std dev = 0.689, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.4726979794146544;  // std dev = 0.176, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.0018675064455508372;  // std dev = 0.959, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.10159632948783628;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.09252892386578118;  // std dev = 0.674, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.3599108541789577;  // std dev = 0.161, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.0014717211686439875;  // std dev = 0.959, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.09269127618926096;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, B), ta(E, A, F) )
%   | | then return 0.2995829118082392;  // std dev = 0.241, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(G, A), publication(H, B) )
%   | | | then return -0.16588505670985143;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2025008023867095;  // std dev = 1.058, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.08518475138839689;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.06018051049188229;  // std dev = 0.560, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.23722037869247606;  // std dev = 0.150, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.045261302069125764;  // std dev = 0.968, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.07877675473109172;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, B), ta(E, A, F) )
%   | | then return 0.21675869894054856;  // std dev = 0.236, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(G, A), publication(H, B) )
%   | | | then return -0.1517706393995389;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.13460743729638117;  // std dev = 1.035, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.04208425806181575;  // std dev = 0.480, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.17316436273128885;  // std dev = 0.134, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.06539993395680738;  // std dev = 0.971, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.06842697784420272;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then return 0.1692559339294852;  // std dev = 0.220, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(G, B), publication(H, A) )
%   | | | then return -0.13818264683806203;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.09693128948777632;  // std dev = 1.021, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.0641918400820262;  // std dev = 4.56e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.931612
   AUC PR    = 0.268247
   CLL	      = -0.346081
   Precision = 0.213333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.351648


Total learning time: 2.221 seconds
Total inference time: 0.483 seconds
AUC ROC: 0.931612


Results scoring model
   AUC ROC   = 0.995
   AUC PR    = 0.995346
   CLL	      = -0.170179
   Precision = 0.95 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.95


Total scoring time: 0.396 seconds
Refined model CLL: -0.170179


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.931612
   AUC PR    = 0.268247
   CLL	      = -0.346081
   Precision = 0.213333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.351648


Total learning time: 3.605 seconds
Total inference time: 0.483 seconds
AUC ROC: 0.931612
Total revision time: 3.605
Best scored revision CLL: -0.170179


Dataset: 1_imdb_uwcse, Fold: 5, Type: Transfer (trRDN-B), Time: 00:03:35
{'AUC ROC': 0.931612, 'AUC PR': 0.268247, 'CLL': -0.346081, 'Precision': [0.213333, 0.5], 'Recall': 1.0, 'F1': 0.351648, 'Learning time': 3.605, 'Inference time': 0.483, 'parameter_20': {'AUC ROC': 0.926087, 'AUC PR': 0.46579, 'CLL': -0.267322, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 0.603, 'Inference time': 0.449}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.5724346493852266;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4876778839172631;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.3912569620992536;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else return -0.11231637819360635;  // std dev = 1.58e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.3005711547884893;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else return -0.10159632948783628;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.22629823971521887;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else return -0.09269127618926094;  // std dev = 9.13e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.16984358676510133;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else return -0.08518475138839687;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.12813320688246743;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else return -0.07877675473109173;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.09743184803714998;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367094;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.07468131696953094;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else return -0.06842697784420272;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.057651940521137125;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else return -0.0641918400820262;  // std dev = 3.73e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 0.926087
   AUC PR    = 0.46579
   CLL	      = -0.271137
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 0.609 seconds
Total inference time: 0.468 seconds
AUC ROC: 0.926087


Results scoring model
   AUC ROC   = 0.928
   AUC PR    = 0.92105
   CLL	      = -0.302301
   Precision = 0.806452 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.892857


Total scoring time: 0.378 seconds
Parameter learned model CLL: -0.302301


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [2.07, 6, 15], 'false': [0.0, 19, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 10], 'true,false': [2.07, 6, 15], 'false': [7.45e-09, 19, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [2.07, 6, 15], 'false': [1.58e-08, 19, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [3.65e-08, 0, 10], 'true,false': [2.07, 6, 15], 'false': [0.0, 19, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [2.07, 6, 15], 'false': [9.13e-09, 19, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.83e-08, 0, 10], 'true,false': [2.07, 6, 15], 'false': [0.0, 19, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [2.07, 6, 15], 'false': [0.0, 19, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 10], 'true,false': [2.07, 6, 15], 'false': [3.73e-09, 19, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [2.07, 6, 15], 'false': [0.0, 19, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [2.07, 6, 15], 'false': [3.73e-09, 19, 0]}]]
[{'': [0.15608740894901246, -5.843279076974508e-18], 'true': [-8.881784197001253e-17, 0.204081632653061]}, {'': [0.1499898729593158, 2.921639538487254e-18], 'true': [8.881784197001253e-17, 0.204081632653061]}, {'': [0.14413407490907107, 1.3147377923192643e-17], 'true': [-1.7763568394002506e-16, 0.20408163265306117]}, {'': [0.14123725757793437, 0.0], 'true': [1.3322676295501878e-16, 0.20408163265306126]}, {'': [0.1401967408990672, 4.382459307730881e-18], 'true': [-4.4408920985006264e-17, 0.2040816326530613]}, {'': [0.13983990484124192, 0.0], 'true': [3.3306690738754695e-17, 0.20408163265306123]}, {'': [0.13970476643825988, -7.304098846218135e-19], 'true': [-2.7755575615628914e-17, 0.20408163265306126]}, {'': [0.13963569063881143, 7.304098846218135e-19], 'true': [5.551115123125783e-18, 0.20408163265306123]}, {'': [0.13958047089049125, -7.304098846218135e-19], 'true': [0.0, 0.20408163265306123]}, {'': [0.13952285514272428, 7.304098846218135e-19], 'true': [0.0, 0.20408163265306123]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( publication(G, A), publication(H, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.5581489350995122;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else return -0.1418510649004878;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( publication(G, A), publication(H, B) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.4758860545469174;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.2215250292763391;  // std dev = 0.818, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.5462803312803831;  // std dev = 0.926, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.015980732138072534;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.11231637819360635;  // std dev = 1.58e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then return 0.4499080151466059;  // std dev = 0.110, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( publication(G, A), publication(H, B) )
%   | | | then return -0.13637023346435792;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.292043526854582;  // std dev = 1.363, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else return -0.10159632948783628;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(D, B) )
%   | | then if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | | then return 0.14302092273151484;  // std dev = 0.975, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.3414582982065411;  // std dev = 0.532, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return -0.05414111508551441;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.09269127618926094;  // std dev = 9.13e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.08324868901523054;  // std dev = 0.561, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.27105033698222153;  // std dev = 0.907, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return -0.04137228105462524;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.08518475138839687;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then return 0.23962975995309546;  // std dev = 0.124, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( publication(G, A), publication(H, B) )
%   | | | then return -0.15621051389461746;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.14332768292392273;  // std dev = 1.273, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else return -0.07877675473109173;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(D, B) )
%   | | then if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | | then return 0.04660774574110861;  // std dev = 0.918, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.19624092424090048;  // std dev = 0.410, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return -0.06554846437277746;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367094;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(D, B), ta(E, A, F) )
%   | | then return 0.1725809032329143;  // std dev = 0.097, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( publication(G, A), publication(H, B) )
%   | | | then return -0.14932558143816146;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.0990962613258944;  // std dev = 1.251, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else return -0.06842697784420272;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(D, E), ta(F, E, G) )
%   | | | then return 0.13777374509514323;  // std dev = 0.569, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return -0.03247408389161166;  // std dev = 0.770, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.07361901180493895;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.0641918400820262;  // std dev = 3.73e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 0.947192
   AUC PR    = 0.552002
   CLL	      = -0.285556
   Precision = 0.22807 at threshold = 0.5
   Recall    = 0.8125
   F1        = 0.356164


Total learning time: 2.603 seconds
Total inference time: 0.497 seconds
AUC ROC: 0.947192


Results scoring model
   AUC ROC   = 0.996
   AUC PR    = 0.996257
   CLL	      = -0.179854
   Precision = 0.96 at threshold = 0.5
   Recall    = 0.96
   F1        = 0.96


Total scoring time: 0.41 seconds
Refined model CLL: -0.179854


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.947192
   AUC PR    = 0.552002
   CLL	      = -0.285556
   Precision = 0.22807 at threshold = 0.5
   Recall    = 0.8125
   F1        = 0.356164


Total learning time: 4.0 seconds
Total inference time: 0.497 seconds
AUC ROC: 0.947192
Total revision time: 4.0
Best scored revision CLL: -0.179854


Dataset: 1_imdb_uwcse, Fold: 5, Type: Transfer (trRDN-B), Time: 00:03:41
{'AUC ROC': 0.947192, 'AUC PR': 0.552002, 'CLL': -0.285556, 'Precision': [0.22807, 0.5], 'Recall': 0.8125, 'F1': 0.356164, 'Learning time': 4.0, 'Inference time': 0.497, 'parameter_25': {'AUC ROC': 0.926087, 'AUC PR': 0.46579, 'CLL': -0.271137, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 0.609, 'Inference time': 0.468}}


Starting fold 1

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos	 examples: 35
Target test neg examples: 1814

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.308741135785635;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2564123687585864;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.20613740734453975;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.16162857548414666;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.12455597792081964;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.09492800936730683;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.0718608885005586;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.05418307375954945;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.04076025323305622;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.937707
   AUC PR    = 0.29769
   CLL	      = -0.190914
   Precision = 0.518519 at threshold = 0.5
   Recall    = 0.4
   F1        = 0.451613


Total learning time: 0.54 seconds
Total inference time: 0.675 seconds
AUC ROC: 0.937707


Results scoring model
   AUC ROC   = 0.92
   AUC PR    = 0.931429
   CLL	      = -0.334793
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.6
   F1        = 0.75


Total scoring time: 0.344 seconds
Parameter learned model CLL: -0.334793


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [1.0, 2, 2], 'false': [0.0, 3, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [1.0, 2, 2], 'false': [0.0, 3, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.05e-08, 0, 3], 'true,false': [1.0, 2, 2], 'false': [2.63e-09, 3, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [1.0, 2, 2], 'false': [0.0, 3, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [1.0, 2, 2], 'false': [2.63e-09, 3, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [1.0, 2, 2], 'false': [0.0, 3, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [1.0, 2, 2], 'false': [0.0, 3, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [1.0, 2, 2], 'false': [1.86e-09, 3, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [1.0, 2, 2], 'false': [0.0, 3, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [1.0, 2, 2], 'false': [1.32e-09, 3, 0]}]]
[{'': [0.20408163265306106, 0.0], 'true': [1.4802973661668753e-16, 0.25]}, {'': [0.18417167417898567, 0.0], 'true': [0.0, 0.25]}, {'': [0.16474453912646375, 2.3129646346357427e-18], 'true': [3.700743415417188e-17, 0.25]}, {'': [0.15379915627536483, -1.1564823173178713e-18], 'true': [-3.700743415417188e-17, 0.25]}, {'': [0.14905489485562637, 2.3129646346357427e-18], 'true': [0.0, 0.24999999999999997]}, {'': [0.1470352510834542, 0.0], 'true': [0.0, 0.24999999999999997]}, {'': [0.1460863334141123, 0.0], 'true': [0.0, 0.25]}, {'': [0.14556927349872012, 1.1564823173178713e-18], 'true': [0.0, 0.24999999999999997]}, {'': [0.145236137520463, -5.782411586589357e-19], 'true': [-4.625929269271485e-18, 0.24999999999999997]}, {'': [0.1449865211540208, 5.782411586589357e-19], 'true': [-2.3129646346357427e-18, 0.25]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.308741135785635;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2564123687585864;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.20613740734453975;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.16162857548414666;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.12455597792081964;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.09492800936730683;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.0718608885005586;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.05418307375954945;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.04076025323305622;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.937707
   AUC PR    = 0.29769
   CLL	      = -0.190914
   Precision = 0.518519 at threshold = 0.5
   Recall    = 0.4
   F1        = 0.451613


Total learning time: 0.528 seconds
Total inference time: 0.692 seconds
AUC ROC: 0.937707


Results scoring model
   AUC ROC   = 0.92
   AUC PR    = 0.931429
   CLL	      = -0.334793
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.6
   F1        = 0.75


Total scoring time: 0.333 seconds
Refined model CLL: -0.334793


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.937707
   AUC PR    = 0.29769
   CLL	      = -0.190914
   Precision = 0.518519 at threshold = 0.5
   Recall    = 0.4
   F1        = 0.451613


Total learning time: 1.7449999999999999 seconds
Total inference time: 0.675 seconds
AUC ROC: 0.937707
Total revision time: 1.7449999999999999
Best scored revision CLL: -0.334793


Dataset: 1_imdb_uwcse, Fold: 1, Type: Transfer (trRDN-B), Time: 00:03:44
{'AUC ROC': 0.937707, 'AUC PR': 0.29769, 'CLL': -0.190914, 'Precision': [0.518519, 0.5], 'Recall': 0.4, 'F1': 0.451613, 'Learning time': 1.7449999999999999, 'Inference time': 0.675, 'parameter_5': {'AUC ROC': 0.937707, 'AUC PR': 0.29769, 'CLL': -0.190914, 'Precision': [0.518519, 0.5], 'Recall': 0.4, 'F1': 0.451613, 'Learning time': 0.54, 'Inference time': 0.675}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.30259337954395665;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2616318086752123;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2192721473492705;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.17873524574687272;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1424392447767629;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else return -0.09269127618926098;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.11159559999632984;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.08637026299843623;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.06628370899125427;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else return -0.07324622576333703;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.05057564362187431;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else return -0.06842697784420274;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.03843884907512943;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.937707
   AUC PR    = 0.29769
   CLL	      = -0.174356
   Precision = 0.518519 at threshold = 0.5
   Recall    = 0.4
   F1        = 0.451613


Total learning time: 0.605 seconds
Total inference time: 0.723 seconds
AUC ROC: 0.937707


Results scoring model
   AUC ROC   = 0.9
   AUC PR    = 0.914961
   CLL	      = -0.36358
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.6
   F1        = 0.75


Total scoring time: 0.349 seconds
Parameter learned model CLL: -0.36358


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.491, 5, 4], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [1.491, 5, 4], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.491, 5, 4], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [1.491, 5, 4], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.491, 5, 4], 'false': [2.63e-09, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 6], 'true,false': [1.491, 5, 4], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.491, 5, 4], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [5.27e-09, 0, 6], 'true,false': [1.491, 5, 4], 'false': [2.63e-09, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.491, 5, 4], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.491, 5, 4], 'false': [0.0, 5, 0]}]]
[{'': [0.22222222222222215, -2.7755575615628915e-18], 'true': [-1.4802973661668753e-16, 0.24691358024691354]}, {'': [0.19845669229091134, 0.0], 'true': [7.401486830834377e-17, 0.24691358024691354]}, {'': [0.17525839727581619, 0.0], 'true': [-7.401486830834377e-17, 0.2469135802469136]}, {'': [0.1618317709228346, 0.0], 'true': [7.401486830834377e-17, 0.24691358024691365]}, {'': [0.15577561713067894, 1.3877787807814458e-18], 'true': [-3.700743415417188e-17, 0.2469135802469136]}, {'': [0.1530955686983676, 0.0], 'true': [9.25185853854297e-18, 0.2469135802469136]}, {'': [0.1518020193803559, -1.3877787807814458e-18], 'true': [-9.25185853854297e-18, 0.2469135802469136]}, {'': [0.15109522194449462, 1.3877787807814458e-18], 'true': [4.625929269271485e-18, 0.2469135802469136]}, {'': [0.1506533507197534, -1.3877787807814458e-18], 'true': [-4.625929269271485e-18, 0.24691358024691354]}, {'': [0.15034013467778495, 0.0], 'true': [0.0, 0.2469135802469136]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.16653882456488173;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.36236334632262296;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.1420942428155648;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.08277854084760368;  // std dev = 0.980, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.28581557157413096;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.26096103261343145;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.07972844117081822;  // std dev = 1.134, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return -0.09269127618926098;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.02097502697079217;  // std dev = 0.948, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.2179550792016776;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.016287544519995284;  // std dev = 0.947, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.1718105994346055;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.18753536134198026;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.005344577587175159;  // std dev = 1.093, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return -0.07324622576333703;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return -0.015876166913844036;  // std dev = 0.922, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.13163336989492613;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.06842697784420274;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.14464694537563086;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.015575747196586637;  // std dev = 1.078, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.942117
   AUC PR    = 0.305712
   CLL	      = -0.178018
   Precision = 0.165138 at threshold = 0.5
   Recall    = 0.514286
   F1        = 0.25


Total learning time: 1.123 seconds
Total inference time: 0.756 seconds
AUC ROC: 0.942117


Results scoring model
   AUC ROC   = 0.95
   AUC PR    = 0.952502
   CLL	      = -0.32399
   Precision = 0.888889 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.842105


Total scoring time: 0.355 seconds
Refined model CLL: -0.32399


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.942117
   AUC PR    = 0.305712
   CLL	      = -0.178018
   Precision = 0.165138 at threshold = 0.5
   Recall    = 0.514286
   F1        = 0.25


Total learning time: 2.432 seconds
Total inference time: 0.756 seconds
AUC ROC: 0.942117
Total revision time: 2.432
Best scored revision CLL: -0.32399


Dataset: 1_imdb_uwcse, Fold: 1, Type: Transfer (trRDN-B), Time: 00:03:49
{'AUC ROC': 0.942117, 'AUC PR': 0.305712, 'CLL': -0.178018, 'Precision': [0.165138, 0.5], 'Recall': 0.514286, 'F1': 0.25, 'Learning time': 2.432, 'Inference time': 0.756, 'parameter_10': {'AUC ROC': 0.937707, 'AUC PR': 0.29769, 'CLL': -0.174356, 'Precision': [0.518519, 0.5], 'Recall': 0.4, 'F1': 0.451613, 'Learning time': 0.605, 'Inference time': 0.723}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.47353355048412765;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   else return -0.14185106490048777;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.40564015880039;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   else return -0.12544463852839138;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3305950535941956;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.2588028158530626;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   else return -0.10159632948783633;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.1974915084804265;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   else return -0.09269127618926098;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.1488188768151458;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   else return -0.08518475138839687;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.1116641930419041;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   else return -0.07877675473109177;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.08379022739458944;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   else return -0.07324622576333704;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.152743858093671;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.06299353154599838;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.047474404246060385;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   else return -0.0641918400820262;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.937707
   AUC PR    = 0.29769
   CLL	      = -0.231553
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 0.576 seconds
Total inference time: 0.732 seconds
AUC ROC: 0.937707


Results scoring model
   AUC ROC   = 0.911111
   AUC PR    = 0.911261
   CLL	      = -0.340273
   Precision = 0.75 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.857143


Total scoring time: 0.364 seconds
Parameter learned model CLL: -0.340273


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.754, 5, 8], 'false': [0.0, 10, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 7], 'true,false': [1.754, 5, 8], 'false': [0.0, 10, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.754, 5, 8], 'false': [0.0, 10, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.58e-08, 0, 7], 'true,false': [1.754, 5, 8], 'false': [0.0, 10, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.754, 5, 8], 'false': [0.0, 10, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.29e-08, 0, 7], 'true,false': [1.754, 5, 8], 'false': [0.0, 10, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.754, 5, 8], 'false': [0.0, 10, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [5.27e-09, 0, 7], 'true,false': [1.754, 5, 8], 'false': [0.0, 10, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.754, 5, 8], 'false': [2.63e-09, 10, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.754, 5, 8], 'false': [0.0, 10, 0]}]]
[{'': [0.18749999999999964, -2.7755575615628915e-18], 'true': [-2.5376526277146434e-16, 0.23668639053254437]}, {'': [0.17625292708642792, 0.0], 'true': [6.344131569286608e-17, 0.23668639053254437]}, {'': [0.1653399485867874, 0.0], 'true': [-6.344131569286608e-17, 0.23668639053254428]}, {'': [0.1595766759107034, 0.0], 'true': [9.516197353929913e-17, 0.2366863905325443]}, {'': [0.1573003436452925, 0.0], 'true': [-3.172065784643304e-17, 0.23668639053254437]}, {'': [0.15641941508380935, 0.0], 'true': [2.3790493384824782e-17, 0.23668639053254437]}, {'': [0.1560352360082931, -1.3877787807814458e-18], 'true': [-1.586032892321652e-17, 0.23668639053254437]}, {'': [0.15582678251589072, -6.938893903907229e-19], 'true': [3.96508223080413e-18, 0.2366863905325444]}, {'': [0.15567869389991046, 6.938893903907229e-19], 'true': [-7.93016446160826e-18, 0.23668639053254437]}, {'': [0.15554965003173998, 0.0], 'true': [0.0, 0.23668639053254437]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, A) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.14185106490048777;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, A) )
%   | | then return 0.16653882456488175;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.5580193346218546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.3927941835770488;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.12544463852839138;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, A) )
%   | | then return 0.1420942428155648;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.4419486100244409;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.32092546969114216;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.28541139495094314;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.10556561551825042;  // std dev = 1.004, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.4063395640384335;  // std dev = 0.889, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.10159632948783633;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, D, F) )
%   | | | then return 0.22298693073542336;  // std dev = 0.973, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.0400127106415122;  // std dev = 0.875, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.3135833251533936;  // std dev = 0.897, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.09269127618926098;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.2262993013752121;  // std dev = 0.867, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return -0.030341421541941183;  // std dev = 0.752, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.17898391425169796;  // std dev = 1.076, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.08518475138839687;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, D, F) )
%   | | | then return 0.14758337297797913;  // std dev = 0.954, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.009341572984846294;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.1933635473333606;  // std dev = 0.902, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.07877675473109177;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.1591776143511065;  // std dev = 0.855, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return -0.04720983339083996;  // std dev = 0.743, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.09456196667983649;  // std dev = 1.071, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07324622576333704;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.152743858093671;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, A) )
%   | | then return -0.02060388127610589;  // std dev = 0.680, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | | then return 0.2182648875923736;  // std dev = 0.787, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.009632980888334253;  // std dev = 1.124, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.11361730925559695;  // std dev = 0.849, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return -0.07167426460047739;  // std dev = 0.730, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.06228215610710243;  // std dev = 1.052, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.0641918400820262;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.947952
   AUC PR    = 0.316223
   CLL	      = -0.195733
   Precision = 0.17037 at threshold = 0.5
   Recall    = 0.657143
   F1        = 0.270588


Total learning time: 1.465 seconds
Total inference time: 0.773 seconds
AUC ROC: 0.947952


Results scoring model
   AUC ROC   = 0.96
   AUC PR    = 0.958968
   CLL	      = -0.291383
   Precision = 0.866667 at threshold = 0.5
   Recall    = 0.866667
   F1        = 0.866667


Total scoring time: 0.374 seconds
Refined model CLL: -0.291383


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.947952
   AUC PR    = 0.316223
   CLL	      = -0.195733
   Precision = 0.17037 at threshold = 0.5
   Recall    = 0.657143
   F1        = 0.270588


Total learning time: 2.7790000000000004 seconds
Total inference time: 0.773 seconds
AUC ROC: 0.947952
Total revision time: 2.7790000000000004
Best scored revision CLL: -0.291383


Dataset: 1_imdb_uwcse, Fold: 1, Type: Transfer (trRDN-B), Time: 00:03:54
{'AUC ROC': 0.947952, 'AUC PR': 0.316223, 'CLL': -0.195733, 'Precision': [0.17037, 0.5], 'Recall': 0.657143, 'F1': 0.270588, 'Learning time': 2.7790000000000004, 'Inference time': 0.773, 'parameter_15': {'AUC ROC': 0.937707, 'AUC PR': 0.29769, 'CLL': -0.231553, 'Precision': [0.089744, 0.5], 'Recall': 1.0, 'F1': 0.164706, 'Learning time': 0.576, 'Inference time': 0.732}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4831489350995123;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4136573287083126;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   else return -0.12544463852839138;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.3366053739648666;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   else return -0.11231637819360639;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.26297558544868976;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   else return -0.10159632948783627;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.20032545170291102;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   else return -0.09269127618926097;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.15079889954054407;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.11312434025950244;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   else return -0.07877675473109173;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.08492715391619832;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367094;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.06391587871034282;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   else return -0.06842697784420272;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.048241927001546565;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   else return -0.0641918400820262;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.937707
   AUC PR    = 0.29769
   CLL	      = -0.235366
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 0.585 seconds
Total inference time: 0.698 seconds
AUC ROC: 0.937707


Results scoring model
   AUC ROC   = 0.925
   AUC PR    = 0.924686
   CLL	      = -0.31929
   Precision = 0.769231 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.869565


Total scoring time: 0.37 seconds
Parameter learned model CLL: -0.31929


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.936, 6, 10], 'false': [0.0, 14, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 10], 'true,false': [1.936, 6, 10], 'false': [0.0, 14, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.936, 6, 10], 'false': [0.0, 14, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [3.65e-08, 0, 10], 'true,false': [1.936, 6, 10], 'false': [0.0, 14, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.936, 6, 10], 'false': [0.0, 14, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.83e-08, 0, 10], 'true,false': [1.936, 6, 10], 'false': [3.73e-09, 14, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.936, 6, 10], 'false': [0.0, 14, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 10], 'true,false': [1.936, 6, 10], 'false': [3.73e-09, 14, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.936, 6, 10], 'false': [0.0, 14, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.936, 6, 10], 'false': [0.0, 14, 0]}]]
[{'': [0.17751479289940847, -7.93016446160826e-18], 'true': [-8.881784197001253e-17, 0.23437499999999994]}, {'': [0.16636650341512277, 0.0], 'true': [8.881784197001253e-17, 0.23437499999999992]}, {'': [0.15555772842349241, -1.982541115402065e-18], 'true': [-1.7763568394002506e-16, 0.234375]}, {'': [0.14988331196335483, 0.0], 'true': [1.3322676295501878e-16, 0.2343750000000001]}, {'': [0.14766103768312103, 0.0], 'true': [-4.4408920985006264e-17, 0.23437499999999997]}, {'': [0.1468091821858078, 9.912705577010326e-19], 'true': [3.3306690738754695e-17, 0.234375]}, {'': [0.1464409489315942, -1.982541115402065e-18], 'true': [-2.7755575615628914e-17, 0.23437499999999997]}, {'': [0.14624146460162904, 9.912705577010326e-19], 'true': [5.551115123125783e-18, 0.23437499999999997]}, {'': [0.14609832187486982, 0.0], 'true': [0.0, 0.234375]}, {'': [0.14597175216419156, -4.956352788505163e-19], 'true': [0.0, 0.23437499999999997]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | then return 0.142700767189939;  // std dev = 0.802, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.37909328690125266;  // std dev = 1.306, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(D, A) )
%   | | then return 0.11995213265427031;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | | then return 0.5266615085980645;  // std dev = 0.837, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.2573115799456395;  // std dev = 1.294, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return -0.11231637819360639;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then return 0.36597491053737635;  // std dev = 0.879, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | then return 0.04343278159629741;  // std dev = 0.771, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.26013250180964215;  // std dev = 1.286, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return -0.10159632948783627;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(D, A) )
%   | | then return 0.06236709235965406;  // std dev = 0.784, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | | then return 0.349089642900545;  // std dev = 0.790, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.12718684052150026;  // std dev = 1.291, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return -0.09269127618926097;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then return 0.21893540956058508;  // std dev = 0.859, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.01594741567039069;  // std dev = 0.935, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.20608954353081085;  // std dev = 1.135, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then return 0.16920030025080793;  // std dev = 0.862, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | then return -0.027317429409024995;  // std dev = 0.748, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1321930331617424;  // std dev = 1.267, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return -0.07877675473109173;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then if ( ta(G, A, H) )
%   | | | then return 0.24851836196353572;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06010931344678509;  // std dev = 0.894, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return -0.04247072376456982;  // std dev = 0.843, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.12374868322167085;  // std dev = 1.138, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367094;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then if ( ta(G, A, H) )
%   | | | then return 0.20504624516105874;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.04566239789540852;  // std dev = 0.894, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return -0.0333560120878799;  // std dev = 0.843, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.09306454944614076;  // std dev = 1.139, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.06842697784420272;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then return 0.10430756732279191;  // std dev = 0.834, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return -0.014214883775952975;  // std dev = 0.920, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.0700128623060587;  // std dev = 1.139, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.0641918400820262;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.943385
   AUC PR    = 0.296698
   CLL	      = -0.191642
   Precision = 0.156463 at threshold = 0.5
   Recall    = 0.657143
   F1        = 0.252747


Total learning time: 1.852 seconds
Total inference time: 0.815 seconds
AUC ROC: 0.943385


Results scoring model
   AUC ROC   = 0.96875
   AUC PR    = 0.968819
   CLL	      = -0.269215
   Precision = 0.857143 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.878049


Total scoring time: 0.388 seconds
Refined model CLL: -0.269215


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.943385
   AUC PR    = 0.296698
   CLL	      = -0.191642
   Precision = 0.156463 at threshold = 0.5
   Recall    = 0.657143
   F1        = 0.252747


Total learning time: 3.195 seconds
Total inference time: 0.815 seconds
AUC ROC: 0.943385
Total revision time: 3.195
Best scored revision CLL: -0.269215


Dataset: 1_imdb_uwcse, Fold: 1, Type: Transfer (trRDN-B), Time: 00:03:59
{'AUC ROC': 0.943385, 'AUC PR': 0.296698, 'CLL': -0.191642, 'Precision': [0.156463, 0.5], 'Recall': 0.657143, 'F1': 0.252747, 'Learning time': 3.195, 'Inference time': 0.815, 'parameter_20': {'AUC ROC': 0.937707, 'AUC PR': 0.29769, 'CLL': -0.235366, 'Precision': [0.089744, 0.5], 'Recall': 1.0, 'F1': 0.164706, 'Learning time': 0.585, 'Inference time': 0.698}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5248156017661789;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   else return -0.1418510649004878;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.448295606241962;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   else return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.36236334632262296;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.2807538536965852;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   else return -0.10159632948783627;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.21248070121827117;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   else return -0.092691276189261;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.15948988228171176;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.11975529938157478;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   else return -0.07877675473109173;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.09028081829440963;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367094;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.0684031142911852;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   else return -0.06842697784420272;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.052078905701252676;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   else return -0.0641918400820262;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 0.937707
   AUC PR    = 0.29769
   CLL	      = -0.252748
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 0.672 seconds
Total inference time: 0.686 seconds
AUC ROC: 0.937707


Results scoring model
   AUC ROC   = 0.9216
   AUC PR    = 0.917878
   CLL	      = -0.319151
   Precision = 0.78125 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.877193


Total scoring time: 0.373 seconds
Parameter learned model CLL: -0.319151


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 11], 'true,false': [2.16, 7, 14], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [4.21e-08, 0, 11], 'true,false': [2.16, 7, 14], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 11], 'true,false': [2.16, 7, 14], 'false': [1.05e-08, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [4.21e-08, 0, 11], 'true,false': [2.16, 7, 14], 'false': [7.45e-09, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 11], 'true,false': [2.16, 7, 14], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 11], 'true,false': [2.16, 7, 14], 'false': [5.27e-09, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 11], 'true,false': [2.16, 7, 14], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 11], 'true,false': [2.16, 7, 14], 'false': [3.73e-09, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 11], 'true,false': [2.16, 7, 14], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [5.27e-09, 0, 11], 'true,false': [2.16, 7, 14], 'false': [3.73e-09, 18, 0]}]]
[{'': [0.1708984375000011, -9.25185853854297e-18], 'true': [-1.6148698540002277e-16, 0.22222222222222202]}, {'': [0.16242233720636695, 0.0], 'true': [1.6148698540002277e-16, 0.22222222222222227]}, {'': [0.1542364530236874, 6.1679056923619804e-18], 'true': [-2.0185873175002846e-16, 0.22222222222222227]}, {'': [0.1500525176256649, 3.0839528461809902e-18], 'true': [1.6148698540002277e-16, 0.22222222222222218]}, {'': [0.1484758427082231, -1.5419764230904951e-18], 'true': [-6.055761952500853e-17, 0.22222222222222238]}, {'': [0.14789859832378788, 1.5419764230904951e-18], 'true': [4.0371746350005693e-17, 0.22222222222222215]}, {'': [0.1476606775414033, -7.709882115452476e-19], 'true': [-2.5232341468753557e-17, 0.22222222222222227]}, {'': [0.14753356601678755, 7.709882115452476e-19], 'true': [5.046468293750712e-18, 0.22222222222222218]}, {'': [0.14743800755799266, 0.0], 'true': [5.046468293750712e-18, 0.22222222222222224]}, {'': [0.14734751522260076, 7.709882115452476e-19], 'true': [2.523234146875356e-18, 0.22222222222222218]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(F, B), ta(G, A, H) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.5581489350995122;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else return -0.1418510649004878;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.09446743783575562;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(F, B), ta(G, A, H) )
%   | | | then return 0.6045267906174348;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.4758860545469175;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.08165239320886175;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.4835523891706553;  // std dev = 0.880, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.38633587664661756;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then if ( ta(D, G, H), publication(I, G) )
%   | | | then return 0.4515513080151348;  // std dev = 0.743, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.17391956572734704;  // std dev = 0.797, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(J, B), publication(K, B) )
%   | | | then return -0.013271918650484299;  // std dev = 0.736, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.28294802145142167;  // std dev = 1.315, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else return -0.10159632948783627;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.02078569869775146;  // std dev = 0.836, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.32440298207709306;  // std dev = 0.834, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.21669069157846177;  // std dev = 1.445, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.092691276189261;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.01711446632045656;  // std dev = 0.836, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.24564422121850604;  // std dev = 0.835, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.16338658672144088;  // std dev = 1.446, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then if ( ta(E, G, H), publication(I, G) )
%   | | | then return 0.2844859879029558;  // std dev = 0.714, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.0099177571743857;  // std dev = 0.763, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(J, B), publication(K, B) )
%   | | | then return -0.10669448917321205;  // std dev = 0.713, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.12622946282403405;  // std dev = 1.271, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else return -0.07877675473109173;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return -0.017293232932526756;  // std dev = 0.810, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.18332399986615253;  // std dev = 0.813, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.08830637345400912;  // std dev = 1.422, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367094;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then if ( ta(D, G, H), publication(I, G) )
%   | | | then return 0.21485112698779538;  // std dev = 0.712, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.02483665358868581;  // std dev = 0.749, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(J, B), publication(K, B) )
%   | | | then return -0.11319978344947178;  // std dev = 0.710, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.0763283053623296;  // std dev = 1.259, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else return -0.06842697784420272;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return -0.03806660267292738;  // std dev = 0.790, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.1473951777137424;  // std dev = 0.800, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.047383915934571946;  // std dev = 1.404, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.0641918400820262;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 0.945535
   AUC PR    = 0.300603
   CLL	      = -0.216308
   Precision = 0.117409 at threshold = 0.5
   Recall    = 0.828571
   F1        = 0.205674


Total learning time: 2.142 seconds
Total inference time: 0.824 seconds
AUC ROC: 0.945535


Results scoring model
   AUC ROC   = 0.9792
   AUC PR    = 0.979807
   CLL	      = -0.257004
   Precision = 0.857143 at threshold = 0.5
   Recall    = 0.96
   F1        = 0.90566


Total scoring time: 0.418 seconds
Refined model CLL: -0.257004


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.945535
   AUC PR    = 0.300603
   CLL	      = -0.216308
   Precision = 0.117409 at threshold = 0.5
   Recall    = 0.828571
   F1        = 0.205674


Total learning time: 3.605 seconds
Total inference time: 0.824 seconds
AUC ROC: 0.945535
Total revision time: 3.605
Best scored revision CLL: -0.257004


Dataset: 1_imdb_uwcse, Fold: 1, Type: Transfer (trRDN-B), Time: 00:04:04
{'AUC ROC': 0.945535, 'AUC PR': 0.300603, 'CLL': -0.216308, 'Precision': [0.117409, 0.5], 'Recall': 0.828571, 'F1': 0.205674, 'Learning time': 3.605, 'Inference time': 0.824, 'parameter_25': {'AUC ROC': 0.937707, 'AUC PR': 0.29769, 'CLL': -0.252748, 'Precision': [0.089744, 0.5], 'Recall': 1.0, 'F1': 0.164706, 'Learning time': 0.672, 'Inference time': 0.686}}


Starting fold 2

Target train facts examples: 1965
Target train pos examples: 93
Target train neg examples: 3738

Target test facts examples: 422
Target test pos	 examples: 20
Target test neg examples: 341

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333703;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.926686
   AUC PR    = 0.285714
   CLL	      = -0.351876
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 0.556 seconds
Total inference time: 0.444 seconds
AUC ROC: 0.926686


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.345 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.49e-08, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [2.63e-09, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [1.86e-09, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [nan, 0.0]}, {'': [0.0, 0.0], 'true': [nan, 0.0]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [nan, -4.4408920985006264e-17]}, {'': [4.4408920985006264e-17, 0.0], 'true': [nan, 4.4408920985006264e-17]}, {'': [-2.2204460492503132e-17, 0.0], 'true': [nan, -2.2204460492503132e-17]}, {'': [0.0, 0.0], 'true': [nan, 0.0]}, {'': [-5.551115123125783e-18, -1.3877787807814458e-18], 'true': [nan, -5.551115123125783e-18]}, {'': [0.0, 1.3877787807814458e-18], 'true': [nan, 0.0]}, {'': [0.0, 6.938893903907229e-19], 'true': [nan, 0.0]}, {'': [0.0, 0.0], 'true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333703;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.926686
   AUC PR    = 0.285714
   CLL	      = -0.351876
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 0.48 seconds
Total inference time: 0.41 seconds
AUC ROC: 0.926686


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.33 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.926686
   AUC PR    = 0.285714
   CLL	      = -0.351876
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 1.711 seconds
Total inference time: 0.444 seconds
AUC ROC: 0.926686
Total revision time: 1.711
Best scored revision CLL: -0.094637


Dataset: 1_imdb_uwcse, Fold: 2, Type: Transfer (trRDN-B), Time: 00:04:08
{'AUC ROC': 0.926686, 'AUC PR': 0.285714, 'CLL': -0.351876, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 1.711, 'Inference time': 0.444, 'parameter_5': {'AUC ROC': 0.926686, 'AUC PR': 0.285714, 'CLL': -0.351876, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 0.556, 'Inference time': 0.444}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.8581489350995121;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5553664367462845;  // std dev = 1.49e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.10159632948783628;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.08518475138839687;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.20975771563253554;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.07324622576333704;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.0641918400820262;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.926686
   AUC PR    = 0.285714
   CLL	      = -0.351876
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 0.585 seconds
Total inference time: 0.454 seconds
AUC ROC: 0.926686


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.348 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [2.98e-08, 0, 6], 'false': [0.0, 10, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 6], 'false': [5.27e-09, 10, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.49e-08, 0, 6], 'false': [0.0, 10, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 6], 'false': [0.0, 10, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 6], 'false': [0.0, 10, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 6], 'false': [0.0, 10, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 6], 'false': [0.0, 10, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 6], 'false': [0.0, 10, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 6], 'false': [2.63e-09, 10, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 6], 'false': [0.0, 10, 0]}]]
[{'': [-8.881784197001253e-17, -1.1102230246251566e-17], 'true': [0.0, 1.4802973661668753e-16]}, {'': [8.881784197001253e-17, 2.7755575615628915e-18], 'true': [0.0, 0.0]}, {'': [-1.7763568394002506e-16, 0.0], 'true': [0.0, 3.700743415417188e-17]}, {'': [1.3322676295501878e-16, 0.0], 'true': [0.0, -3.700743415417188e-17]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [0.0, 0.0]}, {'': [3.3306690738754695e-17, 0.0], 'true': [0.0, 0.0]}, {'': [-2.7755575615628914e-17, 0.0], 'true': [0.0, 0.0]}, {'': [5.551115123125783e-18, 0.0], 'true': [0.0, 0.0]}, {'': [0.0, 6.938893903907229e-19], 'true': [0.0, -4.625929269271485e-18]}, {'': [0.0, 0.0], 'true': [0.0, -2.3129646346357427e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.8581489350995121;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( publication(D, B) )
%   | then if ( ta(E, A, F) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5553664367462845;  // std dev = 1.49e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( publication(D, B) )
%   | then if ( ta(E, A, F) )
%   | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( publication(D, B) )
%   | then if ( ta(E, A, F) )
%   | | then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( publication(D, A) )
%   | then return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( publication(D, A) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.20975771563253554;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( publication(D, A) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( publication(D, A) )
%   | then return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( publication(D, B) )
%   | then if ( ta(E, A, F) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( publication(D, B) )
%   | then if ( ta(E, A, F) )
%   | | then return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.926686
   AUC PR    = 0.285714
   CLL	      = -0.351876
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 1.214 seconds
Total inference time: 0.465 seconds
AUC ROC: 0.926686


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.351 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.926686
   AUC PR    = 0.285714
   CLL	      = -0.351876
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 2.4979999999999998 seconds
Total inference time: 0.454 seconds
AUC ROC: 0.926686
Total revision time: 2.4979999999999998
Best scored revision CLL: -0.094637


Dataset: 1_imdb_uwcse, Fold: 2, Type: Transfer (trRDN-B), Time: 00:04:11
{'AUC ROC': 0.926686, 'AUC PR': 0.285714, 'CLL': -0.351876, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 2.4979999999999998, 'Inference time': 0.454, 'parameter_10': {'AUC ROC': 0.926686, 'AUC PR': 0.285714, 'CLL': -0.351876, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 0.585, 'Inference time': 0.454}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.63592671287729;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5398498420741676;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.42895627253508517;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3264400476801373;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.10159632948783628;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.24503149911444552;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.18482045881522158;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.08518475138839686;  // std dev = 6.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.14108814406879133;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.10912169797108993;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.0854052341130851;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.0675192639640355;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.06419184008202619;  // std dev = 4.56e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.956745
   AUC PR    = 0.591831
   CLL	      = -0.246197
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 0.592 seconds
Total inference time: 0.455 seconds
AUC ROC: 0.956745


Results scoring model
   AUC ROC   = 0.968889
   AUC PR    = 0.965934
   CLL	      = -0.22205
   Precision = 0.882353 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.9375


Total scoring time: 0.366 seconds
Parameter learned model CLL: -0.22205


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.247, 2, 7], 'false': [0.0, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [1.247, 2, 7], 'false': [7.45e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.247, 2, 7], 'false': [1.05e-08, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [1.247, 2, 7], 'false': [5.27e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.247, 2, 7], 'false': [5.27e-09, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.49e-08, 0, 8], 'true,false': [1.247, 2, 7], 'false': [6.45e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.247, 2, 7], 'false': [3.73e-09, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 8], 'true,false': [1.247, 2, 7], 'false': [0.0, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.247, 2, 7], 'false': [2.63e-09, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.247, 2, 7], 'false': [4.56e-09, 13, 0]}]]
[{'': [0.10380622837370206, -1.2810265668751807e-17], 'true': [-2.220446049250313e-16, 0.1728395061728395]}, {'': [0.0995415141340823, 4.270088556250602e-18], 'true': [1.1102230246251565e-16, 0.17283950617283944]}, {'': [0.09548432725532674, 8.540177112501205e-18], 'true': [-1.1102230246251565e-16, 0.1728395061728395]}, {'': [0.09356969015848664, 2.135044278125301e-18], 'true': [1.1102230246251565e-16, 0.17283950617283952]}, {'': [0.0929301921461156, 2.135044278125301e-18], 'true': [-4.163336342344337e-17, 0.1728395061728395]}, {'': [0.09273632987826218, 3.2025664171879517e-18], 'true': [2.7755575615628914e-17, 0.1728395061728395]}, {'': [0.0926780663275928, 1.0675221390626506e-18], 'true': [-2.0816681711721685e-17, 0.1728395061728395]}, {'': [0.0926544142891245, 0.0], 'true': [6.938893903907228e-18, 0.1728395061728395]}, {'': [0.09263296797430988, 5.337610695313253e-19], 'true': [-3.469446951953614e-18, 0.1728395061728395]}, {'': [0.0926045996638677, 1.6012832085939759e-18], 'true': [0.0, 0.1728395061728395]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, A) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, A) )
%   | | then return 0.308741135785635;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.6056279197493599;  // std dev = 0.174, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.27599399595366564;  // std dev = 0.963, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, A) )
%   | | then return 0.18376721346148678;  // std dev = 0.965, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.4378455769189162;  // std dev = 0.089, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783628;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.3754214711451992;  // std dev = 0.242, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.1491712473890349;  // std dev = 0.918, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.03077159041384246;  // std dev = 0.493, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2784373915760859;  // std dev = 0.776, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839686;  // std dev = 6.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.2656457076926815;  // std dev = 0.185, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.06269169864001442;  // std dev = 0.891, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, A) )
%   | | then return 0.014303906226869806;  // std dev = 0.888, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.21225690524682178;  // std dev = 0.114, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then return -0.02993306014748472;  // std dev = 0.450, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.1716849759363802;  // std dev = 0.760, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, A) )
%   | | then return -0.018360136265344773;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.1657625019552061;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06419184008202619;  // std dev = 4.56e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.968109
   AUC PR    = 0.502412
   CLL	      = -0.220666
   Precision = 0.387755 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.550725


Total learning time: 1.139 seconds
Total inference time: 0.471 seconds
AUC ROC: 0.968109


Results scoring model
   AUC ROC   = 0.997778
   AUC PR    = 0.997917
   CLL	      = -0.162375
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.933333
   F1        = 0.965517


Total scoring time: 0.377 seconds
Refined model CLL: -0.162375


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.968109
   AUC PR    = 0.502412
   CLL	      = -0.220666
   Precision = 0.387755 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.550725


Total learning time: 2.474 seconds
Total inference time: 0.471 seconds
AUC ROC: 0.968109
Total revision time: 2.474
Best scored revision CLL: -0.162375


Dataset: 1_imdb_uwcse, Fold: 2, Type: Transfer (trRDN-B), Time: 00:04:15
{'AUC ROC': 0.968109, 'AUC PR': 0.502412, 'CLL': -0.220666, 'Precision': [0.387755, 0.5], 'Recall': 0.95, 'F1': 0.550725, 'Learning time': 2.474, 'Inference time': 0.471, 'parameter_15': {'AUC ROC': 0.956745, 'AUC PR': 0.591831, 'CLL': -0.246197, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 0.592, 'Inference time': 0.455}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.643863220813798;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5463443246618189;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.43360774241258027;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.3296468796614061;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else return -0.10159632948783628;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2474238613374282;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else return -0.09269127618926094;  // std dev = 9.13e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.1868137662670577;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.14287708768965177;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else return -0.07877675473109173;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.11078243293091557;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.08696285935559464;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else return -0.06842697784420272;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.06897951845459195;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else return -0.06419184008202619;  // std dev = 6.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.956745
   AUC PR    = 0.591831
   CLL	      = -0.249126
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 0.588 seconds
Total inference time: 0.455 seconds
AUC ROC: 0.956745


Results scoring model
   AUC ROC   = 0.95875
   AUC PR    = 0.953338
   CLL	      = -0.239749
   Precision = 0.869565 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.930233


Total scoring time: 0.377 seconds
Parameter learned model CLL: -0.239749


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.535, 3, 11], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 9], 'true,false': [1.535, 3, 11], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.535, 3, 11], 'false': [1.49e-08, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [3.33e-08, 0, 9], 'true,false': [1.535, 3, 11], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.535, 3, 11], 'false': [9.13e-09, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.83e-08, 0, 9], 'true,false': [1.535, 3, 11], 'false': [7.45e-09, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.535, 3, 11], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 9], 'true,false': [1.535, 3, 11], 'false': [3.73e-09, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.535, 3, 11], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.535, 3, 11], 'false': [6.45e-09, 17, 0]}]]
[{'': [0.11342155009451807, -3.2653618371328133e-18], 'true': [-2.9605947323337506e-16, 0.16836734693877536]}, {'': [0.10962376089733608, 0.0], 'true': [9.868649107779169e-17, 0.16836734693877556]}, {'': [0.10601561124699914, 1.3061447348531253e-17], 'true': [-1.4802973661668753e-16, 0.16836734693877556]}, {'': [0.1043233950698264, 0.0], 'true': [1.2335811384723962e-16, 0.16836734693877556]}, {'': [0.10376379574932999, 4.89804275569922e-18], 'true': [-3.700743415417188e-17, 0.1683673469387755]}, {'': [0.10359748347044774, 3.2653618371328133e-18], 'true': [3.700743415417188e-17, 0.16836734693877545]}, {'': [0.1035498790773801, -2.44902137784961e-18], 'true': [-2.4671622769447922e-17, 0.1683673469387755]}, {'': [0.1035319048553938, 8.163404592832033e-19], 'true': [6.1679056923619804e-18, 0.16836734693877556]}, {'': [0.10351513294603602, -8.163404592832033e-19], 'true': [-3.0839528461809902e-18, 0.16836734693877548]}, {'': [0.10349165680321037, 2.44902137784961e-18], 'true': [0.0, 0.1683673469387755]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A) )
%   | | then return 0.22373365448410584;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A) )
%   | | then return 0.1888683221574974;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.47387803586054894;  // std dev = 0.309, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.005700294371743693;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.10159632948783628;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.366835431510599;  // std dev = 0.319, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.004646387791043982;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09269127618926094;  // std dev = 9.13e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( ta(F, D, G) )
%   | | | then return 0.24567933978782325;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.0854144761327384;  // std dev = 0.394, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(H, A) )
%   | | | then return 0.35973590851269693;  // std dev = 0.753, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.24567933978782325;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.25219707969265365;  // std dev = 0.257, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(F, A) )
%   | | | then return -0.02476770673214434;  // std dev = 0.818, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2113355892313301;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07877675473109173;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( ta(F, D, G) )
%   | | | then return 0.1682333726837596;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.08175101094008953;  // std dev = 0.354, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(H, A) )
%   | | | then return 0.26430093909029856;  // std dev = 0.732, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1682333726837596;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( ta(F, D, G) )
%   | | | then return 0.14600068449409248;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.06783405743755498;  // std dev = 0.354, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( ta(H, A, I) )
%   | | | then return 0.21043673017243536;  // std dev = 0.180, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14099492654138385;  // std dev = 0.708, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.06842697784420272;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.16882970932553662;  // std dev = 0.187, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(F, A) )
%   | | | then return -0.053839049375327686;  // std dev = 0.766, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.13705625412524025;  // std dev = 0.000592, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06419184008202619;  // std dev = 6.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.967742
   AUC PR    = 0.481499
   CLL	      = -0.228982
   Precision = 0.369565 at threshold = 0.5
   Recall    = 0.85
   F1        = 0.515152


Total learning time: 1.665 seconds
Total inference time: 0.481 seconds
AUC ROC: 0.967742


Results scoring model
   AUC ROC   = 0.99875
   AUC PR    = 0.99881
   CLL	      = -0.13896
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.974359


Total scoring time: 0.407 seconds
Refined model CLL: -0.13896


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.967742
   AUC PR    = 0.481499
   CLL	      = -0.228982
   Precision = 0.369565 at threshold = 0.5
   Recall    = 0.85
   F1        = 0.515152


Total learning time: 3.037 seconds
Total inference time: 0.481 seconds
AUC ROC: 0.967742
Total revision time: 3.037
Best scored revision CLL: -0.13896


Dataset: 1_imdb_uwcse, Fold: 2, Type: Transfer (trRDN-B), Time: 00:04:20
{'AUC ROC': 0.967742, 'AUC PR': 0.481499, 'CLL': -0.228982, 'Precision': [0.369565, 0.5], 'Recall': 0.85, 'F1': 0.515152, 'Learning time': 3.037, 'Inference time': 0.481, 'parameter_20': {'AUC ROC': 0.956745, 'AUC PR': 0.591831, 'CLL': -0.249126, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 0.588, 'Inference time': 0.455}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.700254198257407;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5923177366262469;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.46630862278666463;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else return -0.11231637819360638;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.35238367554550715;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2649114470714586;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else return -0.09269127618926093;  // std dev = 1.18e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2019183066567999;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else return -0.08518475138839686;  // std dev = 1.18e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.15683608398089766;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else return -0.07877675473109179;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.12403084444870505;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else return -0.07324622576333704;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.09961333834675083;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else return -0.06842697784420275;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.08103171036354961;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else return -0.06419184008202619;  // std dev = 7.45e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 0.956745
   AUC PR    = 0.591831
   CLL	      = -0.271581
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 0.627 seconds
Total inference time: 0.458 seconds
AUC ROC: 0.956745


Results scoring model
   AUC ROC   = 0.9616
   AUC PR    = 0.953338
   CLL	      = -0.221272
   Precision = 0.892857 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.943396


Total scoring time: 0.376 seconds
Parameter learned model CLL: -0.221272


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.589, 3, 16], 'false': [1.05e-08, 22, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 9], 'true,false': [1.589, 3, 16], 'false': [0.0, 22, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.589, 3, 16], 'false': [1.29e-08, 22, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [3.33e-08, 0, 9], 'true,false': [1.589, 3, 16], 'false': [0.0, 22, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.589, 3, 16], 'false': [1.18e-08, 22, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.83e-08, 0, 9], 'true,false': [1.589, 3, 16], 'false': [1.18e-08, 22, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.589, 3, 16], 'false': [0.0, 22, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 9], 'true,false': [1.589, 3, 16], 'false': [0.0, 22, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.589, 3, 16], 'false': [0.0, 22, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.589, 3, 16], 'false': [7.45e-09, 22, 0]}]]
[{'': [0.09566326530612335, 5.046468293750712e-18], 'true': [-2.9605947323337506e-16, 0.13296398891966754]}, {'': [0.09375212610047885, -2.523234146875356e-18], 'true': [9.868649107779169e-17, 0.13296398891966763]}, {'': [0.09195547629862978, 7.569702440626067e-18], 'true': [-1.4802973661668753e-16, 0.13296398891966763]}, {'': [0.09115077533107685, -3.784851220313033e-18], 'true': [1.2335811384723962e-16, 0.13296398891966743]}, {'': [0.09090469665870302, 6.308085367188389e-18], 'true': [-3.700743415417188e-17, 0.13296398891966754]}, {'': [0.09084412624271196, 6.308085367188389e-18], 'true': [3.700743415417188e-17, 0.13296398891966757]}, {'': [0.09083643067703316, 0.0], 'true': [-2.4671622769447922e-17, 0.1329639889196676]}, {'': [0.0908397600433515, -6.30808536718839e-19], 'true': [6.1679056923619804e-18, 0.13296398891966757]}, {'': [0.09084126252455353, -3.784851220313033e-18], 'true': [-3.0839528461809902e-18, 0.13296398891966757]}, {'': [0.09083767073124767, 2.523234146875356e-18], 'true': [0.0, 0.13296398891966757]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.7325059424950983;  // std dev = 0.098, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.07373365448410585;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A) )
%   | | then return 0.18861084568780614;  // std dev = 1.033, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.5537562066013323;  // std dev = 0.006, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.11231637819360638;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A) )
%   | | then return 0.1559697228783831;  // std dev = 1.027, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.41632180455003537;  // std dev = 0.006, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A) )
%   | | then return 0.12654410990618364;  // std dev = 1.023, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.31990487841045034;  // std dev = 0.005, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.09269127618926093;  // std dev = 1.18e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.2533853441234095;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3635096236925321;  // std dev = 0.270, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(G, A) )
%   | | | then return -0.019533096839056463;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2558587686014065;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.08518475138839686;  // std dev = 1.18e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( ta(F, D, G) )
%   | | | then return 0.20907729956785662;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.028168033431319572;  // std dev = 0.475, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.338377718257048;  // std dev = 0.507, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.05159347397450431;  // std dev = 0.389, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07877675473109179;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A) )
%   | | then return 0.055403011779717695;  // std dev = 0.897, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.17845317385071446;  // std dev = 0.082, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.07324622576333704;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( ta(F, D, G) )
%   | | | then return 0.15212569749130678;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.042738336352037;  // std dev = 0.457, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.26138953684012456;  // std dev = 0.489, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.020687813369104118;  // std dev = 0.377, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.06842697784420275;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A) )
%   | | then return 0.02175931302222145;  // std dev = 0.825, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.13871519779867428;  // std dev = 0.115, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.06419184008202619;  // std dev = 7.45e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 0.961804
   AUC PR    = 0.4357
   CLL	      = -0.223445
   Precision = 0.369565 at threshold = 0.5
   Recall    = 0.85
   F1        = 0.515152


Total learning time: 1.885 seconds
Total inference time: 0.477 seconds
AUC ROC: 0.961804


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.132223
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.96
   F1        = 0.979592


Total scoring time: 0.398 seconds
Refined model CLL: -0.132223


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.961804
   AUC PR    = 0.4357
   CLL	      = -0.223445
   Precision = 0.369565 at threshold = 0.5
   Recall    = 0.85
   F1        = 0.515152


Total learning time: 3.286 seconds
Total inference time: 0.477 seconds
AUC ROC: 0.961804
Total revision time: 3.286
Best scored revision CLL: -0.132223


Dataset: 1_imdb_uwcse, Fold: 2, Type: Transfer (trRDN-B), Time: 00:04:25
{'AUC ROC': 0.961804, 'AUC PR': 0.4357, 'CLL': -0.223445, 'Precision': [0.369565, 0.5], 'Recall': 0.85, 'F1': 0.515152, 'Learning time': 3.286, 'Inference time': 0.477, 'parameter_25': {'AUC ROC': 0.956745, 'AUC PR': 0.591831, 'CLL': -0.271581, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 0.627, 'Inference time': 0.458}}


Starting fold 3

Target train facts examples: 2225
Target train pos examples: 104
Target train neg examples: 3988

Target test facts examples: 162
Target test pos	 examples: 9
Target test neg examples: 91

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.46125983910675533;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3488463256948422;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.26212705508354184;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19945264276423433;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15451336627983223;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12179491558002796;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09745354768081688;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07895233872555124;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.961538
   AUC PR    = 0.5625
   CLL	      = -0.178531
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 0.562 seconds
Total inference time: 0.362 seconds
AUC ROC: 0.961538


Results scoring model
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.302866
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.355 seconds
Parameter learned model CLL: -0.302866


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}]]
[{'': [0.1388888888888887, 0.0], 'true': [nan, 0.1388888888888887]}, {'': [0.13888888888888884, 0.0], 'true': [nan, 0.13888888888888884]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}, {'': [0.13888888888888898, 0.0], 'true': [nan, 0.13888888888888898]}, {'': [0.13888888888888884, 0.0], 'true': [nan, 0.13888888888888884]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}, {'': [0.1388888888888889, 0.0], 'true': [nan, 0.1388888888888889]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}, {'': [0.13888888888888892, 0.0], 'true': [nan, 0.13888888888888892]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.46125983910675533;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.3488463256948422;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.26212705508354184;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.19945264276423433;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.15451336627983223;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.12179491558002796;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.09745354768081688;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.07895233872555124;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.961538
   AUC PR    = 0.5625
   CLL	      = -0.178531
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 0.529 seconds
Total inference time: 0.324 seconds
AUC ROC: 0.961538


Results scoring model
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.302866
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.341 seconds
Refined model CLL: -0.302866


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.961538
   AUC PR    = 0.5625
   CLL	      = -0.178531
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 1.7870000000000001 seconds
Total inference time: 0.362 seconds
AUC ROC: 0.961538
Total revision time: 1.7870000000000001
Best scored revision CLL: -0.302866


Dataset: 1_imdb_uwcse, Fold: 3, Type: Transfer (trRDN-B), Time: 00:04:28
{'AUC ROC': 0.961538, 'AUC PR': 0.5625, 'CLL': -0.178531, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 1.7870000000000001, 'Inference time': 0.362, 'parameter_5': {'AUC ROC': 0.961538, 'AUC PR': 0.5625, 'CLL': -0.178531, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 0.562, 'Inference time': 0.362}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.7331489350995122;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5170719622367217;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.6189976143448208;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41257245288266;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.48512875154616486;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3151786576185065;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.3656822536044497;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.10159632948783628;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.23676009386434207;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.27560196347331434;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1780694542720751;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.2115828790301978;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.08518475138839687;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13513671764223453;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.16608044254560705;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.103671751136855;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.13303193637503496;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.07324622576333704;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.08034833303035915;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.10839224498101008;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.06282214181758172;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.08956128580326395;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.957265
   AUC PR    = 0.534954
   CLL	      = -0.186478
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 0.605 seconds
Total inference time: 0.348 seconds
AUC ROC: 0.957265


Results scoring model
   AUC ROC   = 0.92
   AUC PR    = 0.868006
   CLL	      = -0.297158
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.358 seconds
Parameter learned model CLL: -0.297158


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.866, 1, 3], 'true,false': [0.935, 1, 7], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.866, 1, 3], 'true,false': [0.935, 1, 7], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.866, 1, 3], 'true,false': [0.935, 1, 7], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.866, 1, 3], 'true,false': [0.935, 1, 7], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.866, 1, 3], 'true,false': [0.935, 1, 7], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.866, 1, 3], 'true,false': [0.935, 1, 7], 'false': [2.63e-09, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.866, 1, 3], 'true,false': [0.935, 1, 7], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.866, 1, 3], 'true,false': [0.935, 1, 7], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.866, 1, 3], 'true,false': [0.935, 1, 7], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.866, 1, 3], 'true,false': [0.935, 1, 7], 'false': [0.0, 8, 0]}]]
[{'': [0.1388888888888887, -6.938893903907228e-18], 'true': [0.18750000000000006, 0.109375]}, {'': [0.13772529745725812, 0.0], 'true': [0.18750000000000006, 0.10937499999999994]}, {'': [0.13658653699461057, -1.734723475976807e-18], 'true': [0.18750000000000003, 0.10937500000000003]}, {'': [0.1359834696016691, 0.0], 'true': [0.18750000000000003, 0.109375]}, {'': [0.13575193129660446, 0.0], 'true': [0.1875, 0.109375]}, {'': [0.13566625547533742, 8.673617379884035e-19], 'true': [0.1875, 0.109375]}, {'': [0.13562944758019901, 0.0], 'true': [0.1875, 0.109375]}, {'': [0.13560822677271558, 0.0], 'true': [0.1875, 0.109375]}, {'': [0.1355914357772213, 0.0], 'true': [0.18749999999999997, 0.109375]}, {'': [0.13557555151579714, 0.0], 'true': [0.1875, 0.109375]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then return 0.7401919213324014;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.42757709712051506;  // std dev = 1.121, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then return 0.5770453436263576;  // std dev = 0.093, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.341979271222647;  // std dev = 1.114, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.2456834606018218;  // std dev = 1.086, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.452482591252893;  // std dev = 0.157, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.10159632948783628;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.1859344910100086;  // std dev = 1.085, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.34619983161339124;  // std dev = 0.146, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( ta(C, A, D) )
%   | then return 0.2853294923820557;  // std dev = 0.170, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.12843940586088878;  // std dev = 1.070, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.08518475138839687;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.09721846728957456;  // std dev = 1.071, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.2322964007373894;  // std dev = 0.152, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( ta(C, A, D) )
%   | then return 0.203078735228812;  // std dev = 0.165, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.0652672292325418;  // std dev = 1.062, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.022892877723003385;  // std dev = 0.674, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.2357950823841861;  // std dev = 0.257, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.10803989792617705;  // std dev = 0.774, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( ta(C, A, D) )
%   | then return 0.16092258059586936;  // std dev = 0.161, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.024194287415043186;  // std dev = 1.043, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.957875
   AUC PR    = 0.486823
   CLL	      = -0.188636
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 1.305 seconds
Total inference time: 0.386 seconds
AUC ROC: 0.957875


Results scoring model
   AUC ROC   = 0.995
   AUC PR    = 0.995455
   CLL	      = -0.234601
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.357 seconds
Refined model CLL: -0.234601


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.957875
   AUC PR    = 0.486823
   CLL	      = -0.188636
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 2.625 seconds
Total inference time: 0.386 seconds
AUC ROC: 0.957875
Total revision time: 2.625
Best scored revision CLL: -0.234601


Dataset: 1_imdb_uwcse, Fold: 3, Type: Transfer (trRDN-B), Time: 00:04:31
{'AUC ROC': 0.957875, 'AUC PR': 0.486823, 'CLL': -0.188636, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 2.625, 'Inference time': 0.386, 'parameter_10': {'AUC ROC': 0.957265, 'AUC PR': 0.534954, 'CLL': -0.186478, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 0.605, 'Inference time': 0.348}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.6763307532813304;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.6045267906174348;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.5728505077589574;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.12544463852839138;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4749335700127619;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.45250734201965837;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.11231637819360639;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3584548159137827;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.34273989085368034;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.10159632948783627;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2697478132793615;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.2573771265051454;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.09269127618926097;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2062525881598365;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.19529825339842236;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.16095555079641394;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.1506364669407769;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.07877675473109173;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.12802275604229368;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.11808890552787815;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.10349083403071088;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.09389442014327226;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.08478440748267765;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.07554408412491892;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.0641918400820262;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.965812
   AUC PR    = 0.668512
   CLL	      = -0.176032
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 0.608 seconds
Total inference time: 0.373 seconds
AUC ROC: 0.965812


Results scoring model
   AUC ROC   = 0.906667
   AUC PR    = 0.847848
   CLL	      = -0.302254
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.388 seconds
Parameter learned model CLL: -0.302254


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.926, 1, 6], 'true,false': [1.279, 2, 9], 'false': [0.0, 12, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.926, 1, 6], 'true,false': [1.279, 2, 9], 'false': [0.0, 12, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.926, 1, 6], 'true,false': [1.279, 2, 9], 'false': [0.0, 12, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.926, 1, 6], 'true,false': [1.279, 2, 9], 'false': [0.0, 12, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.926, 1, 6], 'true,false': [1.279, 2, 9], 'false': [3.73e-09, 12, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.926, 1, 6], 'true,false': [1.279, 2, 9], 'false': [3.73e-09, 12, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.926, 1, 6], 'true,false': [1.279, 2, 9], 'false': [0.0, 12, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.926, 1, 6], 'true,false': [1.279, 2, 9], 'false': [3.73e-09, 12, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.926, 1, 6], 'true,false': [1.279, 2, 9], 'false': [2.63e-09, 12, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.926, 1, 6], 'true,false': [1.279, 2, 9], 'false': [0.0, 12, 0]}]]
[{'': [0.1388888888888886, -6.938893903907228e-18], 'true': [0.12244897959183662, 0.14876033057851226]}, {'': [0.13876659775953148, 0.0], 'true': [0.12244897959183668, 0.14876033057851246]}, {'': [0.13864766337089762, 0.0], 'true': [0.12244897959183668, 0.14876033057851235]}, {'': [0.1385868293706159, 0.0], 'true': [0.12244897959183672, 0.14876033057851243]}, {'': [0.1385645076936554, 1.1564823173178713e-18], 'true': [0.12244897959183679, 0.14876033057851237]}, {'': [0.138556656440654, 1.1564823173178713e-18], 'true': [0.12244897959183675, 0.1487603305785124]}, {'': [0.13855344479003578, -1.1564823173178713e-18], 'true': [0.12244897959183675, 0.14876033057851237]}, {'': [0.13855159058593264, 1.1564823173178713e-18], 'true': [0.12244897959183673, 0.1487603305785124]}, {'': [0.1385500243901182, 5.782411586589357e-19], 'true': [0.12244897959183673, 0.14876033057851237]}, {'': [0.13854843030385833, -5.782411586589357e-19], 'true': [0.12244897959183673, 0.1487603305785124]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, D), tempadvisedby(D, E) )
%   | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.5348917811753146;  // std dev = 0.869, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.7310371889342245;  // std dev = 0.056, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.16653882456488175;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.12544463852839138;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.4191138738884243;  // std dev = 0.864, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.567141304681001;  // std dev = 0.071, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.1420942428155648;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.11231637819360639;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, D), tempadvisedby(D, E) )
%   | | then return 0.2953280233272445;  // std dev = 0.840, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.43738263415055467;  // std dev = 0.123, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.11914890490746428;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.10159632948783627;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then if ( publication(E, A), publication(E, B) )
%   | | then return 0.3911650092371515;  // std dev = 0.114, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.34251116966754785;  // std dev = 0.085, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | then return 0.36343806804644246;  // std dev = 0.064, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.07867198173759357;  // std dev = 0.995, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.15513997058512866;  // std dev = 0.481, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.09269127618926097;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( ta(C, A, D) )
%   | then if ( publication(E, A), publication(E, B) )
%   | | then return 0.30432546926685716;  // std dev = 0.102, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.27040963851504807;  // std dev = 0.075, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | then return 0.2845665179821602;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.06241184056398342;  // std dev = 0.998, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.12265595230223329;  // std dev = 0.476, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then if ( publication(E, A), publication(E, B) )
%   | | then return 0.2448141445932391;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.22071477999151864;  // std dev = 0.066, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(F, B), publication(G, F) )
%   | | then return -0.020474027896107378;  // std dev = 0.663, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.2634162604035206;  // std dev = 0.097, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.06303964935240765;  // std dev = 0.828, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.07877675473109173;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( ta(C, A, D) )
%   | then if ( ta(C, E, F), tempadvisedby(E, G) )
%   | | then return 0.18259368337318185;  // std dev = 0.053, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.20117244147847402;  // std dev = 0.080, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | then return 0.2206396504705844;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(K, B) )
%   | | | then return 0.03197190600959292;  // std dev = 0.981, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05904552186603788;  // std dev = 0.444, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, D), ta(E, D, F) )
%   | | then if ( ta(E, G, H), tempadvisedby(G, I) )
%   | | | then return 0.166093227528425;  // std dev = 0.076, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3164460881876412;  // std dev = 0.470, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.10040501882175283;  // std dev = 0.737, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.1964663421705874;  // std dev = 0.084, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then return 0.17837293321241462;  // std dev = 0.109, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(F, A), publication(F, B) )
%   | | then return -0.07257571778729548;  // std dev = 0.573, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.1543469746968233;  // std dev = 0.110, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.03299514909035375;  // std dev = 0.759, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.0641918400820262;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.945055
   AUC PR    = 0.518872
   CLL	      = -0.229197
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 3.187 seconds
Total inference time: 0.391 seconds
AUC ROC: 0.945055


Results scoring model
   AUC ROC   = 0.995556
   AUC PR    = 0.995694
   CLL	      = -0.180309
   Precision = 0.933333 at threshold = 0.5
   Recall    = 0.933333
   F1        = 0.933333


Total scoring time: 0.426 seconds
Refined model CLL: -0.180309


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.945055
   AUC PR    = 0.518872
   CLL	      = -0.229197
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 4.609 seconds
Total inference time: 0.391 seconds
AUC ROC: 0.945055
Total revision time: 4.609
Best scored revision CLL: -0.180309


Dataset: 1_imdb_uwcse, Fold: 3, Type: Transfer (trRDN-B), Time: 00:04:37
{'AUC ROC': 0.945055, 'AUC PR': 0.518872, 'CLL': -0.229197, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 4.609, 'Inference time': 0.391, 'parameter_15': {'AUC ROC': 0.965812, 'AUC PR': 0.668512, 'CLL': -0.176032, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 0.608, 'Inference time': 0.373}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.6081489350995123;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.6302322013528495;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5170719622367218;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4930252128087158;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.41257245288266;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.11231637819360636;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3713223124091624;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.3151786576185065;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.10159632948783628;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2802444957903803;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.23676009386434194;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.09269127618926096;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.215871968382499;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.17806945427207505;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.08518475138839689;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17024717710075593;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.13513671764223462;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.07877675473109172;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13713633723655955;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.10367175113685499;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.11243535096764834;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.08034833303035924;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.06842697784420272;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.09352720014861136;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.06282214181758183;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.0641918400820262;  // std dev = 4.56e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.965812
   AUC PR    = 0.668512
   CLL	      = -0.16735
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 0.631 seconds
Total inference time: 0.36 seconds
AUC ROC: 0.965812


Results scoring model
   AUC ROC   = 0.9
   AUC PR    = 0.85352
   CLL	      = -0.334374
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total scoring time: 0.383 seconds
Parameter learned model CLL: -0.334374


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.943, 1, 8], 'true,false': [1.732, 4, 12], 'false': [0.0, 15, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.943, 1, 8], 'true,false': [1.732, 4, 12], 'false': [5.27e-09, 15, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.943, 1, 8], 'true,false': [1.732, 4, 12], 'false': [9.13e-09, 15, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.943, 1, 8], 'true,false': [1.732, 4, 12], 'false': [0.0, 15, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.943, 1, 8], 'true,false': [1.732, 4, 12], 'false': [5.27e-09, 15, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.943, 1, 8], 'true,false': [1.732, 4, 12], 'false': [0.0, 15, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.943, 1, 8], 'true,false': [1.732, 4, 12], 'false': [5.27e-09, 15, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.943, 1, 8], 'true,false': [1.732, 4, 12], 'false': [3.73e-09, 15, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.943, 1, 8], 'true,false': [1.732, 4, 12], 'false': [3.73e-09, 15, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.943, 1, 8], 'true,false': [1.732, 4, 12], 'false': [4.56e-09, 15, 0]}]]
[{'': [0.16000000000000014, -1.4802973661668754e-17], 'true': [0.09876543209876527, 0.18749999999999978]}, {'': [0.15850588278631064, 1.8503717077085942e-18], 'true': [0.09876543209876543, 0.18749999999999994]}, {'': [0.15704685332752302, 5.551115123125783e-18], 'true': [0.09876543209876543, 0.18749999999999992]}, {'': [0.15628180169339287, 0.0], 'true': [0.0987654320987655, 0.18750000000000003]}, {'': [0.15599121735133878, 1.8503717077085942e-18], 'true': [0.09876543209876544, 0.18750000000000003]}, {'': [0.15588480408439065, 0.0], 'true': [0.0987654320987654, 0.18750000000000003]}, {'': [0.1558395798568803, 1.8503717077085942e-18], 'true': [0.09876543209876544, 0.1875]}, {'': [0.15581357556721429, 9.251858538542971e-19], 'true': [0.0987654320987654, 0.18750000000000003]}, {'': [0.15579277003186845, 9.251858538542971e-19], 'true': [0.09876543209876541, 0.1875]}, {'': [0.15577277681543414, 1.3877787807814458e-18], 'true': [0.09876543209876543, 0.18749999999999997]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(F, A) )
%   | | then if ( publication(F, B) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, A) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(F, A) )
%   | | then if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.5312373852985677;  // std dev = 0.817, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.21240131603462903;  // std dev = 1.117, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(J, B), publication(K, B) )
%   | | | then return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(F, A) )
%   | | then if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.4278337297263228;  // std dev = 0.802, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1779994859542799;  // std dev = 1.120, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(J, B), publication(K, B) )
%   | | | then return 0.36236334632262296;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360636;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( ta(C, A, D), publication(E, A) )
%   | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(F, A) )
%   | | then if ( publication(F, B) )
%   | | | then return 0.34102137151526923;  // std dev = 0.751, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.13616193527008086;  // std dev = 1.143, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( publication(G, B), tempadvisedby(H, B) )
%   | | | then return 0.2807538536965855;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4175135841583099;  // std dev = 1.05e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783628;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then return 0.16189798342578135;  // std dev = 1.023, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( publication(E, B) )
%   | | then if ( publication(E, F), tempadvisedby(F, G) )
%   | | | then return 0.2022323453661934;  // std dev = 0.649, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.41954913896437657;  // std dev = 0.408, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.16871702324436288;  // std dev = 0.862, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.09269127618926096;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( ta(C, A, D), publication(E, A) )
%   | then return 0.2637983314687225;  // std dev = 0.060, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(F, B), publication(G, F) )
%   | | then return 0.09015309145964588;  // std dev = 1.008, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(H, A) )
%   | | | then return 0.11267493247543515;  // std dev = 1.158, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.29393127494521526;  // std dev = 0.169, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.08518475138839689;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, A) )
%   | then return 0.21592794803438603;  // std dev = 0.052, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(F, B), publication(G, F) )
%   | | then return 0.06791156187781586;  // std dev = 1.008, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(H, A) )
%   | | | then return 0.08724530731015101;  // std dev = 1.158, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.23797809362847508;  // std dev = 0.152, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.07877675473109172;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), hasposition(B, D) )
%   | then if ( publication(C, E), ta(F, E, G) )
%   | | then if ( ta(H, A, G), tempadvisedby(I, B) )
%   | | | then return 0.18135549674274734;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3601016251323981;  // std dev = 0.490, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.03046055547618361;  // std dev = 0.993, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( publication(J, B) )
%   | | then return 0.12368914623083284;  // std dev = 0.770, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.011970403493362128;  // std dev = 0.436, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.26772559006257207;  // std dev = 0.279, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.04763088405600496;  // std dev = 0.502, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( publication(G, A) )
%   | | then if ( publication(G, H), ta(I, H, J) )
%   | | | then return 0.2958222485951311;  // std dev = 0.448, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.38821116552991003;  // std dev = 0.114, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( tempadvisedby(K, B), publication(L, B) )
%   | | | then return 0.05387075282786761;  // std dev = 0.764, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.16406445793754723;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then return 0.042741267654389216;  // std dev = 0.981, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( publication(E, A) )
%   | | then if ( publication(E, F), ta(G, F, H) )
%   | | | then return 0.1958584334255672;  // std dev = 0.439, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1577792202631464;  // std dev = 0.511, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.16568314261078007;  // std dev = 0.133, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.0641918400820262;  // std dev = 4.56e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.964591
   AUC PR    = 0.57542
   CLL	      = -0.197447
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 2.856 seconds
Total inference time: 0.395 seconds
AUC ROC: 0.964591


Results scoring model
   AUC ROC   = 0.99625
   AUC PR    = 0.99631
   CLL	      = -0.201144
   Precision = 0.952381 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.97561


Total scoring time: 0.409 seconds
Refined model CLL: -0.201144


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.964591
   AUC PR    = 0.57542
   CLL	      = -0.197447
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 4.279 seconds
Total inference time: 0.395 seconds
AUC ROC: 0.964591
Total revision time: 4.279
Best scored revision CLL: -0.201144


Dataset: 1_imdb_uwcse, Fold: 3, Type: Transfer (trRDN-B), Time: 00:04:43
{'AUC ROC': 0.964591, 'AUC PR': 0.57542, 'CLL': -0.197447, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 4.279, 'Inference time': 0.395, 'parameter_20': {'AUC ROC': 0.965812, 'AUC PR': 0.668512, 'CLL': -0.16735, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 0.631, 'Inference time': 0.36}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.5423594614153018;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   else return -0.1418510649004878;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.657810671461647;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.4628301985635589;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5123505661168763;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.3730737957994104;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3853022650638632;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.28810924119588815;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   else return -0.1015963294878363;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2920349799096258;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.21756773060600584;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   else return -0.09269127618926094;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.22699179224124724;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.1632377324922266;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1812058810760637;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.12272869783300001;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   else return -0.07877675473109173;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.14804913120500338;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.09277405448852614;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.12328872166165511;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.0705605562523474;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   else return -0.06842697784420272;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.10427374705508957;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.05397171109115204;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   else return -0.0641918400820262;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 0.965812
   AUC PR    = 0.668512
   CLL	      = -0.161599
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 0.684 seconds
Total inference time: 0.362 seconds
AUC ROC: 0.965812


Results scoring model
   AUC ROC   = 0.9072
   AUC PR    = 0.875495
   CLL	      = -0.340405
   Precision = 0.78125 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.877193


Total scoring time: 0.396 seconds
Parameter learned model CLL: -0.340405


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.961, 1, 12], 'true,false': [2.026, 6, 13], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.961, 1, 12], 'true,false': [2.026, 6, 13], 'false': [7.45e-09, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.961, 1, 12], 'true,false': [2.026, 6, 13], 'false': [1.18e-08, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.961, 1, 12], 'true,false': [2.026, 6, 13], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.961, 1, 12], 'true,false': [2.026, 6, 13], 'false': [7.45e-09, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.961, 1, 12], 'true,false': [2.026, 6, 13], 'false': [5.27e-09, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.961, 1, 12], 'true,false': [2.026, 6, 13], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.961, 1, 12], 'true,false': [2.026, 6, 13], 'false': [3.73e-09, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.961, 1, 12], 'true,false': [2.026, 6, 13], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.961, 1, 12], 'true,false': [2.026, 6, 13], 'false': [3.73e-09, 18, 0]}]]
[{'': [0.1708984375000011, -9.25185853854297e-18], 'true': [0.07100591715976314, 0.21606648199445966]}, {'': [0.16630583656205916, 3.0839528461809902e-18], 'true': [0.07100591715976333, 0.21606648199445994]}, {'': [0.16181464181870983, 7.709882115452476e-18], 'true': [0.07100591715976351, 0.21606648199445994]}, {'': [0.15941422276521217, -1.5419764230904951e-18], 'true': [0.0710059171597632, 0.2160664819944599]}, {'': [0.15847323172084807, 3.0839528461809902e-18], 'true': [0.07100591715976336, 0.2160664819944599]}, {'': [0.15811604871514662, 1.5419764230904951e-18], 'true': [0.07100591715976326, 0.21606648199445985]}, {'': [0.15796046785959347, -7.709882115452476e-19], 'true': [0.07100591715976336, 0.21606648199445985]}, {'': [0.15787260753445134, 7.709882115452476e-19], 'true': [0.07100591715976333, 0.21606648199445985]}, {'': [0.15780625651334826, 0.0], 'true': [0.07100591715976333, 0.21606648199445985]}, {'': [0.1577459623165587, 7.709882115452476e-19], 'true': [0.07100591715976332, 0.21606648199445985]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(F, B), publication(G, F) )
%   | | then if ( ta(H, F, I) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( publication(J, A) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.1418510649004878;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, A) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(F, A), publication(F, B) )
%   | | then if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.7389671604504995;  // std dev = 0.068, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4879531292107437;  // std dev = 0.802, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(J, B), publication(K, J) )
%   | | | then return 0.08320549123154841;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.5019629926101961;  // std dev = 1.412, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.3538435028134052;  // std dev = 0.693, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.6183962820507717;  // std dev = 0.166, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5969364668028344;  // std dev = 0.149, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(F, B), publication(G, F) )
%   | | then return 0.07131940340711884;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( publication(H, A) )
%   | | | then return 0.27352807071679075;  // std dev = 1.257, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.6082323602906875;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), ta(D, A, E) )
%   | then return 0.4473074203252973;  // std dev = 0.109, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(F, B), publication(F, A) )
%   | | then if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.44153566488926316;  // std dev = 0.094, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.29222736553083783;  // std dev = 0.747, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(J, A) )
%   | | | then return 0.044495843071535965;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.31350363434517164;  // std dev = 1.073, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.1015963294878363;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), ta(D, A, E) )
%   | then return 0.34151221041013635;  // std dev = 0.099, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(F, B), publication(G, F) )
%   | | then if ( ta(H, F, I) )
%   | | | then return 0.3173251519744237;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.033302983868898205;  // std dev = 1.093, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( publication(J, A) )
%   | | | then return 0.15273389493210596;  // std dev = 1.204, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.38181586032887355;  // std dev = 1.49e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.09269127618926094;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(D, A) )
%   | then if ( publication(C, E), tempadvisedby(E, F) )
%   | | then if ( ta(G, A, H) )
%   | | | then return 0.2642503981868886;  // std dev = 0.066, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.16876178158692298;  // std dev = 0.558, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(I, B), ta(J, I, K) )
%   | | | then return 0.26844748249449213;  // std dev = 0.110, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.44109793498517885;  // std dev = 0.273, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(L, A) )
%   | | then return -0.0685313247450136;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(M, B), publication(N, M) )
%   | | | then return 0.0016041635600152204;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.29657444525125654;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(D, A) )
%   | then if ( publication(C, E), tempadvisedby(E, F) )
%   | | then if ( ta(G, A, H) )
%   | | | then return 0.21630506544748695;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.13045019755539838;  // std dev = 0.555, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(I, B), ta(J, I, K) )
%   | | | then return 0.21976459881748353;  // std dev = 0.097, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.34247611436511305;  // std dev = 0.248, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(L, A) )
%   | | then return -0.052174891302166716;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(M, B), publication(N, M) )
%   | | | then return 0.0013045528280303254;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.23862400059627076;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.07877675473109173;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(C, D) )
%   | | then return 0.2490952727470177;  // std dev = 0.126, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(E, B), publication(F, E) )
%   | | | then return 0.08716821781362004;  // std dev = 0.499, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.19776605367603986;  // std dev = 0.126, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( ta(G, A, H) )
%   | | then if ( ta(G, I, J), publication(K, I) )
%   | | | then return 0.04004706529222495;  // std dev = 0.502, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.33626272110630506;  // std dev = 0.479, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(L, B), publication(M, B) )
%   | | | then return -0.05890826624801179;  // std dev = 0.571, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.07905273035144322;  // std dev = 0.867, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), hasposition(B, D) )
%   | then if ( publication(C, E), ta(F, E, G) )
%   | | then if ( sameperson(A, E) )
%   | | | then return 0.15460477599559475;  // std dev = 0.062, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.4414953714410708;  // std dev = 0.221, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(H, B), publication(C, B) )
%   | | | then return 0.10209132323079424;  // std dev = 0.519, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.15642312861702612;  // std dev = 0.491, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( ta(I, A, J) )
%   | | then if ( ta(I, K, L), publication(M, K) )
%   | | | then return -0.1070964595389438;  // std dev = 0.366, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2832227354671421;  // std dev = 0.462, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.014551169510625971;  // std dev = 0.559, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.06842697784420272;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(C, A), ta(E, D, F) )
%   | | | then return 0.14992480965876737;  // std dev = 0.102, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.04173309737435296;  // std dev = 1.014, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | else return 0.18517307969723845;  // std dev = 0.120, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.012193148437049838;  // std dev = 0.758, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.0641918400820262;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 0.962149
   AUC PR    = 0.527169
   CLL	      = -0.198337
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 5.966 seconds
Total inference time: 0.41 seconds
AUC ROC: 0.962149


Results scoring model
   AUC ROC   = 0.9984
   AUC PR    = 0.998431
   CLL	      = -0.185975
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.96
   F1        = 0.979592


Total scoring time: 0.495 seconds
Refined model CLL: -0.185975


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.962149
   AUC PR    = 0.527169
   CLL	      = -0.198337
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 7.541 seconds
Total inference time: 0.41 seconds
AUC ROC: 0.962149
Total revision time: 7.541
Best scored revision CLL: -0.185975


Dataset: 1_imdb_uwcse, Fold: 3, Type: Transfer (trRDN-B), Time: 00:04:52
{'AUC ROC': 0.962149, 'AUC PR': 0.527169, 'CLL': -0.198337, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 7.541, 'Inference time': 0.41, 'parameter_25': {'AUC ROC': 0.965812, 'AUC PR': 0.668512, 'CLL': -0.161599, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 0.684, 'Inference time': 0.362}}


Starting fold 4

Target train facts examples: 1706
Target train pos examples: 80
Target train neg examples: 2591

Target test facts examples: 681
Target test pos	 examples: 33
Target test neg examples: 1488

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.46125983910675533;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3488463256948422;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.26212705508354184;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19945264276423433;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15451336627983223;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12179491558002796;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09745354768081688;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07895233872555124;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.902218
   AUC PR    = 0.101852
   CLL	      = -0.334886
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 0.534 seconds
Total inference time: 0.646 seconds
AUC ROC: 0.902218


Results scoring model
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.302866
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.354 seconds
Parameter learned model CLL: -0.302866


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}]]
[{'': [0.1388888888888887, 0.0], 'true': [nan, 0.1388888888888887]}, {'': [0.13888888888888884, 0.0], 'true': [nan, 0.13888888888888884]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}, {'': [0.13888888888888898, 0.0], 'true': [nan, 0.13888888888888898]}, {'': [0.13888888888888884, 0.0], 'true': [nan, 0.13888888888888884]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}, {'': [0.1388888888888889, 0.0], 'true': [nan, 0.1388888888888889]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}, {'': [0.13888888888888892, 0.0], 'true': [nan, 0.13888888888888892]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.46125983910675533;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.3488463256948422;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.26212705508354184;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.19945264276423433;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.15451336627983223;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.12179491558002796;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.09745354768081688;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.07895233872555124;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.902218
   AUC PR    = 0.101852
   CLL	      = -0.334886
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 0.529 seconds
Total inference time: 0.579 seconds
AUC ROC: 0.902218


Results scoring model
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.302866
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.337 seconds
Refined model CLL: -0.302866


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.902218
   AUC PR    = 0.101852
   CLL	      = -0.334886
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 1.754 seconds
Total inference time: 0.646 seconds
AUC ROC: 0.902218
Total revision time: 1.754
Best scored revision CLL: -0.302866


Dataset: 1_imdb_uwcse, Fold: 4, Type: Transfer (trRDN-B), Time: 00:04:55
{'AUC ROC': 0.902218, 'AUC PR': 0.101852, 'CLL': -0.334886, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 1.754, 'Inference time': 0.646, 'parameter_5': {'AUC ROC': 0.902218, 'AUC PR': 0.101852, 'CLL': -0.334886, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 0.534, 'Inference time': 0.646}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5248156017661788;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.14185106490048777;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.448295606241962;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.36236334632262296;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.11231637819360638;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2807538536965855;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.10159632948783633;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.21248070121827137;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.09269127618926098;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1594898822817116;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.08518475138839687;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.11975529938157471;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.07877675473109177;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.09028081829440963;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.06840311429118533;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.052078905701252655;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.935362
   AUC PR    = 0.272865
   CLL	      = -0.256894
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 0.561 seconds
Total inference time: 0.639 seconds
AUC ROC: 0.935362


Results scoring model
   AUC ROC   = 0.96
   AUC PR    = 0.959603
   CLL	      = -0.255004
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.35 seconds
Parameter learned model CLL: -0.255004


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.155, 2, 4], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [1.155, 2, 4], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.155, 2, 4], 'false': [5.27e-09, 8, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [1.155, 2, 4], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.155, 2, 4], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 6], 'true,false': [1.155, 2, 4], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.155, 2, 4], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [5.27e-09, 0, 6], 'true,false': [1.155, 2, 4], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.155, 2, 4], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.155, 2, 4], 'false': [0.0, 8, 0]}]]
[{'': [0.1388888888888887, 0.0], 'true': [-1.4802973661668753e-16, 0.22222222222222224]}, {'': [0.12949546172365026, 0.0], 'true': [7.401486830834377e-17, 0.2222222222222222]}, {'': [0.120423659339382, 3.469446951953614e-18], 'true': [-7.401486830834377e-17, 0.22222222222222224]}, {'': [0.11578691708010198, 0.0], 'true': [7.401486830834377e-17, 0.2222222222222222]}, {'': [0.1140396063490841, 0.0], 'true': [-3.700743415417188e-17, 0.2222222222222222]}, {'': [0.11339988962867119, 0.0], 'true': [9.25185853854297e-18, 0.2222222222222222]}, {'': [0.11313621984386389, 0.0], 'true': [-9.25185853854297e-18, 0.2222222222222223]}, {'': [0.11299535166074005, 0.0], 'true': [4.625929269271485e-18, 0.22222222222222224]}, {'': [0.11288945137740025, 0.0], 'true': [-4.625929269271485e-18, 0.2222222222222222]}, {'': [0.11278916549921701, 0.0], 'true': [0.0, 0.22222222222222224]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5248156017661788;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.14185106490048777;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.448295606241962;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.36236334632262296;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.11231637819360638;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2807538536965855;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.10159632948783633;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.21248070121827137;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.09269127618926098;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1594898822817116;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.08518475138839687;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.11975529938157471;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.07877675473109177;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.09028081829440963;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.06840311429118533;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.052078905701252655;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.935362
   AUC PR    = 0.272865
   CLL	      = -0.256894
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 0.629 seconds
Total inference time: 0.639 seconds
AUC ROC: 0.935362


Results scoring model
   AUC ROC   = 0.96
   AUC PR    = 0.959603
   CLL	      = -0.255004
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.349 seconds
Refined model CLL: -0.255004


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.935362
   AUC PR    = 0.272865
   CLL	      = -0.256894
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 1.889 seconds
Total inference time: 0.639 seconds
AUC ROC: 0.935362
Total revision time: 1.889
Best scored revision CLL: -0.255004


Dataset: 1_imdb_uwcse, Fold: 4, Type: Transfer (trRDN-B), Time: 00:04:59
{'AUC ROC': 0.935362, 'AUC PR': 0.272865, 'CLL': -0.256894, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 1.889, 'Inference time': 0.639, 'parameter_10': {'AUC ROC': 0.935362, 'AUC PR': 0.272865, 'CLL': -0.256894, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 0.561, 'Inference time': 0.639}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6763307532813304;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5728505077589574;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.45250734201965837;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.11231637819360638;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.34273989085368034;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2573771265051454;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.09269127618926096;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.19529825339842236;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.08518475138839686;  // std dev = 6.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1506364669407769;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.07877675473109173;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.11808890552787812;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.09389442014327223;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.07554408412491892;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.0641918400820262;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.935362
   AUC PR    = 0.272865
   CLL	      = -0.331826
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 0.589 seconds
Total inference time: 0.641 seconds
AUC ROC: 0.935362


Results scoring model
   AUC ROC   = 0.96
   AUC PR    = 0.953059
   CLL	      = -0.230256
   Precision = 0.882353 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.9375


Total scoring time: 0.372 seconds
Parameter learned model CLL: -0.230256


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.279, 2, 9], 'false': [0.0, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [1.279, 2, 9], 'false': [5.27e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.279, 2, 9], 'false': [7.45e-09, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [1.279, 2, 9], 'false': [5.27e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.279, 2, 9], 'false': [3.73e-09, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 6], 'true,false': [1.279, 2, 9], 'false': [6.45e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.279, 2, 9], 'false': [0.0, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [5.27e-09, 0, 6], 'true,false': [1.279, 2, 9], 'false': [5.27e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.279, 2, 9], 'false': [2.63e-09, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.279, 2, 9], 'false': [0.0, 13, 0]}]]
[{'': [0.10380622837370206, -8.540177112501205e-18], 'true': [-1.4802973661668753e-16, 0.14876033057851226]}, {'': [0.10116632540289927, 2.135044278125301e-18], 'true': [7.401486830834377e-17, 0.14876033057851246]}, {'': [0.09867287674902628, 4.270088556250602e-18], 'true': [-7.401486830834377e-17, 0.14876033057851237]}, {'': [0.09753354588951284, 2.135044278125301e-18], 'true': [7.401486830834377e-17, 0.14876033057851237]}, {'': [0.09717275691920876, 1.0675221390626506e-18], 'true': [-3.700743415417188e-17, 0.14876033057851237]}, {'': [0.09707538013983663, 3.2025664171879517e-18], 'true': [9.25185853854297e-18, 0.1487603305785124]}, {'': [0.09705492412898069, -1.0675221390626506e-18], 'true': [-9.25185853854297e-18, 0.14876033057851237]}, {'': [0.09705185795908403, 2.135044278125301e-18], 'true': [4.625929269271485e-18, 0.1487603305785124]}, {'': [0.09704760116639777, 5.337610695313253e-19], 'true': [-4.625929269271485e-18, 0.14876033057851237]}, {'': [0.09703724663290503, 0.0], 'true': [0.0, 0.1487603305785124]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5248156017661788;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.4068585879990681;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4850122940520397;  // std dev = 0.812, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.7816289395752953;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.6196170957073195;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3126733491031199;  // std dev = 1.068, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.11231637819360638;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.19771964390053276;  // std dev = 0.689, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.24883554534440433;  // std dev = 0.729, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.5450976344185956;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.4110667822445283;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.13086931849244435;  // std dev = 0.967, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.09269127618926096;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.07435754353188166;  // std dev = 0.634, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11000344786588238;  // std dev = 0.676, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.378696442196649;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.08518475138839686;  // std dev = 6.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.2962130928739561;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.035487090387452715;  // std dev = 0.898, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.07877675473109173;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.01412325975833086;  // std dev = 0.594, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.04180040033047039;  // std dev = 0.639, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.287149573487693;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.23302863796258516;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.011359336283234637;  // std dev = 0.844, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, A, F) )
%   | | | then return -0.015607675335497784;  // std dev = 0.558, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.006521696622515782;  // std dev = 0.607, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.2341438634772376;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.0641918400820262;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.941135
   AUC PR    = 0.283339
   CLL	      = -0.300168
   Precision = 0.107692 at threshold = 0.5
   Recall    = 0.848485
   F1        = 0.191126


Total learning time: 1.445 seconds
Total inference time: 0.732 seconds
AUC ROC: 0.941135


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.162928
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 0.383 seconds
Refined model CLL: -0.162928


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.941135
   AUC PR    = 0.283339
   CLL	      = -0.300168
   Precision = 0.107692 at threshold = 0.5
   Recall    = 0.848485
   F1        = 0.191126


Total learning time: 2.789 seconds
Total inference time: 0.732 seconds
AUC ROC: 0.941135
Total revision time: 2.789
Best scored revision CLL: -0.162928


Dataset: 1_imdb_uwcse, Fold: 4, Type: Transfer (trRDN-B), Time: 00:05:04
{'AUC ROC': 0.941135, 'AUC PR': 0.283339, 'CLL': -0.300168, 'Precision': [0.107692, 0.5], 'Recall': 0.848485, 'F1': 0.191126, 'Learning time': 2.789, 'Inference time': 0.732, 'parameter_15': {'AUC ROC': 0.935362, 'AUC PR': 0.272865, 'CLL': -0.331826, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 0.589, 'Inference time': 0.641}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7331489350995122;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else return -0.1418510649004878;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6189976143448207;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.48512875154616497;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.36568225360444984;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else return -0.10159632948783627;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2756019634733141;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else return -0.092691276189261;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.21158287903019785;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1660804425456071;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else return -0.07877675473109173;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.133031936375035;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.10839224498101002;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else return -0.06842697784420272;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.08956128580326395;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else return -0.0641918400820262;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 0.935362
   AUC PR    = 0.272865
   CLL	      = -0.366577
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 0.687 seconds
Total inference time: 0.626 seconds
AUC ROC: 0.935362


Results scoring model
   AUC ROC   = 0.965
   AUC PR    = 0.955224
   CLL	      = -0.20564
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.376 seconds
Parameter learned model CLL: -0.20564


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.323, 2, 14], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [1.323, 2, 14], 'false': [7.45e-09, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.323, 2, 14], 'false': [1.05e-08, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [1.323, 2, 14], 'false': [7.45e-09, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.323, 2, 14], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 6], 'true,false': [1.323, 2, 14], 'false': [5.27e-09, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.323, 2, 14], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [5.27e-09, 0, 6], 'true,false': [1.323, 2, 14], 'false': [3.73e-09, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.323, 2, 14], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.323, 2, 14], 'false': [3.73e-09, 18, 0]}]]
[{'': [0.08264462809917356, -9.25185853854297e-18], 'true': [-1.4802973661668753e-16, 0.109375]}, {'': [0.08154784514846361, 3.0839528461809902e-18], 'true': [7.401486830834377e-17, 0.10937500000000011]}, {'': [0.08052396676144191, 6.1679056923619804e-18], 'true': [-7.401486830834377e-17, 0.10937499999999992]}, {'': [0.0800783114367571, 3.0839528461809902e-18], 'true': [7.401486830834377e-17, 0.10937499999999989]}, {'': [0.07994907139297312, -1.5419764230904951e-18], 'true': [-3.700743415417188e-17, 0.10937500000000001]}, {'': [0.07992232051843182, 1.5419764230904951e-18], 'true': [9.25185853854297e-18, 0.10937499999999997]}, {'': [0.07992384215225981, -7.709882115452476e-19], 'true': [-9.25185853854297e-18, 0.10937499999999997]}, {'': [0.07993058226157058, 7.709882115452476e-19], 'true': [4.625929269271485e-18, 0.10937499999999997]}, {'': [0.07993561631451807, 0.0], 'true': [-4.625929269271485e-18, 0.10937500000000001]}, {'': [0.07993727421710688, 7.709882115452476e-19], 'true': [0.0, 0.109375]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.1418510649004878;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, B), ta(E, A, F) )
%   | | then return 0.7449784760894346;  // std dev = 0.107, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3551805016408267;  // std dev = 0.998, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, B), ta(E, A, F) )
%   | | then if ( publication(G, A) )
%   | | | then return 0.6280159440644119;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5490597911834425;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(H, B) )
%   | | | then return 0.28616237404326844;  // std dev = 0.933, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.6426008541942161;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then if ( ta(G, A, H) )
%   | | | then return 0.4128521308799522;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4840592238700513;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(I, A), publication(J, B) )
%   | | | then return 0.4785722847988791;  // std dev = 0.101, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.08805212418982931;  // std dev = 0.796, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.10159632948783627;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, D, F) )
%   | | | then return 0.3419589742013964;  // std dev = 0.069, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.03496197019165531;  // std dev = 0.728, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.3961645706436173;  // std dev = 0.148, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.092691276189261;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.31930508603721225;  // std dev = 0.151, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.2697907099383368;  // std dev = 0.060, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.015666283169711942;  // std dev = 0.705, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, D, F) )
%   | | | then return 0.22013316270925115;  // std dev = 0.053, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.01127346681905686;  // std dev = 0.658, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.27905735562763967;  // std dev = 0.176, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07877675473109173;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then if ( publication(G, A) )
%   | | | then return 0.2566971877072272;  // std dev = 0.156, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16841222234074815;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(H, B) )
%   | | | then return 0.021434334197082516;  // std dev = 0.622, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.2611226965024139;  // std dev = 0.102, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then if ( ta(G, A, H) )
%   | | | then return 0.14612350159085774;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.19763192288591191;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(I, A), publication(J, B) )
%   | | | then return 0.19513986758461255;  // std dev = 0.147, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.04606130787413554;  // std dev = 0.593, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.06842697784420272;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, D, F) )
%   | | | then return 0.14848376164717408;  // std dev = 0.056, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.05082432532284642;  // std dev = 0.563, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.1814539675809374;  // std dev = 0.157, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.0641918400820262;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 0.915893
   AUC PR    = 0.110639
   CLL	      = -0.353114
   Precision = 0.106796 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.192982


Total learning time: 2.458 seconds
Total inference time: 0.809 seconds
AUC ROC: 0.915893


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.125649
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.417 seconds
Refined model CLL: -0.125649


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.915893
   AUC PR    = 0.110639
   CLL	      = -0.353114
   Precision = 0.106796 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.192982


Total learning time: 3.938 seconds
Total inference time: 0.809 seconds
AUC ROC: 0.915893
Total revision time: 3.938
Best scored revision CLL: -0.125649


Dataset: 1_imdb_uwcse, Fold: 4, Type: Transfer (trRDN-B), Time: 00:05:10
{'AUC ROC': 0.915893, 'AUC PR': 0.110639, 'CLL': -0.353114, 'Precision': [0.106796, 0.5], 'Recall': 1.0, 'F1': 0.192982, 'Learning time': 3.938, 'Inference time': 0.809, 'parameter_20': {'AUC ROC': 0.935362, 'AUC PR': 0.272865, 'CLL': -0.366577, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 0.687, 'Inference time': 0.626}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6842358916212514;  // std dev = 1.818, 23.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   else return -0.14185106490048777;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.579289113510837;  // std dev = 1.818, 23.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   else return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4570789878895825;  // std dev = 1.818, 23.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.3459255379460509;  // std dev = 1.818, 23.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   else return -0.10159632948783634;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.25984624421661445;  // std dev = 1.818, 23.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   else return -0.09269127618926094;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1974495333890909;  // std dev = 1.818, 23.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.15263813727398762;  // std dev = 1.818, 23.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   else return -0.07877675473109173;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1199981320074182;  // std dev = 1.818, 23.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.09572464243777015;  // std dev = 1.818, 23.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   else return -0.06842697784420272;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.07729377897012918;  // std dev = 1.818, 23.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   else return -0.06419184008202619;  // std dev = 7.45e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */


Results
   AUC ROC   = 0.935362
   AUC PR    = 0.272865
   CLL	      = -0.336419
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 0.674 seconds
Total inference time: 0.662 seconds
AUC ROC: 0.935362


Results scoring model
   AUC ROC   = 0.9392
   AUC PR    = 0.922262
   CLL	      = -0.259373
   Precision = 0.862069 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.925926


Total scoring time: 0.384 seconds
Parameter learned model CLL: -0.259373


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.818, 4, 19], 'false': [0.0, 21, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [1.818, 4, 19], 'false': [0.0, 21, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.818, 4, 19], 'false': [1.67e-08, 21, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [1.818, 4, 19], 'false': [0.0, 21, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.818, 4, 19], 'false': [1.05e-08, 21, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 6], 'true,false': [1.818, 4, 19], 'false': [7.45e-09, 21, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.818, 4, 19], 'false': [0.0, 21, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [5.27e-09, 0, 6], 'true,false': [1.818, 4, 19], 'false': [5.27e-09, 21, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.818, 4, 19], 'false': [0.0, 21, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.818, 4, 19], 'false': [7.45e-09, 21, 0]}]]
[{'': [0.11890606420927562, -2.64338815386942e-18], 'true': [-1.4802973661668753e-16, 0.1436672967863892]}, {'': [0.1171676729436433, 0.0], 'true': [7.401486830834377e-17, 0.14366729678638943]}, {'': [0.11552821079156084, 1.3216940769347101e-17], 'true': [-7.401486830834377e-17, 0.1436672967863895]}, {'': [0.11478396674229395, -7.93016446160826e-18], 'true': [7.401486830834377e-17, 0.14366729678638948]}, {'': [0.11455092121321465, 5.28677630773884e-18], 'true': [-3.700743415417188e-17, 0.14366729678638954]}, {'': [0.11448976301537334, 2.64338815386942e-18], 'true': [9.25185853854297e-18, 0.14366729678638945]}, {'': [0.1144783973085829, -2.64338815386942e-18], 'true': [-9.25185853854297e-18, 0.1436672967863894]}, {'': [0.11447799974027668, 1.32169407693471e-18], 'true': [4.625929269271485e-18, 0.14366729678638943]}, {'': [0.11447651760781889, 0.0], 'true': [-4.625929269271485e-18, 0.14366729678638943]}, {'': [0.11447080757300257, 2.64338815386942e-18], 'true': [0.0, 0.14366729678638943]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.14185106490048777;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, A, F), publication(G, B) )
%   | | | then return 0.63811820895807;  // std dev = 0.886, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.3366938776452518;  // std dev = 1.288, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0.7414996535886117;  // std dev = 0.050, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.2058855961950071;  // std dev = 0.971, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.5668768519096076;  // std dev = 0.036, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.4541547777852708;  // std dev = 1.214, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.16157267701029682;  // std dev = 0.968, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.3440591540785829;  // std dev = 1.197, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.4534788857016233;  // std dev = 0.101, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.10159632948783634;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.12465135276570193;  // std dev = 0.967, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.33705255443423554;  // std dev = 0.066, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.2513738220631859;  // std dev = 1.199, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.09269127618926094;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, B), ta(E, A, F) )
%   | | then if ( ta(E, G, H), tempadvisedby(G, I) )
%   | | | then return 0.1394894944847898;  // std dev = 0.629, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.3474647573137299;  // std dev = 0.387, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then return 0.04054349499495854;  // std dev = 1.230, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.31893811812745243;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then if ( ta(D, G, H), tempadvisedby(G, I) )
%   | | | then return 0.11082383982707648;  // std dev = 0.635, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.27978013798836315;  // std dev = 0.355, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then return 0.03067846158380727;  // std dev = 1.230, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.25396156334930475;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07877675473109173;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return -0.0022385066774333467;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.22104517518254693;  // std dev = 0.896, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.09562945090101024;  // std dev = 0.720, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return -0.0016956475404898697;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.17689416949435824;  // std dev = 0.896, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.0809725380169317;  // std dev = 0.728, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.06842697784420272;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, B), ta(E, A, F) )
%   | | then if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.05247989903547559;  // std dev = 0.589, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.22730004588419236;  // std dev = 0.339, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then return -0.0490654077794025;  // std dev = 1.177, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.1812119757959586;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06419184008202619;  // std dev = 7.45e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */


Results
   AUC ROC   = 0.940035
   AUC PR    = 0.157509
   CLL	      = -0.335071
   Precision = 0.121569 at threshold = 0.5
   Recall    = 0.939394
   F1        = 0.215278


Total learning time: 2.917 seconds
Total inference time: 0.801 seconds
AUC ROC: 0.940035


Results scoring model
   AUC ROC   = 0.9936
   AUC PR    = 0.993221
   CLL	      = -0.195037
   Precision = 0.925926 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.961538


Total scoring time: 0.421 seconds
Refined model CLL: -0.195037


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.940035
   AUC PR    = 0.157509
   CLL	      = -0.335071
   Precision = 0.121569 at threshold = 0.5
   Recall    = 0.939394
   F1        = 0.215278


Total learning time: 4.396 seconds
Total inference time: 0.801 seconds
AUC ROC: 0.940035
Total revision time: 4.396
Best scored revision CLL: -0.195037


Dataset: 1_imdb_uwcse, Fold: 4, Type: Transfer (trRDN-B), Time: 00:05:16
{'AUC ROC': 0.940035, 'AUC PR': 0.157509, 'CLL': -0.335071, 'Precision': [0.121569, 0.5], 'Recall': 0.939394, 'F1': 0.215278, 'Learning time': 4.396, 'Inference time': 0.801, 'parameter_25': {'AUC ROC': 0.935362, 'AUC PR': 0.272865, 'CLL': -0.336419, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 0.674, 'Inference time': 0.662}}


Starting fold 5

Target train facts examples: 1973
Target train pos examples: 97
Target train neg examples: 3734

Target test facts examples: 414
Target test pos	 examples: 16
Target test neg examples: 345

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333703;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420274;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.901449
   AUC PR    = 0.190476
   CLL	      = -0.454103
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 0.547 seconds
Total inference time: 0.459 seconds
AUC ROC: 0.901449


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.343 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.49e-08, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [2.63e-09, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [2.63e-09, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [nan, 0.0]}, {'': [0.0, 0.0], 'true': [nan, 0.0]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [nan, -4.4408920985006264e-17]}, {'': [4.4408920985006264e-17, 0.0], 'true': [nan, 4.4408920985006264e-17]}, {'': [-2.2204460492503132e-17, 1.3877787807814458e-18], 'true': [nan, -2.2204460492503132e-17]}, {'': [0.0, 0.0], 'true': [nan, 0.0]}, {'': [-5.551115123125783e-18, -1.3877787807814458e-18], 'true': [nan, -5.551115123125783e-18]}, {'': [0.0, 1.3877787807814458e-18], 'true': [nan, 0.0]}, {'': [0.0, -1.3877787807814458e-18], 'true': [nan, 0.0]}, {'': [0.0, 0.0], 'true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333703;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420274;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.901449
   AUC PR    = 0.190476
   CLL	      = -0.454103
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 0.483 seconds
Total inference time: 0.426 seconds
AUC ROC: 0.901449


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.331 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.901449
   AUC PR    = 0.190476
   CLL	      = -0.454103
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 1.7040000000000002 seconds
Total inference time: 0.459 seconds
AUC ROC: 0.901449
Total revision time: 1.7040000000000002
Best scored revision CLL: -0.094637


Dataset: 1_imdb_uwcse, Fold: 5, Type: Transfer (trRDN-B), Time: 00:05:19
{'AUC ROC': 0.901449, 'AUC PR': 0.190476, 'CLL': -0.454103, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 1.7040000000000002, 'Inference time': 0.459, 'parameter_5': {'AUC ROC': 0.901449, 'AUC PR': 0.190476, 'CLL': -0.454103, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 0.547, 'Inference time': 0.459}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.14185106490048777;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.12544463852839138;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.5553664367462843;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.41751358415831;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.10159632948783633;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.32071184716014944;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.09269127618926098;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.08518475138839687;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2097577156325355;  // std dev = 7.45e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.07877675473109177;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.07324622576333704;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.152743858093671;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.13400703000801117;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.0641918400820262;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.901449
   AUC PR    = 0.190476
   CLL	      = -0.454103
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 0.561 seconds
Total inference time: 0.459 seconds
AUC ROC: 0.901449


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.353 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [2.98e-08, 0, 7], 'false': [0.0, 10, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.0, 0, 7], 'false': [0.0, 10, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.05e-08, 0, 3], 'true,false': [0.0, 0, 7], 'false': [0.0, 10, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.0, 0, 7], 'false': [0.0, 10, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.0, 0, 7], 'false': [0.0, 10, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.0, 0, 7], 'false': [0.0, 10, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [7.45e-09, 0, 7], 'false': [0.0, 10, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.0, 0, 7], 'false': [0.0, 10, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.0, 0, 7], 'false': [2.63e-09, 10, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.0, 0, 7], 'false': [0.0, 10, 0]}]]
[{'': [-8.881784197001253e-17, -2.7755575615628915e-18], 'true': [1.4802973661668753e-16, 1.2688263138573217e-16]}, {'': [8.881784197001253e-17, 0.0], 'true': [0.0, -1.2688263138573217e-16]}, {'': [0.0, 0.0], 'true': [3.700743415417188e-17, 0.0]}, {'': [1.3322676295501878e-16, 0.0], 'true': [-3.700743415417188e-17, -3.172065784643304e-17]}, {'': [0.0, 0.0], 'true': [0.0, -1.586032892321652e-17]}, {'': [3.3306690738754695e-17, 0.0], 'true': [0.0, -7.93016446160826e-18]}, {'': [-2.7755575615628914e-17, -1.3877787807814458e-18], 'true': [0.0, 7.93016446160826e-18]}, {'': [5.551115123125783e-18, -6.938893903907229e-19], 'true': [0.0, -3.96508223080413e-18]}, {'': [0.0, 6.938893903907229e-19], 'true': [-4.625929269271485e-18, -3.96508223080413e-18]}, {'': [0.0, 0.0], 'true': [-2.3129646346357427e-18, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.14185106490048777;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( professor(A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.5553664367462843;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5553664367462843;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( professor(A) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.41751358415831;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( professor(A) )
%   | then return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.32071184716014944;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.32071184716014944;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( professor(A) )
%   | then return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( professor(A) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( professor(A) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.17709649774527736;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( professor(A) )
%   | then return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.15274385809367097;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( professor(A) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( professor(A) )
%   | then return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.901449
   AUC PR    = 0.190476
   CLL	      = -0.454103
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 1.226 seconds
Total inference time: 0.473 seconds
AUC ROC: 0.901449


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.355 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.901449
   AUC PR    = 0.190476
   CLL	      = -0.454103
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 2.495 seconds
Total inference time: 0.459 seconds
AUC ROC: 0.901449
Total revision time: 2.495
Best scored revision CLL: -0.094637


Dataset: 1_imdb_uwcse, Fold: 5, Type: Transfer (trRDN-B), Time: 00:05:23
{'AUC ROC': 0.901449, 'AUC PR': 0.190476, 'CLL': -0.454103, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 2.495, 'Inference time': 0.459, 'parameter_10': {'AUC ROC': 0.901449, 'AUC PR': 0.190476, 'CLL': -0.454103, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 0.561, 'Inference time': 0.459}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.643863220813798;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.546344324661819;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else return -0.12544463852839138;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.4336077424125802;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else return -0.11231637819360639;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.329646879661406;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else return -0.10159632948783627;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2474238613374282;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else return -0.09269127618926097;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.18681376626705765;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.14287708768965182;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else return -0.07877675473109173;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.11078243293091554;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.08696285935559465;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else return -0.06842697784420272;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.06897951845459195;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else return -0.0641918400820262;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.926087
   AUC PR    = 0.46579
   CLL	      = -0.306684
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 0.596 seconds
Total inference time: 0.443 seconds
AUC ROC: 0.926087


Results scoring model
   AUC ROC   = 0.926667
   AUC PR    = 0.910744
   CLL	      = -0.28812
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.368 seconds
Parameter learned model CLL: -0.28812


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.535, 3, 11], 'false': [0.0, 12, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.535, 3, 11], 'false': [0.0, 12, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.535, 3, 11], 'false': [0.0, 12, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.535, 3, 11], 'false': [0.0, 12, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.535, 3, 11], 'false': [3.73e-09, 12, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.535, 3, 11], 'false': [3.73e-09, 12, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.535, 3, 11], 'false': [0.0, 12, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.535, 3, 11], 'false': [3.73e-09, 12, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.535, 3, 11], 'false': [0.0, 12, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.535, 3, 11], 'false': [0.0, 12, 0]}]]
[{'': [0.1388888888888886, -6.938893903907228e-18], 'true': [0.0, 0.16836734693877536]}, {'': [0.13613301716692844, 0.0], 'true': [0.0, 0.1683673469387756]}, {'': [0.13351475768129295, 0.0], 'true': [0.0, 0.16836734693877548]}, {'': [0.13228679834285068, 0.0], 'true': [0.0, 0.16836734693877548]}, {'': [0.1318807242131626, 1.1564823173178713e-18], 'true': [0.0, 0.1683673469387755]}, {'': [0.13176003944563355, 1.1564823173178713e-18], 'true': [0.0, 0.16836734693877548]}, {'': [0.13172549524270794, 0.0], 'true': [0.0, 0.1683673469387755]}, {'': [0.1317124522201692, 1.1564823173178713e-18], 'true': [0.0, 0.16836734693877556]}, {'': [0.13170028165768594, -5.782411586589357e-19], 'true': [0.0, 0.16836734693877548]}, {'': [0.13168324615761084, -5.782411586589357e-19], 'true': [0.0, 0.1683673469387755]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.3927941835770488;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.12544463852839138;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.6105527810612371;  // std dev = 0.135, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.4948676603703253;  // std dev = 0.865, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.24461034049912475;  // std dev = 0.986, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.11231637819360639;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.21758087641823315;  // std dev = 1.055, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.2884780288352693;  // std dev = 0.793, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4436315465532137;  // std dev = 0.092, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.10159632948783627;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.37890680337066057;  // std dev = 0.185, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.07400019181678351;  // std dev = 0.971, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.29777471878294925;  // std dev = 0.815, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.09269127618926097;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.2128157331020174;  // std dev = 0.817, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3230727675579576;  // std dev = 0.139, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.16586178538654178;  // std dev = 0.795, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.07916274333639207;  // std dev = 0.585, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.16411528341207843;  // std dev = 0.817, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2585236572620423;  // std dev = 0.124, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.05993886003681468;  // std dev = 0.600, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1292938935570859;  // std dev = 0.786, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.07877675473109173;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.2477200765939879;  // std dev = 0.164, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.1632515902969253;  // std dev = 0.833, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.006303386779978215;  // std dev = 0.921, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.20633358326215057;  // std dev = 0.146, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(F, A) )
%   | | | then return -0.05257529021445613;  // std dev = 0.926, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.13844025666571894;  // std dev = 0.803, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.06842697784420272;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.17580365312421023;  // std dev = 0.130, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.12700077008237384;  // std dev = 0.828, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.02641093384892902;  // std dev = 0.904, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.0641918400820262;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.906522
   AUC PR    = 0.183261
   CLL	      = -0.352111
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 1.774 seconds
Total inference time: 0.493 seconds
AUC ROC: 0.906522


Results scoring model
   AUC ROC   = 0.988889
   AUC PR    = 0.989165
   CLL	      = -0.224372
   Precision = 0.882353 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.9375


Total scoring time: 0.387 seconds
Refined model CLL: -0.224372


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.906522
   AUC PR    = 0.183261
   CLL	      = -0.352111
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 3.125 seconds
Total inference time: 0.493 seconds
AUC ROC: 0.906522
Total revision time: 3.125
Best scored revision CLL: -0.224372


Dataset: 1_imdb_uwcse, Fold: 5, Type: Transfer (trRDN-B), Time: 00:05:28
{'AUC ROC': 0.906522, 'AUC PR': 0.183261, 'CLL': -0.352111, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 3.125, 'Inference time': 0.493, 'parameter_15': {'AUC ROC': 0.926087, 'AUC PR': 0.46579, 'CLL': -0.306684, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 0.596, 'Inference time': 0.443}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6706489350995123;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   else return -0.14185106490048782;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5682191205391256;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.44921440988959865;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3404502154241666;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   else return -0.10159632948783626;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.2556141966415551;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   else return -0.09269127618926098;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.1937733797841345;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.1492256375552221;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   else return -0.07877675473109179;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.11674889366772258;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.152743858093671;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.09261428520870396;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   else return -0.06842697784420271;  // std dev = 3.73e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.07432413189596598;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   else return -0.06419184008202619;  // std dev = 5.27e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.926087
   AUC PR    = 0.46579
   CLL	      = -0.321566
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 0.588 seconds
Total inference time: 0.477 seconds
AUC ROC: 0.926087


Results scoring model
   AUC ROC   = 0.95125
   AUC PR    = 0.941678
   CLL	      = -0.245878
   Precision = 0.869565 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.930233


Total scoring time: 0.377 seconds
Parameter learned model CLL: -0.245878


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.561, 3, 13], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 7], 'true,false': [1.561, 3, 13], 'false': [7.45e-09, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.561, 3, 13], 'false': [1.18e-08, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.58e-08, 0, 7], 'true,false': [1.561, 3, 13], 'false': [7.45e-09, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.561, 3, 13], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.29e-08, 0, 7], 'true,false': [1.561, 3, 13], 'false': [7.45e-09, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.561, 3, 13], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [5.27e-09, 0, 7], 'true,false': [1.561, 3, 13], 'false': [5.27e-09, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.561, 3, 13], 'false': [3.73e-09, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.561, 3, 13], 'false': [5.27e-09, 17, 0]}]]
[{'': [0.11342155009451807, -1.3061447348531253e-17], 'true': [-2.5376526277146434e-16, 0.15234374999999983]}, {'': [0.11082196673705925, 3.2653618371328133e-18], 'true': [6.344131569286608e-17, 0.1523437500000001]}, {'': [0.10836397790973062, 8.163404592832034e-18], 'true': [-6.344131569286608e-17, 0.15234375000000006]}, {'': [0.10723561707688722, 3.2653618371328133e-18], 'true': [9.516197353929913e-17, 0.15234375]}, {'': [0.10687546854355508, 0.0], 'true': [-3.172065784643304e-17, 0.15234375]}, {'': [0.10677640808950756, 3.2653618371328133e-18], 'true': [2.3790493384824782e-17, 0.15234374999999994]}, {'': [0.10675403182864289, -1.6326809185664067e-18], 'true': [-1.586032892321652e-17, 0.15234375000000003]}, {'': [0.10674931064575605, 1.6326809185664067e-18], 'true': [3.96508223080413e-18, 0.15234375]}, {'': [0.10674374922487108, 8.163404592832033e-19], 'true': [-7.93016446160826e-18, 0.15234375]}, {'': [0.1067324185493949, 1.6326809185664067e-18], 'true': [0.0, 0.15234375000000003]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.14185106490048782;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.448295606241962;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.6021431843828416;  // std dev = 0.115, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.29569667965595625;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.48299027783741133;  // std dev = 0.858, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.45610599605082497;  // std dev = 0.122, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.3908077953801839;  // std dev = 0.857, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.24791942657597416;  // std dev = 1.089, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.10159632948783626;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.19803816013424927;  // std dev = 1.122, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.17874252249309897;  // std dev = 0.802, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.34525173851192686;  // std dev = 0.080, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.09269127618926098;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.28799018064144816;  // std dev = 0.130, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.09987261434179043;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.2296973380338688;  // std dev = 0.830, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( ta(D, A, E) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.1422940662022755;  // std dev = 0.818, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2805748918184777;  // std dev = 0.132, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | then return 0.0576655578599348;  // std dev = 0.781, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1563836536893238;  // std dev = 0.762, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109179;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.046972359840153056;  // std dev = 0.784, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(G, A), publication(H, B) )
%   | | | then return 0.08448129922210053;  // std dev = 1.119, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.1952863085772663;  // std dev = 0.069, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.152743858093671;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.19260482099215862;  // std dev = 0.128, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.13955226476649338;  // std dev = 0.843, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.03489335016614105;  // std dev = 1.064, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.06842697784420271;  // std dev = 3.73e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.165298423348204;  // std dev = 0.115, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(F, A) )
%   | | | then return -0.00566639241031881;  // std dev = 1.087, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.11209030205891532;  // std dev = 0.805, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.06419184008202619;  // std dev = 5.27e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.922283
   AUC PR    = 0.33002
   CLL	      = -0.348347
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 1.877 seconds
Total inference time: 0.479 seconds
AUC ROC: 0.922283


Results scoring model
   AUC ROC   = 0.985
   AUC PR    = 0.985353
   CLL	      = -0.208618
   Precision = 0.869565 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.930233


Total scoring time: 0.407 seconds
Refined model CLL: -0.208618


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.922283
   AUC PR    = 0.33002
   CLL	      = -0.348347
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 3.249 seconds
Total inference time: 0.479 seconds
AUC ROC: 0.922283
Total revision time: 3.249
Best scored revision CLL: -0.208618


Dataset: 1_imdb_uwcse, Fold: 5, Type: Transfer (trRDN-B), Time: 00:05:33
{'AUC ROC': 0.922283, 'AUC PR': 0.33002, 'CLL': -0.348347, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 3.249, 'Inference time': 0.479, 'parameter_20': {'AUC ROC': 0.926087, 'AUC PR': 0.46579, 'CLL': -0.321566, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 0.588, 'Inference time': 0.477}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5854216623722396;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   else return -0.1418510649004878;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.498380757744019;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.3990418766037683;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   else return -0.11231637819360635;  // std dev = 1.58e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.30590364655137575;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   else return -0.10159632948783627;  // std dev = 7.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.23008571177589437;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   else return -0.092691276189261;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.17278159685181968;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   else return -0.08518475138839687;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.13060124951249305;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   else return -0.07877675473109173;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.09960681503512815;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.07663960750354247;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   else return -0.06842697784420272;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.05942583270769189;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   else return -0.0641918400820262;  // std dev = 3.73e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 0.926087
   AUC PR    = 0.46579
   CLL	      = -0.277179
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 0.611 seconds
Total inference time: 0.463 seconds
AUC ROC: 0.926087


Results scoring model
   AUC ROC   = 0.9232
   AUC PR    = 0.913892
   CLL	      = -0.306598
   Precision = 0.806452 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.892857


Total scoring time: 0.392 seconds
Parameter learned model CLL: -0.306598


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [2.089, 6, 16], 'false': [0.0, 19, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 9], 'true,false': [2.089, 6, 16], 'false': [7.45e-09, 19, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [2.089, 6, 16], 'false': [1.58e-08, 19, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [3.33e-08, 0, 9], 'true,false': [2.089, 6, 16], 'false': [7.45e-09, 19, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [2.089, 6, 16], 'false': [0.0, 19, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.83e-08, 0, 9], 'true,false': [2.089, 6, 16], 'false': [0.0, 19, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [2.089, 6, 16], 'false': [0.0, 19, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 9], 'true,false': [2.089, 6, 16], 'false': [3.73e-09, 19, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [2.089, 6, 16], 'false': [0.0, 19, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [2.089, 6, 16], 'false': [3.73e-09, 19, 0]}]]
[{'': [0.15608740894901246, -5.843279076974508e-18], 'true': [-2.9605947323337506e-16, 0.19834710743801634]}, {'': [0.1508338769207656, 2.921639538487254e-18], 'true': [9.868649107779169e-17, 0.1983471074380164]}, {'': [0.14579742576198745, 1.3147377923192643e-17], 'true': [-1.4802973661668753e-16, 0.19834710743801642]}, {'': [0.14332900036514745, 2.921639538487254e-18], 'true': [1.2335811384723962e-16, 0.19834710743801648]}, {'': [0.1424546517823464, -2.921639538487254e-18], 'true': [-3.700743415417188e-17, 0.1983471074380166]}, {'': [0.14216107652037324, 0.0], 'true': [3.700743415417188e-17, 0.19834710743801648]}, {'': [0.1420534287265273, -7.304098846218135e-19], 'true': [-2.4671622769447922e-17, 0.19834710743801656]}, {'': [0.14199963387739653, 7.304098846218135e-19], 'true': [6.1679056923619804e-18, 0.1983471074380165]}, {'': [0.14195579079124718, -7.304098846218135e-19], 'true': [-3.0839528461809902e-18, 0.1983471074380165]}, {'': [0.14190850526628054, 7.304098846218135e-19], 'true': [0.0, 0.1983471074380165]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), professor(E) )
%   | | | then return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.1418510649004878;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), professor(E) )
%   | | | then return 0.2616318086752123;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), professor(E) )
%   | | | then return 0.2192721473492705;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.36236334632262296;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.11231637819360635;  // std dev = 1.58e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then if ( ta(G, H, E), publication(F, H) )
%   | | | then return 0.4666569848762122;  // std dev = 0.170, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.29536506225438885;  // std dev = 0.723, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(I, B), publication(J, B) )
%   | | | then return 0.094994689880144;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3175738844187382;  // std dev = 1.262, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.10159632948783627;  // std dev = 7.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), tempadvisedby(E, F) )
%   | | | then return 0.43102679853160775;  // std dev = 0.826, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.07803685439081337;  // std dev = 1.138, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.3858174348749779;  // std dev = 0.142, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2590236975250085;  // std dev = 0.764, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.092691276189261;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), tempadvisedby(E, F) )
%   | | | then return 0.33134964553932167;  // std dev = 0.821, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.060676116903829506;  // std dev = 1.138, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.15313616990020526;  // std dev = 0.771, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2747622643542374;  // std dev = 0.048, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.08518475138839687;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then return 0.04966449055556156;  // std dev = 0.983, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(F, B) )
%   | | | then return 0.2015893111959483;  // std dev = 0.967, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.06032293789027725;  // std dev = 0.848, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.07877675473109173;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), professor(E) )
%   | | | then return -0.008724306537516479;  // std dev = 1.350, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.276502654231218;  // std dev = 0.089, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.2332748896940436;  // std dev = 0.152, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12568567681624604;  // std dev = 0.753, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.0032765262420290653;  // std dev = 0.951, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(F, B) )
%   | | | then return 0.1411184927072625;  // std dev = 0.954, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.04787618002559324;  // std dev = 0.847, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.06842697784420272;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then return 0.0025157480103485063;  // std dev = 0.951, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.07011558491847074;  // std dev = 1.277, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.14875653612510534;  // std dev = 0.044, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.0641918400820262;  // std dev = 3.73e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 0.937047
   AUC PR    = 0.322045
   CLL	      = -0.269074
   Precision = 0.238806 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.385542


Total learning time: 2.272 seconds
Total inference time: 0.502 seconds
AUC ROC: 0.937047


Results scoring model
   AUC ROC   = 0.9952
   AUC PR    = 0.995519
   CLL	      = -0.223409
   Precision = 0.96 at threshold = 0.5
   Recall    = 0.96
   F1        = 0.96


Total scoring time: 0.433 seconds
Refined model CLL: -0.223409


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.937047
   AUC PR    = 0.322045
   CLL	      = -0.269074
   Precision = 0.238806 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.385542


Total learning time: 3.7079999999999997 seconds
Total inference time: 0.502 seconds
AUC ROC: 0.937047
Total revision time: 3.7079999999999997
Best scored revision CLL: -0.223409


Dataset: 1_imdb_uwcse, Fold: 5, Type: Transfer (trRDN-B), Time: 00:05:38
{'AUC ROC': 0.937047, 'AUC PR': 0.322045, 'CLL': -0.269074, 'Precision': [0.238806, 0.5], 'Recall': 1.0, 'F1': 0.385542, 'Learning time': 3.7079999999999997, 'Inference time': 0.502, 'parameter_25': {'AUC ROC': 0.926087, 'AUC PR': 0.46579, 'CLL': -0.277179, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 0.611, 'Inference time': 0.463}}


Starting fold 1

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos	 examples: 35
Target test neg examples: 1814

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333703;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.90215
   AUC PR    = 0.089744
   CLL	      = -0.459958
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 0.556 seconds
Total inference time: 0.693 seconds
AUC ROC: 0.90215


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.335 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.49e-08, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [2.63e-09, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [1.86e-09, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [nan, 0.0]}, {'': [0.0, 0.0], 'true': [nan, 0.0]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [nan, -4.4408920985006264e-17]}, {'': [4.4408920985006264e-17, 0.0], 'true': [nan, 4.4408920985006264e-17]}, {'': [-2.2204460492503132e-17, 0.0], 'true': [nan, -2.2204460492503132e-17]}, {'': [0.0, 0.0], 'true': [nan, 0.0]}, {'': [-5.551115123125783e-18, -1.3877787807814458e-18], 'true': [nan, -5.551115123125783e-18]}, {'': [0.0, 1.3877787807814458e-18], 'true': [nan, 0.0]}, {'': [0.0, 6.938893903907229e-19], 'true': [nan, 0.0]}, {'': [0.0, 0.0], 'true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333703;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.90215
   AUC PR    = 0.089744
   CLL	      = -0.459958
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 0.461 seconds
Total inference time: 0.664 seconds
AUC ROC: 0.90215


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.334 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.90215
   AUC PR    = 0.089744
   CLL	      = -0.459958
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 1.6860000000000002 seconds
Total inference time: 0.693 seconds
AUC ROC: 0.90215
Total revision time: 1.6860000000000002
Best scored revision CLL: -0.094637


Dataset: 1_imdb_uwcse, Fold: 1, Type: Transfer (trRDN-B), Time: 00:05:41
{'AUC ROC': 0.90215, 'AUC PR': 0.089744, 'CLL': -0.459958, 'Precision': [0.089744, 0.5], 'Recall': 1.0, 'F1': 0.164706, 'Learning time': 1.6860000000000002, 'Inference time': 0.693, 'parameter_5': {'AUC ROC': 0.90215, 'AUC PR': 0.089744, 'CLL': -0.459958, 'Precision': [0.089744, 0.5], 'Recall': 1.0, 'F1': 0.164706, 'Learning time': 0.556, 'Inference time': 0.693}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.46125983910675533;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3488463256948422;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783627;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.26212705508354184;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.19945264276423433;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.15451336627983223;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.12179491558002796;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.09745354768081688;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.07895233872555124;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06419184008202622;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.937707
   AUC PR    = 0.29769
   CLL	      = -0.338906
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 0.554 seconds
Total inference time: 0.687 seconds
AUC ROC: 0.937707


Results scoring model
   AUC ROC   = 0.975
   AUC PR    = 0.971683
   CLL	      = -0.198752
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.343 seconds
Parameter learned model CLL: -0.198752


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.913, 1, 5], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.913, 1, 5], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.913, 1, 5], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.49e-08, 0, 5], 'true,false': [0.913, 1, 5], 'false': [3.73e-09, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.913, 1, 5], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.913, 1, 5], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.913, 1, 5], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.913, 1, 5], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.913, 1, 5], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.913, 1, 5], 'false': [0.0, 9, 0]}]]
[{'': [0.0826446280991734, -9.25185853854297e-18], 'true': [0.0, 0.1388888888888887]}, {'': [0.08022859448035437, 0.0], 'true': [0.0, 0.13888888888888884]}, {'': [0.07795329105987849, -1.5419764230904951e-18], 'true': [-4.4408920985006264e-17, 0.13888888888888887]}, {'': [0.0769266317207714, 1.5419764230904951e-18], 'true': [4.4408920985006264e-17, 0.13888888888888898]}, {'': [0.07660852894666483, 0.0], 'true': [-2.2204460492503132e-17, 0.13888888888888884]}, {'': [0.07652732959289589, 0.0], 'true': [0.0, 0.13888888888888887]}, {'': [0.07651425463412206, 0.0], 'true': [-5.551115123125783e-18, 0.1388888888888889]}, {'': [0.07651582327575256, 0.0], 'true': [0.0, 0.13888888888888887]}, {'': [0.07651551421019144, 0.0], 'true': [0.0, 0.13888888888888892]}, {'': [0.07650906807961054, -7.709882115452476e-19], 'true': [0.0, 0.13888888888888887]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.46125983910675533;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3488463256948422;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783627;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.26212705508354184;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.19945264276423433;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.15451336627983223;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.12179491558002796;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.09745354768081688;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.07895233872555124;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06419184008202622;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.937707
   AUC PR    = 0.29769
   CLL	      = -0.338906
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 0.561 seconds
Total inference time: 0.762 seconds
AUC ROC: 0.937707


Results scoring model
   AUC ROC   = 0.975
   AUC PR    = 0.971683
   CLL	      = -0.198752
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.342 seconds
Refined model CLL: -0.198752


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.937707
   AUC PR    = 0.29769
   CLL	      = -0.338906
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 1.8000000000000003 seconds
Total inference time: 0.687 seconds
AUC ROC: 0.937707
Total revision time: 1.8000000000000003
Best scored revision CLL: -0.198752


Dataset: 1_imdb_uwcse, Fold: 1, Type: Transfer (trRDN-B), Time: 00:05:45
{'AUC ROC': 0.937707, 'AUC PR': 0.29769, 'CLL': -0.338906, 'Precision': [0.089744, 0.5], 'Recall': 1.0, 'F1': 0.164706, 'Learning time': 1.8000000000000003, 'Inference time': 0.687, 'parameter_10': {'AUC ROC': 0.937707, 'AUC PR': 0.29769, 'CLL': -0.338906, 'Precision': [0.089744, 0.5], 'Recall': 1.0, 'F1': 0.164706, 'Learning time': 0.554, 'Inference time': 0.687}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6302322013528495;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.4930252128087158;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3713223124091624;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.2802444957903803;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.092691276189261;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.215871968382499;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.17024717710075593;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.13713633723655955;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.152743858093671;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.11243535096764834;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.06842697784420272;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.09352720014861136;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.06419184008202619;  // std dev = 4.56e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.937707
   AUC PR    = 0.29769
   CLL	      = -0.374839
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 0.595 seconds
Total inference time: 0.711 seconds
AUC ROC: 0.937707


Results scoring model
   AUC ROC   = 0.982222
   AUC PR    = 0.978923
   CLL	      = -0.170236
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 0.371 seconds
Parameter learned model CLL: -0.170236


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.943, 1, 8], 'false': [0.0, 14, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 7], 'true,false': [0.943, 1, 8], 'false': [7.45e-09, 14, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.943, 1, 8], 'false': [1.18e-08, 14, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.58e-08, 0, 7], 'true,false': [0.943, 1, 8], 'false': [5.27e-09, 14, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.943, 1, 8], 'false': [0.0, 14, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.29e-08, 0, 7], 'true,false': [0.943, 1, 8], 'false': [3.73e-09, 14, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.943, 1, 8], 'false': [0.0, 14, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [5.27e-09, 0, 7], 'true,false': [0.943, 1, 8], 'false': [3.73e-09, 14, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.943, 1, 8], 'false': [3.73e-09, 14, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.943, 1, 8], 'false': [4.56e-09, 14, 0]}]]
[{'': [0.05859374999999978, -1.1895246692412391e-17], 'true': [-2.5376526277146434e-16, 0.09876543209876527]}, {'': [0.057515444633959856, 3.96508223080413e-18], 'true': [6.344131569286608e-17, 0.09876543209876543]}, {'': [0.0565119812458999, 9.912705577010326e-18], 'true': [-6.344131569286608e-17, 0.09876543209876543]}, {'': [0.05608062944581205, 1.982541115402065e-18], 'true': [9.516197353929913e-17, 0.0987654320987655]}, {'': [0.05595856028678099, -2.9738116731030977e-18], 'true': [-3.172065784643304e-17, 0.09876543209876544]}, {'': [0.055935650195101924, 9.912705577010326e-19], 'true': [2.3790493384824782e-17, 0.0987654320987654]}, {'': [0.055939728240202, -9.912705577010326e-19], 'true': [-1.586032892321652e-17, 0.09876543209876544]}, {'': [0.05594852160616726, 9.912705577010326e-19], 'true': [3.96508223080413e-18, 0.0987654320987654]}, {'': [0.05595540271197706, 9.912705577010326e-19], 'true': [-7.93016446160826e-18, 0.09876543209876541]}, {'': [0.055958808865723894, 1.4869058365515489e-18], 'true': [0.0, 0.09876543209876543]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.7580193346218546;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5271825966931345;  // std dev = 0.860, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.4056385501765182;  // std dev = 0.846, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.6022067598868535;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.4945485110560537;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2730154932445251;  // std dev = 0.806, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.19576571103037838;  // std dev = 0.796, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.38685445890858927;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.092691276189261;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.3291303369536849;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.12706642569652155;  // std dev = 0.773, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.08962361053065808;  // std dev = 0.766, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.2739895046776022;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.24399966084790903;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.05499144997217449;  // std dev = 0.751, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.152743858093671;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.03550328766921902;  // std dev = 0.744, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.2135840155223403;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06842697784420272;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.19617445246750242;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.01630711161972962;  // std dev = 0.732, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.06419184008202619;  // std dev = 4.56e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.93069
   AUC PR    = 0.281989
   CLL	      = -0.341891
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 1.074 seconds
Total inference time: 0.728 seconds
AUC ROC: 0.93069


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.143364
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 0.365 seconds
Refined model CLL: -0.143364


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.93069
   AUC PR    = 0.281989
   CLL	      = -0.341891
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 2.4050000000000002 seconds
Total inference time: 0.728 seconds
AUC ROC: 0.93069
Total revision time: 2.4050000000000002
Best scored revision CLL: -0.143364


Dataset: 1_imdb_uwcse, Fold: 1, Type: Transfer (trRDN-B), Time: 00:05:49
{'AUC ROC': 0.93069, 'AUC PR': 0.281989, 'CLL': -0.341891, 'Precision': [0.089744, 0.5], 'Recall': 1.0, 'F1': 0.164706, 'Learning time': 2.4050000000000002, 'Inference time': 0.728, 'parameter_15': {'AUC ROC': 0.937707, 'AUC PR': 0.29769, 'CLL': -0.374839, 'Precision': [0.089744, 0.5], 'Recall': 1.0, 'F1': 0.164706, 'Learning time': 0.595, 'Inference time': 0.711}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6581489350995123;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else return -0.14185106490048782;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5580193346218546;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.4419486100244408;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.335411394950943;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else return -0.10159632948783628;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.25176837314502193;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else return -0.09269127618926096;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.19047961032437186;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.14620194507639955;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else return -0.07877675473109172;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.1138936946560747;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.08989956180301864;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else return -0.06842697784420271;  // std dev = 3.73e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.07174810215160456;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else return -0.06419184008202619;  // std dev = 6.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.937707
   AUC PR    = 0.29769
   CLL	      = -0.319241
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 0.607 seconds
Total inference time: 0.712 seconds
AUC ROC: 0.937707


Results scoring model
   AUC ROC   = 0.955
   AUC PR    = 0.947702
   CLL	      = -0.24299
   Precision = 0.869565 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.930233


Total scoring time: 0.376 seconds
Parameter learned model CLL: -0.24299


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.549, 3, 12], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [1.549, 3, 12], 'false': [7.45e-09, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.549, 3, 12], 'false': [1.18e-08, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [1.549, 3, 12], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.549, 3, 12], 'false': [7.45e-09, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.49e-08, 0, 8], 'true,false': [1.549, 3, 12], 'false': [7.45e-09, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.549, 3, 12], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 8], 'true,false': [1.549, 3, 12], 'false': [5.27e-09, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.549, 3, 12], 'false': [3.73e-09, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.549, 3, 12], 'false': [6.45e-09, 17, 0]}]]
[{'': [0.11342155009451807, -1.3061447348531253e-17], 'true': [-2.220446049250313e-16, 0.15999999999999984]}, {'': [0.11026104026543972, 3.2653618371328133e-18], 'true': [1.1102230246251565e-16, 0.15999999999999998]}, {'': [0.10726584576596739, 8.163404592832034e-18], 'true': [-1.1102230246251565e-16, 0.16000000000000006]}, {'': [0.10587692313179041, 0.0], 'true': [1.1102230246251565e-16, 0.16]}, {'': [0.10542605730267096, 3.2653618371328133e-18], 'true': [-4.163336342344337e-17, 0.15999999999999998]}, {'': [0.10529719546316878, 3.2653618371328133e-18], 'true': [2.7755575615628914e-17, 0.16]}, {'': [0.10526412158131966, 0.0], 'true': [-2.0816681711721685e-17, 0.15999999999999998]}, {'': [0.10525397224612455, 1.6326809185664067e-18], 'true': [6.938893903907228e-18, 0.16000000000000003]}, {'': [0.10524372149178088, 8.163404592832033e-19], 'true': [-3.469446951953614e-18, 0.16]}, {'': [0.10522710943618054, 2.44902137784961e-18], 'true': [0.0, 0.16]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.14185106490048782;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, A) )
%   | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.5553664367462846;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, A) )
%   | | then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.4175135841583098;  // std dev = 4.21e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.10159632948783628;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, A) )
%   | | then return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.3207118471601497;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.09269127618926096;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, A) )
%   | | | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, A) )
%   | | then return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.20975771563253562;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.07877675473109172;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, A) )
%   | | then return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.17709649774527736;  // std dev = 1.05e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, A) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.15274385809367094;  // std dev = 1.05e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.06842697784420271;  // std dev = 3.73e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, A) )
%   | | then return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.13400703000801117;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.06419184008202619;  // std dev = 6.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.899921
   AUC PR    = 0.129453
   CLL	      = -0.285314
   Precision = 0.138756 at threshold = 0.5
   Recall    = 0.828571
   F1        = 0.237705


Total learning time: 1.497 seconds
Total inference time: 0.74 seconds
AUC ROC: 0.899921


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.38 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.899921
   AUC PR    = 0.129453
   CLL	      = -0.285314
   Precision = 0.138756 at threshold = 0.5
   Recall    = 0.828571
   F1        = 0.237705


Total learning time: 2.86 seconds
Total inference time: 0.74 seconds
AUC ROC: 0.899921
Total revision time: 2.86
Best scored revision CLL: -0.094637


Dataset: 1_imdb_uwcse, Fold: 1, Type: Transfer (trRDN-B), Time: 00:05:54
{'AUC ROC': 0.899921, 'AUC PR': 0.129453, 'CLL': -0.285314, 'Precision': [0.138756, 0.5], 'Recall': 0.828571, 'F1': 0.237705, 'Learning time': 2.86, 'Inference time': 0.74, 'parameter_20': {'AUC ROC': 0.937707, 'AUC PR': 0.29769, 'CLL': -0.319241, 'Precision': [0.089744, 0.5], 'Recall': 1.0, 'F1': 0.164706, 'Learning time': 0.607, 'Inference time': 0.712}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.7002541982574071;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else return -0.14185106490048777;  // std dev = 7.45e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5923177366262469;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.4663086227866645;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else return -0.11231637819360635;  // std dev = 1.49e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.3523836755455071;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2649114470714586;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else return -0.09269127618926093;  // std dev = 1.18e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.20191830665679988;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else return -0.08518475138839686;  // std dev = 9.13e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.1568360839808977;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else return -0.07877675473109179;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.12403084444870502;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else return -0.07324622576333704;  // std dev = 6.45e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.09961333834675083;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else return -0.06842697784420274;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.08103171036354961;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else return -0.06419184008202619;  // std dev = 7.45e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 0.937707
   AUC PR    = 0.29769
   CLL	      = -0.34431
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 0.64 seconds
Total inference time: 0.685 seconds
AUC ROC: 0.937707


Results scoring model
   AUC ROC   = 0.9616
   AUC PR    = 0.953338
   CLL	      = -0.221272
   Precision = 0.892857 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.943396


Total scoring time: 0.374 seconds
Parameter learned model CLL: -0.221272


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.589, 3, 16], 'false': [7.45e-09, 22, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 9], 'true,false': [1.589, 3, 16], 'false': [0.0, 22, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.589, 3, 16], 'false': [1.49e-08, 22, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [3.33e-08, 0, 9], 'true,false': [1.589, 3, 16], 'false': [0.0, 22, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.589, 3, 16], 'false': [1.18e-08, 22, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.83e-08, 0, 9], 'true,false': [1.589, 3, 16], 'false': [9.13e-09, 22, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.589, 3, 16], 'false': [0.0, 22, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 9], 'true,false': [1.589, 3, 16], 'false': [6.45e-09, 22, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.589, 3, 16], 'false': [0.0, 22, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.589, 3, 16], 'false': [7.45e-09, 22, 0]}]]
[{'': [0.09566326530612335, 2.523234146875356e-18], 'true': [-2.9605947323337506e-16, 0.13296398891966735]}, {'': [0.09375212610047866, 0.0], 'true': [9.868649107779169e-17, 0.13296398891966763]}, {'': [0.09195547629862981, 1.0092936587501423e-17], 'true': [-1.4802973661668753e-16, 0.13296398891966776]}, {'': [0.09115077533107682, -6.308085367188389e-18], 'true': [1.2335811384723962e-16, 0.13296398891966746]}, {'': [0.09090469665870297, 6.308085367188389e-18], 'true': [-3.700743415417188e-17, 0.13296398891966757]}, {'': [0.09084412624271196, 3.784851220313033e-18], 'true': [3.700743415417188e-17, 0.13296398891966763]}, {'': [0.09083643067703316, 0.0], 'true': [-2.4671622769447922e-17, 0.13296398891966757]}, {'': [0.0908397600433515, 1.8924256101565167e-18], 'true': [6.1679056923619804e-18, 0.13296398891966757]}, {'': [0.09084126252455353, -1.8924256101565167e-18], 'true': [-3.0839528461809902e-18, 0.13296398891966757]}, {'': [0.09083767073124764, 2.523234146875356e-18], 'true': [0.0, 0.13296398891966757]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else return -0.14185106490048777;  // std dev = 7.45e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.11231637819360635;  // std dev = 1.49e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A) )
%   | | then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.4175135841583098;  // std dev = 5.16e-08, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A) )
%   | | then return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else return -0.09269127618926093;  // std dev = 1.18e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A) )
%   | | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.2551722425694894;  // std dev = 2.11e-08, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else return -0.08518475138839686;  // std dev = 9.13e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2097577156325356;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.2097577156325356;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.07877675473109179;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.17709649774527736;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.17709649774527736;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.07324622576333704;  // std dev = 6.45e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.15274385809367091;  // std dev = 1.83e-08, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else return -0.06842697784420274;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A) )
%   | | then return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.13400703000801117;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else return -0.06419184008202619;  // std dev = 7.45e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 0.937155
   AUC PR    = 0.136073
   CLL	      = -0.286279
   Precision = 0.138756 at threshold = 0.5
   Recall    = 0.828571
   F1        = 0.237705


Total learning time: 1.999 seconds
Total inference time: 0.764 seconds
AUC ROC: 0.937155


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.401 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.937155
   AUC PR    = 0.136073
   CLL	      = -0.286279
   Precision = 0.138756 at threshold = 0.5
   Recall    = 0.828571
   F1        = 0.237705


Total learning time: 3.4139999999999997 seconds
Total inference time: 0.764 seconds
AUC ROC: 0.937155
Total revision time: 3.4139999999999997
Best scored revision CLL: -0.094637


Dataset: 1_imdb_uwcse, Fold: 1, Type: Transfer (trRDN-B), Time: 00:06:00
{'AUC ROC': 0.937155, 'AUC PR': 0.136073, 'CLL': -0.286279, 'Precision': [0.138756, 0.5], 'Recall': 0.828571, 'F1': 0.237705, 'Learning time': 3.4139999999999997, 'Inference time': 0.764, 'parameter_25': {'AUC ROC': 0.937707, 'AUC PR': 0.29769, 'CLL': -0.34431, 'Precision': [0.089744, 0.5], 'Recall': 1.0, 'F1': 0.164706, 'Learning time': 0.64, 'Inference time': 0.685}}


Starting fold 2

Target train facts examples: 1965
Target train pos examples: 93
Target train neg examples: 3738

Target test facts examples: 422
Target test pos	 examples: 20
Target test neg examples: 341

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333703;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.926686
   AUC PR    = 0.285714
   CLL	      = -0.351876
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 0.547 seconds
Total inference time: 0.457 seconds
AUC ROC: 0.926686


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.336 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.49e-08, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [2.63e-09, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [1.86e-09, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [nan, 0.0]}, {'': [0.0, 0.0], 'true': [nan, 0.0]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [nan, -4.4408920985006264e-17]}, {'': [4.4408920985006264e-17, 0.0], 'true': [nan, 4.4408920985006264e-17]}, {'': [-2.2204460492503132e-17, 0.0], 'true': [nan, -2.2204460492503132e-17]}, {'': [0.0, 0.0], 'true': [nan, 0.0]}, {'': [-5.551115123125783e-18, -1.3877787807814458e-18], 'true': [nan, -5.551115123125783e-18]}, {'': [0.0, 1.3877787807814458e-18], 'true': [nan, 0.0]}, {'': [0.0, 6.938893903907229e-19], 'true': [nan, 0.0]}, {'': [0.0, 0.0], 'true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333703;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.926686
   AUC PR    = 0.285714
   CLL	      = -0.351876
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 0.53 seconds
Total inference time: 0.418 seconds
AUC ROC: 0.926686


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.334 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.926686
   AUC PR    = 0.285714
   CLL	      = -0.351876
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 1.747 seconds
Total inference time: 0.457 seconds
AUC ROC: 0.926686
Total revision time: 1.747
Best scored revision CLL: -0.094637


Dataset: 1_imdb_uwcse, Fold: 2, Type: Transfer (trRDN-B), Time: 00:06:03
{'AUC ROC': 0.926686, 'AUC PR': 0.285714, 'CLL': -0.351876, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 1.747, 'Inference time': 0.457, 'parameter_5': {'AUC ROC': 0.926686, 'AUC PR': 0.285714, 'CLL': -0.351876, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 0.547, 'Inference time': 0.457}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.6914822684328454;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.585186000855536;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.46125983910675555;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.34884632569484225;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783627;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2621270550835418;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.19945264276423433;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.15451336627983223;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.12179491558002793;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.09745354768081689;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.07895233872555125;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06419184008202622;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.956745
   AUC PR    = 0.591831
   CLL	      = -0.267892
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 0.629 seconds
Total inference time: 0.456 seconds
AUC ROC: 0.956745


Results scoring model
   AUC ROC   = 0.975
   AUC PR    = 0.971683
   CLL	      = -0.198752
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.351 seconds
Parameter learned model CLL: -0.198752


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.913, 1, 5], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.913, 1, 5], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.913, 1, 5], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.49e-08, 0, 5], 'true,false': [0.913, 1, 5], 'false': [3.73e-09, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.913, 1, 5], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.913, 1, 5], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.913, 1, 5], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.913, 1, 5], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.913, 1, 5], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.913, 1, 5], 'false': [0.0, 9, 0]}]]
[{'': [0.0826446280991734, -9.25185853854297e-18], 'true': [0.0, 0.13888888888888898]}, {'': [0.0802285944803542, 0.0], 'true': [0.0, 0.13888888888888898]}, {'': [0.07795329105987857, -1.5419764230904951e-18], 'true': [-4.4408920985006264e-17, 0.13888888888888887]}, {'': [0.0769266317207714, 1.5419764230904951e-18], 'true': [4.4408920985006264e-17, 0.13888888888888892]}, {'': [0.07660852894666481, 0.0], 'true': [-2.2204460492503132e-17, 0.13888888888888887]}, {'': [0.07652732959289589, 0.0], 'true': [0.0, 0.13888888888888887]}, {'': [0.07651425463412208, 0.0], 'true': [-5.551115123125783e-18, 0.1388888888888889]}, {'': [0.07651582327575257, 0.0], 'true': [0.0, 0.1388888888888889]}, {'': [0.07651551421019141, 0.0], 'true': [0.0, 0.13888888888888892]}, {'': [0.07650906807961054, -7.709882115452476e-19], 'true': [0.0, 0.13888888888888887]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.6914822684328454;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.585186000855536;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.46125983910675555;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.34884632569484225;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783627;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2621270550835418;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.19945264276423433;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.15451336627983223;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.12179491558002793;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.09745354768081689;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.07895233872555125;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06419184008202622;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.956745
   AUC PR    = 0.591831
   CLL	      = -0.267892
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 0.63 seconds
Total inference time: 0.449 seconds
AUC ROC: 0.956745


Results scoring model
   AUC ROC   = 0.975
   AUC PR    = 0.971683
   CLL	      = -0.198752
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.36 seconds
Refined model CLL: -0.198752


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.956745
   AUC PR    = 0.591831
   CLL	      = -0.267892
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 1.9699999999999998 seconds
Total inference time: 0.456 seconds
AUC ROC: 0.956745
Total revision time: 1.9699999999999998
Best scored revision CLL: -0.198752


Dataset: 1_imdb_uwcse, Fold: 2, Type: Transfer (trRDN-B), Time: 00:06:06
{'AUC ROC': 0.956745, 'AUC PR': 0.591831, 'CLL': -0.267892, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 1.9699999999999998, 'Inference time': 0.456, 'parameter_10': {'AUC ROC': 0.956745, 'AUC PR': 0.591831, 'CLL': -0.267892, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 0.629, 'Inference time': 0.456}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.4945125714631486;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.4231206960529885;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.34367606239514203;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.267871418059721;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.20365765544213874;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.1531477270126841;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.11488033872832902;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.08631518284931715;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else return -0.07324622576333704;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.06505762125972504;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.04920314504362314;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else return -0.0641918400820262;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.956745
   AUC PR    = 0.591831
   CLL	      = -0.202332
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 0.597 seconds
Total inference time: 0.469 seconds
AUC ROC: 0.956745


Results scoring model
   AUC ROC   = 0.937778
   AUC PR    = 0.937383
   CLL	      = -0.298127
   Precision = 0.789474 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.882353


Total scoring time: 0.363 seconds
Parameter learned model CLL: -0.298127


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.595, 4, 7], 'false': [0.0, 11, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [1.595, 4, 7], 'false': [5.27e-09, 11, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.595, 4, 7], 'false': [7.45e-09, 11, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [1.595, 4, 7], 'false': [5.27e-09, 11, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.595, 4, 7], 'false': [0.0, 11, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.49e-08, 0, 8], 'true,false': [1.595, 4, 7], 'false': [3.73e-09, 11, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.595, 4, 7], 'false': [0.0, 11, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 8], 'true,false': [1.595, 4, 7], 'false': [0.0, 11, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.595, 4, 7], 'false': [2.63e-09, 11, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.595, 4, 7], 'false': [0.0, 11, 0]}]]
[{'': [0.16620498614958412, -1.0092936587501423e-17], 'true': [-2.220446049250313e-16, 0.23140495867768587]}, {'': [0.15538013964699846, 2.523234146875356e-18], 'true': [1.1102230246251565e-16, 0.23140495867768596]}, {'': [0.14489519126818254, 5.046468293750712e-18], 'true': [-1.1102230246251565e-16, 0.23140495867768598]}, {'': [0.13942991915957886, 2.523234146875356e-18], 'true': [1.1102230246251565e-16, 0.2314049586776859]}, {'': [0.1373113145094929, 0.0], 'true': [-4.163336342344337e-17, 0.23140495867768596]}, {'': [0.13650866625983724, 1.261617073437678e-18], 'true': [2.7755575615628914e-17, 0.23140495867768596]}, {'': [0.13616561614592795, 0.0], 'true': [-2.0816681711721685e-17, 0.23140495867768598]}, {'': [0.13598023853587102, 0.0], 'true': [6.938893903907228e-18, 0.23140495867768598]}, {'': [0.13584558854040185, 6.30808536718839e-19], 'true': [-3.469446951953614e-18, 0.23140495867768596]}, {'': [0.13572439298415798, 0.0], 'true': [0.0, 0.23140495867768596]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(G, A, H), publication(I, B) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(G, A, H), publication(I, B) )
%   | | | then return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.22373365448410584;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then return 0.4588648915344537;  // std dev = 0.850, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.1888683221574974;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then return 0.44115219622841795;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.13216112131032057;  // std dev = 0.925, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2557002943717437;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, B), ta(E, A, F) )
%   | | then return 0.2810744360528028;  // std dev = 0.828, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.11048400362694895;  // std dev = 1.087, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then return 0.2771357731832045;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.04357147129112533;  // std dev = 0.904, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.18201876277439832;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then return 0.18482234711852544;  // std dev = 0.822, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.052867151216256535;  // std dev = 1.075, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then return 0.1945562581511755;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(G, A, H) )
%   | | | then return -0.004016663816925808;  // std dev = 0.891, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.12905826370611484;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.07324622576333704;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return -0.023265210401061203;  // std dev = 0.463, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.030723343718920326;  // std dev = 0.903, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.26514302617377056;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then return 0.12938602715581118;  // std dev = 0.822, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.022701731348205235;  // std dev = 1.021, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.0641918400820262;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.970528
   AUC PR    = 0.674728
   CLL	      = -0.189151
   Precision = 0.551724 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.653061


Total learning time: 1.375 seconds
Total inference time: 0.515 seconds
AUC ROC: 0.970528


Results scoring model
   AUC ROC   = 0.982222
   AUC PR    = 0.982198
   CLL	      = -0.238588
   Precision = 0.928571 at threshold = 0.5
   Recall    = 0.866667
   F1        = 0.896552


Total scoring time: 0.386 seconds
Refined model CLL: -0.238588


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.970528
   AUC PR    = 0.674728
   CLL	      = -0.189151
   Precision = 0.551724 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.653061


Total learning time: 2.721 seconds
Total inference time: 0.515 seconds
AUC ROC: 0.970528
Total revision time: 2.721
Best scored revision CLL: -0.238588


Dataset: 1_imdb_uwcse, Fold: 2, Type: Transfer (trRDN-B), Time: 00:06:10
{'AUC ROC': 0.970528, 'AUC PR': 0.674728, 'CLL': -0.189151, 'Precision': [0.551724, 0.5], 'Recall': 0.8, 'F1': 0.653061, 'Learning time': 2.721, 'Inference time': 0.515, 'parameter_15': {'AUC ROC': 0.956745, 'AUC PR': 0.591831, 'CLL': -0.202332, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 0.597, 'Inference time': 0.469}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4831489350995123;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4136573287083126;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.33660537396486656;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.26297558544868993;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   else return -0.10159632948783628;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.20032545170291105;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.15079889954054404;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.11312434025950244;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   else return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.08492715391619828;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367094;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.0639158787103428;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   else return -0.06842697784420272;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.04824192700154654;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   else return -0.06419184008202619;  // std dev = 4.56e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.956745
   AUC PR    = 0.591831
   CLL	      = -0.199421
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 0.666 seconds
Total inference time: 0.459 seconds
AUC ROC: 0.956745


Results scoring model
   AUC ROC   = 0.925
   AUC PR    = 0.924686
   CLL	      = -0.31929
   Precision = 0.769231 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.869565


Total scoring time: 0.375 seconds
Parameter learned model CLL: -0.31929


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.936, 6, 10], 'false': [0.0, 14, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 10], 'true,false': [1.936, 6, 10], 'false': [7.45e-09, 14, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.936, 6, 10], 'false': [1.18e-08, 14, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [3.65e-08, 0, 10], 'true,false': [1.936, 6, 10], 'false': [0.0, 14, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.936, 6, 10], 'false': [7.45e-09, 14, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.83e-08, 0, 10], 'true,false': [1.936, 6, 10], 'false': [3.73e-09, 14, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.936, 6, 10], 'false': [0.0, 14, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 10], 'true,false': [1.936, 6, 10], 'false': [5.27e-09, 14, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.936, 6, 10], 'false': [3.73e-09, 14, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.936, 6, 10], 'false': [4.56e-09, 14, 0]}]]
[{'': [0.17751479289940847, -1.1895246692412391e-17], 'true': [-8.881784197001253e-17, 0.2343749999999999]}, {'': [0.16636650341512277, 3.96508223080413e-18], 'true': [8.881784197001253e-17, 0.23437499999999997]}, {'': [0.15555772842349233, 9.912705577010326e-18], 'true': [-1.7763568394002506e-16, 0.23437500000000003]}, {'': [0.14988331196335486, 0.0], 'true': [1.3322676295501878e-16, 0.23437500000000006]}, {'': [0.147661037683121, 3.96508223080413e-18], 'true': [-4.4408920985006264e-17, 0.23437499999999994]}, {'': [0.14680918218580777, 9.912705577010326e-19], 'true': [3.3306690738754695e-17, 0.234375]}, {'': [0.14644094893159423, -9.912705577010326e-19], 'true': [-2.7755575615628914e-17, 0.234375]}, {'': [0.14624146460162904, 1.982541115402065e-18], 'true': [5.551115123125783e-18, 0.23437499999999997]}, {'': [0.14609832187486985, 9.912705577010326e-19], 'true': [0.0, 0.234375]}, {'': [0.14597175216419156, 1.4869058365515489e-18], 'true': [0.0, 0.23437499999999997]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(D, B), publication(E, A) )
%   | | then return 0.22373365448410584;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.38460588036607957;  // std dev = 1.081, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.5920095868646771;  // std dev = 0.921, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then return 0.504064345391147;  // std dev = 0.875, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( ta(G, A, H), publication(I, B) )
%   | | | then return 0.40135584540850616;  // std dev = 0.759, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1993123050508187;  // std dev = 1.337, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then return 0.39001282549907834;  // std dev = 0.872, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( ta(G, A, H), publication(I, B) )
%   | | | then return 0.319173297323599;  // std dev = 0.752, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1570960772068683;  // std dev = 1.333, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return -0.10159632948783628;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.09212004881411287;  // std dev = 1.084, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.1301538040070039;  // std dev = 1.008, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.3454888442068738;  // std dev = 0.887, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then return 0.2510434737933998;  // std dev = 0.863, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.01681254855006284;  // std dev = 0.981, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.15584013591542709;  // std dev = 1.125, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then return 0.0328742898048691;  // std dev = 0.983, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(F, A), publication(G, B) )
%   | | | then return 0.05065326903732934;  // std dev = 1.087, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.23729800862708358;  // std dev = 0.865, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(D, B), ta(E, A, F) )
%   | | then if ( publication(D, G), ta(H, G, I) )
%   | | | then return -0.015504794365276853;  // std dev = 0.981, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.38067279606527116;  // std dev = 0.080, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(J, B) )
%   | | | then return -0.018166680398195124;  // std dev = 0.989, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.10571490894642865;  // std dev = 0.825, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367094;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return -0.02383944243737034;  // std dev = 0.887, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.03854041291180181;  // std dev = 1.049, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.17102590760511652;  // std dev = 0.921, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.06842697784420272;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(D, B), ta(E, A, F) )
%   | | then if ( publication(D, G), ta(H, G, I) )
%   | | | then return -0.01708919634865866;  // std dev = 0.972, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3014238394826049;  // std dev = 0.070, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(J, B) )
%   | | | then return -0.044046240563128634;  // std dev = 0.972, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.059265103696727245;  // std dev = 0.810, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.06419184008202619;  // std dev = 4.56e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.963783
   AUC PR    = 0.614423
   CLL	      = -0.187166
   Precision = 0.380952 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.516129


Total learning time: 2.629 seconds
Total inference time: 0.491 seconds
AUC ROC: 0.963783


Results scoring model
   AUC ROC   = 0.97875
   AUC PR    = 0.981964
   CLL	      = -0.263352
   Precision = 0.9 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.9


Total scoring time: 0.403 seconds
Refined model CLL: -0.263352


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.963783
   AUC PR    = 0.614423
   CLL	      = -0.187166
   Precision = 0.380952 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.516129


Total learning time: 4.073 seconds
Total inference time: 0.491 seconds
AUC ROC: 0.963783
Total revision time: 4.073
Best scored revision CLL: -0.263352


Dataset: 1_imdb_uwcse, Fold: 2, Type: Transfer (trRDN-B), Time: 00:06:16
{'AUC ROC': 0.963783, 'AUC PR': 0.614423, 'CLL': -0.187166, 'Precision': [0.380952, 0.5], 'Recall': 0.8, 'F1': 0.516129, 'Learning time': 4.073, 'Inference time': 0.491, 'parameter_20': {'AUC ROC': 0.956745, 'AUC PR': 0.591831, 'CLL': -0.199421, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 0.666, 'Inference time': 0.459}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.5103228481429906;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.43626645181029405;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   else return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.35345603789484065;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   else return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.27462258962356734;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   else return -0.10159632948783628;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.20826977829850507;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   else return -0.09269127618926094;  // std dev = 9.13e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.156439383120457;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.11738593845040246;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   else return -0.07877675473109173;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.08833350664316307;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367094;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.06674591472426716;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   else return -0.06842697784420272;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.050644331949424214;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   else return -0.06419184008202619;  // std dev = 6.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.956745
   AUC PR    = 0.591831
   CLL	      = -0.206521
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 0.621 seconds
Total inference time: 0.471 seconds
AUC ROC: 0.956745


Results scoring model
   AUC ROC   = 0.904
   AUC PR    = 0.899799
   CLL	      = -0.345248
   Precision = 0.757576 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.862069


Total scoring time: 0.392 seconds
Parameter learned model CLL: -0.345248


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [2.284, 8, 15], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 10], 'true,false': [2.284, 8, 15], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [2.284, 8, 15], 'false': [1.49e-08, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [3.65e-08, 0, 10], 'true,false': [2.284, 8, 15], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [2.284, 8, 15], 'false': [9.13e-09, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.83e-08, 0, 10], 'true,false': [2.284, 8, 15], 'false': [7.45e-09, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [2.284, 8, 15], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 10], 'true,false': [2.284, 8, 15], 'false': [3.73e-09, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [2.284, 8, 15], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [2.284, 8, 15], 'false': [6.45e-09, 17, 0]}]]
[{'': [0.1836547291092757, -3.2653618371328133e-18], 'true': [-8.881784197001253e-17, 0.2268431001890357]}, {'': [0.1750425482093074, 0.0], 'true': [8.881784197001253e-17, 0.2268431001890359]}, {'': [0.16671304788914482, 1.3061447348531253e-17], 'true': [-1.7763568394002506e-16, 0.22684310018903583]}, {'': [0.1624150738263341, 0.0], 'true': [1.3322676295501878e-16, 0.22684310018903583]}, {'': [0.16077305177130577, 4.89804275569922e-18], 'true': [-4.4408920985006264e-17, 0.22684310018903592]}, {'': [0.1601616105385899, 3.2653618371328133e-18], 'true': [3.3306690738754695e-17, 0.22684310018903603]}, {'': [0.15990486542151425, -2.44902137784961e-18], 'true': [-2.7755575615628914e-17, 0.22684310018903592]}, {'': [0.15976680699636264, 8.163404592832033e-19], 'true': [5.551115123125783e-18, 0.22684310018903592]}, {'': [0.15966474902125322, -8.163404592832033e-19], 'true': [0.0, 0.2268431001890359]}, {'': [0.15957048770599436, 2.44902137784961e-18], 'true': [0.0, 0.22684310018903595]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( publication(D, F), publication(E, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.7470378239884011;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( publication(D, F), publication(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.5170719622367217;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.3608619633541096;  // std dev = 1.292, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.6364661005423132;  // std dev = 0.951, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then return 0.523925622632171;  // std dev = 0.873, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.08362350080425852;  // std dev = 1.025, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.35937808307561964;  // std dev = 1.360, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   else return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(D, B), publication(E, A) )
%   | | then if ( publication(D, F), publication(E, F) )
%   | | | then return -0.14259864439472592;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.3609166443984232;  // std dev = 0.830, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.19576176174709764;  // std dev = 1.266, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.417975369486001;  // std dev = 0.890, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.10159632948783628;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then return 0.33813141666950264;  // std dev = 0.857, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( ta(G, A, H) )
%   | | | then return -0.006896329484528152;  // std dev = 1.009, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.21620425270188162;  // std dev = 1.214, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   else return -0.09269127618926094;  // std dev = 9.13e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then return 0.2561276000523029;  // std dev = 0.857, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( ta(G, A, H) )
%   | | | then return -0.005396575841231044;  // std dev = 1.009, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.1682723405725158;  // std dev = 1.200, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then if ( ta(F, A, G) )
%   | | | then return 0.14575283954928636;  // std dev = 0.838, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.14918776890090737;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(H, A), publication(I, B) )
%   | | | then return 0.061205142801193095;  // std dev = 0.934, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.24091563416591757;  // std dev = 0.824, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.07877675473109173;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then if ( ta(E, G, H), publication(I, G) )
%   | | | then return -0.25311492432229343;  // std dev = 0.684, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.22194629105960118;  // std dev = 0.782, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( ta(J, A, K) )
%   | | | then return 0.04385030722718317;  // std dev = 1.065, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.19148782066890377;  // std dev = 0.636, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367094;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then return 0.15779537331209523;  // std dev = 0.785, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | then return -0.12849727062091673;  // std dev = 0.773, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.08331398044038119;  // std dev = 1.242, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   else return -0.06842697784420272;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then if ( ta(F, A, G) )
%   | | | then return 0.06502919227460169;  // std dev = 0.756, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.09713821815068008;  // std dev = 0.774, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(H, A), publication(I, B) )
%   | | | then return 0.006988958524197485;  // std dev = 0.914, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.15304254594011357;  // std dev = 0.829, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.06419184008202619;  // std dev = 6.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.960557
   AUC PR    = 0.594425
   CLL	      = -0.201213
   Precision = 0.333333 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.470588


Total learning time: 3.437 seconds
Total inference time: 0.507 seconds
AUC ROC: 0.960557


Results scoring model
   AUC ROC   = 0.9896
   AUC PR    = 0.990364
   CLL	      = -0.238142
   Precision = 0.92 at threshold = 0.5
   Recall    = 0.92
   F1        = 0.92


Total scoring time: 0.418 seconds
Refined model CLL: -0.238142


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.960557
   AUC PR    = 0.594425
   CLL	      = -0.201213
   Precision = 0.333333 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.470588


Total learning time: 4.867999999999999 seconds
Total inference time: 0.507 seconds
AUC ROC: 0.960557
Total revision time: 4.867999999999999
Best scored revision CLL: -0.238142


Dataset: 1_imdb_uwcse, Fold: 2, Type: Transfer (trRDN-B), Time: 00:06:22
{'AUC ROC': 0.960557, 'AUC PR': 0.594425, 'CLL': -0.201213, 'Precision': [0.333333, 0.5], 'Recall': 0.8, 'F1': 0.470588, 'Learning time': 4.867999999999999, 'Inference time': 0.507, 'parameter_25': {'AUC ROC': 0.956745, 'AUC PR': 0.591831, 'CLL': -0.206521, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 0.621, 'Inference time': 0.471}}


Starting fold 3

Target train facts examples: 2225
Target train pos examples: 104
Target train neg examples: 3988

Target test facts examples: 162
Target test pos	 examples: 9
Target test neg examples: 91

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.36236334632262296;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2807538536965855;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.21248070121827137;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.1594898822817116;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.11975529938157474;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.09028081829440963;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.06840311429118533;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.052078905701252655;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.965812
   AUC PR    = 0.668512
   CLL	      = -0.160008
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 0.546 seconds
Total inference time: 0.351 seconds
AUC ROC: 0.965812


Results scoring model
   AUC ROC   = 0.96
   AUC PR    = 0.961111
   CLL	      = -0.255004
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.356 seconds
Parameter learned model CLL: -0.255004


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.05e-08, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}]]
[{'': [0.1388888888888887, 0.0], 'true': [1.4802973661668753e-16, 0.22222222222222224]}, {'': [0.12949546172365026, 0.0], 'true': [0.0, 0.2222222222222222]}, {'': [0.12042365933938219, 0.0], 'true': [3.700743415417188e-17, 0.22222222222222224]}, {'': [0.11578691708010203, 0.0], 'true': [-3.700743415417188e-17, 0.2222222222222222]}, {'': [0.11403960634908417, 0.0], 'true': [0.0, 0.2222222222222222]}, {'': [0.11339988962867113, 0.0], 'true': [0.0, 0.2222222222222222]}, {'': [0.1131362198438639, 0.0], 'true': [0.0, 0.22222222222222224]}, {'': [0.11299535166074005, 0.0], 'true': [0.0, 0.22222222222222224]}, {'': [0.11288945137740025, 0.0], 'true': [-4.625929269271485e-18, 0.2222222222222222]}, {'': [0.11278916549921703, 0.0], 'true': [-2.3129646346357427e-18, 0.22222222222222224]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.36236334632262296;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2807538536965855;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.21248070121827137;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.1594898822817116;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.11975529938157474;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.09028081829440963;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.06840311429118533;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.052078905701252655;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.965812
   AUC PR    = 0.668512
   CLL	      = -0.160008
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 0.601 seconds
Total inference time: 0.368 seconds
AUC ROC: 0.965812


Results scoring model
   AUC ROC   = 0.96
   AUC PR    = 0.961111
   CLL	      = -0.255004
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.355 seconds
Refined model CLL: -0.255004


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.965812
   AUC PR    = 0.668512
   CLL	      = -0.160008
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 1.858 seconds
Total inference time: 0.351 seconds
AUC ROC: 0.965812
Total revision time: 1.858
Best scored revision CLL: -0.255004


Dataset: 1_imdb_uwcse, Fold: 3, Type: Transfer (trRDN-B), Time: 00:06:25
{'AUC ROC': 0.965812, 'AUC PR': 0.668512, 'CLL': -0.160008, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 1.858, 'Inference time': 0.351, 'parameter_5': {'AUC ROC': 0.965812, 'AUC PR': 0.668512, 'CLL': -0.160008, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 0.546, 'Inference time': 0.351}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3927941835770488;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.32092546969114216;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.25206564481433;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.10159632948783628;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.19292386438161405;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.14565792934085833;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.08518475138839687;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.10936989620321738;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.08203625432353104;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07324622576333704;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.152743858093671;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.06159524961500464;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.04632822707005526;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.965812
   AUC PR    = 0.668512
   CLL	      = -0.157584
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 0.575 seconds
Total inference time: 0.358 seconds
AUC ROC: 0.965812


Results scoring model
   AUC ROC   = 0.97
   AUC PR    = 0.971071
   CLL	      = -0.238241
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.364 seconds
Parameter learned model CLL: -0.238241


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.095, 2, 3], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 7], 'true,false': [1.095, 2, 3], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.095, 2, 3], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.58e-08, 0, 7], 'true,false': [1.095, 2, 3], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.095, 2, 3], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.29e-08, 0, 7], 'true,false': [1.095, 2, 3], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.095, 2, 3], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [5.27e-09, 0, 7], 'true,false': [1.095, 2, 3], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.095, 2, 3], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.095, 2, 3], 'false': [0.0, 8, 0]}]]
[{'': [0.1388888888888887, -6.938893903907228e-18], 'true': [-2.5376526277146434e-16, 0.23999999999999994]}, {'': [0.1259387232272886, 0.0], 'true': [6.344131569286608e-17, 0.24]}, {'': [0.11335895726514751, -1.734723475976807e-18], 'true': [-6.344131569286608e-17, 0.24000000000000005]}, {'': [0.10665316473722865, 0.0], 'true': [9.516197353929913e-17, 0.24000000000000005]}, {'': [0.10396904096521702, 0.0], 'true': [-3.172065784643304e-17, 0.24000000000000005]}, {'': [0.10291505880602676, 0.0], 'true': [2.3790493384824782e-17, 0.24]}, {'': [0.10244944444543101, 0.0], 'true': [-1.586032892321652e-17, 0.24000000000000005]}, {'': [0.1021963593456879, 0.0], 'true': [3.96508223080413e-18, 0.24]}, {'': [0.10201932228448542, 0.0], 'true': [-7.93016446160826e-18, 0.24]}, {'': [0.10186850720112604, 0.0], 'true': [0.0, 0.23999999999999994]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3927941835770488;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.32092546969114216;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.25206564481433;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.10159632948783628;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.19292386438161405;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.14565792934085833;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.08518475138839687;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.10936989620321738;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.08203625432353104;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07324622576333704;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.152743858093671;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.06159524961500464;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.04632822707005526;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.965812
   AUC PR    = 0.668512
   CLL	      = -0.157584
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 0.584 seconds
Total inference time: 0.35 seconds
AUC ROC: 0.965812


Results scoring model
   AUC ROC   = 0.97
   AUC PR    = 0.971071
   CLL	      = -0.238241
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.361 seconds
Refined model CLL: -0.238241


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.965812
   AUC PR    = 0.668512
   CLL	      = -0.157584
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 1.884 seconds
Total inference time: 0.358 seconds
AUC ROC: 0.965812
Total revision time: 1.884
Best scored revision CLL: -0.238241


Dataset: 1_imdb_uwcse, Fold: 3, Type: Transfer (trRDN-B), Time: 00:06:29
{'AUC ROC': 0.965812, 'AUC PR': 0.668512, 'CLL': -0.157584, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 1.884, 'Inference time': 0.358, 'parameter_10': {'AUC ROC': 0.965812, 'AUC PR': 0.668512, 'CLL': -0.157584, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 0.575, 'Inference time': 0.358}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5170719622367218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.41257245288266;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.11231637819360638;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.3151786576185065;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.23676009386434194;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.09269127618926097;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.17806945427207505;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.08518475138839686;  // std dev = 6.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.13513671764223462;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.07877675473109172;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.103671751136855;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.08034833303035915;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.06282214181758176;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.0641918400820262;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.965812
   AUC PR    = 0.668512
   CLL	      = -0.166514
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 0.588 seconds
Total inference time: 0.352 seconds
AUC ROC: 0.965812


Results scoring model
   AUC ROC   = 0.973333
   AUC PR    = 0.971696
   CLL	      = -0.216662
   Precision = 0.882353 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.9375


Total scoring time: 0.384 seconds
Parameter learned model CLL: -0.216662


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.225, 2, 6], 'false': [0.0, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 9], 'true,false': [1.225, 2, 6], 'false': [5.27e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.225, 2, 6], 'false': [7.45e-09, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [3.33e-08, 0, 9], 'true,false': [1.225, 2, 6], 'false': [5.27e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.225, 2, 6], 'false': [0.0, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.83e-08, 0, 9], 'true,false': [1.225, 2, 6], 'false': [6.45e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.225, 2, 6], 'false': [5.27e-09, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 9], 'true,false': [1.225, 2, 6], 'false': [5.27e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.225, 2, 6], 'false': [2.63e-09, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.225, 2, 6], 'false': [0.0, 13, 0]}]]
[{'': [0.10380622837370206, -1.2810265668751807e-17], 'true': [-2.9605947323337506e-16, 0.1874999999999999]}, {'': [0.09844144283917104, 2.135044278125301e-18], 'true': [9.868649107779169e-17, 0.18749999999999994]}, {'': [0.09331518606086639, 4.270088556250602e-18], 'true': [-1.4802973661668753e-16, 0.18749999999999992]}, {'': [0.09084434421340243, 2.135044278125301e-18], 'true': [1.2335811384723962e-16, 0.18749999999999997]}, {'': [0.08999117154139682, -2.135044278125301e-18], 'true': [-3.700743415417188e-17, 0.18750000000000003]}, {'': [0.08971636151333216, 3.2025664171879517e-18], 'true': [3.700743415417188e-17, 0.18750000000000003]}, {'': [0.08962255059016236, 2.135044278125301e-18], 'true': [-2.4671622769447922e-17, 0.1875]}, {'': [0.08957842880915151, 2.135044278125301e-18], 'true': [6.1679056923619804e-18, 0.18750000000000003]}, {'': [0.08954103829599261, 5.337610695313253e-19], 'true': [-3.0839528461809902e-18, 0.18749999999999997]}, {'': [0.08949773272692471, 0.0], 'true': [0.0, 0.1875]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3927941835770488;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.32092546969114216;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.11231637819360638;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, B) )
%   | | then return 0.405155232683126;  // std dev = 0.866, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.16236427104365;  // std dev = 0.625, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.3602256017698537;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1672876643856856;  // std dev = 1.064, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.09269127618926097;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, B) )
%   | | then return 0.2611439261244908;  // std dev = 0.866, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.056866201966501495;  // std dev = 0.591, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.08518475138839686;  // std dev = 6.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.259106327902298;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.07107509000255209;  // std dev = 1.037, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07877675473109172;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, B) )
%   | | then return 0.17812271832775034;  // std dev = 0.866, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.0052269817412714525;  // std dev = 0.567, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.20450400633969737;  // std dev = 0.076, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.018850782215849904;  // std dev = 1.017, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.17355947034121735;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.014339742193647208;  // std dev = 1.018, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.0641918400820262;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.954212
   AUC PR    = 0.493359
   CLL	      = -0.201096
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 1.006 seconds
Total inference time: 0.377 seconds
AUC ROC: 0.954212


Results scoring model
   AUC ROC   = 0.993333
   AUC PR    = 0.99322
   CLL	      = -0.18252
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 0.385 seconds
Refined model CLL: -0.18252


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.954212
   AUC PR    = 0.493359
   CLL	      = -0.201096
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 2.363 seconds
Total inference time: 0.377 seconds
AUC ROC: 0.954212
Total revision time: 2.363
Best scored revision CLL: -0.18252


Dataset: 1_imdb_uwcse, Fold: 3, Type: Transfer (trRDN-B), Time: 00:06:32
{'AUC ROC': 0.954212, 'AUC PR': 0.493359, 'CLL': -0.201096, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 2.363, 'Inference time': 0.377, 'parameter_15': {'AUC ROC': 0.965812, 'AUC PR': 0.668512, 'CLL': -0.166514, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 0.588, 'Inference time': 0.352}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.6273797043302815;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.14185106490048782;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.5328490890947368;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4239325089396988;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.3229819329672577;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.10159632948783628;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.24247055537624246;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.09269127618926096;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.18270684819255756;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.13920656791416966;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.07877675473109172;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.1073857272638388;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367094;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.0837849901638278;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.06842697784420271;  // std dev = 3.73e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.06600674956054416;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.06419184008202619;  // std dev = 5.27e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.965812
   AUC PR    = 0.668512
   CLL	      = -0.16859
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 0.616 seconds
Total inference time: 0.351 seconds
AUC ROC: 0.965812


Results scoring model
   AUC ROC   = 0.9625
   AUC PR    = 0.958643
   CLL	      = -0.236088
   Precision = 0.869565 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.930233


Total scoring time: 0.377 seconds
Parameter learned model CLL: -0.236088


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.519, 3, 10], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 10], 'true,false': [1.519, 3, 10], 'false': [7.45e-09, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.519, 3, 10], 'false': [1.18e-08, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [3.65e-08, 0, 10], 'true,false': [1.519, 3, 10], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.519, 3, 10], 'false': [7.45e-09, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.83e-08, 0, 10], 'true,false': [1.519, 3, 10], 'false': [7.45e-09, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.519, 3, 10], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 10], 'true,false': [1.519, 3, 10], 'false': [5.27e-09, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.519, 3, 10], 'false': [3.73e-09, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.519, 3, 10], 'false': [5.27e-09, 17, 0]}]]
[{'': [0.11342155009451807, -1.3061447348531253e-17], 'true': [-8.881784197001253e-17, 0.1775147928994082]}, {'': [0.10889347072616155, 3.2653618371328133e-18], 'true': [8.881784197001253e-17, 0.1775147928994084]}, {'': [0.10457969212882715, 8.163404592832034e-18], 'true': [-1.7763568394002506e-16, 0.177514792899408]}, {'': [0.10253049787697731, 0.0], 'true': [1.3322676295501878e-16, 0.17751479289940836]}, {'': [0.10183883562027392, 3.2653618371328133e-18], 'true': [-4.4408920985006264e-17, 0.1775147928994082]}, {'': [0.10162492139245671, 3.2653618371328133e-18], 'true': [3.3306690738754695e-17, 0.17751479289940816]}, {'': [0.10155764358164894, 0.0], 'true': [-2.7755575615628914e-17, 0.17751479289940827]}, {'': [0.1015286767006959, 1.6326809185664067e-18], 'true': [5.551115123125783e-18, 0.17751479289940827]}, {'': [0.10150305366261739, 8.163404592832033e-19], 'true': [0.0, 0.17751479289940827]}, {'': [0.10147079023675712, 1.6326809185664067e-18], 'true': [0.0, 0.1775147928994083]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(D, E), tempadvisedby(E, F) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.14185106490048782;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then return 0.7401919213324014;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(F, B) )
%   | | | then return 0.5443356231566908;  // std dev = 0.854, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.3927941835770488;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, D, F) )
%   | | | then return 0.273804909094486;  // std dev = 0.677, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6983557955900459;  // std dev = 0.078, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.31086336530982356;  // std dev = 1.064, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(D, E), tempadvisedby(E, F) )
%   | | | then return 0.2220697580753733;  // std dev = 0.764, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5057782357878707;  // std dev = 0.043, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.20081406320004058;  // std dev = 0.990, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.10159632948783628;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, D, F) )
%   | | | then return 0.11175148400762586;  // std dev = 0.607, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.48555617134704815;  // std dev = 0.093, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.14940801842543697;  // std dev = 0.999, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.09269127618926096;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(D, E), tempadvisedby(E, F) )
%   | | | then return 0.10643252124989193;  // std dev = 0.744, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.35058718147415247;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.06790204810863026;  // std dev = 0.890, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, D, F) )
%   | | | then return 0.031788550926643046;  // std dev = 0.562, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.350877259117226;  // std dev = 0.089, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.06354214941694532;  // std dev = 0.958, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.07877675473109172;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(D, E), tempadvisedby(E, F) )
%   | | | then return 0.04959396980392213;  // std dev = 0.734, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.26542344109079463;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -1.4745181702835453E-5;  // std dev = 0.818, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367094;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(D, E), tempadvisedby(E, F) )
%   | | | then return 0.03867501991324159;  // std dev = 0.735, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.21698914628795718;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -1.1435192958730855E-5;  // std dev = 0.818, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.06842697784420271;  // std dev = 3.73e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, D, F) )
%   | | | then return -0.02857866537786678;  // std dev = 0.497, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.27267954938956585;  // std dev = 0.089, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -3.9168856094662363E-4;  // std dev = 0.908, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.06419184008202619;  // std dev = 5.27e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.959096
   AUC PR    = 0.618849
   CLL	      = -0.189023
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 1.885 seconds
Total inference time: 0.4 seconds
AUC ROC: 0.959096


Results scoring model
   AUC ROC   = 0.99875
   AUC PR    = 0.99881
   CLL	      = -0.173269
   Precision = 0.952381 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.97561


Total scoring time: 0.426 seconds
Refined model CLL: -0.173269


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.959096
   AUC PR    = 0.618849
   CLL	      = -0.189023
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 3.3040000000000003 seconds
Total inference time: 0.4 seconds
AUC ROC: 0.959096
Total revision time: 3.3040000000000003
Best scored revision CLL: -0.173269


Dataset: 1_imdb_uwcse, Fold: 3, Type: Transfer (trRDN-B), Time: 00:06:37
{'AUC ROC': 0.959096, 'AUC PR': 0.618849, 'CLL': -0.189023, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 3.3040000000000003, 'Inference time': 0.4, 'parameter_20': {'AUC ROC': 0.965812, 'AUC PR': 0.668512, 'CLL': -0.16859, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 0.616, 'Inference time': 0.351}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.5803711573217345;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   else return -0.14185106490048777;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 4.21e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.4942204482591005;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.39601909095488685;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   else return -0.11231637819360633;  // std dev = 1.83e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.3038329997745963;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   else return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.22861095042876725;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   else return -0.09269127618926094;  // std dev = 1.05e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2.11e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.1716322648820636;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.12963120803437958;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   else return -0.07877675473109173;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 1.05e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.09874865476964424;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367094;  // std dev = 1.05e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.07586460016287461;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   else return -0.06842697784420274;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.05872207265504598;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   else return -0.06419184008202619;  // std dev = 5.27e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.965812
   AUC PR    = 0.668512
   CLL	      = -0.163903
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 0.627 seconds
Total inference time: 0.356 seconds
AUC ROC: 0.965812


Results scoring model
   AUC ROC   = 0.948
   AUC PR    = 0.943881
   CLL	      = -0.269872
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.391 seconds
Parameter learned model CLL: -0.269872


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 12], 'true,false': [1.9, 5, 13], 'false': [0.0, 20, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [4.21e-08, 0, 12], 'true,false': [1.9, 5, 13], 'false': [7.45e-09, 20, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 12], 'true,false': [1.9, 5, 13], 'false': [1.83e-08, 20, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [4.21e-08, 0, 12], 'true,false': [1.9, 5, 13], 'false': [0.0, 20, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 12], 'true,false': [1.9, 5, 13], 'false': [1.05e-08, 20, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 12], 'true,false': [1.9, 5, 13], 'false': [5.27e-09, 20, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 12], 'true,false': [1.9, 5, 13], 'false': [0.0, 20, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.05e-08, 0, 12], 'true,false': [1.9, 5, 13], 'false': [3.73e-09, 20, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.05e-08, 0, 12], 'true,false': [1.9, 5, 13], 'false': [0.0, 20, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 12], 'true,false': [1.9, 5, 13], 'false': [5.27e-09, 20, 0]}]]
[{'': [0.13888888888888987, -2.7755575615628915e-18], 'true': [-1.4802973661668753e-16, 0.20061728395061706]}, {'': [0.13254770583495343, 2.7755575615628915e-18], 'true': [1.4802973661668753e-16, 0.20061728395061745]}, {'': [0.12646434875695373, 1.6653345369377347e-17], 'true': [-2.590520390792032e-16, 0.20061728395061723]}, {'': [0.12347195643416783, -5.551115123125783e-18], 'true': [1.4802973661668753e-16, 0.20061728395061737]}, {'': [0.12240618841326419, 5.551115123125783e-18], 'true': [-5.551115123125783e-17, 0.2006172839506172]}, {'': [0.12204531305965403, 1.3877787807814458e-18], 'true': [3.700743415417188e-17, 0.2006172839506173]}, {'': [0.12191123210314089, -2.7755575615628915e-18], 'true': [-2.7755575615628914e-17, 0.20061728395061723]}, {'': [0.1218435826501146, 6.938893903907229e-19], 'true': [9.25185853854297e-18, 0.2006172839506173]}, {'': [0.12178887124236795, -1.3877787807814458e-18], 'true': [9.25185853854297e-18, 0.20061728395061731]}, {'': [0.12173064832324343, 1.3877787807814458e-18], 'true': [0.0, 0.2006172839506173]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(D, B), ta(E, A, F) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5854216623722396;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.14185106490048777;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 4.21e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.16653882456488175;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.498380757744019;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.1420942428155648;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3990418766037683;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.11231637819360633;  // std dev = 1.83e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(D, B), ta(E, A, F) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.11914890490746428;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.30590364655137575;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(D, B), ta(E, A, F) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.2569020128190065;  // std dev = 1.270, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.10281298450316714;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.09269127618926094;  // std dev = 1.05e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2.11e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(D, B), ta(E, A, F) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.19787052529051324;  // std dev = 1.265, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.07712574616560386;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then return 0.057878532599746055;  // std dev = 0.835, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.22423576279943247;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.11486417338084826;  // std dev = 1.115, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.07877675473109173;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 1.05e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(D, B), ta(E, A, F) )
%   | | then return 0.19359504112779466;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(G, A, H) )
%   | | | then return -0.005592510307035965;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.10744671772111336;  // std dev = 1.445, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367094;  // std dev = 1.05e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(D, B), ta(E, A, F) )
%   | | then return 0.16515041697087024;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.09767847018755411;  // std dev = 1.244, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.003477180310988137;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.06842697784420274;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(D, B), ta(E, A, F) )
%   | | then return 0.1436213944913423;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(G, A, H) )
%   | | | then return -0.026520471555528318;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.07101212289650134;  // std dev = 1.441, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.06419184008202619;  // std dev = 5.27e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.948718
   AUC PR    = 0.561592
   CLL	      = -0.201355
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 1.492 seconds
Total inference time: 0.378 seconds
AUC ROC: 0.948718


Results scoring model
   AUC ROC   = 0.98
   AUC PR    = 0.979805
   CLL	      = -0.230161
   Precision = 0.888889 at threshold = 0.5
   Recall    = 0.96
   F1        = 0.923077


Total scoring time: 0.415 seconds
Refined model CLL: -0.230161


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.948718
   AUC PR    = 0.561592
   CLL	      = -0.201355
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 2.925 seconds
Total inference time: 0.378 seconds
AUC ROC: 0.948718
Total revision time: 2.925
Best scored revision CLL: -0.230161


Dataset: 1_imdb_uwcse, Fold: 3, Type: Transfer (trRDN-B), Time: 00:06:41
{'AUC ROC': 0.948718, 'AUC PR': 0.561592, 'CLL': -0.201355, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 2.925, 'Inference time': 0.378, 'parameter_25': {'AUC ROC': 0.965812, 'AUC PR': 0.668512, 'CLL': -0.163903, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 0.627, 'Inference time': 0.356}}


Starting fold 4

Target train facts examples: 1706
Target train pos examples: 80
Target train neg examples: 2591

Target test facts examples: 681
Target test pos	 examples: 33
Target test neg examples: 1488

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.902218
   AUC PR    = 0.101852
   CLL	      = -0.458744
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 0.554 seconds
Total inference time: 0.669 seconds
AUC ROC: 0.902218


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.335 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.49e-08, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [1.86e-09, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [nan, 0.0]}, {'': [0.0, 0.0], 'true': [nan, 0.0]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [nan, -4.4408920985006264e-17]}, {'': [4.4408920985006264e-17, 0.0], 'true': [nan, 4.4408920985006264e-17]}, {'': [-2.2204460492503132e-17, 0.0], 'true': [nan, -2.2204460492503132e-17]}, {'': [0.0, 0.0], 'true': [nan, 0.0]}, {'': [-5.551115123125783e-18, -1.3877787807814458e-18], 'true': [nan, -5.551115123125783e-18]}, {'': [0.0, -6.938893903907229e-19], 'true': [nan, 0.0]}, {'': [0.0, 6.938893903907229e-19], 'true': [nan, 0.0]}, {'': [0.0, 0.0], 'true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.902218
   AUC PR    = 0.101852
   CLL	      = -0.458744
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 0.514 seconds
Total inference time: 0.569 seconds
AUC ROC: 0.902218


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.328 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.902218
   AUC PR    = 0.101852
   CLL	      = -0.458744
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 1.731 seconds
Total inference time: 0.669 seconds
AUC ROC: 0.902218
Total revision time: 1.731
Best scored revision CLL: -0.094637


Dataset: 1_imdb_uwcse, Fold: 4, Type: Transfer (trRDN-B), Time: 00:06:44
{'AUC ROC': 0.902218, 'AUC PR': 0.101852, 'CLL': -0.458744, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 1.731, 'Inference time': 0.669, 'parameter_5': {'AUC ROC': 0.902218, 'AUC PR': 0.101852, 'CLL': -0.458744, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 0.554, 'Inference time': 0.669}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.7672398441904213;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.6465415686654066;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5044629797645588;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.37956420580342304;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.10159632948783627;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2871467034260754;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22234379807937285;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.08518475138839687;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17659966289556142;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14344282165366493;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.07324622576333704;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11869034739602338;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09970391597144293;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.06419184008202622;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.902218
   AUC PR    = 0.101852
   CLL	      = -0.385958
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 0.556 seconds
Total inference time: 0.655 seconds
AUC ROC: 0.902218


Results scoring model
   AUC ROC   = 0.95
   AUC PR    = 0.909091
   CLL	      = -0.211616
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.361 seconds
Parameter learned model CLL: -0.211616


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.953, 1, 10], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.953, 1, 10], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.953, 1, 10], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.953, 1, 10], 'false': [3.73e-09, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.953, 1, 10], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.953, 1, 10], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.953, 1, 10], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.953, 1, 10], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.953, 1, 10], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.953, 1, 10], 'false': [0.0, 9, 0]}]]
[{'': [0.0826446280991734, -9.25185853854297e-18], 'true': [nan, 0.0826446280991734]}, {'': [0.08264462809917372, 0.0], 'true': [nan, 0.08264462809917372]}, {'': [0.08264462809917372, -1.5419764230904951e-18], 'true': [nan, 0.08264462809917372]}, {'': [0.08264462809917356, 1.5419764230904951e-18], 'true': [nan, 0.08264462809917356]}, {'': [0.08264462809917347, 0.0], 'true': [nan, 0.08264462809917347]}, {'': [0.08264462809917356, 0.0], 'true': [nan, 0.08264462809917356]}, {'': [0.08264462809917356, 0.0], 'true': [nan, 0.08264462809917356]}, {'': [0.08264462809917358, 0.0], 'true': [nan, 0.08264462809917358]}, {'': [0.08264462809917356, 0.0], 'true': [nan, 0.08264462809917356]}, {'': [0.08264462809917356, -7.709882115452476e-19], 'true': [nan, 0.08264462809917356]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.36236334632262296;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A) )
%   | then return 0.4666569848762122;  // std dev = 0.170, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.21522931940604925;  // std dev = 0.749, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.10159632948783627;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, A) )
%   | | then return 0.3732232367541064;  // std dev = 0.155, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.16897012692691576;  // std dev = 0.679, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.4127941549189808;  // std dev = 0.187, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B) )
%   | then return 0.2648600406352978;  // std dev = 0.068, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.12884492269716805;  // std dev = 0.746, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.08518475138839687;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, A) )
%   | | then return 0.25344958766849474;  // std dev = 0.151, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.08499380096820382;  // std dev = 0.668, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.28005688243358257;  // std dev = 0.183, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B) )
%   | then return 0.18967459191202513;  // std dev = 0.088, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.048837140786982015;  // std dev = 0.714, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07324622576333704;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then return 0.16237252939357583;  // std dev = 0.078, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.037559443622611766;  // std dev = 0.715, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, A) )
%   | | then return 0.17672023569341366;  // std dev = 0.152, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.021061065638357367;  // std dev = 0.644, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.19471176522930786;  // std dev = 0.180, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06419184008202622;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.906881
   AUC PR    = 0.10435
   CLL	      = -0.454673
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 1.311 seconds
Total inference time: 0.652 seconds
AUC ROC: 0.906881


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158715
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.355 seconds
Refined model CLL: -0.158715


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.906881
   AUC PR    = 0.10435
   CLL	      = -0.454673
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 2.5829999999999997 seconds
Total inference time: 0.652 seconds
AUC ROC: 0.906881
Total revision time: 2.5829999999999997
Best scored revision CLL: -0.158715


Dataset: 1_imdb_uwcse, Fold: 4, Type: Transfer (trRDN-B), Time: 00:06:49
{'AUC ROC': 0.906881, 'AUC PR': 0.10435, 'CLL': -0.454673, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 2.5829999999999997, 'Inference time': 0.652, 'parameter_10': {'AUC ROC': 0.902218, 'AUC PR': 0.101852, 'CLL': -0.385958, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 0.556, 'Inference time': 0.655}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7672398441904213;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.6465415686654068;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.504462979764559;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.37956420580342287;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.10159632948783628;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.28714670342607534;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.22234379807937293;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.17659966289556142;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.14344282165366495;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.11869034739602338;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.06842697784420272;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.09970391597144293;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.06419184008202619;  // std dev = 5.27e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.935362
   AUC PR    = 0.272865
   CLL	      = -0.389472
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 0.61 seconds
Total inference time: 0.661 seconds
AUC ROC: 0.935362


Results scoring model
   AUC ROC   = 0.977778
   AUC PR    = 0.971536
   CLL	      = -0.172623
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 0.356 seconds
Parameter learned model CLL: -0.172623


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.953, 1, 10], 'false': [0.0, 14, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.953, 1, 10], 'false': [7.45e-09, 14, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.953, 1, 10], 'false': [1.18e-08, 14, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.49e-08, 0, 5], 'true,false': [0.953, 1, 10], 'false': [0.0, 14, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.953, 1, 10], 'false': [7.45e-09, 14, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.953, 1, 10], 'false': [3.73e-09, 14, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.953, 1, 10], 'false': [0.0, 14, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.953, 1, 10], 'false': [5.27e-09, 14, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.953, 1, 10], 'false': [3.73e-09, 14, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.953, 1, 10], 'false': [5.27e-09, 14, 0]}]]
[{'': [0.05859374999999978, -1.1895246692412391e-17], 'true': [0.0, 0.08264462809917349]}, {'': [0.057960947283660025, 3.96508223080413e-18], 'true': [0.0, 0.08264462809917349]}, {'': [0.0573748767646583, 9.912705577010326e-18], 'true': [-4.4408920985006264e-17, 0.08264462809917351]}, {'': [0.05712759018718083, 0.0], 'true': [4.4408920985006264e-17, 0.0826446280991736]}, {'': [0.057060228841868885, 3.96508223080413e-18], 'true': [-2.2204460492503132e-17, 0.08264462809917351]}, {'': [0.057049720381542136, 9.912705577010326e-19], 'true': [0.0, 0.08264462809917356]}, {'': [0.05705439316729094, -9.912705577010326e-19], 'true': [-5.551115123125783e-18, 0.08264462809917356]}, {'': [0.0570615073857457, 1.982541115402065e-18], 'true': [0.0, 0.08264462809917354]}, {'': [0.057067323566212746, 9.912705577010326e-19], 'true': [0.0, 0.08264462809917356]}, {'': [0.05707098923924947, 1.982541115402065e-18], 'true': [0.0, 0.08264462809917356]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, B) )
%   | | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, B) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.36236334632262296;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.26580038559411445;  // std dev = 0.769, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.46665698487621216;  // std dev = 0.170, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.10159632948783628;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, A) )
%   | | then return 0.38990700113528826;  // std dev = 0.195, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(E, B), publication(F, B) )
%   | | | then return 0.33427541289895946;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.11969560712491052;  // std dev = 0.711, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.25260293121906285;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.13417585806380128;  // std dev = 0.723, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.3053377009307045;  // std dev = 0.194, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.08518475138839687;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, B) )
%   | | then return 0.2161464468504577;  // std dev = 0.075, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.10013033440691628;  // std dev = 0.752, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, A) )
%   | | then return 0.23375425964611632;  // std dev = 0.198, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(E, B), publication(F, B) )
%   | | | then return 0.1915361530629379;  // std dev = 0.046, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.00794137771748371;  // std dev = 0.682, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.14867094110806434;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.043146653152061815;  // std dev = 0.686, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.2024331663533903;  // std dev = 0.200, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06842697784420272;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, B) )
%   | | then return 0.14025978856620525;  // std dev = 0.080, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.03446260016211422;  // std dev = 0.718, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.06419184008202619;  // std dev = 5.27e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.900996
   AUC PR    = 0.091396
   CLL	      = -0.439637
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 1.405 seconds
Total inference time: 0.743 seconds
AUC ROC: 0.900996


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.138809
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 0.373 seconds
Refined model CLL: -0.138809


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.900996
   AUC PR    = 0.091396
   CLL	      = -0.439637
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 2.7439999999999998 seconds
Total inference time: 0.743 seconds
AUC ROC: 0.900996
Total revision time: 2.7439999999999998
Best scored revision CLL: -0.138809


Dataset: 1_imdb_uwcse, Fold: 4, Type: Transfer (trRDN-B), Time: 00:06:53
{'AUC ROC': 0.900996, 'AUC PR': 0.091396, 'CLL': -0.439637, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 2.7439999999999998, 'Inference time': 0.743, 'parameter_15': {'AUC ROC': 0.935362, 'AUC PR': 0.272865, 'CLL': -0.389472, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 0.61, 'Inference time': 0.661}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7867203636709409;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6622329172201351;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5154428111118986;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.38756471820063193;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.10159632948783634;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.293981034372001;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.09269127618926093;  // std dev = 1.18e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.22885626909786863;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.08518475138839686;  // std dev = 1.05e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.1830631155647187;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.07877675473109179;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.1499137179768442;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.07324622576333704;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.152743858093671;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.1251566713927131;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.06842697784420274;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.1061365884058589;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.06419184008202619;  // std dev = 7.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 0.935362
   AUC PR    = 0.272865
   CLL	      = -0.403286
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 0.656 seconds
Total inference time: 0.645 seconds
AUC ROC: 0.935362


Results scoring model
   AUC ROC   = 0.98375
   AUC PR    = 0.979116
   CLL	      = -0.154909
   Precision = 0.952381 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.97561


Total scoring time: 0.375 seconds
Parameter learned model CLL: -0.154909


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.964, 1, 13], 'false': [0.0, 19, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 7], 'true,false': [0.964, 1, 13], 'false': [0.0, 19, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.964, 1, 13], 'false': [1.67e-08, 19, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.58e-08, 0, 7], 'true,false': [0.964, 1, 13], 'false': [0.0, 19, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.964, 1, 13], 'false': [1.18e-08, 19, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.29e-08, 0, 7], 'true,false': [0.964, 1, 13], 'false': [1.05e-08, 19, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.964, 1, 13], 'false': [0.0, 19, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [5.27e-09, 0, 7], 'true,false': [0.964, 1, 13], 'false': [0.0, 19, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.964, 1, 13], 'false': [0.0, 19, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.964, 1, 13], 'false': [7.45e-09, 19, 0]}]]
[{'': [0.04535147392290242, 0.0], 'true': [-2.5376526277146434e-16, 0.06632653061224479]}, {'': [0.044945792467450625, 0.0], 'true': [6.344131569286608e-17, 0.06632653061224479]}, {'': [0.04457188616011741, 1.460819769243627e-17], 'true': [-6.344131569286608e-17, 0.06632653061224494]}, {'': [0.04441700586864122, -4.382459307730881e-18], 'true': [9.516197353929913e-17, 0.06632653061224494]}, {'': [0.04437647293090005, 7.304098846218135e-18], 'true': [-3.172065784643304e-17, 0.06632653061224492]}, {'': [0.04437158273255417, 5.843279076974508e-18], 'true': [2.3790493384824782e-17, 0.06632653061224493]}, {'': [0.04437604300211453, -7.304098846218135e-19], 'true': [-1.586032892321652e-17, 0.0663265306122449]}, {'': [0.04438188785614974, 0.0], 'true': [3.96508223080413e-18, 0.06632653061224493]}, {'': [0.04438680993484626, -2.1912296538654404e-18], 'true': [-7.93016446160826e-18, 0.06632653061224489]}, {'': [0.04439030074485194, 2.921639538487254e-18], 'true': [0.0, 0.0663265306122449]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, B) )
%   | | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, B) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.36236334632262296;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, B) )
%   | | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.2807538536965855;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.10159632948783634;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.395745909623968;  // std dev = 0.184, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then return 0.1915622117253922;  // std dev = 0.707, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.36573228463844065;  // std dev = 0.201, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926093;  // std dev = 1.18e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, B) )
%   | | then return 0.2610553683565548;  // std dev = 0.059, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.1332970816386835;  // std dev = 0.778, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.08518475138839686;  // std dev = 1.05e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, B) )
%   | | then return 0.21397282082130362;  // std dev = 0.052, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.10038264246105551;  // std dev = 0.778, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07877675473109179;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, A) )
%   | | then return 0.23098122461772697;  // std dev = 0.185, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then return 0.07863612152246335;  // std dev = 0.691, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.24532434182559418;  // std dev = 0.186, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07324622576333704;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.152743858093671;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, B) )
%   | | then return 0.1596197187400306;  // std dev = 0.064, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.03272847213485149;  // std dev = 0.750, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.06842697784420274;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, B) )
%   | | then return 0.13940235011973687;  // std dev = 0.057, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.025215523737058192;  // std dev = 0.750, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.06419184008202619;  // std dev = 7.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 0.9185
   AUC PR    = 0.126288
   CLL	      = -0.437843
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 1.426 seconds
Total inference time: 0.731 seconds
AUC ROC: 0.9185


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.130351
   Precision = 0.952381 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.97561


Total scoring time: 0.385 seconds
Refined model CLL: -0.130351


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.9185
   AUC PR    = 0.126288
   CLL	      = -0.437843
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 2.8419999999999996 seconds
Total inference time: 0.731 seconds
AUC ROC: 0.9185
Total revision time: 2.8419999999999996
Best scored revision CLL: -0.130351


Dataset: 1_imdb_uwcse, Fold: 4, Type: Transfer (trRDN-B), Time: 00:06:58
{'AUC ROC': 0.9185, 'AUC PR': 0.126288, 'CLL': -0.437843, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 2.8419999999999996, 'Inference time': 0.731, 'parameter_20': {'AUC ROC': 0.935362, 'AUC PR': 0.272865, 'CLL': -0.403286, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 0.656, 'Inference time': 0.645}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.7002541982574071;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5923177366262469;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.46630862278666474;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else return -0.11231637819360638;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.35238367554550665;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2649114470714586;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else return -0.09269127618926093;  // std dev = 1.18e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.20191830665679997;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else return -0.08518475138839685;  // std dev = 1.18e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.15683608398089763;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else return -0.07877675473109179;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.12403084444870505;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else return -0.07324622576333704;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.09961333834675083;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else return -0.06842697784420275;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.08103171036354961;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else return -0.0641918400820262;  // std dev = 5.27e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 0.935362
   AUC PR    = 0.272865
   CLL	      = -0.34596
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 0.616 seconds
Total inference time: 0.669 seconds
AUC ROC: 0.935362


Results scoring model
   AUC ROC   = 0.9616
   AUC PR    = 0.953338
   CLL	      = -0.221272
   Precision = 0.892857 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.943396


Total scoring time: 0.376 seconds
Parameter learned model CLL: -0.221272


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.589, 3, 16], 'false': [1.05e-08, 22, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 9], 'true,false': [1.589, 3, 16], 'false': [0.0, 22, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.589, 3, 16], 'false': [1.29e-08, 22, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [3.33e-08, 0, 9], 'true,false': [1.589, 3, 16], 'false': [0.0, 22, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.589, 3, 16], 'false': [1.18e-08, 22, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.83e-08, 0, 9], 'true,false': [1.589, 3, 16], 'false': [1.18e-08, 22, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.589, 3, 16], 'false': [0.0, 22, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 9], 'true,false': [1.589, 3, 16], 'false': [0.0, 22, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.589, 3, 16], 'false': [0.0, 22, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.589, 3, 16], 'false': [5.27e-09, 22, 0]}]]
[{'': [0.09566326530612335, 5.046468293750712e-18], 'true': [-2.9605947323337506e-16, 0.13296398891966735]}, {'': [0.09375212610047859, -2.523234146875356e-18], 'true': [9.868649107779169e-17, 0.13296398891966763]}, {'': [0.09195547629862973, 7.569702440626067e-18], 'true': [-1.4802973661668753e-16, 0.13296398891966754]}, {'': [0.09115077533107672, -3.784851220313033e-18], 'true': [1.2335811384723962e-16, 0.1329639889196677]}, {'': [0.09090469665870302, 6.308085367188389e-18], 'true': [-3.700743415417188e-17, 0.13296398891966754]}, {'': [0.09084412624271197, 6.308085367188389e-18], 'true': [3.700743415417188e-17, 0.13296398891966757]}, {'': [0.09083643067703319, 0.0], 'true': [-2.4671622769447922e-17, 0.13296398891966763]}, {'': [0.09083976004335145, -1.261617073437678e-18], 'true': [6.1679056923619804e-18, 0.13296398891966754]}, {'': [0.09084126252455353, -3.784851220313033e-18], 'true': [-3.0839528461809902e-18, 0.13296398891966757]}, {'': [0.09083767073124764, 1.261617073437678e-18], 'true': [0.0, 0.13296398891966757]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( projectmember(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, B) )
%   | | then if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | | then return 0.596383102638771;  // std dev = 0.875, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.7540653704596334;  // std dev = 0.085, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.4207320371263003;  // std dev = 1.096, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, B) )
%   | | then if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | | then return 0.4675729748244711;  // std dev = 0.862, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.5919529007283273;  // std dev = 0.111, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.33544701884179834;  // std dev = 1.085, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.11231637819360638;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.5155757126143408;  // std dev = 0.084, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(E, B) )
%   | | | then return 0.38303395144783975;  // std dev = 0.874, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.030058650747612565;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.38926683328793826;  // std dev = 0.079, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(E, B) )
%   | | | then return 0.2906806040171859;  // std dev = 0.876, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.023133891280347745;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.09269127618926093;  // std dev = 1.18e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.30201592206815037;  // std dev = 0.070, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(E, B) )
%   | | | then return 0.22551316211994765;  // std dev = 0.880, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.017844813082278994;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.08518475138839685;  // std dev = 1.18e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.23491673567248683;  // std dev = 0.068, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return -0.03434542794195913;  // std dev = 0.768, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.17808570258446588;  // std dev = 0.913, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.07877675473109179;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.21659538199896416;  // std dev = 0.051, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(E, B) )
%   | | | then return 0.14945435538141075;  // std dev = 0.851, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.055166220956725076;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.07324622576333704;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( projectmember(E, B) )
%   | | | then return 0.18218683377959297;  // std dev = 0.044, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.0011424269776486426;  // std dev = 0.921, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.022623888018196;  // std dev = 0.488, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2895842304203696;  // std dev = 0.390, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06842697784420275;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.15892824364372707;  // std dev = 0.091, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return -0.01135483371816215;  // std dev = 0.903, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.15702229875084045;  // std dev = 0.675, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.0641918400820262;  // std dev = 5.27e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 0.943946
   AUC PR    = 0.186527
   CLL	      = -0.374868
   Precision = 0.106109 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.19186


Total learning time: 1.813 seconds
Total inference time: 0.759 seconds
AUC ROC: 0.943946


Results scoring model
   AUC ROC   = 0.9976
   AUC PR    = 0.997631
   CLL	      = -0.162944
   Precision = 0.96 at threshold = 0.5
   Recall    = 0.96
   F1        = 0.96


Total scoring time: 0.407 seconds
Refined model CLL: -0.162944


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.943946
   AUC PR    = 0.186527
   CLL	      = -0.374868
   Precision = 0.106109 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.19186


Total learning time: 3.2119999999999997 seconds
Total inference time: 0.759 seconds
AUC ROC: 0.943946
Total revision time: 3.2119999999999997
Best scored revision CLL: -0.162944


Dataset: 1_imdb_uwcse, Fold: 4, Type: Transfer (trRDN-B), Time: 00:07:03
{'AUC ROC': 0.943946, 'AUC PR': 0.186527, 'CLL': -0.374868, 'Precision': [0.106109, 0.5], 'Recall': 1.0, 'F1': 0.19186, 'Learning time': 3.2119999999999997, 'Inference time': 0.759, 'parameter_25': {'AUC ROC': 0.935362, 'AUC PR': 0.272865, 'CLL': -0.34596, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 0.616, 'Inference time': 0.669}}


Starting fold 5

Target train facts examples: 1973
Target train pos examples: 97
Target train neg examples: 3734

Target test facts examples: 414
Target test pos	 examples: 16
Target test neg examples: 345

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333703;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.901449
   AUC PR    = 0.190476
   CLL	      = -0.454103
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 0.551 seconds
Total inference time: 0.458 seconds
AUC ROC: 0.901449


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.341 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.49e-08, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [2.63e-09, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [1.86e-09, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [nan, 0.0]}, {'': [0.0, 0.0], 'true': [nan, 0.0]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [nan, -4.4408920985006264e-17]}, {'': [4.4408920985006264e-17, 0.0], 'true': [nan, 4.4408920985006264e-17]}, {'': [-2.2204460492503132e-17, 0.0], 'true': [nan, -2.2204460492503132e-17]}, {'': [0.0, 0.0], 'true': [nan, 0.0]}, {'': [-5.551115123125783e-18, -1.3877787807814458e-18], 'true': [nan, -5.551115123125783e-18]}, {'': [0.0, 1.3877787807814458e-18], 'true': [nan, 0.0]}, {'': [0.0, 6.938893903907229e-19], 'true': [nan, 0.0]}, {'': [0.0, 0.0], 'true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333703;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.901449
   AUC PR    = 0.190476
   CLL	      = -0.454103
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 0.517 seconds
Total inference time: 0.413 seconds
AUC ROC: 0.901449


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.331 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.901449
   AUC PR    = 0.190476
   CLL	      = -0.454103
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 1.7400000000000002 seconds
Total inference time: 0.458 seconds
AUC ROC: 0.901449
Total revision time: 1.7400000000000002
Best scored revision CLL: -0.094637


Dataset: 1_imdb_uwcse, Fold: 5, Type: Transfer (trRDN-B), Time: 00:07:06
{'AUC ROC': 0.901449, 'AUC PR': 0.190476, 'CLL': -0.454103, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 1.7400000000000002, 'Inference time': 0.458, 'parameter_5': {'AUC ROC': 0.901449, 'AUC PR': 0.190476, 'CLL': -0.454103, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 0.551, 'Inference time': 0.458}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.63592671287729;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.14185106490048777;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.5398498420741675;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.42895627253508517;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.3264400476801373;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.10159632948783628;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.24503149911444547;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.09269127618926096;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.1848204588152216;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.08518475138839687;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.14108814406879133;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.10912169797108993;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.07324622576333704;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.08540523411308512;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.0675192639640355;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.926087
   AUC PR    = 0.46579
   CLL	      = -0.302445
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 0.624 seconds
Total inference time: 0.454 seconds
AUC ROC: 0.926087


Results scoring model
   AUC ROC   = 0.93
   AUC PR    = 0.917057
   CLL	      = -0.285756
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.355 seconds
Parameter learned model CLL: -0.285756


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [1.247, 2, 7], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [1.247, 2, 7], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.05e-08, 0, 3], 'true,false': [1.247, 2, 7], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [1.247, 2, 7], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [1.247, 2, 7], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [1.247, 2, 7], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [1.247, 2, 7], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [1.247, 2, 7], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [1.247, 2, 7], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [1.247, 2, 7], 'false': [0.0, 8, 0]}]]
[{'': [0.1388888888888887, 0.0], 'true': [1.4802973661668753e-16, 0.1728395061728395]}, {'': [0.13567924718250798, 0.0], 'true': [0.0, 0.17283950617283952]}, {'': [0.13262579143261133, 0.0], 'true': [3.700743415417188e-17, 0.1728395061728395]}, {'': [0.13118482757587493, 0.0], 'true': [-3.700743415417188e-17, 0.17283950617283952]}, {'': [0.13070353870718945, 0.0], 'true': [0.0, 0.17283950617283952]}, {'': [0.1305576371566435, 0.0], 'true': [0.0, 0.1728395061728395]}, {'': [0.13051378776564493, 0.0], 'true': [0.0, 0.1728395061728395]}, {'': [0.13049598714294355, 0.0], 'true': [0.0, 0.1728395061728395]}, {'': [0.13047984655705439, 0.0], 'true': [-4.625929269271485e-18, 0.1728395061728395]}, {'': [0.13045849644841434, 0.0], 'true': [-2.3129646346357427e-18, 0.1728395061728395]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.14185106490048777;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3927941835770488;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.32092546969114216;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.25206564481433;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.10159632948783628;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.19292386438161405;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.09269127618926096;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.23374841928850723;  // std dev = 0.818, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.11549603375040206;  // std dev = 0.728, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.08518475138839687;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.21846020415475134;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.09917265061739766;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.18346776149429606;  // std dev = 0.016, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.07442261522596476;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07324622576333704;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.15756948491329928;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.055924860975577695;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.1377695685420378;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.042101465546427644;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.905978
   AUC PR    = 0.188535
   CLL	      = -0.382611
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 1.141 seconds
Total inference time: 0.463 seconds
AUC ROC: 0.905978


Results scoring model
   AUC ROC   = 0.975
   AUC PR    = 0.975784
   CLL	      = -0.23774
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.357 seconds
Refined model CLL: -0.23774


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.905978
   AUC PR    = 0.188535
   CLL	      = -0.382611
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 2.4770000000000003 seconds
Total inference time: 0.463 seconds
AUC ROC: 0.905978
Total revision time: 2.4770000000000003
Best scored revision CLL: -0.23774


Dataset: 1_imdb_uwcse, Fold: 5, Type: Transfer (trRDN-B), Time: 00:07:10
{'AUC ROC': 0.905978, 'AUC PR': 0.188535, 'CLL': -0.382611, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 2.4770000000000003, 'Inference time': 0.463, 'parameter_10': {'AUC ROC': 0.926087, 'AUC PR': 0.46579, 'CLL': -0.302445, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 0.624, 'Inference time': 0.454}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.6914822684328455;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.585186000855536;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.46125983910675555;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.11231637819360638;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3488463256948422;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2621270550835419;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.09269127618926096;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.19945264276423433;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.08518475138839686;  // std dev = 6.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.15451336627983223;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.07877675473109173;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.12179491558002797;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.09745354768081678;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.07895233872555121;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.0641918400820262;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.926087
   AUC PR    = 0.46579
   CLL	      = -0.333775
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 0.598 seconds
Total inference time: 0.446 seconds
AUC ROC: 0.926087


Results scoring model
   AUC ROC   = 0.955556
   AUC PR    = 0.945747
   CLL	      = -0.233457
   Precision = 0.882353 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.9375


Total scoring time: 0.373 seconds
Parameter learned model CLL: -0.233457


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.291, 2, 10], 'false': [0.0, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.291, 2, 10], 'false': [5.27e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.291, 2, 10], 'false': [7.45e-09, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.49e-08, 0, 5], 'true,false': [1.291, 2, 10], 'false': [5.27e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.291, 2, 10], 'false': [3.73e-09, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.291, 2, 10], 'false': [6.45e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.291, 2, 10], 'false': [0.0, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.291, 2, 10], 'false': [5.27e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.291, 2, 10], 'false': [2.63e-09, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.291, 2, 10], 'false': [0.0, 13, 0]}]]
[{'': [0.10380622837370206, -8.540177112501205e-18], 'true': [0.0, 0.1388888888888887]}, {'': [0.10178311371711335, 2.135044278125301e-18], 'true': [0.0, 0.13888888888888898]}, {'': [0.09987784234079816, 4.270088556250602e-18], 'true': [-4.4408920985006264e-17, 0.13888888888888887]}, {'': [0.09901814836133804, 2.135044278125301e-18], 'true': [4.4408920985006264e-17, 0.13888888888888898]}, {'': [0.09875177856433529, 1.0675221390626506e-18], 'true': [-2.2204460492503132e-17, 0.13888888888888884]}, {'': [0.09868378464180211, 3.2025664171879517e-18], 'true': [0.0, 0.13888888888888887]}, {'': [0.09867283606040672, -1.0675221390626506e-18], 'true': [-5.551115123125783e-18, 0.1388888888888889]}, {'': [0.0986741495942288, 2.135044278125301e-18], 'true': [0.0, 0.13888888888888887]}, {'': [0.09867389079192498, 5.337610695313253e-19], 'true': [0.0, 0.1388888888888889]}, {'': [0.09866849299399914, 0.0], 'true': [0.0, 0.13888888888888887]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.448295606241962;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.36236334632262296;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.11231637819360638;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.2807538536965854;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.21248070121827137;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.09269127618926096;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.15948988228171151;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.08518475138839686;  // std dev = 6.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.20975771563253556;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.11975529938157475;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.07877675473109173;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.17709649774527736;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.09028081829440963;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.15274385809367097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.06840311429118533;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.052078905701252655;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.0641918400820262;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.911957
   AUC PR    = 0.210792
   CLL	      = -0.393708
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 1.186 seconds
Total inference time: 0.472 seconds
AUC ROC: 0.911957


Results scoring model
   AUC ROC   = 0.982222
   AUC PR    = 0.982198
   CLL	      = -0.201549
   Precision = 0.882353 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.9375


Total scoring time: 0.37 seconds
Refined model CLL: -0.201549


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.911957
   AUC PR    = 0.210792
   CLL	      = -0.393708
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 2.527 seconds
Total inference time: 0.472 seconds
AUC ROC: 0.911957
Total revision time: 2.527
Best scored revision CLL: -0.201549


Dataset: 1_imdb_uwcse, Fold: 5, Type: Transfer (trRDN-B), Time: 00:07:14
{'AUC ROC': 0.911957, 'AUC PR': 0.210792, 'CLL': -0.393708, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 2.527, 'Inference time': 0.472, 'parameter_15': {'AUC ROC': 0.926087, 'AUC PR': 0.46579, 'CLL': -0.333775, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 0.598, 'Inference time': 0.446}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6706489350995122;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   else return -0.14185106490048782;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5682191205391256;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   else return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.4492144098895987;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   else return -0.11231637819360638;  // std dev = 1.05e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3404502154241665;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   else return -0.10159632948783627;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.25561419664155516;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   else return -0.09269127618926097;  // std dev = 5.27e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.1937733797841345;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.14922563755522217;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   else return -0.07877675473109172;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.1167488936677224;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.152743858093671;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.09261428520870396;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   else return -0.06842697784420271;  // std dev = 3.73e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.07432413189596598;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   else return -0.06419184008202619;  // std dev = 5.27e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.926087
   AUC PR    = 0.46579
   CLL	      = -0.321566
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 0.595 seconds
Total inference time: 0.457 seconds
AUC ROC: 0.926087


Results scoring model
   AUC ROC   = 0.95125
   AUC PR    = 0.941678
   CLL	      = -0.245878
   Precision = 0.869565 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.930233


Total scoring time: 0.377 seconds
Parameter learned model CLL: -0.245878


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.561, 3, 13], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 7], 'true,false': [1.561, 3, 13], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.561, 3, 13], 'false': [1.05e-08, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.58e-08, 0, 7], 'true,false': [1.561, 3, 13], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.561, 3, 13], 'false': [5.27e-09, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.29e-08, 0, 7], 'true,false': [1.561, 3, 13], 'false': [7.45e-09, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.561, 3, 13], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [5.27e-09, 0, 7], 'true,false': [1.561, 3, 13], 'false': [5.27e-09, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.561, 3, 13], 'false': [3.73e-09, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.561, 3, 13], 'false': [5.27e-09, 17, 0]}]]
[{'': [0.11342155009451807, -1.3061447348531253e-17], 'true': [-2.5376526277146434e-16, 0.15234374999999994]}, {'': [0.11082196673705925, 0.0], 'true': [6.344131569286608e-17, 0.1523437500000001]}, {'': [0.10836397790973065, 6.530723674265627e-18], 'true': [-6.344131569286608e-17, 0.15234375]}, {'': [0.10723561707688722, 0.0], 'true': [9.516197353929913e-17, 0.15234375000000006]}, {'': [0.10687546854355508, 1.6326809185664067e-18], 'true': [-3.172065784643304e-17, 0.15234374999999997]}, {'': [0.10677640808950759, 3.2653618371328133e-18], 'true': [2.3790493384824782e-17, 0.15234374999999994]}, {'': [0.10675403182864289, 0.0], 'true': [-1.586032892321652e-17, 0.15234374999999997]}, {'': [0.106749310645756, 1.6326809185664067e-18], 'true': [3.96508223080413e-18, 0.15234375]}, {'': [0.10674374922487108, 8.163404592832033e-19], 'true': [-7.93016446160826e-18, 0.15234375]}, {'': [0.10673241854939493, 1.6326809185664067e-18], 'true': [0.0, 0.15234375000000003]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.14185106490048782;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.308741135785635;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, B), publication(E, A) )
%   | | then return 0.2564123687585864;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.45757646263146107;  // std dev = 0.891, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.6097864885166376;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.11231637819360638;  // std dev = 1.05e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( ta(D, A, E) )
%   | | then if ( ta(D, F, G), publication(H, F) )
%   | | | then return 0.5421862179840202;  // std dev = 0.291, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2289513810229869;  // std dev = 0.825, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.20863588828061874;  // std dev = 0.873, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.10159632948783627;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.1219628243641508;  // std dev = 0.922, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.2522915687804829;  // std dev = 0.858, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.4088808186863859;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09269127618926097;  // std dev = 5.27e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( ta(D, A, E) )
%   | | then if ( ta(D, F, G), publication(H, F) )
%   | | | then return 0.3701319183674419;  // std dev = 0.321, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.11288701163115306;  // std dev = 0.828, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.08787183694051244;  // std dev = 0.789, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.03663948123918999;  // std dev = 0.848, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.14910752744187222;  // std dev = 0.848, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.29660273033237405;  // std dev = 0.053, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07877675473109172;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( ta(D, A, E) )
%   | | then if ( ta(D, F, G), publication(H, F) )
%   | | | then return 0.2753290765531336;  // std dev = 0.308, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.055012821303114856;  // std dev = 0.831, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.02716045375250901;  // std dev = 0.735, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.152743858093671;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return -0.00896486678173708;  // std dev = 0.787, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.09623500622655805;  // std dev = 0.846, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.23392069457306391;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06842697784420271;  // std dev = 3.73e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( ta(D, A, E) )
%   | | then if ( ta(D, F, G), publication(H, F) )
%   | | | then return 0.22039791148328658;  // std dev = 0.290, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.024066530349676762;  // std dev = 0.833, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.00368472673217581;  // std dev = 0.688, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.06419184008202619;  // std dev = 5.27e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.93125
   AUC PR    = 0.255345
   CLL	      = -0.35328
   Precision = 0.197531 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.329897


Total learning time: 1.93 seconds
Total inference time: 0.489 seconds
AUC ROC: 0.93125


Results scoring model
   AUC ROC   = 0.99375
   AUC PR    = 0.993678
   CLL	      = -0.181254
   Precision = 0.952381 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.97561


Total scoring time: 0.395 seconds
Refined model CLL: -0.181254


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.93125
   AUC PR    = 0.255345
   CLL	      = -0.35328
   Precision = 0.197531 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.329897


Total learning time: 3.297 seconds
Total inference time: 0.489 seconds
AUC ROC: 0.93125
Total revision time: 3.297
Best scored revision CLL: -0.181254


Dataset: 1_imdb_uwcse, Fold: 5, Type: Transfer (trRDN-B), Time: 00:07:19
{'AUC ROC': 0.93125, 'AUC PR': 0.255345, 'CLL': -0.35328, 'Precision': [0.197531, 0.5], 'Recall': 1.0, 'F1': 0.329897, 'Learning time': 3.297, 'Inference time': 0.489, 'parameter_20': {'AUC ROC': 0.926087, 'AUC PR': 0.46579, 'CLL': -0.321566, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 0.595, 'Inference time': 0.457}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.6581489350995122;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   else return -0.1418510649004878;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5580193346218546;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   else return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.4419486100244409;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.3354113949509431;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   else return -0.10159632948783628;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.25176837314502193;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   else return -0.09269127618926094;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.19047961032437183;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.14620194507639955;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   else return -0.07877675473109173;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.11389369465607471;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.08989956180301863;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   else return -0.06842697784420272;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.07174810215160454;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   else return -0.06419184008202619;  // std dev = 7.45e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */


Results
   AUC ROC   = 0.926087
   AUC PR    = 0.46579
   CLL	      = -0.31451
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 0.617 seconds
Total inference time: 0.473 seconds
AUC ROC: 0.926087


Results scoring model
   AUC ROC   = 0.9488
   AUC PR    = 0.93948
   CLL	      = -0.25288
   Precision = 0.862069 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.925926


Total scoring time: 0.379 seconds
Parameter learned model CLL: -0.25288


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.789, 4, 16], 'false': [0.0, 21, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 9], 'true,false': [1.789, 4, 16], 'false': [0.0, 21, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.789, 4, 16], 'false': [1.05e-08, 21, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [3.33e-08, 0, 9], 'true,false': [1.789, 4, 16], 'false': [0.0, 21, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.789, 4, 16], 'false': [1.05e-08, 21, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.83e-08, 0, 9], 'true,false': [1.789, 4, 16], 'false': [7.45e-09, 21, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.789, 4, 16], 'false': [0.0, 21, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 9], 'true,false': [1.789, 4, 16], 'false': [5.27e-09, 21, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.789, 4, 16], 'false': [0.0, 21, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.789, 4, 16], 'false': [7.45e-09, 21, 0]}]]
[{'': [0.11890606420927562, -5.28677630773884e-18], 'true': [-2.9605947323337506e-16, 0.15999999999999978]}, {'': [0.11592406117791515, 0.0], 'true': [9.868649107779169e-17, 0.16]}, {'': [0.11309803640344251, 5.28677630773884e-18], 'true': [-1.4802973661668753e-16, 0.16000000000000011]}, {'': [0.11178756064812795, 0.0], 'true': [1.2335811384723962e-16, 0.16]}, {'': [0.11136215989259148, 5.28677630773884e-18], 'true': [-3.700743415417188e-17, 0.16]}, {'': [0.1112405762188162, 2.64338815386942e-18], 'true': [3.700743415417188e-17, 0.16]}, {'': [0.11120937036239856, -2.64338815386942e-18], 'true': [-2.4671622769447922e-17, 0.15999999999999998]}, {'': [0.11119979426551704, 1.32169407693471e-18], 'true': [6.1679056923619804e-18, 0.15999999999999998]}, {'': [0.11119012247767908, 0.0], 'true': [-3.0839528461809902e-18, 0.15999999999999998]}, {'': [0.11117444867729995, 2.64338815386942e-18], 'true': [0.0, 0.16]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.1418510649004878;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.22373365448410584;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.6176658081877178;  // std dev = 0.924, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.7380804263867032;  // std dev = 0.032, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.1888683221574974;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.5729496975579759;  // std dev = 0.036, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.4553212609769973;  // std dev = 0.909, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return -0.02662000217597758;  // std dev = 0.533, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.42263246872739;  // std dev = 1.040, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.34264218406971136;  // std dev = 0.646, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783628;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, B), publication(E, A) )
%   | | then return 0.109514229748611;  // std dev = 1.024, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.24724284268165522;  // std dev = 0.903, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.38342625180835305;  // std dev = 0.064, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.09269127618926094;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return -0.06459167403582722;  // std dev = 0.478, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.2749872843801144;  // std dev = 1.075, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.18737957598922284;  // std dev = 0.576, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return -0.0516541047712914;  // std dev = 0.480, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.2610821457529999;  // std dev = 0.784, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.17334334338812302;  // std dev = 0.930, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.07877675473109173;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E) )
%   | | then if ( ta(D, F, G), publication(H, F) )
%   | | | then return 0.31472718765504687;  // std dev = 0.350, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.02127658530140757;  // std dev = 0.865, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(I, B), publication(J, A) )
%   | | | then return -0.30649335335855193;  // std dev = 0.167, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.24250720972067788;  // std dev = 0.126, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, B) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.14792047193714275;  // std dev = 1.001, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.03418434558755525;  // std dev = 0.545, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.2231458074649744;  // std dev = 0.093, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06842697784420272;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return -0.03649841208825146;  // std dev = 0.356, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.15790245496678537;  // std dev = 0.048, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.07515883869523457;  // std dev = 1.100, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.06419184008202619;  // std dev = 7.45e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */


Results
   AUC ROC   = 0.943388
   AUC PR    = 0.422053
   CLL	      = -0.362671
   Precision = 0.213333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.351648


Total learning time: 1.983 seconds
Total inference time: 0.5 seconds
AUC ROC: 0.943388


Results scoring model
   AUC ROC   = 0.9944
   AUC PR    = 0.994225
   CLL	      = -0.16674
   Precision = 0.961538 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.980392


Total scoring time: 0.411 seconds
Refined model CLL: -0.16674


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.943388
   AUC PR    = 0.422053
   CLL	      = -0.362671
   Precision = 0.213333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.351648


Total learning time: 3.39 seconds
Total inference time: 0.5 seconds
AUC ROC: 0.943388
Total revision time: 3.39
Best scored revision CLL: -0.16674


Dataset: 1_imdb_uwcse, Fold: 5, Type: Transfer (trRDN-B), Time: 00:07:24
{'AUC ROC': 0.943388, 'AUC PR': 0.422053, 'CLL': -0.362671, 'Precision': [0.213333, 0.5], 'Recall': 1.0, 'F1': 0.351648, 'Learning time': 3.39, 'Inference time': 0.5, 'parameter_25': {'AUC ROC': 0.926087, 'AUC PR': 0.46579, 'CLL': -0.31451, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 0.617, 'Inference time': 0.473}}


Starting fold 1

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos	 examples: 35
Target test neg examples: 1814

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.46125983910675533;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3488463256948422;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.26212705508354184;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19945264276423433;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15451336627983223;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12179491558002796;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09745354768081688;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07895233872555124;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.90215
   AUC PR    = 0.089744
   CLL	      = -0.335276
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 0.55 seconds
Total inference time: 0.694 seconds
AUC ROC: 0.90215


Results scoring model
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.302866
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.345 seconds
Parameter learned model CLL: -0.302866


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}]]
[{'': [0.1388888888888887, 0.0], 'true': [nan, 0.1388888888888887]}, {'': [0.13888888888888884, 0.0], 'true': [nan, 0.13888888888888884]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}, {'': [0.13888888888888898, 0.0], 'true': [nan, 0.13888888888888898]}, {'': [0.13888888888888884, 0.0], 'true': [nan, 0.13888888888888884]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}, {'': [0.1388888888888889, 0.0], 'true': [nan, 0.1388888888888889]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}, {'': [0.13888888888888892, 0.0], 'true': [nan, 0.13888888888888892]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.46125983910675533;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.3488463256948422;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.26212705508354184;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.19945264276423433;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.15451336627983223;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.12179491558002796;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.09745354768081688;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.07895233872555124;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.90215
   AUC PR    = 0.089744
   CLL	      = -0.335276
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 0.478 seconds
Total inference time: 0.594 seconds
AUC ROC: 0.90215


Results scoring model
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.302866
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.324 seconds
Refined model CLL: -0.302866


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.90215
   AUC PR    = 0.089744
   CLL	      = -0.335276
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 1.697 seconds
Total inference time: 0.694 seconds
AUC ROC: 0.90215
Total revision time: 1.697
Best scored revision CLL: -0.302866


Dataset: 1_imdb_uwcse, Fold: 1, Type: Transfer (trRDN-B), Time: 00:07:27
{'AUC ROC': 0.90215, 'AUC PR': 0.089744, 'CLL': -0.335276, 'Precision': [0.089744, 0.5], 'Recall': 1.0, 'F1': 0.164706, 'Learning time': 1.697, 'Inference time': 0.694, 'parameter_5': {'AUC ROC': 0.90215, 'AUC PR': 0.089744, 'CLL': -0.335276, 'Precision': [0.089744, 0.5], 'Recall': 1.0, 'F1': 0.164706, 'Learning time': 0.55, 'Inference time': 0.694}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6081489350995122;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5170719622367217;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.41257245288266;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3151786576185065;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.10159632948783628;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.23676009386434205;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.1780694542720751;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.08518475138839687;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.13513671764223456;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.103671751136855;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.07324622576333704;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.08034833303035915;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.06282214181758172;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.937707
   AUC PR    = 0.29769
   CLL	      = -0.292167
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 0.54 seconds
Total inference time: 0.684 seconds
AUC ROC: 0.937707


Results scoring model
   AUC ROC   = 0.94
   AUC PR    = 0.933006
   CLL	      = -0.277674
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.356 seconds
Parameter learned model CLL: -0.277674


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.225, 2, 6], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.225, 2, 6], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.225, 2, 6], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.225, 2, 6], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.225, 2, 6], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.225, 2, 6], 'false': [2.63e-09, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.225, 2, 6], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.225, 2, 6], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.225, 2, 6], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.225, 2, 6], 'false': [0.0, 8, 0]}]]
[{'': [0.1388888888888887, -6.938893903907228e-18], 'true': [0.0, 0.18749999999999994]}, {'': [0.1341036326559272, 0.0], 'true': [0.0, 0.18750000000000006]}, {'': [0.129531138183921, -1.734723475976807e-18], 'true': [0.0, 0.18749999999999997]}, {'': [0.1273272082644237, 0.0], 'true': [0.0, 0.18750000000000003]}, {'': [0.12656619930698668, 0.0], 'true': [0.0, 0.1875]}, {'': [0.1263210755473858, 8.673617379884035e-19], 'true': [0.0, 0.1875]}, {'': [0.12623739852023744, 0.0], 'true': [0.0, 0.1875]}, {'': [0.12619804298100246, 0.0], 'true': [0.0, 0.1875]}, {'': [0.12616469156648724, 0.0], 'true': [0.0, 0.1875]}, {'': [0.126126064068152, 0.0], 'true': [0.0, 0.18750000000000003]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.3927941835770488;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.32092546969114216;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.25206564481433;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.10159632948783628;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.19292386438161405;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.11549603375040206;  // std dev = 0.728, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.22946365463231078;  // std dev = 0.818, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.08518475138839687;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.09981498782063832;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.22064991020734157;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.0749017824476493;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.18506097430412527;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07324622576333704;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.056281686279580745;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.15876964285921355;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.042367499606508895;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.1387009770279974;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.921531
   AUC PR    = 0.105878
   CLL	      = -0.397963
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 1.055 seconds
Total inference time: 0.741 seconds
AUC ROC: 0.921531


Results scoring model
   AUC ROC   = 0.975
   AUC PR    = 0.975784
   CLL	      = -0.237737
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.353 seconds
Refined model CLL: -0.237737


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.921531
   AUC PR    = 0.105878
   CLL	      = -0.397963
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 2.3040000000000003 seconds
Total inference time: 0.741 seconds
AUC ROC: 0.921531
Total revision time: 2.3040000000000003
Best scored revision CLL: -0.237737


Dataset: 1_imdb_uwcse, Fold: 1, Type: Transfer (trRDN-B), Time: 00:07:32
{'AUC ROC': 0.921531, 'AUC PR': 0.105878, 'CLL': -0.397963, 'Precision': [0.089744, 0.5], 'Recall': 1.0, 'F1': 0.164706, 'Learning time': 2.3040000000000003, 'Inference time': 0.741, 'parameter_10': {'AUC ROC': 0.937707, 'AUC PR': 0.29769, 'CLL': -0.292167, 'Precision': [0.089744, 0.5], 'Recall': 1.0, 'F1': 0.164706, 'Learning time': 0.54, 'Inference time': 0.684}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.63592671287729;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5398498420741676;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.42895627253508517;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3264400476801373;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.24503149911444547;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.092691276189261;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.18482045881522158;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.08518475138839686;  // std dev = 6.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.14108814406879133;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.10912169797108993;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.0854052341130851;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.0675192639640355;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.0641918400820262;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.937707
   AUC PR    = 0.29769
   CLL	      = -0.306864
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 0.612 seconds
Total inference time: 0.715 seconds
AUC ROC: 0.937707


Results scoring model
   AUC ROC   = 0.968889
   AUC PR    = 0.965934
   CLL	      = -0.22205
   Precision = 0.882353 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.9375


Total scoring time: 0.363 seconds
Parameter learned model CLL: -0.22205


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.247, 2, 7], 'false': [0.0, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [1.247, 2, 7], 'false': [7.45e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.247, 2, 7], 'false': [1.05e-08, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [1.247, 2, 7], 'false': [5.27e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.247, 2, 7], 'false': [0.0, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.49e-08, 0, 8], 'true,false': [1.247, 2, 7], 'false': [6.45e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.247, 2, 7], 'false': [3.73e-09, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 8], 'true,false': [1.247, 2, 7], 'false': [5.27e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.247, 2, 7], 'false': [2.63e-09, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.247, 2, 7], 'false': [0.0, 13, 0]}]]
[{'': [0.10380622837370206, -1.2810265668751807e-17], 'true': [-2.220446049250313e-16, 0.17283950617283939]}, {'': [0.09954151413408209, 4.270088556250602e-18], 'true': [1.1102230246251565e-16, 0.17283950617283944]}, {'': [0.09548432725532674, 8.540177112501205e-18], 'true': [-1.1102230246251565e-16, 0.17283950617283947]}, {'': [0.09356969015848658, 2.135044278125301e-18], 'true': [1.1102230246251565e-16, 0.17283950617283952]}, {'': [0.0929301921461156, -1.0675221390626506e-18], 'true': [-4.163336342344337e-17, 0.17283950617283952]}, {'': [0.09273632987826218, 3.2025664171879517e-18], 'true': [2.7755575615628914e-17, 0.1728395061728395]}, {'': [0.09267806632759278, 1.0675221390626506e-18], 'true': [-2.0816681711721685e-17, 0.1728395061728395]}, {'': [0.0926544142891245, 2.135044278125301e-18], 'true': [6.938893903907228e-18, 0.1728395061728395]}, {'': [0.09263296797430988, 5.337610695313253e-19], 'true': [-3.469446951953614e-18, 0.1728395061728395]}, {'': [0.09260459966386772, 0.0], 'true': [0.0, 0.1728395061728395]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.448295606241962;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.36236334632262296;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.2807538536965854;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.21248070121827137;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.092691276189261;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.15948988228171151;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.08518475138839686;  // std dev = 6.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.11975529938157475;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.09028081829440963;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.06840311429118533;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.052078905701252655;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.0641918400820262;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.912467
   AUC PR    = 0.09998
   CLL	      = -0.412554
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 1.067 seconds
Total inference time: 0.717 seconds
AUC ROC: 0.912467


Results scoring model
   AUC ROC   = 0.982222
   AUC PR    = 0.982198
   CLL	      = -0.201549
   Precision = 0.882353 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.9375


Total scoring time: 0.364 seconds
Refined model CLL: -0.201549


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.912467
   AUC PR    = 0.09998
   CLL	      = -0.412554
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 2.4059999999999997 seconds
Total inference time: 0.717 seconds
AUC ROC: 0.912467
Total revision time: 2.4059999999999997
Best scored revision CLL: -0.201549


Dataset: 1_imdb_uwcse, Fold: 1, Type: Transfer (trRDN-B), Time: 00:07:36
{'AUC ROC': 0.912467, 'AUC PR': 0.09998, 'CLL': -0.412554, 'Precision': [0.089744, 0.5], 'Recall': 1.0, 'F1': 0.164706, 'Learning time': 2.4059999999999997, 'Inference time': 0.717, 'parameter_15': {'AUC ROC': 0.937707, 'AUC PR': 0.29769, 'CLL': -0.306864, 'Precision': [0.089744, 0.5], 'Recall': 1.0, 'F1': 0.164706, 'Learning time': 0.612, 'Inference time': 0.715}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6581489350995123;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else return -0.14185106490048782;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5580193346218546;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.4419486100244408;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.335411394950943;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else return -0.10159632948783627;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.25176837314502193;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else return -0.09269127618926098;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.19047961032437188;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.14620194507639955;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else return -0.07877675473109179;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.1138936946560747;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.08989956180301867;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else return -0.06842697784420271;  // std dev = 3.73e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.07174810215160456;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else return -0.06419184008202619;  // std dev = 5.27e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.937707
   AUC PR    = 0.29769
   CLL	      = -0.319241
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 0.68 seconds
Total inference time: 0.68 seconds
AUC ROC: 0.937707


Results scoring model
   AUC ROC   = 0.955
   AUC PR    = 0.947702
   CLL	      = -0.24299
   Precision = 0.869565 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.930233


Total scoring time: 0.375 seconds
Parameter learned model CLL: -0.24299


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.549, 3, 12], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [1.549, 3, 12], 'false': [7.45e-09, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.549, 3, 12], 'false': [1.18e-08, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [1.549, 3, 12], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.549, 3, 12], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.49e-08, 0, 8], 'true,false': [1.549, 3, 12], 'false': [7.45e-09, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.549, 3, 12], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 8], 'true,false': [1.549, 3, 12], 'false': [5.27e-09, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.549, 3, 12], 'false': [3.73e-09, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.549, 3, 12], 'false': [5.27e-09, 17, 0]}]]
[{'': [0.11342155009451807, -1.3061447348531253e-17], 'true': [-2.220446049250313e-16, 0.15999999999999984]}, {'': [0.11026104026543956, 3.2653618371328133e-18], 'true': [1.1102230246251565e-16, 0.16000000000000003]}, {'': [0.10726584576596739, 8.163404592832034e-18], 'true': [-1.1102230246251565e-16, 0.16]}, {'': [0.10587692313179037, 0.0], 'true': [1.1102230246251565e-16, 0.16]}, {'': [0.10542605730267096, 0.0], 'true': [-4.163336342344337e-17, 0.15999999999999998]}, {'': [0.10529719546316878, 3.2653618371328133e-18], 'true': [2.7755575615628914e-17, 0.15999999999999998]}, {'': [0.10526412158131965, -1.6326809185664067e-18], 'true': [-2.0816681711721685e-17, 0.15999999999999998]}, {'': [0.10525397224612457, 1.6326809185664067e-18], 'true': [6.938893903907228e-18, 0.16000000000000003]}, {'': [0.10524372149178088, 8.163404592832033e-19], 'true': [-3.469446951953614e-18, 0.15999999999999998]}, {'': [0.10522710943618051, 1.6326809185664067e-18], 'true': [0.0, 0.16]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.14185106490048782;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.3927941835770488;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.5965523559706852;  // std dev = 0.918, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.7380804263867032;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.32092546969114216;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.4670448059481715;  // std dev = 0.916, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.5741220964829173;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.25206564481433;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.4492193762676173;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3447326733438369;  // std dev = 0.910, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.10159632948783627;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, A) )
%   | | then return 0.15520169635581346;  // std dev = 0.651, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.23471731409820346;  // std dev = 1.212, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.43812336669202506;  // std dev = 0.190, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.09269127618926098;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.3086676718099129;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.26673979105407847;  // std dev = 0.836, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.09501449433200937;  // std dev = 1.087, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.07966259382925554;  // std dev = 1.059, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.24708696039878777;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16193544398788148;  // std dev = 0.890, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.07877675473109179;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, A) )
%   | | then return 0.030976949485420277;  // std dev = 0.601, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.10125556011764456;  // std dev = 1.200, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.2935102289717843;  // std dev = 0.181, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, B), publication(E, A) )
%   | | then return 0.19914509581278314;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.15518717805304036;  // std dev = 0.835, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.011187211710593479;  // std dev = 1.057, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.06842697784420271;  // std dev = 3.73e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.005750539196078641;  // std dev = 1.029, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.1693270783151363;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0916698079679624;  // std dev = 0.880, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.06419184008202619;  // std dev = 5.27e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 0.94203
   AUC PR    = 0.302545
   CLL	      = -0.375383
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 1.536 seconds
Total inference time: 0.801 seconds
AUC ROC: 0.94203


Results scoring model
   AUC ROC   = 0.9875
   AUC PR    = 0.987144
   CLL	      = -0.209687
   Precision = 0.869565 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.930233


Total scoring time: 0.393 seconds
Refined model CLL: -0.209687


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.94203
   AUC PR    = 0.302545
   CLL	      = -0.375383
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 2.984 seconds
Total inference time: 0.801 seconds
AUC ROC: 0.94203
Total revision time: 2.984
Best scored revision CLL: -0.209687


Dataset: 1_imdb_uwcse, Fold: 1, Type: Transfer (trRDN-B), Time: 00:07:41
{'AUC ROC': 0.94203, 'AUC PR': 0.302545, 'CLL': -0.375383, 'Precision': [0.089744, 0.5], 'Recall': 1.0, 'F1': 0.164706, 'Learning time': 2.984, 'Inference time': 0.801, 'parameter_20': {'AUC ROC': 0.937707, 'AUC PR': 0.29769, 'CLL': -0.319241, 'Precision': [0.089744, 0.5], 'Recall': 1.0, 'F1': 0.164706, 'Learning time': 0.68, 'Inference time': 0.68}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.6200536970042743;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   else return -0.14185106490048777;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.526842910666897;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.4196142257872246;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   else return -0.11231637819360636;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.3200133002419622;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   else return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.24028721331151187;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   else return -0.09269127618926094;  // std dev = 1.05e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.18092143511437755;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.13762992643840294;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   else return -0.07877675473109173;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.10594006180731294;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.08244226187470093;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   else return -0.06842697784420274;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.06475854750582631;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   else return -0.06419184008202619;  // std dev = 5.27e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.937707
   AUC PR    = 0.29769
   CLL	      = -0.298363
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total learning time: 0.677 seconds
Total inference time: 0.682 seconds
AUC ROC: 0.937707


Results scoring model
   AUC ROC   = 0.936
   AUC PR    = 0.926351
   CLL	      = -0.281102
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.38 seconds
Parameter learned model CLL: -0.281102


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.952, 5, 16], 'false': [0.0, 20, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 9], 'true,false': [1.952, 5, 16], 'false': [7.45e-09, 20, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.952, 5, 16], 'false': [1.49e-08, 20, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [3.33e-08, 0, 9], 'true,false': [1.952, 5, 16], 'false': [0.0, 20, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.952, 5, 16], 'false': [1.05e-08, 20, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.83e-08, 0, 9], 'true,false': [1.952, 5, 16], 'false': [5.27e-09, 20, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.952, 5, 16], 'false': [0.0, 20, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 9], 'true,false': [1.952, 5, 16], 'false': [3.73e-09, 20, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.952, 5, 16], 'false': [0.0, 20, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.952, 5, 16], 'false': [5.27e-09, 20, 0]}]]
[{'': [0.13888888888888987, -2.7755575615628915e-18], 'true': [-2.9605947323337506e-16, 0.18140589569160967]}, {'': [0.13477649411040168, 2.7755575615628915e-18], 'true': [9.868649107779169e-17, 0.18140589569160992]}, {'': [0.1308541461679842, 1.1102230246251566e-17], 'true': [-1.4802973661668753e-16, 0.18140589569161]}, {'': [0.1289804511105185, -5.551115123125783e-18], 'true': [1.2335811384723962e-16, 0.18140589569160998]}, {'': [0.12834243254736138, 5.551115123125783e-18], 'true': [-3.700743415417188e-17, 0.18140589569160998]}, {'': [0.12814189528975176, 1.3877787807814458e-18], 'true': [3.700743415417188e-17, 0.18140589569161]}, {'': [0.12807663475867392, -2.0816681711721684e-18], 'true': [-2.4671622769447922e-17, 0.18140589569160998]}, {'': [0.12804740704295967, 6.938893903907229e-19], 'true': [6.1679056923619804e-18, 0.18140589569160995]}, {'': [0.12802201301462335, -1.3877787807814458e-18], 'true': [-3.0839528461809902e-18, 0.18140589569160995]}, {'': [0.1279911509731866, 1.3877787807814458e-18], 'true': [0.0, 0.18140589569160998]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, B) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.6273797043302815;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.14185106490048777;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.1286281315580171;  // std dev = 0.724, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.5328490890947368;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.7422198280150732;  // std dev = 0.102, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.10730255867486949;  // std dev = 0.717, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.4239325089396988;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.5805891335774221;  // std dev = 0.138, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360636;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, B), publication(E, A) )
%   | | then return 0.545724324547667;  // std dev = 0.187, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(F, B) )
%   | | | then return 0.3077821753976055;  // std dev = 1.489, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.05551362021565768;  // std dev = 0.631, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.41502469826468463;  // std dev = 0.181, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(F, B) )
%   | | | then return 0.23216240239595307;  // std dev = 1.491, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.04489492596756021;  // std dev = 0.628, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.09269127618926094;  // std dev = 1.05e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return -3.779174013776772E-4;  // std dev = 0.535, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.1738686536401794;  // std dev = 1.495, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.3215489175211432;  // std dev = 0.260, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, B), publication(E, A) )
%   | | then return 0.2916168133034558;  // std dev = 0.197, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(F, B) )
%   | | | then return 0.1307295205748322;  // std dev = 1.488, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.009450173759012859;  // std dev = 0.559, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.07877675473109173;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, B), publication(E, A) )
%   | | then return 0.23751558022039249;  // std dev = 0.172, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(F, B) )
%   | | | then return 0.10229772487274623;  // std dev = 1.490, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.007586771486620347;  // std dev = 0.559, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return -0.0433147184296049;  // std dev = 0.437, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.0734900529221484;  // std dev = 1.488, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.22410470221482534;  // std dev = 0.276, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420274;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(D, E), inphase(E, F) )
%   | | | then return 0.04663084042584134;  // std dev = 1.457, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0.3090654932526469;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.007322035009268313;  // std dev = 0.507, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.06419184008202619;  // std dev = 5.27e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.931273
   AUC PR    = 0.148984
   CLL	      = -0.319693
   Precision = 0.091176 at threshold = 0.5
   Recall    = 0.885714
   F1        = 0.165333


Total learning time: 1.892 seconds
Total inference time: 0.778 seconds
AUC ROC: 0.931273


Results scoring model
   AUC ROC   = 0.9784
   AUC PR    = 0.978216
   CLL	      = -0.219225
   Precision = 0.892857 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.943396


Total scoring time: 0.408 seconds
Refined model CLL: -0.219225


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.931273
   AUC PR    = 0.148984
   CLL	      = -0.319693
   Precision = 0.091176 at threshold = 0.5
   Recall    = 0.885714
   F1        = 0.165333


Total learning time: 3.3569999999999998 seconds
Total inference time: 0.778 seconds
AUC ROC: 0.931273
Total revision time: 3.3569999999999998
Best scored revision CLL: -0.219225


Dataset: 1_imdb_uwcse, Fold: 1, Type: Transfer (trRDN-B), Time: 00:07:46
{'AUC ROC': 0.931273, 'AUC PR': 0.148984, 'CLL': -0.319693, 'Precision': [0.091176, 0.5], 'Recall': 0.885714, 'F1': 0.165333, 'Learning time': 3.3569999999999998, 'Inference time': 0.778, 'parameter_25': {'AUC ROC': 0.937707, 'AUC PR': 0.29769, 'CLL': -0.298363, 'Precision': [0.089744, 0.5], 'Recall': 1.0, 'F1': 0.164706, 'Learning time': 0.677, 'Inference time': 0.682}}


Starting fold 2

Target train facts examples: 1965
Target train pos examples: 93
Target train neg examples: 3738

Target test facts examples: 422
Target test pos	 examples: 20
Target test neg examples: 341

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333703;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.926686
   AUC PR    = 0.285714
   CLL	      = -0.351876
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 0.575 seconds
Total inference time: 0.454 seconds
AUC ROC: 0.926686


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.341 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.49e-08, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [2.63e-09, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [1.86e-09, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [nan, 0.0]}, {'': [0.0, 0.0], 'true': [nan, 0.0]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [nan, -4.4408920985006264e-17]}, {'': [4.4408920985006264e-17, 0.0], 'true': [nan, 4.4408920985006264e-17]}, {'': [-2.2204460492503132e-17, 0.0], 'true': [nan, -2.2204460492503132e-17]}, {'': [0.0, 0.0], 'true': [nan, 0.0]}, {'': [-5.551115123125783e-18, -1.3877787807814458e-18], 'true': [nan, -5.551115123125783e-18]}, {'': [0.0, 1.3877787807814458e-18], 'true': [nan, 0.0]}, {'': [0.0, 6.938893903907229e-19], 'true': [nan, 0.0]}, {'': [0.0, 0.0], 'true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333703;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.926686
   AUC PR    = 0.285714
   CLL	      = -0.351876
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 0.49 seconds
Total inference time: 0.416 seconds
AUC ROC: 0.926686


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.33 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.926686
   AUC PR    = 0.285714
   CLL	      = -0.351876
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 1.736 seconds
Total inference time: 0.454 seconds
AUC ROC: 0.926686
Total revision time: 1.736
Best scored revision CLL: -0.094637


Dataset: 1_imdb_uwcse, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:49
{'AUC ROC': 0.926686, 'AUC PR': 0.285714, 'CLL': -0.351876, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 1.736, 'Inference time': 0.454, 'parameter_5': {'AUC ROC': 0.926686, 'AUC PR': 0.285714, 'CLL': -0.351876, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 0.575, 'Inference time': 0.454}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5248156017661788;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.14185106490048777;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.448295606241962;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.36236334632262296;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2807538536965855;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.10159632948783628;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.21248070121827137;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.09269127618926096;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1594898822817116;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.08518475138839687;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.11975529938157474;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.09028081829440963;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.06840311429118533;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.052078905701252655;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.956745
   AUC PR    = 0.591831
   CLL	      = -0.210508
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 0.576 seconds
Total inference time: 0.463 seconds
AUC ROC: 0.956745


Results scoring model
   AUC ROC   = 0.96
   AUC PR    = 0.959603
   CLL	      = -0.255004
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.354 seconds
Parameter learned model CLL: -0.255004


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.155, 2, 4], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [1.155, 2, 4], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.155, 2, 4], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [1.155, 2, 4], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.155, 2, 4], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 6], 'true,false': [1.155, 2, 4], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.155, 2, 4], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [5.27e-09, 0, 6], 'true,false': [1.155, 2, 4], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.155, 2, 4], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.155, 2, 4], 'false': [0.0, 8, 0]}]]
[{'': [0.1388888888888887, 0.0], 'true': [-1.4802973661668753e-16, 0.22222222222222224]}, {'': [0.12949546172365026, 0.0], 'true': [7.401486830834377e-17, 0.2222222222222222]}, {'': [0.12042365933938211, 0.0], 'true': [-7.401486830834377e-17, 0.22222222222222224]}, {'': [0.11578691708010193, 0.0], 'true': [7.401486830834377e-17, 0.2222222222222222]}, {'': [0.11403960634908421, 0.0], 'true': [-3.700743415417188e-17, 0.2222222222222222]}, {'': [0.11339988962867116, 0.0], 'true': [9.25185853854297e-18, 0.2222222222222222]}, {'': [0.11313621984386389, 0.0], 'true': [-9.25185853854297e-18, 0.22222222222222224]}, {'': [0.11299535166074005, 0.0], 'true': [4.625929269271485e-18, 0.22222222222222224]}, {'': [0.11288945137740025, 0.0], 'true': [-4.625929269271485e-18, 0.2222222222222222]}, {'': [0.11278916549921701, 0.0], 'true': [0.0, 0.22222222222222224]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5248156017661788;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.14185106490048777;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.448295606241962;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.36236334632262296;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2807538536965855;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.10159632948783628;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.21248070121827137;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.09269127618926096;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1594898822817116;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.08518475138839687;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.11975529938157474;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.09028081829440963;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.07324622576333704;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.06840311429118533;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.052078905701252655;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.956745
   AUC PR    = 0.591831
   CLL	      = -0.210508
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 0.538 seconds
Total inference time: 0.451 seconds
AUC ROC: 0.956745


Results scoring model
   AUC ROC   = 0.96
   AUC PR    = 0.959603
   CLL	      = -0.255004
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.353 seconds
Refined model CLL: -0.255004


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.956745
   AUC PR    = 0.591831
   CLL	      = -0.210508
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 1.821 seconds
Total inference time: 0.463 seconds
AUC ROC: 0.956745
Total revision time: 1.821
Best scored revision CLL: -0.255004


Dataset: 1_imdb_uwcse, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:53
{'AUC ROC': 0.956745, 'AUC PR': 0.591831, 'CLL': -0.210508, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 1.821, 'Inference time': 0.463, 'parameter_10': {'AUC ROC': 0.956745, 'AUC PR': 0.591831, 'CLL': -0.210508, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 0.576, 'Inference time': 0.463}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.63592671287729;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5398498420741676;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.12544463852839138;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.42895627253508517;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.11231637819360639;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3264400476801373;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.24503149911444552;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.09269127618926096;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.18482045881522158;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.08518475138839686;  // std dev = 6.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.14108814406879133;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.07877675473109173;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.10912169797108993;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.0854052341130851;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.0675192639640355;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.0641918400820262;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.956745
   AUC PR    = 0.591831
   CLL	      = -0.246197
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 0.646 seconds
Total inference time: 0.476 seconds
AUC ROC: 0.956745


Results scoring model
   AUC ROC   = 0.968889
   AUC PR    = 0.965934
   CLL	      = -0.22205
   Precision = 0.882353 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.9375


Total scoring time: 0.357 seconds
Parameter learned model CLL: -0.22205


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.247, 2, 7], 'false': [0.0, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [1.247, 2, 7], 'false': [0.0, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.247, 2, 7], 'false': [0.0, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [1.247, 2, 7], 'false': [5.27e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.247, 2, 7], 'false': [3.73e-09, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.49e-08, 0, 8], 'true,false': [1.247, 2, 7], 'false': [6.45e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.247, 2, 7], 'false': [0.0, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 8], 'true,false': [1.247, 2, 7], 'false': [5.27e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.247, 2, 7], 'false': [2.63e-09, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.247, 2, 7], 'false': [0.0, 13, 0]}]]
[{'': [0.10380622837370206, -8.540177112501205e-18], 'true': [-2.220446049250313e-16, 0.1728395061728395]}, {'': [0.09954151413408209, 0.0], 'true': [1.1102230246251565e-16, 0.17283950617283944]}, {'': [0.09548432725532689, -2.135044278125301e-18], 'true': [-1.1102230246251565e-16, 0.1728395061728395]}, {'': [0.09356969015848664, 2.135044278125301e-18], 'true': [1.1102230246251565e-16, 0.17283950617283952]}, {'': [0.09293019214611553, 1.0675221390626506e-18], 'true': [-4.163336342344337e-17, 0.1728395061728395]}, {'': [0.09273632987826218, 3.2025664171879517e-18], 'true': [2.7755575615628914e-17, 0.1728395061728395]}, {'': [0.09267806632759278, -1.0675221390626506e-18], 'true': [-2.0816681711721685e-17, 0.1728395061728395]}, {'': [0.0926544142891245, 2.135044278125301e-18], 'true': [6.938893903907228e-18, 0.1728395061728395]}, {'': [0.09263296797430988, 5.337610695313253e-19], 'true': [-3.469446951953614e-18, 0.1728395061728395]}, {'': [0.09260459966386772, 0.0], 'true': [0.0, 0.1728395061728395]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3927941835770488;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.12544463852839138;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then return 0.610552781061237;  // std dev = 0.135, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.33240579204285625;  // std dev = 1.072, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.11231637819360639;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then return 0.15258995513958654;  // std dev = 0.616, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.41287299913828096;  // std dev = 0.855, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then return 0.4058118613959218;  // std dev = 0.093, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.16843870486953383;  // std dev = 1.032, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.09269127618926096;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.30665441575220587;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.09641665185201326;  // std dev = 1.020, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.08518475138839686;  // std dev = 6.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then return -0.0020266805129507772;  // std dev = 0.549, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.22543235045258836;  // std dev = 0.840, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.22491283288124653;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.02926125727311283;  // std dev = 0.994, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then return 0.22513376158908172;  // std dev = 0.096, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.03142032701420618;  // std dev = 0.983, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then return -0.052105395847298154;  // std dev = 0.506, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.14518530489029594;  // std dev = 0.834, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.964809
   AUC PR    = 0.642407
   CLL	      = -0.267001
   Precision = 0.272727 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.418605


Total learning time: 1.177 seconds
Total inference time: 0.476 seconds
AUC ROC: 0.964809


Results scoring model
   AUC ROC   = 0.995556
   AUC PR    = 0.995618
   CLL	      = -0.177489
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 0.379 seconds
Refined model CLL: -0.177489


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.964809
   AUC PR    = 0.642407
   CLL	      = -0.267001
   Precision = 0.272727 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.418605


Total learning time: 2.559 seconds
Total inference time: 0.476 seconds
AUC ROC: 0.964809
Total revision time: 2.559
Best scored revision CLL: -0.177489


Dataset: 1_imdb_uwcse, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:57
{'AUC ROC': 0.964809, 'AUC PR': 0.642407, 'CLL': -0.267001, 'Precision': [0.272727, 0.5], 'Recall': 0.9, 'F1': 0.418605, 'Learning time': 2.559, 'Inference time': 0.476, 'parameter_15': {'AUC ROC': 0.956745, 'AUC PR': 0.591831, 'CLL': -0.246197, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 0.646, 'Inference time': 0.476}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6763307532813304;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.1418510649004878;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5728505077589574;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.45250734201965837;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.34273989085368034;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.10159632948783627;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.2573771265051454;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.092691276189261;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.19529825339842236;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.1506364669407769;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.07877675473109173;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.11808890552787812;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367094;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.09389442014327223;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.06842697784420272;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.07554408412491892;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.0641918400820262;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 0.956745
   AUC PR    = 0.591831
   CLL	      = -0.261694
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 0.6 seconds
Total inference time: 0.451 seconds
AUC ROC: 0.956745


Results scoring model
   AUC ROC   = 0.9775
   AUC PR    = 0.974957
   CLL	      = -0.196351
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.367 seconds
Parameter learned model CLL: -0.196351


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 11], 'true,false': [1.279, 2, 9], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [4.21e-08, 0, 11], 'true,false': [1.279, 2, 9], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 11], 'true,false': [1.279, 2, 9], 'false': [1.05e-08, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [4.21e-08, 0, 11], 'true,false': [1.279, 2, 9], 'false': [7.45e-09, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 11], 'true,false': [1.279, 2, 9], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 11], 'true,false': [1.279, 2, 9], 'false': [5.27e-09, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 11], 'true,false': [1.279, 2, 9], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 11], 'true,false': [1.279, 2, 9], 'false': [3.73e-09, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 11], 'true,false': [1.279, 2, 9], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [5.27e-09, 0, 11], 'true,false': [1.279, 2, 9], 'false': [3.73e-09, 18, 0]}]]
[{'': [0.08264462809917356, -9.25185853854297e-18], 'true': [-1.6148698540002277e-16, 0.14876033057851235]}, {'': [0.07975473431674124, 0.0], 'true': [1.6148698540002277e-16, 0.14876033057851246]}, {'': [0.07702516363125156, 6.1679056923619804e-18], 'true': [-2.0185873175002846e-16, 0.14876033057851235]}, {'': [0.07577794159185992, 3.0839528461809902e-18], 'true': [1.6148698540002277e-16, 0.14876033057851243]}, {'': [0.075382986999368, -1.5419764230904951e-18], 'true': [-6.055761952500853e-17, 0.14876033057851237]}, {'': [0.07527638893407049, 1.5419764230904951e-18], 'true': [4.0371746350005693e-17, 0.1487603305785124]}, {'': [0.07525399580097439, -7.709882115452476e-19], 'true': [-2.5232341468753557e-17, 0.1487603305785124]}, {'': [0.07525063927407992, 7.709882115452476e-19], 'true': [5.046468293750712e-18, 0.14876033057851243]}, {'': [0.07524597937602566, 0.0], 'true': [5.046468293750712e-18, 0.14876033057851237]}, {'': [0.07523464429958854, 7.709882115452476e-19], 'true': [2.523234146875356e-18, 0.1487603305785124]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.1418510649004878;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.7609104304538484;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3699833577044364;  // std dev = 1.088, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.5989092865963347;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2981095557476065;  // std dev = 1.086, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.22495444944378662;  // std dev = 0.667, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( ta(G, A, H), publication(I, B) )
%   | | | then return 0.16796095149628262;  // std dev = 0.664, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5907330431875308;  // std dev = 0.129, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.10159632948783627;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then return 0.401618452870175;  // std dev = 0.100, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.10747846825236478;  // std dev = 0.628, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.26580562649106376;  // std dev = 0.767, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.092691276189261;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then return 0.30685203144725687;  // std dev = 0.065, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.07404182663138165;  // std dev = 0.623, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.18564010634190442;  // std dev = 0.766, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.27904789251527906;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | | then return 0.25624228151236456;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.02291442752675914;  // std dev = 0.933, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07877675473109173;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then return 0.029033527246435348;  // std dev = 0.652, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return -9.361444336872434E-4;  // std dev = 0.557, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.32194607789945595;  // std dev = 0.126, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367094;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then return 0.19892200725687564;  // std dev = 0.056, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(F, A) )
%   | | | then return -2.6264290703825743E-4;  // std dev = 0.564, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0813989689977482;  // std dev = 0.714, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.06842697784420272;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( publication(D, B), publication(E, A) )
%   | | then return 0.19881380857015038;  // std dev = 0.112, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(F, B), tempadvisedby(G, B) )
%   | | | then return 0.17841957241663506;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.03981379478943461;  // std dev = 0.855, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.0641918400820262;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 0.93651
   AUC PR    = 0.293877
   CLL	      = -0.306349
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 1.42 seconds
Total inference time: 0.484 seconds
AUC ROC: 0.93651


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.148739
   Precision = 0.952381 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.97561


Total scoring time: 0.382 seconds
Refined model CLL: -0.148739


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.93651
   AUC PR    = 0.293877
   CLL	      = -0.306349
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 2.769 seconds
Total inference time: 0.484 seconds
AUC ROC: 0.93651
Total revision time: 2.769
Best scored revision CLL: -0.148739


Dataset: 1_imdb_uwcse, Fold: 2, Type: Transfer (trRDN-B), Time: 00:08:01
{'AUC ROC': 0.93651, 'AUC PR': 0.293877, 'CLL': -0.306349, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 2.769, 'Inference time': 0.484, 'parameter_20': {'AUC ROC': 0.956745, 'AUC PR': 0.591831, 'CLL': -0.261694, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 0.6, 'Inference time': 0.451}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.724815601766179;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else return -0.14185106490048777;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 4.21e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6122482608191133;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.48037714466292364;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else return -0.11231637819360633;  // std dev = 1.97e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.3623065253795405;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else return -0.10159632948783635;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.2728544572356898;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else return -0.09269127618926094;  // std dev = 1.18e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2.11e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.20907009130494367;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.16365678506766404;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else return -0.07877675473109175;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 1.05e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.13065736919828594;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367094;  // std dev = 1.05e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.10606403859397998;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else return -0.06842697784420274;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.08728781755031526;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else return -0.06419184008202618;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 0.956745
   AUC PR    = 0.591831
   CLL	      = -0.282313
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 0.591 seconds
Total inference time: 0.464 seconds
AUC ROC: 0.956745


Results scoring model
   AUC ROC   = 0.9792
   AUC PR    = 0.975681
   CLL	      = -0.182309
   Precision = 0.925926 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.961538


Total scoring time: 0.387 seconds
Parameter learned model CLL: -0.182309


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 12], 'true,false': [1.317, 2, 13], 'false': [0.0, 23, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [4.21e-08, 0, 12], 'true,false': [1.317, 2, 13], 'false': [0.0, 23, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 12], 'true,false': [1.317, 2, 13], 'false': [1.97e-08, 23, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [4.21e-08, 0, 12], 'true,false': [1.317, 2, 13], 'false': [0.0, 23, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 12], 'true,false': [1.317, 2, 13], 'false': [1.18e-08, 23, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 12], 'true,false': [1.317, 2, 13], 'false': [5.27e-09, 23, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 12], 'true,false': [1.317, 2, 13], 'false': [0.0, 23, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.05e-08, 0, 12], 'true,false': [1.317, 2, 13], 'false': [3.73e-09, 23, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.05e-08, 0, 12], 'true,false': [1.317, 2, 13], 'false': [0.0, 23, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 12], 'true,false': [1.317, 2, 13], 'false': [0.0, 23, 0]}]]
[{'': [0.06858710562414343, -4.827056628805028e-18], 'true': [-1.4802973661668753e-16, 0.11555555555555544]}, {'': [0.06703635384963043, 0.0], 'true': [1.4802973661668753e-16, 0.11555555555555556]}, {'': [0.06558602319189212, 1.68946982008176e-17], 'true': [-2.590520390792032e-16, 0.11555555555555556]}, {'': [0.06495007884913642, -7.240584943207542e-18], 'true': [1.4802973661668753e-16, 0.11555555555555555]}, {'': [0.06476304438774862, 6.033820786006285e-18], 'true': [-5.551115123125783e-17, 0.11555555555555554]}, {'': [0.06472232304968364, 1.206764157201257e-18], 'true': [3.700743415417188e-17, 0.11555555555555554]}, {'': [0.06472229525899928, -3.620292471603771e-18], 'true': [-2.7755575615628914e-17, 0.11555555555555554]}, {'': [0.0647300228790627, 6.033820786006285e-19], 'true': [9.25185853854297e-18, 0.11555555555555555]}, {'': [0.06473555692556143, -1.206764157201257e-18], 'true': [9.25185853854297e-18, 0.11555555555555558]}, {'': [0.06473646538584377, 0.0], 'true': [0.0, 0.11555555555555555]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.14185106490048777;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 4.21e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( ta(F, A, G), publication(H, B) )
%   | | | then return 0.41405060014124423;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6192032218034565;  // std dev = 0.906, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.3759645571008619;  // std dev = 0.802, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(G, B), ta(H, A, I) )
%   | | | then return 0.38507940386711115;  // std dev = 0.840, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.6289985438788829;  // std dev = 0.051, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.11231637819360633;  // std dev = 1.97e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.461225670521688;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.19434693205882833;  // std dev = 0.765, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3642299197388425;  // std dev = 0.867, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.10159632948783635;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.18505060062564394;  // std dev = 0.742, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(G, B), ta(H, A, I) )
%   | | | then return 0.1974825879689944;  // std dev = 0.835, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4001174444313164;  // std dev = 0.101, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.09269127618926094;  // std dev = 1.18e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2.11e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.3091367173612699;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.06331330224487826;  // std dev = 0.728, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2052183667084572;  // std dev = 0.847, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(D, B), publication(E, A) )
%   | | then return 0.3102293472883899;  // std dev = 0.131, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(F, B), tempadvisedby(G, B) )
%   | | | then return 0.24805738644566577;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07323286913673355;  // std dev = 1.075, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.07877675473109175;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 1.05e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.05203325010121092;  // std dev = 0.683, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(G, B), ta(H, A, I) )
%   | | | then return 0.06602247641769762;  // std dev = 0.821, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2509298279051011;  // std dev = 0.087, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367094;  // std dev = 1.05e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.22816894160652812;  // std dev = 0.123, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(F, B), tempadvisedby(G, B) )
%   | | | then return 0.19637754337453517;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.02439046697730654;  // std dev = 1.049, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.06842697784420274;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(D, A) )
%   | | then return -7.856196877309707E-4;  // std dev = 0.675, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( publication(E, B), ta(F, A, G) )
%   | | | then return -0.04818207819997048;  // std dev = 0.755, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1935957549233358;  // std dev = 0.088, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.06419184008202618;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 0.944648
   AUC PR    = 0.400192
   CLL	      = -0.324713
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 1.486 seconds
Total inference time: 0.492 seconds
AUC ROC: 0.944648


Results scoring model
   AUC ROC   = 0.9992
   AUC PR    = 0.999231
   CLL	      = -0.151614
   Precision = 0.925926 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.961538


Total scoring time: 0.406 seconds
Refined model CLL: -0.151614


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.944648
   AUC PR    = 0.400192
   CLL	      = -0.324713
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total learning time: 2.87 seconds
Total inference time: 0.492 seconds
AUC ROC: 0.944648
Total revision time: 2.87
Best scored revision CLL: -0.151614


Dataset: 1_imdb_uwcse, Fold: 2, Type: Transfer (trRDN-B), Time: 00:08:05
{'AUC ROC': 0.944648, 'AUC PR': 0.400192, 'CLL': -0.324713, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 2.87, 'Inference time': 0.492, 'parameter_25': {'AUC ROC': 0.956745, 'AUC PR': 0.591831, 'CLL': -0.282313, 'Precision': [0.285714, 0.5], 'Recall': 1.0, 'F1': 0.444444, 'Learning time': 0.591, 'Inference time': 0.464}}


Starting fold 3

Target train facts examples: 2225
Target train pos examples: 104
Target train neg examples: 3988

Target test facts examples: 162
Target test pos	 examples: 9
Target test neg examples: 91

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333703;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.961538
   AUC PR    = 0.5625
   CLL	      = -0.212678
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 0.547 seconds
Total inference time: 0.354 seconds
AUC ROC: 0.961538


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.339 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.49e-08, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [2.63e-09, 5, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [1.86e-09, 5, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false': [0.0, 5, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [nan, 0.0]}, {'': [0.0, 0.0], 'true': [nan, 0.0]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [nan, -4.4408920985006264e-17]}, {'': [4.4408920985006264e-17, 0.0], 'true': [nan, 4.4408920985006264e-17]}, {'': [-2.2204460492503132e-17, 0.0], 'true': [nan, -2.2204460492503132e-17]}, {'': [0.0, 0.0], 'true': [nan, 0.0]}, {'': [-5.551115123125783e-18, -1.3877787807814458e-18], 'true': [nan, -5.551115123125783e-18]}, {'': [0.0, 1.3877787807814458e-18], 'true': [nan, 0.0]}, {'': [0.0, 6.938893903907229e-19], 'true': [nan, 0.0]}, {'': [0.0, 0.0], 'true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333703;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.961538
   AUC PR    = 0.5625
   CLL	      = -0.212678
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 0.549 seconds
Total inference time: 0.323 seconds
AUC ROC: 0.961538


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.331 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.961538
   AUC PR    = 0.5625
   CLL	      = -0.212678
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 1.766 seconds
Total inference time: 0.354 seconds
AUC ROC: 0.961538
Total revision time: 1.766
Best scored revision CLL: -0.094637


Dataset: 1_imdb_uwcse, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:08
{'AUC ROC': 0.961538, 'AUC PR': 0.5625, 'CLL': -0.212678, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 1.766, 'Inference time': 0.354, 'parameter_5': {'AUC ROC': 0.961538, 'AUC PR': 0.5625, 'CLL': -0.212678, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 0.547, 'Inference time': 0.354}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7152917922423693;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6045267906174346;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.4749335700127619;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.35845481591378264;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.10159632948783628;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.26974781327936176;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.20625258815983655;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.08518475138839687;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.16095555079641394;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.07877675473109175;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.12802275604229368;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.07324622576333704;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.10349083403071084;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.08478440748267761;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.06419184008202618;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.965812
   AUC PR    = 0.668512
   CLL	      = -0.181036
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 0.643 seconds
Total inference time: 0.363 seconds
AUC ROC: 0.965812


Results scoring model
   AUC ROC   = 0.97
   AUC PR    = 0.964132
   CLL	      = -0.202634
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.372 seconds
Parameter learned model CLL: -0.202634


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.926, 1, 6], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.926, 1, 6], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.926, 1, 6], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.926, 1, 6], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.926, 1, 6], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.926, 1, 6], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.926, 1, 6], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.926, 1, 6], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.926, 1, 6], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.926, 1, 6], 'false': [0.0, 9, 0]}]]
[{'': [0.0826446280991734, -9.25185853854297e-18], 'true': [0.0, 0.1224489795918368]}, {'': [0.08097956819349408, -3.0839528461809902e-18], 'true': [0.0, 0.12244897959183668]}, {'': [0.07941913981817067, -1.5419764230904951e-18], 'true': [0.0, 0.12244897959183668]}, {'': [0.0787292040954969, 0.0], 'true': [0.0, 0.12244897959183673]}, {'': [0.07852311359962551, -1.5419764230904951e-18], 'true': [0.0, 0.12244897959183673]}, {'': [0.07847586066961247, 0.0], 'true': [0.0, 0.12244897959183673]}, {'': [0.07847320384104796, -1.5419764230904951e-18], 'true': [0.0, 0.12244897959183675]}, {'': [0.07847935477738761, 0.0], 'true': [0.0, 0.12244897959183673]}, {'': [0.07848343404291845, 0.0], 'true': [0.0, 0.12244897959183673]}, {'': [0.07848274126019032, 0.0], 'true': [0.0, 0.12244897959183673]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.4068585879990681;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7505511758931249;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.32028609076017306;  // std dev = 0.754, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5891632142467931;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then return 0.20220064142954616;  // std dev = 0.696, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.4763677783588999;  // std dev = 0.149, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.10159632948783628;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.1501434656890351;  // std dev = 0.691, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3653152863228747;  // std dev = 0.142, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.08252141639379551;  // std dev = 0.654, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.31025698308916183;  // std dev = 0.171, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.08518475138839687;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.05919690246517125;  // std dev = 0.650, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.25299728612204736;  // std dev = 0.156, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07877675473109175;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.022789066377493134;  // std dev = 0.624, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.22666592192438878;  // std dev = 0.170, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07324622576333704;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.012840012864448766;  // std dev = 0.619, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.1945182783466501;  // std dev = 0.157, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.018571166387912716;  // std dev = 0.604, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.20778325036048806;  // std dev = 0.135, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06419184008202618;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.976801
   AUC PR    = 0.837567
   CLL	      = -0.171534
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 1.068 seconds
Total inference time: 0.372 seconds
AUC ROC: 0.976801


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.149292
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.378 seconds
Refined model CLL: -0.149292


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.976801
   AUC PR    = 0.837567
   CLL	      = -0.171534
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 2.4610000000000003 seconds
Total inference time: 0.372 seconds
AUC ROC: 0.976801
Total revision time: 2.4610000000000003
Best scored revision CLL: -0.149292


Dataset: 1_imdb_uwcse, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:12
{'AUC ROC': 0.976801, 'AUC PR': 0.837567, 'CLL': -0.171534, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 2.4610000000000003, 'Inference time': 0.372, 'parameter_10': {'AUC ROC': 0.965812, 'AUC PR': 0.668512, 'CLL': -0.181036, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 0.643, 'Inference time': 0.363}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.6914822684328455;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.585186000855536;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.46125983910675555;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.11231637819360638;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3488463256948422;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2621270550835419;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.09269127618926097;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.19945264276423433;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.08518475138839686;  // std dev = 6.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.15451336627983223;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.07877675473109172;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.12179491558002797;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.09745354768081678;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.07895233872555124;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.0641918400820262;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.965812
   AUC PR    = 0.668512
   CLL	      = -0.17717
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 0.582 seconds
Total inference time: 0.372 seconds
AUC ROC: 0.965812


Results scoring model
   AUC ROC   = 0.955556
   AUC PR    = 0.945747
   CLL	      = -0.233457
   Precision = 0.882353 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.9375


Total scoring time: 0.375 seconds
Parameter learned model CLL: -0.233457


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.291, 2, 10], 'false': [0.0, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.291, 2, 10], 'false': [5.27e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.291, 2, 10], 'false': [7.45e-09, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.49e-08, 0, 5], 'true,false': [1.291, 2, 10], 'false': [5.27e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.291, 2, 10], 'false': [0.0, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.291, 2, 10], 'false': [6.45e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.291, 2, 10], 'false': [5.27e-09, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.291, 2, 10], 'false': [5.27e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.291, 2, 10], 'false': [2.63e-09, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.291, 2, 10], 'false': [0.0, 13, 0]}]]
[{'': [0.10380622837370206, -1.2810265668751807e-17], 'true': [0.0, 0.13888888888888876]}, {'': [0.10178311371711335, 2.135044278125301e-18], 'true': [0.0, 0.13888888888888898]}, {'': [0.09987784234079816, 4.270088556250602e-18], 'true': [-4.4408920985006264e-17, 0.13888888888888887]}, {'': [0.09901814836133804, 2.135044278125301e-18], 'true': [4.4408920985006264e-17, 0.13888888888888898]}, {'': [0.09875177856433529, -2.135044278125301e-18], 'true': [-2.2204460492503132e-17, 0.13888888888888887]}, {'': [0.09868378464180211, 3.2025664171879517e-18], 'true': [0.0, 0.13888888888888887]}, {'': [0.0986728360604067, 2.135044278125301e-18], 'true': [-5.551115123125783e-18, 0.1388888888888889]}, {'': [0.09867414959422878, 2.135044278125301e-18], 'true': [0.0, 0.13888888888888887]}, {'': [0.09867389079192498, 5.337610695313253e-19], 'true': [0.0, 0.1388888888888889]}, {'': [0.09866849299399914, 0.0], 'true': [0.0, 0.13888888888888887]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(E, A), ta(F, A, G) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(D, A, E), publication(F, A) )
%   | | then return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.7410595824184533;  // std dev = 0.037, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.40772624908512006;  // std dev = 0.804, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.12544463852839138;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(E, A), ta(F, A, G) )
%   | | | then return 0.36236334632262296;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4500175003290476;  // std dev = 0.859, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.5768348113570079;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.11231637819360638;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(D, E), tempadvisedby(E, F) )
%   | | | then return 0.3498570249221974;  // std dev = 0.891, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.28379948439526703;  // std dev = 0.776, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.43449574222027626;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(E, A), ta(F, A, G) )
%   | | | then return 0.20077679476330235;  // std dev = 0.803, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2621558494524232;  // std dev = 0.866, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.3328211453103542;  // std dev = 0.061, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.09269127618926097;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, B) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.21967392943286057;  // std dev = 0.838, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.15447759428576618;  // std dev = 0.832, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.26376422604945715;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.08518475138839686;  // std dev = 6.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(D, A, E), publication(F, A) )
%   | | then return 0.09621443535046921;  // std dev = 0.803, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.2699985203063828;  // std dev = 0.128, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 8.64407116737557E-4;  // std dev = 0.773, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07877675473109172;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then return 0.0852948653685939;  // std dev = 0.748, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( ta(F, A, G), publication(H, B) )
%   | | | then return 0.39183968347630366;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.014218887909909328;  // std dev = 0.711, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(D, A, E), publication(F, A) )
%   | | then return 0.006304168656570648;  // std dev = 0.747, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.210903761387469;  // std dev = 0.090, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.02609623414850167;  // std dev = 0.731, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, B) )
%   | | then if ( ta(E, A, F), publication(G, A) )
%   | | | then return 0.0049017412485331535;  // std dev = 0.747, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0798050657473791;  // std dev = 0.768, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.17614899041502205;  // std dev = 0.105, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.0641918400820262;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.955433
   AUC PR    = 0.640192
   CLL	      = -0.185464
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 2.43 seconds
Total inference time: 0.388 seconds
AUC ROC: 0.955433


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.192905
   Precision = 0.882353 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.9375


Total scoring time: 0.407 seconds
Refined model CLL: -0.192905


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.955433
   AUC PR    = 0.640192
   CLL	      = -0.185464
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 3.794 seconds
Total inference time: 0.388 seconds
AUC ROC: 0.955433
Total revision time: 3.794
Best scored revision CLL: -0.192905


Dataset: 1_imdb_uwcse, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:17
{'AUC ROC': 0.955433, 'AUC PR': 0.640192, 'CLL': -0.185464, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 3.794, 'Inference time': 0.388, 'parameter_15': {'AUC ROC': 0.965812, 'AUC PR': 0.668512, 'CLL': -0.17717, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 0.582, 'Inference time': 0.372}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7331489350995123;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else return -0.1418510649004878;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6189976143448207;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.48512875154616486;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.36568225360444984;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else return -0.10159632948783627;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.27560196347331406;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else return -0.092691276189261;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.21158287903019785;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.16608044254560705;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else return -0.07877675473109173;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.13303193637503496;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.10839224498101002;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else return -0.06842697784420272;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.08956128580326395;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else return -0.0641918400820262;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 0.965812
   AUC PR    = 0.668512
   CLL	      = -0.184188
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 0.675 seconds
Total inference time: 0.366 seconds
AUC ROC: 0.965812


Results scoring model
   AUC ROC   = 0.965
   AUC PR    = 0.955224
   CLL	      = -0.20564
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.38 seconds
Parameter learned model CLL: -0.20564


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.323, 2, 14], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [1.323, 2, 14], 'false': [7.45e-09, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.323, 2, 14], 'false': [1.05e-08, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [1.323, 2, 14], 'false': [7.45e-09, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.323, 2, 14], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 6], 'true,false': [1.323, 2, 14], 'false': [5.27e-09, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.323, 2, 14], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [5.27e-09, 0, 6], 'true,false': [1.323, 2, 14], 'false': [3.73e-09, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.323, 2, 14], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.323, 2, 14], 'false': [3.73e-09, 18, 0]}]]
[{'': [0.08264462809917356, -9.25185853854297e-18], 'true': [-1.4802973661668753e-16, 0.10937499999999978]}, {'': [0.08154784514846361, 3.0839528461809902e-18], 'true': [7.401486830834377e-17, 0.10937500000000011]}, {'': [0.08052396676144195, 6.1679056923619804e-18], 'true': [-7.401486830834377e-17, 0.10937500000000003]}, {'': [0.0800783114367571, 3.0839528461809902e-18], 'true': [7.401486830834377e-17, 0.10937499999999992]}, {'': [0.07994907139297315, -1.5419764230904951e-18], 'true': [-3.700743415417188e-17, 0.10937500000000004]}, {'': [0.07992232051843182, 1.5419764230904951e-18], 'true': [9.25185853854297e-18, 0.10937499999999997]}, {'': [0.07992384215225981, -7.709882115452476e-19], 'true': [-9.25185853854297e-18, 0.109375]}, {'': [0.07993058226157057, 7.709882115452476e-19], 'true': [4.625929269271485e-18, 0.10937499999999997]}, {'': [0.07993561631451808, 0.0], 'true': [-4.625929269271485e-18, 0.10937500000000001]}, {'': [0.07993727421710688, 7.709882115452476e-19], 'true': [0.0, 0.109375]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(D, E), ta(F, E, G) )
%   | | | then return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.1418510649004878;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then return 0.48012307523231335;  // std dev = 0.829, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.7535523338793028;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6009583562597747;  // std dev = 0.908, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.3731701515462616;  // std dev = 0.818, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.6180443290439801;  // std dev = 0.043, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4742168866273643;  // std dev = 0.897, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then return 0.2705814881412133;  // std dev = 0.802, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.47811685450580255;  // std dev = 0.059, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.34022152712238024;  // std dev = 0.886, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.10159632948783627;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(D, E), ta(F, E, G) )
%   | | | then return 0.1872062339472327;  // std dev = 1.147, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.41987258565561447;  // std dev = 0.085, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3700482354484428;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.092691276189261;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then return 0.12045331594783085;  // std dev = 0.760, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.3413824100929976;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.19578516843504806;  // std dev = 0.867, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(D, E), ta(F, E, G) )
%   | | | then return 0.09132648990654131;  // std dev = 1.128, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.2931343328679526;  // std dev = 0.083, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.24752441126599486;  // std dev = 0.057, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07877675473109173;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then return 0.04521072800205478;  // std dev = 0.732, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | then return 0.26363116168082557;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11788627885062196;  // std dev = 0.858, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return 0.031201826956308187;  // std dev = 0.729, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.20750647922663026;  // std dev = 0.060, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.08897429441684943;  // std dev = 0.859, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.06842697784420272;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(D, E), ta(F, E, G) )
%   | | | then return 0.018986873380361386;  // std dev = 1.099, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.21757454142277147;  // std dev = 0.083, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1676836518437441;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.0641918400820262;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 0.96398
   AUC PR    = 0.574848
   CLL	      = -0.195986
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 1.938 seconds
Total inference time: 0.38 seconds
AUC ROC: 0.96398


Results scoring model
   AUC ROC   = 0.99875
   AUC PR    = 0.99881
   CLL	      = -0.175259
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.414 seconds
Refined model CLL: -0.175259


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.96398
   AUC PR    = 0.574848
   CLL	      = -0.195986
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 3.4070000000000005 seconds
Total inference time: 0.38 seconds
AUC ROC: 0.96398
Total revision time: 3.4070000000000005
Best scored revision CLL: -0.175259


Dataset: 1_imdb_uwcse, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:22
{'AUC ROC': 0.96398, 'AUC PR': 0.574848, 'CLL': -0.195986, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 3.4070000000000005, 'Inference time': 0.38, 'parameter_20': {'AUC ROC': 0.965812, 'AUC PR': 0.668512, 'CLL': -0.184188, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 0.675, 'Inference time': 0.366}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7081489350995123;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else return -0.1418510649004878;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5987301289105087;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.4708413690230273;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else return -0.11231637819360635;  // std dev = 1.49e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3555696613550178;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else return -0.10159632948783628;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.26744030851537454;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else return -0.09269127618926093;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2041766068841465;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.15897684158606568;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else return -0.07877675473109179;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.12610125737419722;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.10162108252318376;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else return -0.06842697784420272;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.08297179282455365;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else return -0.06419184008202619;  // std dev = 7.45e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 0.965812
   AUC PR    = 0.668512
   CLL	      = -0.179836
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 0.63 seconds
Total inference time: 0.36 seconds
AUC ROC: 0.965812


Results scoring model
   AUC ROC   = 0.9592
   AUC PR    = 0.94918
   CLL	      = -0.222818
   Precision = 0.892857 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.943396


Total scoring time: 0.384 seconds
Parameter learned model CLL: -0.222818


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.597, 3, 17], 'false': [0.0, 22, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [1.597, 3, 17], 'false': [7.45e-09, 22, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.597, 3, 17], 'false': [1.49e-08, 22, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [1.597, 3, 17], 'false': [0.0, 22, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.597, 3, 17], 'false': [1.05e-08, 22, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.49e-08, 0, 8], 'true,false': [1.597, 3, 17], 'false': [7.45e-09, 22, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.597, 3, 17], 'false': [0.0, 22, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 8], 'true,false': [1.597, 3, 17], 'false': [3.73e-09, 22, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.597, 3, 17], 'false': [0.0, 22, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 8], 'true,false': [1.597, 3, 17], 'false': [7.45e-09, 22, 0]}]]
[{'': [0.09566326530612335, -5.046468293750712e-18], 'true': [-2.220446049250313e-16, 0.12749999999999986]}, {'': [0.09404672254330018, 2.523234146875356e-18], 'true': [1.1102230246251565e-16, 0.1274999999999998]}, {'': [0.09252948715788167, 1.0092936587501423e-17], 'true': [-1.1102230246251565e-16, 0.1274999999999998]}, {'': [0.09185449991270585, 0.0], 'true': [1.1102230246251565e-16, 0.1275]}, {'': [0.09165058302644534, 5.046468293750712e-18], 'true': [-4.163336342344337e-17, 0.1275]}, {'': [0.09160215405284745, 2.523234146875356e-18], 'true': [2.7755575615628914e-17, 0.12750000000000006]}, {'': [0.09159769329978028, -1.261617073437678e-18], 'true': [-2.0816681711721685e-17, 0.12750000000000003]}, {'': [0.09160214582459268, 6.30808536718839e-19], 'true': [6.938893903907228e-18, 0.1275]}, {'': [0.09160480371061841, -1.261617073437678e-18], 'true': [-3.469446951953614e-18, 0.1275]}, {'': [0.09160297866007587, 2.523234146875356e-18], 'true': [0.0, 0.1275]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then if ( ta(D, G, E), publication(H, G) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.7331489350995123;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.1418510649004878;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then if ( ta(E, G, F), publication(H, G) )
%   | | | then return 0.308741135785635;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(I, A) )
%   | | | then return 0.7378665638113542;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6219868578408801;  // std dev = 0.932, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, B) )
%   | | then if ( tempadvisedby(E, B), ta(F, A, G) )
%   | | | then return 0.35606372475448583;  // std dev = 1.058, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.48893878903895105;  // std dev = 0.929, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.5813968315470452;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.11231637819360635;  // std dev = 1.49e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.269032812854215;  // std dev = 0.674, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.5261247781886026;  // std dev = 0.277, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2868743001371119;  // std dev = 1.118, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.10159632948783628;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(D, E), ta(F, E, G) )
%   | | | then return 0.22041710839962453;  // std dev = 1.109, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.31272450598533796;  // std dev = 0.789, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.35512166778100923;  // std dev = 0.059, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09269127618926093;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.49e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then if ( ta(D, G, E), publication(H, G) )
%   | | | then return 0.021190416250275096;  // std dev = 0.927, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3154025335742996;  // std dev = 0.059, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.31326738160386103;  // std dev = 0.071, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.19682720224980393;  // std dev = 0.896, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then if ( ta(D, G, E), publication(H, G) )
%   | | | then return 0.01593058716270411;  // std dev = 0.927, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2518435667740547;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.2503442121734351;  // std dev = 0.062, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1557754265096014;  // std dev = 0.898, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.07877675473109179;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, A) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.1703845544723918;  // std dev = 0.745, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.20891388923541135;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.22594804056484177;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07220795197880589;  // std dev = 1.065, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(D, E), ta(F, E, G) )
%   | | | then return 0.061030512939770576;  // std dev = 1.060, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.1640017976808418;  // std dev = 0.756, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.18125236605785924;  // std dev = 0.059, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06842697784420272;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.007433490407433588;  // std dev = 0.581, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( publication(G, A), ta(H, A, I) )
%   | | | then return 0.28573491361448755;  // std dev = 0.215, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.054484167049044095;  // std dev = 1.083, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.06419184008202619;  // std dev = 7.45e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 0.954212
   AUC PR    = 0.513963
   CLL	      = -0.19183
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 2.552 seconds
Total inference time: 0.384 seconds
AUC ROC: 0.954212


Results scoring model
   AUC ROC   = 0.9952
   AUC PR    = 0.995075
   CLL	      = -0.178752
   Precision = 0.925926 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.961538


Total scoring time: 0.421 seconds
Refined model CLL: -0.178752


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.954212
   AUC PR    = 0.513963
   CLL	      = -0.19183
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total learning time: 3.9869999999999997 seconds
Total inference time: 0.384 seconds
AUC ROC: 0.954212
Total revision time: 3.9869999999999997
Best scored revision CLL: -0.178752


Dataset: 1_imdb_uwcse, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:27
{'AUC ROC': 0.954212, 'AUC PR': 0.513963, 'CLL': -0.19183, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 3.9869999999999997, 'Inference time': 0.384, 'parameter_25': {'AUC ROC': 0.965812, 'AUC PR': 0.668512, 'CLL': -0.179836, 'Precision': [0.5625, 0.5], 'Recall': 1.0, 'F1': 0.72, 'Learning time': 0.63, 'Inference time': 0.36}}


Starting fold 4

Target train facts examples: 1706
Target train pos examples: 80
Target train neg examples: 2591

Target test facts examples: 681
Target test pos	 examples: 33
Target test neg examples: 1488

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.46125983910675533;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3488463256948422;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.26212705508354184;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19945264276423433;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15451336627983223;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12179491558002796;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09745354768081688;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07895233872555124;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.902218
   AUC PR    = 0.101852
   CLL	      = -0.334886
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 0.56 seconds
Total inference time: 0.639 seconds
AUC ROC: 0.902218


Results scoring model
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.302866
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.335 seconds
Parameter learned model CLL: -0.302866


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.913, 1, 5], 'false': [0.0, 4, 0]}]]
[{'': [0.1388888888888887, 0.0], 'true': [nan, 0.1388888888888887]}, {'': [0.13888888888888884, 0.0], 'true': [nan, 0.13888888888888884]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}, {'': [0.13888888888888898, 0.0], 'true': [nan, 0.13888888888888898]}, {'': [0.13888888888888884, 0.0], 'true': [nan, 0.13888888888888884]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}, {'': [0.1388888888888889, 0.0], 'true': [nan, 0.1388888888888889]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}, {'': [0.13888888888888892, 0.0], 'true': [nan, 0.13888888888888892]}, {'': [0.13888888888888887, 0.0], 'true': [nan, 0.13888888888888887]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.46125983910675533;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.3488463256948422;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.26212705508354184;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.19945264276423433;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.15451336627983223;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.12179491558002796;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.09745354768081688;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then return 0.07895233872555124;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.902218
   AUC PR    = 0.101852
   CLL	      = -0.334886
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 0.507 seconds
Total inference time: 0.578 seconds
AUC ROC: 0.902218


Results scoring model
   AUC ROC   = 0.9
   AUC PR    = 0.833333
   CLL	      = -0.302866
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.333 seconds
Refined model CLL: -0.302866


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.902218
   AUC PR    = 0.101852
   CLL	      = -0.334886
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 1.735 seconds
Total inference time: 0.639 seconds
AUC ROC: 0.902218
Total revision time: 1.735
Best scored revision CLL: -0.302866


Dataset: 1_imdb_uwcse, Fold: 4, Type: Transfer (trRDN-B), Time: 00:08:30
{'AUC ROC': 0.902218, 'AUC PR': 0.101852, 'CLL': -0.334886, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 1.735, 'Inference time': 0.639, 'parameter_5': {'AUC ROC': 0.902218, 'AUC PR': 0.101852, 'CLL': -0.334886, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 0.56, 'Inference time': 0.639}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.7672398441904213;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.6465415686654066;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.5044629797645588;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.37956420580342304;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.10159632948783628;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2871467034260754;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22234379807937285;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.08518475138839687;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17659966289556142;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14344282165366493;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.07324622576333704;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11869034739602338;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09970391597144293;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.902218
   AUC PR    = 0.101852
   CLL	      = -0.385958
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 0.553 seconds
Total inference time: 0.638 seconds
AUC ROC: 0.902218


Results scoring model
   AUC ROC   = 0.95
   AUC PR    = 0.909091
   CLL	      = -0.211616
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.365 seconds
Parameter learned model CLL: -0.211616


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.953, 1, 10], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.953, 1, 10], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.953, 1, 10], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.953, 1, 10], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.953, 1, 10], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.953, 1, 10], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.953, 1, 10], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.953, 1, 10], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.953, 1, 10], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.953, 1, 10], 'false': [2.63e-09, 9, 0]}]]
[{'': [0.0826446280991734, -9.25185853854297e-18], 'true': [nan, 0.0826446280991734]}, {'': [0.08264462809917372, 0.0], 'true': [nan, 0.08264462809917372]}, {'': [0.08264462809917372, -1.5419764230904951e-18], 'true': [nan, 0.08264462809917372]}, {'': [0.08264462809917356, 0.0], 'true': [nan, 0.08264462809917356]}, {'': [0.08264462809917347, 0.0], 'true': [nan, 0.08264462809917347]}, {'': [0.08264462809917356, 0.0], 'true': [nan, 0.08264462809917356]}, {'': [0.08264462809917356, 0.0], 'true': [nan, 0.08264462809917356]}, {'': [0.08264462809917358, 0.0], 'true': [nan, 0.08264462809917358]}, {'': [0.08264462809917356, 0.0], 'true': [nan, 0.08264462809917356]}, {'': [0.08264462809917356, 7.709882115452476e-19], 'true': [nan, 0.08264462809917356]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then return 0.5170719622367217;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then return 0.41257245288266;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A) )
%   | then return 0.46673527531170883;  // std dev = 0.121, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.23184532428517315;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783628;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then return 0.3564048147758639;  // std dev = 0.113, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.17425641502405834;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A) )
%   | then return 0.28069143594957696;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.1307548381631203;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then return 0.22842304205839425;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.09843256931430315;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then return 0.11969578698534314;  // std dev = 0.831, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.17194303963248028;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.07324622576333704;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then return 0.09275566452210679;  // std dev = 0.832, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.14883266772913345;  // std dev = 0.019, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then return 0.07252644050981055;  // std dev = 0.833, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.1309528103709749;  // std dev = 0.017, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.902951
   AUC PR    = 0.100386
   CLL	      = -0.393869
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 1.216 seconds
Total inference time: 0.661 seconds
AUC ROC: 0.902951


Results scoring model
   AUC ROC   = 0.99
   AUC PR    = 0.990191
   CLL	      = -0.178491
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.349 seconds
Refined model CLL: -0.178491


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.902951
   AUC PR    = 0.100386
   CLL	      = -0.393869
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 2.4829999999999997 seconds
Total inference time: 0.661 seconds
AUC ROC: 0.902951
Total revision time: 2.4829999999999997
Best scored revision CLL: -0.178491


Dataset: 1_imdb_uwcse, Fold: 4, Type: Transfer (trRDN-B), Time: 00:08:35
{'AUC ROC': 0.902951, 'AUC PR': 0.100386, 'CLL': -0.393869, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 2.4829999999999997, 'Inference time': 0.661, 'parameter_10': {'AUC ROC': 0.902218, 'AUC PR': 0.101852, 'CLL': -0.385958, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 0.553, 'Inference time': 0.638}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.7405018762759829;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.6249475655895571;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.4893127157293236;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3686658221249617;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.27804969755906545;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else return -0.092691276189261;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21383763039487166;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else return -0.08518475138839686;  // std dev = 6.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16826633465571472;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13518176386613595;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11050708250003544;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09163300171566749;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else return -0.0641918400820262;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.902218
   AUC PR    = 0.101852
   CLL	      = -0.366994
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 0.578 seconds
Total inference time: 0.643 seconds
AUC ROC: 0.902218


Results scoring model
   AUC ROC   = 0.933333
   AUC PR    = 0.882353
   CLL	      = -0.244323
   Precision = 0.882353 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.9375


Total scoring time: 0.357 seconds
Parameter learned model CLL: -0.244323


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.328, 2, 15], 'false': [0.0, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.328, 2, 15], 'false': [7.45e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.328, 2, 15], 'false': [1.05e-08, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.328, 2, 15], 'false': [5.27e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.328, 2, 15], 'false': [0.0, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.328, 2, 15], 'false': [6.45e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.328, 2, 15], 'false': [3.73e-09, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.328, 2, 15], 'false': [5.27e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.328, 2, 15], 'false': [2.63e-09, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,true': [0.0, 0, 0], 'true,false': [1.328, 2, 15], 'false': [0.0, 13, 0]}]]
[{'': [0.10380622837370206, -1.2810265668751807e-17], 'true': [nan, 0.10380622837370206]}, {'': [0.10380622837370226, 4.270088556250602e-18], 'true': [nan, 0.10380622837370226]}, {'': [0.10380622837370232, 8.540177112501205e-18], 'true': [nan, 0.10380622837370232]}, {'': [0.10380622837370244, 2.135044278125301e-18], 'true': [nan, 0.10380622837370244]}, {'': [0.10380622837370246, -1.0675221390626506e-18], 'true': [nan, 0.10380622837370246]}, {'': [0.10380622837370239, 3.2025664171879517e-18], 'true': [nan, 0.10380622837370239]}, {'': [0.10380622837370244, 1.0675221390626506e-18], 'true': [nan, 0.10380622837370244]}, {'': [0.10380622837370246, 2.135044278125301e-18], 'true': [nan, 0.10380622837370246]}, {'': [0.10380622837370243, 5.337610695313253e-19], 'true': [nan, 0.10380622837370243]}, {'': [0.10380622837370243, 0.0], 'true': [nan, 0.10380622837370243]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then return 0.448295606241962;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.7194734122109543;  // std dev = 2.98e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then return 0.36236334632262296;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( ta(C, A, D), tempadvisedby(E, B) )
%   | then return 0.21522931940604914;  // std dev = 0.749, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | then return 0.5649437863120166;  // std dev = 0.170, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(I, A) )
%   | | | then return 0.14970478511551286;  // std dev = 0.656, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then return 0.1878029086474593;  // std dev = 1.073, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.33308808652380156;  // std dev = 0.094, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.092691276189261;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then return 0.1412944848194945;  // std dev = 1.073, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.2638199800494647;  // std dev = 0.082, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.08518475138839686;  // std dev = 6.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then return 0.10654622203552172;  // std dev = 1.074, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.2159816305764574;  // std dev = 0.072, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.03705175385082601;  // std dev = 0.736, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | then return 0.3150923832413704;  // std dev = 0.187, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(I, A) )
%   | | | then return -0.03345015925080722;  // std dev = 0.608, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.17316044642094278;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then return 0.04408426720980957;  // std dev = 1.018, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.16400822207808397;  // std dev = 0.106, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then return 0.03405380138123104;  // std dev = 1.019, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.14288284446951036;  // std dev = 0.095, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.0641918400820262;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.902951
   AUC PR    = 0.106611
   CLL	      = -0.328343
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 1.36 seconds
Total inference time: 0.653 seconds
AUC ROC: 0.902951


Results scoring model
   AUC ROC   = 0.997778
   AUC PR    = 0.997917
   CLL	      = -0.182932
   Precision = 0.882353 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.9375


Total scoring time: 0.37 seconds
Refined model CLL: -0.182932


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.902951
   AUC PR    = 0.106611
   CLL	      = -0.328343
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 2.665 seconds
Total inference time: 0.653 seconds
AUC ROC: 0.902951
Total revision time: 2.665
Best scored revision CLL: -0.182932


Dataset: 1_imdb_uwcse, Fold: 4, Type: Transfer (trRDN-B), Time: 00:08:39
{'AUC ROC': 0.902951, 'AUC PR': 0.106611, 'CLL': -0.328343, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 2.665, 'Inference time': 0.653, 'parameter_15': {'AUC ROC': 0.902218, 'AUC PR': 0.101852, 'CLL': -0.366994, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 0.578, 'Inference time': 0.643}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7405018762759829;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.624947565589557;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.4893127157293235;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.36866582212496174;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else return -0.10159632948783628;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2780496975590655;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else return -0.09269127618926094;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.21383763039487166;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.16826633465571475;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else return -0.07877675473109173;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.13518176386613598;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.11050708250003546;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else return -0.06842697784420272;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.09163300171566749;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else return -0.0641918400820262;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 0.935362
   AUC PR    = 0.272865
   CLL	      = -0.371381
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 0.63 seconds
Total inference time: 0.657 seconds
AUC ROC: 0.935362


Results scoring model
   AUC ROC   = 0.9625
   AUC PR    = 0.950319
   CLL	      = -0.206902
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.369 seconds
Parameter learned model CLL: -0.206902


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.328, 2, 15], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.328, 2, 15], 'false': [7.45e-09, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.328, 2, 15], 'false': [1.18e-08, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.49e-08, 0, 5], 'true,false': [1.328, 2, 15], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.328, 2, 15], 'false': [7.45e-09, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.328, 2, 15], 'false': [5.27e-09, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.328, 2, 15], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.328, 2, 15], 'false': [3.73e-09, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.328, 2, 15], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.328, 2, 15], 'false': [3.73e-09, 18, 0]}]]
[{'': [0.08264462809917356, -9.25185853854297e-18], 'true': [0.0, 0.10380622837370215]}, {'': [0.08178309079446572, 3.0839528461809902e-18], 'true': [0.0, 0.10380622837370236]}, {'': [0.08098014960099267, 7.709882115452476e-18], 'true': [-4.4408920985006264e-17, 0.10380622837370242]}, {'': [0.08063295090805025, 0.0], 'true': [4.4408920985006264e-17, 0.10380622837370247]}, {'': [0.0805335422055671, 3.0839528461809902e-18], 'true': [-2.2204460492503132e-17, 0.10380622837370246]}, {'': [0.08051395904064648, 1.5419764230904951e-18], 'true': [0.0, 0.10380622837370239]}, {'': [0.08051623938196414, -7.709882115452476e-19], 'true': [-5.551115123125783e-18, 0.10380622837370243]}, {'': [0.08052244055710381, 7.709882115452476e-19], 'true': [0.0, 0.10380622837370242]}, {'': [0.08052719990667608, 0.0], 'true': [0.0, 0.10380622837370242]}, {'': [0.08052923939055977, 7.709882115452476e-19], 'true': [0.0, 0.10380622837370243]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.448295606241962;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.7194734122109543;  // std dev = 2.98e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.26880985104950844;  // std dev = 0.702, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( ta(F, A, G), tempadvisedby(H, B) )
%   | | | then return 0.41061411892853833;  // std dev = 0.833, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5834324853282189;  // std dev = 0.178, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360636;  // std dev = 1.18e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.2608187975600109;  // std dev = 1.112, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.42868194319770403;  // std dev = 0.102, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.10159632948783628;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.11352854087358549;  // std dev = 0.661, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( ta(F, A, G), publication(H, B) )
%   | | | then return 0.2481616107909818;  // std dev = 0.825, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.35723919522351066;  // std dev = 0.225, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.09269127618926094;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.1318639494831928;  // std dev = 1.078, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.2688461717202974;  // std dev = 0.142, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.09954764745341381;  // std dev = 1.079, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.21978277821211378;  // std dev = 0.126, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07877675473109173;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, B), publication(E, A) )
%   | | then return -0.001290792259267907;  // std dev = 0.625, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B), ta(G, A, H) )
%   | | | then return 0.1117648633250608;  // std dev = 0.821, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.20413269427208308;  // std dev = 0.236, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return -0.00102016801916253;  // std dev = 0.625, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( ta(F, A, G), publication(H, B) )
%   | | | then return 0.09583482711687193;  // std dev = 0.823, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.1788645846699532;  // std dev = 0.209, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.06842697784420272;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.023537387024035777;  // std dev = 1.037, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.21884618383927937;  // std dev = 0.087, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12261179407839415;  // std dev = 0.026, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.0641918400820262;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 0.941797
   AUC PR    = 0.174906
   CLL	      = -0.324977
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 1.486 seconds
Total inference time: 0.711 seconds
AUC ROC: 0.941797


Results scoring model
   AUC ROC   = 0.9975
   AUC PR    = 0.997527
   CLL	      = -0.164217
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.396 seconds
Refined model CLL: -0.164217


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.941797
   AUC PR    = 0.174906
   CLL	      = -0.324977
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 2.881 seconds
Total inference time: 0.711 seconds
AUC ROC: 0.941797
Total revision time: 2.881
Best scored revision CLL: -0.164217


Dataset: 1_imdb_uwcse, Fold: 4, Type: Transfer (trRDN-B), Time: 00:08:44
{'AUC ROC': 0.941797, 'AUC PR': 0.174906, 'CLL': -0.324977, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 2.881, 'Inference time': 0.711, 'parameter_20': {'AUC ROC': 0.935362, 'AUC PR': 0.272865, 'CLL': -0.371381, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 0.63, 'Inference time': 0.657}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7629108398614171;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   else return -0.14185106490048777;  // std dev = 7.45e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6430498719682605;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   else return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.502016601108706;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   else return -0.11231637819360636;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.37779377344908543;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   else return -0.10159632948783635;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.28565220116841883;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   else return -0.09269127618926094;  // std dev = 1.18e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.22093320579702483;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.17520878220370106;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   else return -0.07877675473109175;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.14205725884415396;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.11731191939277578;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   else return -0.06842697784420274;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.09833868602932777;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   else return -0.06419184008202618;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 0.935362
   AUC PR    = 0.272865
   CLL	      = -0.386476
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 0.61 seconds
Total inference time: 0.636 seconds
AUC ROC: 0.935362


Results scoring model
   AUC ROC   = 0.9696
   AUC PR    = 0.958779
   CLL	      = -0.187598
   Precision = 0.925926 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.961538


Total scoring time: 0.385 seconds
Parameter learned model CLL: -0.187598


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.345, 2, 19], 'false': [7.45e-09, 23, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [1.345, 2, 19], 'false': [0.0, 23, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.345, 2, 19], 'false': [1.49e-08, 23, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [1.345, 2, 19], 'false': [0.0, 23, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.345, 2, 19], 'false': [1.18e-08, 23, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 6], 'true,false': [1.345, 2, 19], 'false': [7.45e-09, 23, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.345, 2, 19], 'false': [0.0, 23, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [5.27e-09, 0, 6], 'true,false': [1.345, 2, 19], 'false': [3.73e-09, 23, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.345, 2, 19], 'false': [0.0, 23, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.345, 2, 19], 'false': [0.0, 23, 0]}]]
[{'': [0.06858710562414343, 2.413528314402514e-18], 'true': [-1.4802973661668753e-16, 0.08616780045351444]}, {'': [0.06802887942736528, 0.0], 'true': [7.401486830834377e-17, 0.08616780045351485]}, {'': [0.06751133701292845, 9.654113257610057e-18], 'true': [-7.401486830834377e-17, 0.08616780045351473]}, {'': [0.06729208290926277, -7.240584943207542e-18], 'true': [7.401486830834377e-17, 0.08616780045351476]}, {'': [0.06723185100555969, 6.033820786006285e-18], 'true': [-3.700743415417188e-17, 0.08616780045351466]}, {'': [0.06722202211751747, 2.413528314402514e-18], 'true': [9.25185853854297e-18, 0.08616780045351474]}, {'': [0.06722570656526435, -3.620292471603771e-18], 'true': [-9.25185853854297e-18, 0.08616780045351474]}, {'': [0.06723160375617537, 6.033820786006285e-19], 'true': [4.625929269271485e-18, 0.08616780045351473]}, {'': [0.06723638691966526, -3.0169103930031427e-18], 'true': [-4.625929269271485e-18, 0.08616780045351477]}, {'': [0.06723929208940709, 0.0], 'true': [0.0, 0.08616780045351476]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( ta(F, A, G) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.14185106490048777;  // std dev = 7.45e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, B), publication(E, A) )
%   | | then return 0.3989887196812545;  // std dev = 0.785, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( ta(F, A, G), tempadvisedby(H, B) )
%   | | | then return 0.5160900577342101;  // std dev = 0.850, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.7304865328997829;  // std dev = 0.065, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(E, F), projectmember(G, F) )
%   | | | then return 0.3212430562976143;  // std dev = 0.786, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.43260471930517397;  // std dev = 0.847, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.5689438364259473;  // std dev = 0.110, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.11231637819360636;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, B), publication(E, A) )
%   | | then return 0.18796937901224253;  // std dev = 0.748, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(F, B), ta(G, A, H) )
%   | | | then return 0.3238980366447186;  // std dev = 0.821, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.44332433123924125;  // std dev = 0.151, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.10159632948783635;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(E, F), projectmember(G, F) )
%   | | | then return 0.15650700056195277;  // std dev = 0.774, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23777851510580533;  // std dev = 0.797, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.33856456693563436;  // std dev = 0.174, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.09269127618926094;  // std dev = 1.18e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(E, F), projectmember(G, F) )
%   | | | then return 0.11799595937791307;  // std dev = 0.774, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.18130222654707853;  // std dev = 0.800, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.26798644949315364;  // std dev = 0.156, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.012537864368175907;  // std dev = 0.718, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(F, B), ta(G, A, H) )
%   | | | then return 0.13749168256719235;  // std dev = 0.800, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.23076856574039215;  // std dev = 0.187, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.07877675473109175;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.009747130283400093;  // std dev = 0.718, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(F, B), ta(G, A, H) )
%   | | | then return 0.11525830239178858;  // std dev = 0.801, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.19611763126296672;  // std dev = 0.165, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(E, F), projectmember(G, F) )
%   | | | then return 0.01819554804697791;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0793523189621825;  // std dev = 0.744, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(H, A) )
%   | | | then return 0.22951450128421502;  // std dev = 0.146, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1434005498820433;  // std dev = 0.032, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.06842697784420274;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(D, B), publication(E, A) )
%   | | then return -0.029472331498566134;  // std dev = 0.697, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( ta(F, A, G), tempadvisedby(H, B) )
%   | | | then return 0.06398403250629212;  // std dev = 0.794, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1504261393202035;  // std dev = 0.159, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.06419184008202618;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 0.943111
   AUC PR    = 0.177059
   CLL	      = -0.331117
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 2.17 seconds
Total inference time: 0.817 seconds
AUC ROC: 0.943111


Results scoring model
   AUC ROC   = 0.9992
   AUC PR    = 0.999231
   CLL	      = -0.153229
   Precision = 0.925926 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.961538


Total scoring time: 0.431 seconds
Refined model CLL: -0.153229


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.943111
   AUC PR    = 0.177059
   CLL	      = -0.331117
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total learning time: 3.596 seconds
Total inference time: 0.817 seconds
AUC ROC: 0.943111
Total revision time: 3.596
Best scored revision CLL: -0.153229


Dataset: 1_imdb_uwcse, Fold: 4, Type: Transfer (trRDN-B), Time: 00:08:49
{'AUC ROC': 0.943111, 'AUC PR': 0.177059, 'CLL': -0.331117, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 3.596, 'Inference time': 0.817, 'parameter_25': {'AUC ROC': 0.935362, 'AUC PR': 0.272865, 'CLL': -0.386476, 'Precision': [0.101852, 0.5], 'Recall': 1.0, 'F1': 0.184874, 'Learning time': 0.61, 'Inference time': 0.636}}


Starting fold 5

Target train facts examples: 1973
Target train pos examples: 97
Target train neg examples: 3734

Target test facts examples: 414
Target test pos	 examples: 16
Target test neg examples: 345

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.36236334632262296;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2807538536965855;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.21248070121827137;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.1594898822817116;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.11975529938157474;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.09028081829440963;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.06840311429118533;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.052078905701252655;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.926087
   AUC PR    = 0.46579
   CLL	      = -0.250455
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 0.545 seconds
Total inference time: 0.438 seconds
AUC ROC: 0.926087


Results scoring model
   AUC ROC   = 0.96
   AUC PR    = 0.961111
   CLL	      = -0.255004
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.344 seconds
Parameter learned model CLL: -0.255004


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.05e-08, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.816, 1, 2], 'false': [0.0, 4, 0]}]]
[{'': [0.1388888888888887, 0.0], 'true': [1.4802973661668753e-16, 0.22222222222222224]}, {'': [0.12949546172365034, 0.0], 'true': [0.0, 0.2222222222222222]}, {'': [0.12042365933938219, 0.0], 'true': [3.700743415417188e-17, 0.22222222222222224]}, {'': [0.11578691708010203, 0.0], 'true': [-3.700743415417188e-17, 0.2222222222222222]}, {'': [0.11403960634908421, 0.0], 'true': [0.0, 0.2222222222222222]}, {'': [0.11339988962867113, 0.0], 'true': [0.0, 0.2222222222222222]}, {'': [0.1131362198438639, 0.0], 'true': [0.0, 0.22222222222222224]}, {'': [0.11299535166074005, 0.0], 'true': [0.0, 0.22222222222222224]}, {'': [0.11288945137740025, 0.0], 'true': [-4.625929269271485e-18, 0.2222222222222222]}, {'': [0.11278916549921703, 0.0], 'true': [-2.3129646346357427e-18, 0.22222222222222224]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.36236334632262296;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2807538536965855;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.21248070121827137;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.1594898822817116;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.11975529938157474;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.09028081829440963;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.06840311429118533;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.052078905701252655;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.926087
   AUC PR    = 0.46579
   CLL	      = -0.250455
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 0.53 seconds
Total inference time: 0.48 seconds
AUC ROC: 0.926087


Results scoring model
   AUC ROC   = 0.96
   AUC PR    = 0.961111
   CLL	      = -0.255004
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.344 seconds
Refined model CLL: -0.255004


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.926087
   AUC PR    = 0.46579
   CLL	      = -0.250455
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 1.763 seconds
Total inference time: 0.438 seconds
AUC ROC: 0.926087
Total revision time: 1.763
Best scored revision CLL: -0.255004


Dataset: 1_imdb_uwcse, Fold: 5, Type: Transfer (trRDN-B), Time: 00:08:53
{'AUC ROC': 0.926087, 'AUC PR': 0.46579, 'CLL': -0.250455, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 1.763, 'Inference time': 0.438, 'parameter_5': {'AUC ROC': 0.926087, 'AUC PR': 0.46579, 'CLL': -0.250455, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 0.545, 'Inference time': 0.438}}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.6914822684328454;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.585186000855536;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.46125983910675555;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.34884632569484225;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783628;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2621270550835418;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.19945264276423433;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.15451336627983223;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.12179491558002793;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.09745354768081689;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.07895233872555125;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.926087
   AUC PR    = 0.46579
   CLL	      = -0.333775
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 0.626 seconds
Total inference time: 0.454 seconds
AUC ROC: 0.926087


Results scoring model
   AUC ROC   = 0.975
   AUC PR    = 0.971683
   CLL	      = -0.198752
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.36 seconds
Parameter learned model CLL: -0.198752


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.913, 1, 5], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.913, 1, 5], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.913, 1, 5], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.49e-08, 0, 5], 'true,false': [0.913, 1, 5], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.913, 1, 5], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.913, 1, 5], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.913, 1, 5], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.913, 1, 5], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.913, 1, 5], 'false': [0.0, 9, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.913, 1, 5], 'false': [2.63e-09, 9, 0]}]]
[{'': [0.0826446280991734, -9.25185853854297e-18], 'true': [0.0, 0.13888888888888898]}, {'': [0.0802285944803542, 0.0], 'true': [0.0, 0.13888888888888892]}, {'': [0.07795329105987885, -1.5419764230904951e-18], 'true': [-4.4408920985006264e-17, 0.13888888888888887]}, {'': [0.0769266317207714, 0.0], 'true': [4.4408920985006264e-17, 0.13888888888888892]}, {'': [0.07660852894666481, 0.0], 'true': [-2.2204460492503132e-17, 0.13888888888888887]}, {'': [0.07652732959289589, 0.0], 'true': [0.0, 0.13888888888888887]}, {'': [0.07651425463412208, 0.0], 'true': [-5.551115123125783e-18, 0.13888888888888887]}, {'': [0.07651582327575257, 0.0], 'true': [0.0, 0.1388888888888889]}, {'': [0.07651551421019141, 0.0], 'true': [0.0, 0.13888888888888892]}, {'': [0.07650906807961054, 7.709882115452476e-19], 'true': [0.0, 0.13888888888888887]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.6914822684328454;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.585186000855536;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.46125983910675555;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.34884632569484225;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783628;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2621270550835418;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.19945264276423433;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.15451336627983223;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.12179491558002793;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.09745354768081689;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.07895233872555125;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.926087
   AUC PR    = 0.46579
   CLL	      = -0.333775
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 0.561 seconds
Total inference time: 0.471 seconds
AUC ROC: 0.926087


Results scoring model
   AUC ROC   = 0.975
   AUC PR    = 0.971683
   CLL	      = -0.198752
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.349 seconds
Refined model CLL: -0.198752


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.926087
   AUC PR    = 0.46579
   CLL	      = -0.333775
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 1.8960000000000001 seconds
Total inference time: 0.454 seconds
AUC ROC: 0.926087
Total revision time: 1.8960000000000001
Best scored revision CLL: -0.198752


Dataset: 1_imdb_uwcse, Fold: 5, Type: Transfer (trRDN-B), Time: 00:08:56
{'AUC ROC': 0.926087, 'AUC PR': 0.46579, 'CLL': -0.333775, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 1.8960000000000001, 'Inference time': 0.454, 'parameter_10': {'AUC ROC': 0.926087, 'AUC PR': 0.46579, 'CLL': -0.333775, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 0.626, 'Inference time': 0.454}}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.6081489350995122;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5170719622367217;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.41257245288266;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.3151786576185065;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.23676009386434205;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.092691276189261;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.1780694542720751;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.08518475138839686;  // std dev = 6.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.13513671764223456;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.103671751136855;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.08034833303035915;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.06282214181758172;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.0641918400820262;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.926087
   AUC PR    = 0.46579
   CLL	      = -0.288191
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 0.577 seconds
Total inference time: 0.478 seconds
AUC ROC: 0.926087


Results scoring model
   AUC ROC   = 0.973333
   AUC PR    = 0.971696
   CLL	      = -0.216662
   Precision = 0.882353 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.9375


Total scoring time: 0.363 seconds
Parameter learned model CLL: -0.216662


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.225, 2, 6], 'false': [0.0, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 9], 'true,false': [1.225, 2, 6], 'false': [7.45e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.225, 2, 6], 'false': [1.05e-08, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [3.33e-08, 0, 9], 'true,false': [1.225, 2, 6], 'false': [5.27e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.225, 2, 6], 'false': [0.0, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.83e-08, 0, 9], 'true,false': [1.225, 2, 6], 'false': [6.45e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.225, 2, 6], 'false': [3.73e-09, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 9], 'true,false': [1.225, 2, 6], 'false': [5.27e-09, 13, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.225, 2, 6], 'false': [2.63e-09, 13, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.225, 2, 6], 'false': [0.0, 13, 0]}]]
[{'': [0.10380622837370206, -1.2810265668751807e-17], 'true': [-2.9605947323337506e-16, 0.18750000000000006]}, {'': [0.09844144283917078, 4.270088556250602e-18], 'true': [9.868649107779169e-17, 0.18750000000000006]}, {'': [0.09331518606086639, 8.540177112501205e-18], 'true': [-1.4802973661668753e-16, 0.18749999999999997]}, {'': [0.09084434421340243, 2.135044278125301e-18], 'true': [1.2335811384723962e-16, 0.18750000000000003]}, {'': [0.08999117154139685, -1.0675221390626506e-18], 'true': [-3.700743415417188e-17, 0.18750000000000003]}, {'': [0.08971636151333216, 3.2025664171879517e-18], 'true': [3.700743415417188e-17, 0.1875]}, {'': [0.08962255059016239, 1.0675221390626506e-18], 'true': [-2.4671622769447922e-17, 0.1875]}, {'': [0.08957842880915151, 2.135044278125301e-18], 'true': [6.1679056923619804e-18, 0.1875]}, {'': [0.08954103829599261, 5.337610695313253e-19], 'true': [-3.0839528461809902e-18, 0.18749999999999997]}, {'': [0.08949773272692471, 0.0], 'true': [0.0, 0.18750000000000003]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.743913669332986;  // std dev = 0.060, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.37813002930382994;  // std dev = 1.070, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.58127703521838;  // std dev = 0.078, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.30655557528280647;  // std dev = 1.066, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then return 0.45819423716779917;  // std dev = 0.130, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.22773168777627095;  // std dev = 1.047, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.10159632948783627;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.35077834560649784;  // std dev = 0.121, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1740762012948106;  // std dev = 1.046, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.092691276189261;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.2901924271750282;  // std dev = 0.140, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.12388484048994056;  // std dev = 1.036, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.08518475138839686;  // std dev = 6.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.23580032602991732;  // std dev = 0.124, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.09370143404055828;  // std dev = 1.036, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.20692986199657507;  // std dev = 0.134, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.06490667274647852;  // std dev = 1.030, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07324622576333704;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.17607825285615397;  // std dev = 0.120, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.049297645440281056;  // std dev = 1.031, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.1606241620101536;  // std dev = 0.127, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.032741057263171114;  // std dev = 1.027, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.0641918400820262;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 0.901268
   AUC PR    = 0.180739
   CLL	      = -0.388212
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 1.199 seconds
Total inference time: 0.498 seconds
AUC ROC: 0.901268


Results scoring model
   AUC ROC   = 0.991111
   AUC PR    = 0.991634
   CLL	      = -0.182095
   Precision = 0.882353 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.9375


Total scoring time: 0.383 seconds
Refined model CLL: -0.182095


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.901268
   AUC PR    = 0.180739
   CLL	      = -0.388212
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 2.5220000000000002 seconds
Total inference time: 0.498 seconds
AUC ROC: 0.901268
Total revision time: 2.5220000000000002
Best scored revision CLL: -0.182095


Dataset: 1_imdb_uwcse, Fold: 5, Type: Transfer (trRDN-B), Time: 00:09:00
{'AUC ROC': 0.901268, 'AUC PR': 0.180739, 'CLL': -0.388212, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 2.5220000000000002, 'Inference time': 0.498, 'parameter_15': {'AUC ROC': 0.926087, 'AUC PR': 0.46579, 'CLL': -0.288191, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 0.577, 'Inference time': 0.478}}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.6914822684328455;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.585186000855536;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.46125983910675555;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.3488463256948422;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.10159632948783634;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.2621270550835419;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.09269127618926093;  // std dev = 1.05e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.19945264276423433;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.15451336627983223;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.07877675473109179;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.12179491558002797;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367094;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.09745354768081678;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.06842697784420274;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.07895233872555123;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.0641918400820262;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 0.926087
   AUC PR    = 0.46579
   CLL	      = -0.333775
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 0.598 seconds
Total inference time: 0.481 seconds
AUC ROC: 0.926087


Results scoring model
   AUC ROC   = 0.975
   AUC PR    = 0.971487
   CLL	      = -0.198752
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.393 seconds
Parameter learned model CLL: -0.198752


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.291, 2, 10], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.98e-08, 0, 10], 'true,false': [1.291, 2, 10], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.291, 2, 10], 'false': [1.67e-08, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [3.65e-08, 0, 10], 'true,false': [1.291, 2, 10], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.291, 2, 10], 'false': [1.05e-08, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [1.83e-08, 0, 10], 'true,false': [1.291, 2, 10], 'false': [5.27e-09, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.291, 2, 10], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 10], 'true,false': [1.291, 2, 10], 'false': [3.73e-09, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.291, 2, 10], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.291, 2, 10], 'false': [3.73e-09, 18, 0]}]]
[{'': [0.08264462809917356, -3.0839528461809902e-18], 'true': [-8.881784197001253e-17, 0.13888888888888876]}, {'': [0.08022859448035437, 0.0], 'true': [8.881784197001253e-17, 0.13888888888888906]}, {'': [0.0779532910598788, 1.5419764230904953e-17], 'true': [-1.7763568394002506e-16, 0.13888888888888887]}, {'': [0.07692663172077131, -6.1679056923619804e-18], 'true': [1.3322676295501878e-16, 0.13888888888888898]}, {'': [0.07660852894666487, 6.1679056923619804e-18], 'true': [-4.4408920985006264e-17, 0.13888888888888887]}, {'': [0.07652732959289592, 1.5419764230904951e-18], 'true': [3.3306690738754695e-17, 0.13888888888888887]}, {'': [0.07651425463412206, 0.0], 'true': [-2.7755575615628914e-17, 0.13888888888888892]}, {'': [0.07651582327575256, 7.709882115452476e-19], 'true': [5.551115123125783e-18, 0.13888888888888887]}, {'': [0.07651551421019141, -1.5419764230904951e-18], 'true': [0.0, 0.1388888888888889]}, {'': [0.07650906807961054, 7.709882115452476e-19], 'true': [0.0, 0.13888888888888887]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.7302664973147039;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.4383701822242645;  // std dev = 0.805, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5847521703125101;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.5662835398208704;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.3523746184903848;  // std dev = 0.802, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.46108541344038007;  // std dev = 0.914, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360635;  // std dev = 1.67e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.2740878352716235;  // std dev = 0.735, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.4024747716502576;  // std dev = 0.364, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.10159632948783634;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.367387592013431;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.25479294067216335;  // std dev = 0.922, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.17656680815569326;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.09269127618926093;  // std dev = 1.05e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.1395435905473545;  // std dev = 0.708, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.24686965218319626;  // std dev = 0.366, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.08518475138839687;  // std dev = 5.27e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.2614316668020133;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.14242048402949664;  // std dev = 0.923, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.08138903151305787;  // std dev = 0.746, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07877675473109179;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then return 0.22004034762811495;  // std dev = 0.053, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.1100594624492205;  // std dev = 0.920, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.061966602757161704;  // std dev = 0.747, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367094;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(D, B) )
%   | | then return 0.04378137909273481;  // std dev = 0.680, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.14420331137502057;  // std dev = 0.367, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.06842697784420274;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.17940822510478316;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.0157709897998705;  // std dev = 0.723, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.06783417552281816;  // std dev = 0.926, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 0.926268
   AUC PR    = 0.468131
   CLL	      = -0.387186
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 1.491 seconds
Total inference time: 0.482 seconds
AUC ROC: 0.926268


Results scoring model
   AUC ROC   = 0.98875
   AUC PR    = 0.987813
   CLL	      = -0.182786
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.397 seconds
Refined model CLL: -0.182786


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.926268
   AUC PR    = 0.468131
   CLL	      = -0.387186
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 2.8790000000000004 seconds
Total inference time: 0.482 seconds
AUC ROC: 0.926268
Total revision time: 2.8790000000000004
Best scored revision CLL: -0.182786


Dataset: 1_imdb_uwcse, Fold: 5, Type: Transfer (trRDN-B), Time: 00:09:04
{'AUC ROC': 0.926268, 'AUC PR': 0.468131, 'CLL': -0.387186, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 2.8790000000000004, 'Inference time': 0.482, 'parameter_20': {'AUC ROC': 0.926087, 'AUC PR': 0.46579, 'CLL': -0.333775, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 0.598, 'Inference time': 0.481}}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6816783468642181;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5772066794120976;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4556011626653658;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.11231637819360638;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.3448948463549135;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.25904528127845544;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.09269127618926093;  // std dev = 1.18e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.19674969883689405;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.1519855521716933;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.07877675473109179;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.1193746755553675;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367094;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.09512618887804335;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.06842697784420275;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.07672095753768492;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.06419184008202619;  // std dev = 7.45e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 0.926087
   AUC PR    = 0.46579
   CLL	      = -0.327959
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 0.679 seconds
Total inference time: 0.453 seconds
AUC ROC: 0.926087


Results scoring model
   AUC ROC   = 0.9664
   AUC PR    = 0.960975
   CLL	      = -0.217704
   Precision = 0.892857 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.943396


Total scoring time: 0.385 seconds
Parameter learned model CLL: -0.217704


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 11], 'true,false': [1.572, 3, 14], 'false': [1.05e-08, 22, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [4.21e-08, 0, 11], 'true,false': [1.572, 3, 14], 'false': [0.0, 22, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 11], 'true,false': [1.572, 3, 14], 'false': [1.29e-08, 22, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [4.21e-08, 0, 11], 'true,false': [1.572, 3, 14], 'false': [0.0, 22, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 11], 'true,false': [1.572, 3, 14], 'false': [1.18e-08, 22, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [2.11e-08, 0, 11], 'true,false': [1.572, 3, 14], 'false': [7.45e-09, 22, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [0.0, 0, 11], 'true,false': [1.572, 3, 14], 'false': [0.0, 22, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 11], 'true,false': [1.572, 3, 14], 'false': [3.73e-09, 22, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [7.45e-09, 0, 11], 'true,false': [1.572, 3, 14], 'false': [0.0, 22, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,true': [5.27e-09, 0, 11], 'true,false': [1.572, 3, 14], 'false': [7.45e-09, 22, 0]}]]
[{'': [0.09566326530612335, 5.046468293750712e-18], 'true': [-1.6148698540002277e-16, 0.14532871972318323]}, {'': [0.09306290502307567, -2.523234146875356e-18], 'true': [1.6148698540002277e-16, 0.14532871972318323]}, {'': [0.09060931395645595, 7.569702440626067e-18], 'true': [-2.0185873175002846e-16, 0.14532871972318348]}, {'': [0.08949312697732785, -6.308085367188389e-18], 'true': [1.6148698540002277e-16, 0.14532871972318337]}, {'': [0.08914233126051561, 6.308085367188389e-18], 'true': [-6.055761952500853e-17, 0.14532871972318334]}, {'': [0.0890494104521203, 2.523234146875356e-18], 'true': [4.0371746350005693e-17, 0.1453287197231834]}, {'': [0.0890313852871202, 0.0], 'true': [-2.5232341468753557e-17, 0.14532871972318337]}, {'': [0.08902999850227042, 6.30808536718839e-19], 'true': [5.046468293750712e-18, 0.1453287197231834]}, {'': [0.08902713316827507, -3.784851220313033e-18], 'true': [5.046468293750712e-18, 0.1453287197231834]}, {'': [0.08901804513362552, 2.523234146875356e-18], 'true': [2.523234146875356e-18, 0.1453287197231834]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, D, F) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, D, F), publication(G, B) )
%   | | | then return 0.4337386289033884;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.527989695240652;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( ta(H, A, I) )
%   | | | then return 0.5580193346218546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( ta(D, A, E) )
%   | | then if ( ta(D, F, G), tempadvisedby(F, H) )
%   | | | then return 0.3919486100244409;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.6602143331455615;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.2799931226013701;  // std dev = 1.096, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( publication(D, A) )
%   | | then return 0.28631474979007987;  // std dev = 0.755, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | | then return 0.28397034644624347;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3978099858558144;  // std dev = 0.924, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.10159632948783635;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then return 0.3170818494003934;  // std dev = 0.866, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.272484068858433;  // std dev = 0.903, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.20333949063161968;  // std dev = 0.722, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926093;  // std dev = 1.18e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, D, F) )
%   | | | then return 0.19314656526106982;  // std dev = 0.840, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.0935878052303541;  // std dev = 0.737, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.17536926332592395;  // std dev = 0.887, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.291332706463506;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 7.45e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, D, F) )
%   | | | then return 0.14652168322672401;  // std dev = 0.841, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.07119478861515831;  // std dev = 0.738, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.2673446752541399;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14992543212007936;  // std dev = 0.884, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.07877675473109179;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.17380333149003932;  // std dev = 0.883, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.13015904674875092;  // std dev = 0.901, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.07669493765203267;  // std dev = 0.683, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 3.73e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367094;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, D, F), publication(G, B) )
%   | | | then return 0.012726433863016787;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08288135557066689;  // std dev = 0.752, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( ta(H, A, I) )
%   | | | then return 0.07172214732495467;  // std dev = 0.884, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.18931637389773914;  // std dev = 0.000996, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420275;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, D, F) )
%   | | | then return 0.06945655721723487;  // std dev = 0.842, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.004061916752811016;  // std dev = 0.725, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.05779317554559782;  // std dev = 0.884, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.16195212438372672;  // std dev = 0.000880, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06419184008202619;  // std dev = 7.45e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 0.914493
   AUC PR    = 0.436915
   CLL	      = -0.305323
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 1.804 seconds
Total inference time: 0.5 seconds
AUC ROC: 0.914493


Results scoring model
   AUC ROC   = 0.988
   AUC PR    = 0.987455
   CLL	      = -0.195702
   Precision = 0.892857 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.943396


Total scoring time: 0.414 seconds
Refined model CLL: -0.195702


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.914493
   AUC PR    = 0.436915
   CLL	      = -0.305323
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total learning time: 3.2820000000000005 seconds
Total inference time: 0.5 seconds
AUC ROC: 0.914493
Total revision time: 3.2820000000000005
Best scored revision CLL: -0.195702


Dataset: 1_imdb_uwcse, Fold: 5, Type: Transfer (trRDN-B), Time: 00:09:09
{'AUC ROC': 0.914493, 'AUC PR': 0.436915, 'CLL': -0.305323, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 3.2820000000000005, 'Inference time': 0.5, 'parameter_25': {'AUC ROC': 0.926087, 'AUC PR': 0.46579, 'CLL': -0.327959, 'Precision': [0.190476, 0.5], 'Recall': 1.0, 'F1': 0.32, 'Learning time': 0.679, 'Inference time': 0.453}}


